import{_ as r,C as p,c,o as u,j as i,G as e,ag as n,a,w as t}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/rsa-keys-generation.md","filePath":"zh-Hant/ktor/rsa-keys-generation.md","lastUpdated":1755457140000}'),g={name:"zh-Hant/ktor/rsa-keys-generation.md"};function F(y,s,b,C,E,_){const k=p("show-structure"),h=p("tldr"),o=p("warning"),l=p("code-block"),d=p("note");return u(),c("div",null,[s[6]||(s[6]=i("h1",{id:"rsa-密鑰生成",tabindex:"-1"},[a("RSA 密鑰生成 "),i("a",{class:"header-anchor",href:"#rsa-密鑰生成","aria-label":'Permalink to "RSA 密鑰生成"'},"​")],-1)),e(k,{for:"chapter",depth:"2"}),e(h,null,{default:t(()=>s[0]||(s[0]=[i("p",null,[i("b",null,"程式碼範例"),a(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-jwt-rs256"}," auth-jwt-rs256 ")],-1)])),_:1}),s[7]||(s[7]=i("p",null,[i("a",{href:"https://en.wikipedia.org/wiki/RSA_(cryptosystem)",target:"_blank",rel:"noreferrer"},"RSA (Rivest–Shamir–Adleman)"),a(" 是一種廣泛使用的公鑰密碼系統，能夠實現安全的資料傳輸、數位簽章和密鑰交換。")],-1)),s[8]||(s[8]=i("p",null,"RS256 作為 RSA 加密演算法的一部分，利用 SHA-256 進行雜湊處理，並使用一個密鑰（通常是 2048 位元、4096 位元或更高）來保護數位通訊。",-1)),s[9]||(s[9]=i("p",null,[a("在 "),i("a",{href:"https://jwt.io/",target:"_blank",rel:"noreferrer"},"JSON Web Token"),a(" 認證領域，RS256 扮演著關鍵角色，因為 JWT 的完整性和真實性可以透過簽章機制（例如 RS256）來驗證，其中採用了公/私鑰對。這確保了令牌中包含的資訊保持防篡改和可信賴。")],-1)),s[10]||(s[10]=i("p",null,[a("在本節中，您將學習如何生成此類密鑰並與 Ktor 提供的 "),i("a",{href:"./server-jwt"},"Authentication JWT"),a(" 外掛程式一同使用。")],-1)),e(o,null,{default:t(()=>s[1]||(s[1]=[i("p",null,[a(" 對於生產環境使用，建議您選擇更現代的替代方案，例如基於比 RSA 更高效、更安全的密碼學的 "),i("a",{href:"https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm"},"ES256"),a("。 ")],-1)])),_:1}),s[11]||(s[11]=i("h2",{id:"生成-rsa-私鑰",tabindex:"-1"},[a("生成 RSA 私鑰 "),i("a",{class:"header-anchor",href:"#生成-rsa-私鑰","aria-label":'Permalink to "生成 RSA 私鑰"'},"​")],-1)),s[12]||(s[12]=i("p",null,[a("要生成私鑰，您可以使用 OpenSSL、"),i("code",null,"ssh-keygen"),a(" 或其他您選擇的工具來建立認證密鑰對。為了示範目的，這裡將使用 OpenSSL。")],-1)),s[13]||(s[13]=i("p",null,"在新的終端機視窗中，執行以下命令：",-1)),e(l,{lang:"shell",code:"openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 &gt; ktor.pk8"}),s[14]||(s[14]=n("",6)),e(l,{lang:"shell",code:"openssl rsa -in ktor.pk8 -pubout | tee ktor.spki"}),s[15]||(s[15]=n("",6)),e(l,{lang:"shell",code:"openssl pkey -in ktor.spki -pubin -noout -text"}),s[16]||(s[16]=n("",3)),e(o,null,{default:t(()=>s[2]||(s[2]=[i("p",null," 請注意，在此範例中，公鑰使用 512 位元，這不夠安全。理想情況下，您應該選擇 2048 位元或 4096 位元的密鑰。 ",-1)])),_:1}),s[17]||(s[17]=n("",4)),e(l,{lang:"shell",code:"echo 010001 | xxd -p -r | base64 "}),s[18]||(s[18]=n("",1)),e(d,null,{default:t(()=>s[3]||(s[3]=[i("p",null," 請注意，透過在左側添加額外的 `0`，使用了偶數個十六進位數字。 ",-1)])),_:1}),s[19]||(s[19]=n("",5)),e(l,{lang:"shell",code:`echo "b5:f2:5a:2e:bc:d7:20:b5:20:d5:4d:cd:d4:a5:
    7c:c8:9a:fd:d8:61:e7:e4:eb:58:65:1e:ea:5a:4d:
    4c:73:87:32:e0:91:a3:92:56:2e:a7:bc:1e:32:30:
    43:f5:fd:db:05:5a:08:b2:25:15:5f:ac:4d:71:82:
    2b:d0:87:b4:01" | tr -d ": 
" | xxd -p -r | base64 | tr +/ -_ | tr -d "=
"`}),e(d,null,{default:t(()=>s[4]||(s[4]=[i("p",null," 請注意，開頭的 `00` 位元組已被省略。模數中開頭的 `00` 位元組與 RSA 公鑰的 ASN.1 編碼有關。在整數的 ASN.1 DER 編碼中，如果整數的最高有效位元為 `0`，則會移除開頭的零位元組。這是 ASN.1 編碼規則的標準部分。在 RSA 公鑰的上下文中，模數是一個大端序整數，當以 DER 編碼表示時，它遵循這些規則。移除開頭的零位元組是為了確保整數根據 DER 規則正確解釋。 ",-1)])),_:1}),s[20]||(s[20]=n("",15)),e(o,null,{default:t(()=>s[5]||(s[5]=[i("p",null,[a(" 您的私鑰被視為敏感資訊，不應直接儲存在程式碼中。考慮使用環境變數或 "),i("a",{href:"https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"},"秘密儲存庫"),a(" 來儲存敏感資料。 ")],-1)])),_:1})])}const f=r(g,[["render",F]]);export{B as __pageData,f as default};
