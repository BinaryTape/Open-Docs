import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"ビルトインツール","description":"","frontmatter":{},"headers":[],"relativePath":"ja/koog/built-in-tools.md","filePath":"ja/koog/built-in-tools.md","lastUpdated":1755146406000}'),l={name:"ja/koog/built-in-tools.md"};function e(h,s,p,k,d,o){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="ビルトインツール" tabindex="-1">ビルトインツール <a class="header-anchor" href="#ビルトインツール" aria-label="Permalink to &quot;ビルトインツール&quot;">​</a></h1><p>Koogフレームワークは、エージェントとユーザーの一般的な対話シナリオを処理するビルトインツールを提供します。</p><p>以下のビルトインツールが利用可能です:</p><table tabindex="0"><thead><tr><th>ツール</th><th><div style="width:115px;">名前</div></th><th>説明</th></tr></thead><tbody><tr><td>SayToUser</td><td><code>__say_to_user__</code></td><td>エージェントがユーザーにメッセージを送信できるようにします。<code>Agent says: </code>プレフィックス付きでエージェントのメッセージをコンソールに出力します。</td></tr><tr><td>AskUser</td><td><code>__ask_user__</code></td><td>エージェントがユーザーに入力を求められるようにします。エージェントのメッセージをコンソールに出力し、ユーザーの応答を待ちます。</td></tr><tr><td>ExitTool</td><td><code>__exit__</code></td><td>エージェントが会話を終了し、セッションを終了できるようにします。</td></tr></tbody></table><h2 id="ビルトインツールの登録" tabindex="-1">ビルトインツールの登録 <a class="header-anchor" href="#ビルトインツールの登録" aria-label="Permalink to &quot;ビルトインツールの登録&quot;">​</a></h2><p>他のツールと同様に、ビルトインツールもエージェントが利用できるようにするためにツールレジストリに追加する必要があります。以下に例を示します:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// すべてのビルトインツールでツールレジストリを作成</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> toolRegistry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ToolRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SayToUser)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AskUser)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExitTool)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// エージェント作成時にレジストリを渡す</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AIAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    executor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> simpleOpenAIExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(apiToken),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    systemPrompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;You are a helpful assistant.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    llmModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAIModels.Chat.GPT4o,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    toolRegistry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> toolRegistry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>同じレジストリ内でビルトインツールとカスタムツールを組み合わせることで、エージェント向けの包括的な機能セットを作成できます。 カスタムツールの詳細については、<a href="./annotation-based-tools">アノテーションベースのツール</a>および<a href="./class-based-tools">クラスベースのツール</a>を参照してください。</p>`,8)]))}const g=i(l,[["render",e]]);export{E as __pageData,g as default};
