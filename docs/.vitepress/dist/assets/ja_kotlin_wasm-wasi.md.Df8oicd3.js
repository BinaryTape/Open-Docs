import{_ as s,a as e,b as t,c as i}from"./chunks/wasm-wasi-tests-results.B152b-mz.js";import{_ as l}from"./chunks/join-slack-channel.C908i2w7.js";import{_ as o,c as n,o as r,ag as p}from"./chunks/framework.Bksy39di.js";const v=JSON.parse('{"title":"Kotlin/Wasm と WASI を使ってみる","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/wasm-wasi.md","filePath":"ja/kotlin/wasm-wasi.md","lastUpdated":1754307826000}'),d={name:"ja/kotlin/wasm-wasi.md"};function h(c,a,m,g,k,b){return r(),n("div",null,a[0]||(a[0]=[p('<h1 id="kotlin-wasm-と-wasi-を使ってみる" tabindex="-1">Kotlin/Wasm と WASI を使ってみる <a class="header-anchor" href="#kotlin-wasm-と-wasi-を使ってみる" aria-label="Permalink to &quot;Kotlin/Wasm と WASI を使ってみる&quot;">​</a></h1><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin/Wasm は<a href="/ja/kotlin/components-stability">アルファ版</a>です。いつでも変更される可能性があります。 <a href="https://slack-chats.kotlinlang.org/c/webassembly" target="_blank" rel="noreferrer">Kotlin/Wasm コミュニティに参加しましょう。</a></p></div><p>このチュートリアルでは、さまざまな WebAssembly 仮想マシンで<a href="https://wasi.dev/" target="_blank" rel="noreferrer">WebAssembly System Interface (WASI)</a> を使用して、シンプルな<a href="/ja/kotlin/wasm-overview">Kotlin/Wasm</a> アプリケーションを実行する方法を説明します。</p><p><a href="https://nodejs.org/en" target="_blank" rel="noreferrer">Node.js</a>、<a href="https://deno.com/" target="_blank" rel="noreferrer">Deno</a>、<a href="https://wasmedge.org/" target="_blank" rel="noreferrer">WasmEdge</a> 仮想マシンで実行されるアプリケーションの例を見つけることができます。出力は、標準の WASI API を使用するシンプルなアプリケーションです。</p><p>現在、Kotlin/Wasm は Preview 1 としても知られている WASI 0.1 をサポートしています。 <a href="https://youtrack.jetbrains.com/issue/KT-64568" target="_blank" rel="noreferrer">WASI 0.2 のサポートは、今後のリリースで計画されています。</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Kotlin/Wasm ツールチェーンは、Node.js タスク (<code>wasmWasiNode*</code>) をすぐに利用できる形で提供します。 Deno や WasmEdge を利用するものなど、プロジェクト内の他のタスクバリアントは、カスタムタスクとして含まれています。</p></div><h2 id="開始する前に" tabindex="-1">開始する前に <a class="header-anchor" href="#開始する前に" aria-label="Permalink to &quot;開始する前に&quot;">​</a></h2><ol><li><p><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noreferrer">IntelliJ IDEA</a> の最新バージョンをダウンロードしてインストールします。</p></li><li><p>IntelliJ IDEA で <strong>ファイル | 新規 | バージョン管理からプロジェクト</strong> を選択して、<a href="https://github.com/Kotlin/kotlin-wasm-wasi-template" target="_blank" rel="noreferrer">Kotlin/Wasm WASI テンプレートリポジトリ</a>をクローンします。</p><p>コマンドラインからクローンすることもできます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:Kotlin/kotlin-wasm-wasi-template.git</span></span></code></pre></div></li></ol><h2 id="アプリケーションを実行する" tabindex="-1">アプリケーションを実行する <a class="header-anchor" href="#アプリケーションを実行する" aria-label="Permalink to &quot;アプリケーションを実行する&quot;">​</a></h2><ol><li><p><strong>表示</strong> | <strong>ツールウィンドウ</strong> | <strong>Gradle</strong> を選択して、<strong>Gradle</strong> ツールウィンドウを開きます。</p><p>プロジェクトがロードされると、<strong>Gradle</strong> ツールウィンドウで <strong>kotlin-wasm-wasi-example</strong> の下に Gradle タスクを見つけることができます。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>タスクを正常にロードするには、Gradle JVM として少なくとも Java 11 が必要です。</p></div></li><li><p><strong>kotlin-wasm-wasi-example</strong> | <strong>Tasks</strong> | <strong>kotlin node</strong> から、以下のいずれかの Gradle タスクを選択して実行します。</p><ul><li><strong>wasmWasiNodeRun</strong>: Node.js でアプリケーションを実行します。</li><li><strong>wasmWasiDenoRun</strong>: Deno でアプリケーションを実行します。</li><li><strong>wasmWasiWasmEdgeRun</strong>: WasmEdge でアプリケーションを実行します。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Windows プラットフォームで Deno を使用する場合は、<code>deno.exe</code> がインストールされていることを確認してください。詳細については、<a href="https://docs.deno.com/runtime/manual/getting_started/installation" target="_blank" rel="noreferrer">Deno のインストールに関するドキュメント</a>を参照してください。</p></div><p><img src="'+s+'" alt="Kotlin/Wasm and WASI tasks" width="600"></p></li></ol><p>または、<code>kotlin-wasm-wasi-template</code> ルートディレクトリからターミナルで以下のいずれかのコマンドを実行します。</p><ul><li><p>Node.js でアプリケーションを実行するには:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiNodeRun</span></span></code></pre></div></li><li><p>Deno でアプリケーションを実行するには:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiDenoRun</span></span></code></pre></div></li><li><p>WasmEdge でアプリケーションを実行するには:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiWasmEdgeRun</span></span></code></pre></div></li></ul><p>アプリケーションが正常にビルドされると、ターミナルにメッセージが表示されます。</p><p><img src="'+e+'" alt="Kotlin/Wasm and WASI app" width="600"></p><h2 id="アプリケーションをテストする" tabindex="-1">アプリケーションをテストする <a class="header-anchor" href="#アプリケーションをテストする" aria-label="Permalink to &quot;アプリケーションをテストする&quot;">​</a></h2><p>Kotlin/Wasm アプリケーションがさまざまな仮想マシンで正しく動作することもテストできます。</p><p>Gradle ツールウィンドウで、<strong>kotlin-wasm-wasi-example</strong> | <strong>Tasks</strong> | <strong>verification</strong> から以下のいずれかの Gradle タスクを実行します。</p><ul><li><strong>wasmWasiNodeTest</strong>: Node.js でアプリケーションをテストします。</li><li><strong>wasmWasiDenoTest</strong>: Deno でアプリケーションをテストします。</li><li><strong>wasmWasiWasmEdgeTest</strong>: WasmEdge でアプリケーションをテストします。</li></ul><p><img src="'+t+'" alt="Kotlin/Wasm and WASI test tasks" width="600"></p><p>または、<code>kotlin-wasm-wasi-template</code> ルートディレクトリからターミナルで以下のいずれかのコマンドを実行します。</p><ul><li><p>Node.js でアプリケーションをテストするには:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiNodeTest</span></span></code></pre></div></li><li><p>Deno でアプリケーションをテストするには:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiDenoTest</span></span></code></pre></div></li><li><p>WasmEdge でアプリケーションをテストするには:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiWasmEdgeTest</span></span></code></pre></div></li></ul><p>ターミナルにテスト結果が表示されます。</p><p><img src="'+i+'" alt="Kotlin/Wasm and WASI test" width="600"></p><h2 id="次のステップ" tabindex="-1">次のステップ <a class="header-anchor" href="#次のステップ" aria-label="Permalink to &quot;次のステップ&quot;">​</a></h2><p>Kotlin Slack で Kotlin/Wasm コミュニティに参加しましょう。</p><p><a href="https://slack-chats.kotlinlang.org/c/webassembly"><img src="'+l+'" width="500" alt="Join the Kotlin/Wasm community" style=""></a></p><p>他の Kotlin/Wasm の例を試す:</p><ul><li><a href="https://github.com/JetBrains/compose-multiplatform/tree/master/examples/imageviewer" target="_blank" rel="noreferrer">Compose image viewer</a></li><li><a href="https://github.com/JetBrains/compose-multiplatform/tree/master/examples/jetsnack" target="_blank" rel="noreferrer">Jetsnack application</a></li><li><a href="https://github.com/Kotlin/kotlin-wasm-nodejs-template" target="_blank" rel="noreferrer">Node.js example</a></li><li><a href="https://github.com/Kotlin/kotlin-wasm-compose-template" target="_blank" rel="noreferrer">Compose example</a></li></ul>',28)]))}const f=o(d,[["render",h]]);export{v as __pageData,f as default};
