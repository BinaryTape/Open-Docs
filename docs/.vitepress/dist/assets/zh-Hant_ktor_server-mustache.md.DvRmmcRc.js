import{_ as c,C as n,c as m,o as y,G as a,ag as k,j as i,w as e,a as t}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-mustache.md","filePath":"zh-Hant/ktor/server-mustache.md","lastUpdated":1755457140000}'),v={name:"zh-Hant/ktor/server-mustache.md"};function F(b,s,f,_,C,A){const o=n("TopicTitle"),d=n("show-structure"),u=n("primary-label"),h=n("Links"),E=n("tldr"),l=n("code-block"),p=n("TabItem"),r=n("Tabs"),g=n("list");return y(),m("div",null,[a(o,{labelRef:"server-plugin",title:"Mustache"}),a(d,{for:"chapter",depth:"2"}),a(u,{ref:"server-plugin"},null,512),a(E,null,{default:e(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依賴項"),t("："),i("code",null,"io.ktor:ktor-server-mustache")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"程式碼範例"),t("： "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/mustache"}," mustache ")],-1)),i("p",null,[i("b",null,[a(h,{href:"/ktor/server-native",summary:"Ktor 支援 Kotlin/Native，並允許您在沒有額外運行時或虛擬機器下運行伺服器。"},{default:e(()=>s[0]||(s[0]=[t("原生伺服器")])),_:1}),s[1]||(s[1]=t("支援"))]),s[2]||(s[2]=t("：✖️ "))])]),_:1}),s[17]||(s[17]=k('<p>Ktor 允許您透過安裝 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-mustache/io.ktor.server.mustache/-mustache" target="_blank" rel="noreferrer">Mustache</a> 外掛程式，在應用程式中使用 <a href="https://github.com/spullara/mustache.java" target="_blank" rel="noreferrer">Mustache 模板</a> 作為視圖。</p><h2 id="add_dependencies" tabindex="-1">新增依賴項 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;新增依賴項 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p> 若要使用 <code>Mustache</code>，您需要在建置腳本中包含 <code>ktor-server-mustache</code> 構件： </p>',3)),a(r,{group:"languages"},{default:e(()=>[a(p,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:e(()=>[a(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-mustache:$ktor_version")'})]),_:1}),a(p,{title:"Gradle (Groovy)","group-key":"groovy"},{default:e(()=>[a(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-mustache:$ktor_version"'})]),_:1}),a(p,{title:"Maven","group-key":"maven"},{default:e(()=>[a(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-mustache-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[18]||(s[18]=i("h2",{id:"install_plugin",tabindex:"-1"},[t("安裝 Mustache "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安裝 Mustache {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=t(" 若要")),s[7]||(s[7]=i("a",{href:"#install"},"安裝",-1)),s[8]||(s[8]=t()),s[9]||(s[9]=i("code",null,"Mustache",-1)),s[10]||(s[10]=t(" 外掛程式到應用程式，請將其傳遞給指定")),a(h,{href:"/ktor/server-modules",summary:"模組允許您透過將路由分組來建構您的應用程式。"},{default:e(()=>s[5]||(s[5]=[t("模組")])),_:1}),s[11]||(s[11]=t("中的 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=t(" 函數。 下方的程式碼片段顯示了如何安裝 ")),s[14]||(s[14]=i("code",null,"Mustache",-1)),s[15]||(s[15]=t(" ... "))]),a(g,null,{default:e(()=>s[16]||(s[16]=[i("li",null,[t(" ... 在 "),i("code",null,"embeddedServer"),t(" 函數呼叫內。 ")],-1),i("li",null,[t(" ... 在明確定義的 "),i("code",null,"module"),t(" 內，這是 "),i("code",null,"Application"),t(" 類別的擴充函數。 ")],-1)])),_:1}),a(r,null,{default:e(()=>[a(p,{title:"embeddedServer"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.mustache.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(Mustache)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),a(p,{title:"module"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.mustache.*
            // ...
            fun Application.module() {
                install(Mustache)
                // ...
            }`})]),_:1})]),_:1}),s[19]||(s[19]=k(`<p>在 <code>install</code> 區塊內，您可以<a href="#template_loading">配置</a> <a href="http://spullara.github.io/mustache/apidocs/com/github/mustachejava/MustacheFactory.html" target="_blank" rel="noreferrer">MustacheFactory</a> 以載入 Mustache 模板。</p><h2 id="configure" tabindex="-1">配置 Mustache <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置 Mustache {id=&quot;configure&quot;}&quot;">​</a></h2><h3 id="template_loading" tabindex="-1">配置模板載入 <a class="header-anchor" href="#template_loading" aria-label="Permalink to &quot;配置模板載入 {id=&quot;template_loading&quot;}&quot;">​</a></h3><p>若要載入模板，您需要將 <a href="http://spullara.github.io/mustache/apidocs/com/github/mustachejava/MustacheFactory.html" target="_blank" rel="noreferrer">MustacheFactory</a> 指派給 <code>mustacheFactory</code> 屬性。例如，下方的程式碼片段讓 Ktor 能夠在相對於當前類別路徑的 <code>templates</code> 套件中查找模板：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> com.github.mustachejava.DefaultMustacheFactory</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.mustache.Mustache</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.mustache.MustacheContent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Mustache) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mustacheFactory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DefaultMustacheFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;templates&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="use_template" tabindex="-1">在回應中傳送模板 <a class="header-anchor" href="#use_template" aria-label="Permalink to &quot;在回應中傳送模板 {id=&quot;use_template&quot;}&quot;">​</a></h3><p>假設您在 <code>resources/templates</code> 中有一個 <code>index.hbs</code> 模板：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello, {{user.name}}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>使用者的資料模型如下所示：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>若要將此模板用於指定的<a href="./server-routing">路由</a>，請透過以下方式將 <code>MustacheContent</code> 傳遞給 <code>call.respond</code> 方法：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sampleUser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MustacheContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.hbs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mapOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to sampleUser)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12))])}const B=c(v,[["render",F]]);export{q as __pageData,B as default};
