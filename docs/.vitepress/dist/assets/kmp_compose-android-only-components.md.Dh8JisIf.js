import{_ as o,c as r,o as a,ag as d}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"仅限 Android 的组件","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/compose-android-only-components.md","filePath":"kmp/compose-android-only-components.md","lastUpdated":1755516278000}'),i={name:"kmp/compose-android-only-components.md"};function t(n,e,c,l,p,s){return a(),r("div",null,e[0]||(e[0]=[d('<h1 id="仅限-android-的组件" tabindex="-1">仅限 Android 的组件 <a class="header-anchor" href="#仅限-android-的组件" aria-label="Permalink to &quot;仅限 Android 的组件&quot;">​</a></h1><p>Compose Multiplatform 基于 <a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noreferrer">Jetpack Compose</a> 构建。Compose Multiplatform 的大部分功能适用于所有平台。然而，有些 API 和库只能在 Android 目标平台中使用。这可能是因为它们是 Android 特有的，或者尚未移植到其他平台。本页总结了 Compose Multiplatform API 的这些部分。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>有时，在 <a href="https://developer.android.com/jetpack/compose/documentation" target="_blank" rel="noreferrer">Jetpack Compose 文档</a> 或社区创建的文章中，你可能会发现一个只能在 Android 目标平台中使用的 API。 如果你尝试在 <code>commonMain</code> 代码中使用它，你的 IDE 会告诉你此 API 不可用。</p></div><h2 id="仅限-android-的-api" tabindex="-1">仅限 Android 的 API <a class="header-anchor" href="#仅限-android-的-api" aria-label="Permalink to &quot;仅限 Android 的 API&quot;">​</a></h2><p>仅限 Android 的 API 是 Android 特有的，在其他平台不可用。这是因为其他平台不需要 Android 使用的某些概念。该 API 通常使用来自 <code>android.*</code> 包中的类或配置 Android 特有的行为。以下是仅限 Android 的 API 的一些示例：</p><ul><li><a href="https://developer.android.com/reference/android/content/Context" target="_blank" rel="noreferrer"><code>android.context.Context</code></a> 类</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/package-summary#LocalContext()" target="_blank" rel="noreferrer"><code>LocalContext</code></a> 和 <a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/package-summary#LocalConfiguration()" target="_blank" rel="noreferrer"><code>LocalConfiguration</code></a> 变量</li><li><a href="https://developer.android.com/reference/android/graphics/BitmapFactory" target="_blank" rel="noreferrer"><code>android.graphics.BitmapFactory</code></a> 和 <a href="https://developer.android.com/reference/android/graphics/Bitmap" target="_blank" rel="noreferrer"><code>android.graphics.Bitmap</code></a> 类</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/graphics/ImageBitmap#(androidx.compose.ui.graphics.ImageBitmap).asAndroidBitmap()" target="_blank" rel="noreferrer"><code>ImageBitmap.asAndroidBitmap()</code></a> 函数</li><li><a href="https://developer.android.com/reference/android/app/Activity" target="_blank" rel="noreferrer"><code>android.app.Activity</code></a> 类</li><li><a href="https://developer.android.com/reference/kotlin/androidx/activity/ComponentActivity#(androidx.activity.ComponentActivity).setContent(androidx.compose.runtime.CompositionContext,kotlin.Function0)" target="_blank" rel="noreferrer"><code>android.app.Activity.setContent()</code></a> 函数</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/ComposeView" target="_blank" rel="noreferrer"><code>ComposeView</code></a> 类</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/package-summary#LocalView()" target="_blank" rel="noreferrer"><code>LocalView</code></a> 变量</li><li><a href="https://github.com/androidx/androidx/blob/41cb7d5c422180edd89efde4076f9dc724d3a313/compose/ui/ui/src/androidMain/kotlin/androidx/compose/ui/input/pointer/PointerInteropFilter.android.kt" target="_blank" rel="noreferrer"><code>Modifier.pointerInteropFilter()</code></a> 函数</li><li><a href="https://developer.android.com/jetpack/compose/libraries#hilt" target="_blank" rel="noreferrer">Hilt</a> 依赖项注入库</li></ul><p>通常，没有充分的理由将此类 API 的部分通用化，因此最好只将其保留在 <code>androidMain</code> 中。</p><h2 id="签名中包含-android-类的-api" tabindex="-1">签名中包含 Android 类的 API <a class="header-anchor" href="#签名中包含-android-类的-api" aria-label="Permalink to &quot;签名中包含 Android 类的 API&quot;">​</a></h2><p>Compose Multiplatform 中有些 API 在其签名中使用了 <code>android.*</code>、<code>androidx.*</code>（不包括 <code>androidx.compose.*</code>）的类，但它们的行为也适用于其他平台：</p><ul><li><a href="https://developer.android.com/jetpack/compose/resources" target="_blank" rel="noreferrer">资源管理</a>：<code>stringResource</code>、<code>animatedVectorResource</code>、<code>Font</code> 以及用于资源管理的 <code>*.R</code> 类。 关于更多信息，请参见 <a href="./compose-multiplatform-resources">图片和资源</a>。</li><li><a href="https://developer.android.com/jetpack/compose/navigation" target="_blank" rel="noreferrer">导航</a>。 关于更多信息，请参见 <a href="./compose-navigation-routing">导航和路由</a>。</li><li><a href="https://developer.android.com/jetpack/compose/libraries#viewmodel" target="_blank" rel="noreferrer"><code>ViewModel</code></a> 类。</li><li><a href="https://developer.android.com/jetpack/compose/libraries#paging" target="_blank" rel="noreferrer">Paging</a> 库。</li><li><a href="https://developer.android.com/reference/androidx/constraintlayout/widget/ConstraintLayout" target="_blank" rel="noreferrer"><code>ConstraintLayout</code></a> 布局。</li><li><a href="https://developer.android.com/jetpack/compose/libraries#maps" target="_blank" rel="noreferrer">Maps</a> 库。</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/tooling/preview/package-summary" target="_blank" rel="noreferrer">预览</a> 工具以及用于预览 <a href="https://plugins.jetbrains.com/plugin/16541-compose-multiplatform-ide-support" target="_blank" rel="noreferrer">桌面</a> 应用程序的插件。</li><li><a href="https://developer.android.com/reference/android/webkit/WebView" target="_blank" rel="noreferrer"><code>WebView</code></a> 类。</li><li>其他尚未移植到 Compose Multiplatform 的 Jetpack Compose 库。</li></ul><p>未来，这些 API 可能会移植到 <code>commonMain</code>，具体取决于复杂性和需求。</p><p>在开发应用程序时经常使用的 API，例如权限、设备（蓝牙、GPS、摄像头）和 I/O（网络、文件、数据库），不属于 Compose Multiplatform 的范围。</p><h2 id="签名中不含-android-类的-api" tabindex="-1">签名中不含 Android 类的 API <a class="header-anchor" href="#签名中不含-android-类的-api" aria-label="Permalink to &quot;签名中不含 Android 类的 API&quot;">​</a></h2><p>即使某些 API 的签名不包含 <code>android.*</code> 或 <code>androidx.*</code> 类，并且该 API 适用于其他平台，它们也可能仅适用于 Android 目标平台。这背后的原因通常是实现使用了许多平台特有的内容，并且为其他平台编写其他实现需要时间。</p><p>通常，这类 API 会在 Jetpack Compose 中针对 Android 目标平台引入后移植到 Compose Multiplatform。</p><p>在 Compose Multiplatform 1.8.2 中，以下 API 部分在 <code>commonMain</code> 中<strong>不可用</strong>：</p><ul><li><a href="https://github.com/androidx/androidx/blob/0e8dd4edd03f6e802303e5325ad11e89292c26c3/compose/foundation/foundation-layout/src/androidMain/kotlin/androidx/compose/foundation/layout/WindowInsetsConnection.android.kt" target="_blank" rel="noreferrer"><code>Modifier.imeNestedScroll()</code></a> 函数</li><li><a href="https://github.com/androidx/androidx/blob/0e8dd4edd03f6e802303e5325ad11e89292c26c3/compose/foundation/foundation/src/androidMain/kotlin/androidx/compose/foundation/SystemGestureExclusion.kt" target="_blank" rel="noreferrer"><code>Modifier.systemGestureExclusion()</code></a> 函数</li><li><a href="https://github.com/androidx/androidx/blob/41cb7d5c422180edd89efde4076f9dc724d3a313/compose/foundation/foundation/src/androidMain/kotlin/androidx/compose/foundation/Magnifier.kt" target="_blank" rel="noreferrer"><code>Modifier.magnifier()</code></a> 函数</li><li><a href="https://github.com/androidx/androidx/blob/41cb7d5c422180edd89efde4076f9dc724d3a313/compose/foundation/foundation/src/androidMain/kotlin/androidx/compose/foundation/OverscrollConfiguration.kt" target="_blank" rel="noreferrer"><code>LocalOverscrollConfiguration</code></a> 变量</li><li><a href="https://developer.android.com/jetpack/compose/resources#animated-vector-drawables" target="_blank" rel="noreferrer"><code>AnimatedImageVector.animatedVectorResource</code> API</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-material3-adaptive" target="_blank" rel="noreferrer">material3-adaptive</a> 库</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/material3/windowsizeclass/package-summary" target="_blank" rel="noreferrer">material3-window-size-class</a> 库</li></ul><h2 id="android-api-移植请求" tabindex="-1">Android API 移植请求 <a class="header-anchor" href="#android-api-移植请求" aria-label="Permalink to &quot;Android API 移植请求&quot;">​</a></h2><p>对于每个可以从 Android 移植的 API，Compose Multiplatform YouTrack 中都有一个 <a href="https://youtrack.jetbrains.com/issues/CMP" target="_blank" rel="noreferrer">未解决的 issue</a>。如果你发现一个 API 可以从 Android 移植并通用化，并且没有针对它的现有 issue，请 <a href="https://youtrack.jetbrains.com/newIssue?project=CMP" target="_blank" rel="noreferrer">创建一个</a>。</p>',19)]))}const h=o(i,[["render",t]]);export{f as __pageData,h as default};
