import{_ as E,C as n,c as u,o as y,G as s,ag as p,j as t,w as a,a as e}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/client-content-encoding.md","filePath":"ja/ktor/client-content-encoding.md","lastUpdated":1755457140000}'),F={name:"ja/ktor/client-content-encoding.md"};function _(C,i,m,b,f,B){const k=n("TopicTitle"),h=n("primary-label"),d=n("tldr"),r=n("link-summary"),l=n("code-block"),o=n("TabItem"),c=n("Tabs"),g=n("Links");return y(),u("div",null,[s(k,{labelRef:"client-plugin",title:"コンテンツエンコーディング"}),s(h,{ref:"client-plugin"},null,512),s(d,null,{default:a(()=>i[0]||(i[0]=[t("p",null,[t("b",null,"必須の依存関係"),e(": "),t("code",null,"io.ktor:ktor-client-encoding")],-1),t("p",null,[t("b",null,"コード例"),e(": "),t("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-content-encoding"}," client-content-encoding ")],-1)])),_:1}),s(r,null,{default:a(()=>i[1]||(i[1]=[e(" ContentEncoding プラグインを使用すると、指定された圧縮アルゴリズム (gzip や deflate など) を有効にし、その設定を構成できます。 ")])),_:1}),i[5]||(i[5]=p('<p>Ktor クライアントは、指定された圧縮アルゴリズム (<code>gzip</code> や <code>deflate</code> など) を有効にし、その設定を構成できる <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-encoding/io.ktor.client.plugins.compression/-content-encoding" target="_blank" rel="noreferrer">ContentEncoding</a> プラグインを提供します。このプラグインには、主に3つの目的があります。</p><ul><li>指定されたQ値（品質値）を持つ <code>Accept-Encoding</code> ヘッダーを設定します。</li><li>必要に応じてリクエストボディをエンコードします。</li><li><a href="./client-responses#body">サーバーから受信したコンテンツ</a>をデコードし、元のペイロードを取得します。</li></ul><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>ContentEncoding</code> を使用するには、ビルドスクリプトに <code>ktor-client-encoding</code> アーティファクトを含める必要があります。</p>',4)),s(c,{group:"languages"},{default:a(()=>[s(o,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[s(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-client-encoding:$ktor_version")'})]),_:1}),s(o,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[s(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-client-encoding:$ktor_version"'})]),_:1}),s(o,{title:"Maven","group-key":"maven"},{default:a(()=>[s(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-client-encoding-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),t("p",null,[i[3]||(i[3]=e(" Ktor クライアントに必要なアーティファクトについては、")),s(g,{href:"/ktor/client-dependencies",summary:"既存のプロジェクトにクライアントの依存関係を追加する方法を学びます。"},{default:a(()=>i[2]||(i[2]=[e("クライアントの依存関係の追加")])),_:1}),i[4]||(i[4]=e("から詳細を確認できます。 "))]),i[6]||(i[6]=p(`<h2 id="install_plugin" tabindex="-1">ContentEncoding のインストール <a class="header-anchor" href="#install_plugin" aria-label="Permalink to &quot;ContentEncoding のインストール {id=&quot;install_plugin&quot;}&quot;">​</a></h2><p><code>ContentEncoding</code> をインストールするには、<a href="./client-create-and-configure#configure-client">クライアント設定ブロック</a>内の <code>install</code> 関数に渡します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.compression.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentEncoding)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configure_plugin" tabindex="-1">ContentEncoding の構成 <a class="header-anchor" href="#configure_plugin" aria-label="Permalink to &quot;ContentEncoding の構成 {id=&quot;configure_plugin&quot;}&quot;">​</a></h2><p>以下の <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-content-encoding" target="_blank" rel="noreferrer">例</a>は、指定されたQ値（品質値）でクライアントの <code>deflate</code> および <code>gzip</code> エンコーダを有効にする方法を示しています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentEncoding) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>必要に応じて、<code>ContentEncoder</code> インターフェースを実装してカスタムエンコーダを作成し、<code>customEncoder</code> 関数に渡すことができます。</p><h2 id="encode_request_body" tabindex="-1">リクエストボディのエンコード <a class="header-anchor" href="#encode_request_body" aria-label="Permalink to &quot;リクエストボディのエンコード {id=&quot;encode_request_body&quot;}&quot;">​</a></h2><p>リクエストボディをエンコードするには、<a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.request/-http-request-builder/index.html" target="_blank" rel="noreferrer">HttpRequestBuilder</a> ブロック内で <code>compress()</code> 関数を使用します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.compression.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentEncoding)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/upload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    compress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gzip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(someLongBody)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,10))])}const A=E(F,[["render",_]]);export{q as __pageData,A as default};
