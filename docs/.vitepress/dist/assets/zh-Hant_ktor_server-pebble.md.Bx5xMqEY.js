import{_ as u,C as l,c as y,o as m,G as e,ag as h,j as i,w as t,a}from"./chunks/framework.Bksy39di.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-pebble.md","filePath":"zh-Hant/ktor/server-pebble.md","lastUpdated":1755457140000}'),c={name:"zh-Hant/ktor/server-pebble.md"};function v(F,s,f,C,_,B){const o=l("TopicTitle"),d=l("show-structure"),E=l("primary-label"),r=l("Links"),g=l("tldr"),n=l("code-block"),p=l("TabItem"),k=l("Tabs"),b=l("list");return m(),y("div",null,[e(o,{labelRef:"server-plugin",title:"Pebble"}),e(d,{for:"chapter",depth:"2"}),e(E,{ref:"server-plugin"},null,512),e(g,null,{default:t(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"必需的依賴項"),a(": "),i("code",null,"io.ktor:ktor-server-pebble")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"程式碼範例"),a(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/pebble"}," pebble ")],-1)),i("p",null,[i("b",null,[e(r,{href:"/ktor/server-native",summary:"模組允許您透過分組路由來組織應用程式。"},{default:t(()=>s[0]||(s[0]=[a("原生伺服器")])),_:1}),s[1]||(s[1]=a(" 支援"))]),s[2]||(s[2]=a(": ✖️ "))])]),_:1}),s[17]||(s[17]=h('<p>Ktor 允許您透過安裝 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-pebble/io.ktor.server.pebble/-pebble" target="_blank" rel="noreferrer">Pebble</a> 插件，將 <a href="https://pebbletemplates.io/" target="_blank" rel="noreferrer">Pebble 模板</a> 作為您應用程式中的視圖使用。</p><h2 id="add_dependencies" tabindex="-1">加入依賴項 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;加入依賴項 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p> 若要使用 <code>Pebble</code>，您需要將 <code>ktor-server-pebble</code> 構件包含在建置腳本中： </p>',3)),e(k,{group:"languages"},{default:t(()=>[e(p,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:t(()=>[e(n,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-pebble:$ktor_version")'})]),_:1}),e(p,{title:"Gradle (Groovy)","group-key":"groovy"},{default:t(()=>[e(n,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-pebble:$ktor_version"'})]),_:1}),e(p,{title:"Maven","group-key":"maven"},{default:t(()=>[e(n,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-pebble-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[18]||(s[18]=i("h2",{id:"install_plugin",tabindex:"-1"},[a("安裝 Pebble "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安裝 Pebble {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=a(" 若要將 ")),s[7]||(s[7]=i("code",null,"Pebble",-1)),s[8]||(s[8]=a(" 插件")),s[9]||(s[9]=i("a",{href:"#install"},"安裝",-1)),s[10]||(s[10]=a("至應用程式， 請在指定的 ")),e(r,{href:"/ktor/server-modules",summary:"模組允許您透過分組路由來組織應用程式。"},{default:t(()=>s[5]||(s[5]=[a("模組")])),_:1}),s[11]||(s[11]=a(" 中將其傳遞給 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=a(" 函數。 以下程式碼片段展示了如何安裝 ")),s[14]||(s[14]=i("code",null,"Pebble",-1)),s[15]||(s[15]=a(" ... "))]),e(b,null,{default:t(()=>s[16]||(s[16]=[i("li",null,[a(" ...在 "),i("code",null,"embeddedServer"),a(" 函數呼叫內部。 ")],-1),i("li",null,[a(" ...在明確定義的 "),i("code",null,"module"),a(" 內部，此為 "),i("code",null,"Application"),a(" 類別的擴展函數。 ")],-1)])),_:1}),e(k,null,{default:t(()=>[e(p,{title:"embeddedServer"},{default:t(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.pebble.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(Pebble)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),e(p,{title:"module"},{default:t(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.pebble.*
            // ...
            fun Application.module() {
                install(Pebble)
                // ...
            }`})]),_:1})]),_:1}),s[19]||(s[19]=h(`<p>在 <code>install</code> 區塊內部，您可以<a href="#configure">配置</a> <a href="https://pebbletemplates.io/com/mitchellbosecke/pebble/PebbleEngine/Builder/" target="_blank" rel="noreferrer">PebbleEngine.Builder</a> 以用於載入 Pebble 模板。</p><h2 id="configure" tabindex="-1">配置 Pebble <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置 Pebble {id=&quot;configure&quot;}&quot;">​</a></h2><h3 id="template_loading" tabindex="-1">配置模板載入 <a class="header-anchor" href="#template_loading" aria-label="Permalink to &quot;配置模板載入 {id=&quot;template_loading&quot;}&quot;">​</a></h3><p>若要載入模板，您需要配置如何使用 <a href="https://pebbletemplates.io/com/mitchellbosecke/pebble/PebbleEngine/Builder/" target="_blank" rel="noreferrer">PebbleEngine.Builder</a> 載入模板。例如，以下程式碼片段使 Ktor 能夠查找相對於當前 classpath 的 <code>templates</code> 套件中的模板：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.pebble.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.response.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Pebble) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        loader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ClasspathLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            prefix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;templates&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="use_template" tabindex="-1">在回應中傳送模板 <a class="header-anchor" href="#use_template" aria-label="Permalink to &quot;在回應中傳送模板 {id=&quot;use_template&quot;}&quot;">​</a></h3><p>想像您在 <code>resources/templates</code> 中有一個 <code>index.html</code> 模板：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello, {{user.name}}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>使用者的資料模型如下所示：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>若要將模板用於指定的<a href="./server-routing">路由</a>，請以下列方式將 <code>PebbleContent</code> 傳遞給 <code>call.respond</code> 方法：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sampleUser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PebbleContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mapOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to sampleUser)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12))])}const q=u(c,[["render",v]]);export{A as __pageData,q as default};
