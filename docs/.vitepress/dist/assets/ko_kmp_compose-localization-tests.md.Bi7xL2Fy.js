import{_ as e,C as t,c as l,o as n,j as s,G as h,ag as p,a as o}from"./chunks/framework.Bksy39di.js";const F=JSON.parse('{"title":"지역화 테스트","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/compose-localization-tests.md","filePath":"ko/kmp/compose-localization-tests.md","lastUpdated":1755516278000}'),r={name:"ko/kmp/compose-localization-tests.md"};function d(k,a,c,g,u,E){const i=t("show-structure");return n(),l("div",null,[a[0]||(a[0]=s("h1",{id:"지역화-테스트",tabindex:"-1"},[o("지역화 테스트 "),s("a",{class:"header-anchor",href:"#지역화-테스트","aria-label":'Permalink to "지역화 테스트"'},"​")],-1)),h(i,{depth:"2"}),a[1]||(a[1]=p(`<p>지역화를 테스트하려면 다양한 로케일에 대해 올바르게 번역된 문자열이 표시되는지 확인하고, 서식과 레이아웃이 로케일의 요구 사항에 맞춰 조정되는지 확인해야 합니다.</p><h2 id="다양한-플랫폼에서-로케일-테스트" tabindex="-1">다양한 플랫폼에서 로케일 테스트 <a class="header-anchor" href="#다양한-플랫폼에서-로케일-테스트" aria-label="Permalink to &quot;다양한 플랫폼에서 로케일 테스트&quot;">​</a></h2><h3 id="android" tabindex="-1">Android <a class="header-anchor" href="#android" aria-label="Permalink to &quot;Android&quot;">​</a></h3><p>Android에서 기기의 시스템 로케일을 <strong>Settings | System | Languages &amp; input | Languages</strong>를 통해 변경할 수 있습니다. 자동화된 테스트의 경우, <code>adb</code> 셸을 사용하여 에뮬레이터에서 로케일을 직접 수정할 수 있습니다:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setprop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> persist.sys.locale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [BCP-47 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span></span></code></pre></div><p>이 명령어는 에뮬레이터를 재시작하며, 새로운 로케일로 앱을 다시 시작할 수 있게 합니다.</p><p>또는 Espresso와 같은 프레임워크를 사용하여 테스트를 실행하기 전에 로케일을 프로그래밍 방식으로 구성할 수 있습니다. 예를 들어, 테스트 중에 로케일 전환을 자동화하기 위해 <code>LocaleTestRule()</code>을 사용할 수 있습니다.</p><h3 id="ios" tabindex="-1">iOS <a class="header-anchor" href="#ios" aria-label="Permalink to &quot;iOS&quot;">​</a></h3><p>iOS에서 기기의 시스템 언어 및 지역을 <strong>Settings | General | Language &amp; Region</strong>을 통해 변경할 수 있습니다. XCUITest 프레임워크를 사용하는 자동화된 UI 테스트의 경우, 시작 인수를 사용하여 로케일 변경을 시뮬레이션합니다:</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.launchArguments </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;-AppleLanguages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(es)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;-AppleLocale&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;es_ES&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="desktop" tabindex="-1">Desktop <a class="header-anchor" href="#desktop" aria-label="Permalink to &quot;Desktop&quot;">​</a></h3><p>데스크톱에서 JVM 로케일은 일반적으로 운영 체제의 로케일이 기본값으로 설정됩니다. 설정 위치는 다양한 데스크톱 플랫폼에 따라 다릅니다.</p><p>UI가 초기화되기 전에 테스트 설정 또는 애플리케이션 진입점에서 JVM 기본 로케일을 프로그래밍 방식으로 설정할 수 있습니다:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">java.util.Locale.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(java.util.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Locale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;es_ES&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h3 id="web" tabindex="-1">Web <a class="header-anchor" href="#web" aria-label="Permalink to &quot;Web&quot;">​</a></h3><p>빠른 확인을 위해 브라우저 환경 설정에서 언어 설정을 변경할 수 있습니다. 자동화된 테스트의 경우, Selenium 또는 Puppeteer와 같은 브라우저 자동화 도구로 로케일 변경을 시뮬레이션할 수 있습니다.</p><p>또는 <code>window.navigator.languages</code> 속성의 읽기 전용 제한을 우회하여 사용자 지정 로케일을 도입해 볼 수 있습니다. 자세한 내용은 <a href="./compose-resource-environment"></a> 튜토리얼에서 확인하세요.</p><h2 id="주요-테스트-시나리오" tabindex="-1">주요 테스트 시나리오 <a class="header-anchor" href="#주요-테스트-시나리오" aria-label="Permalink to &quot;주요 테스트 시나리오&quot;">​</a></h2><h3 id="사용자-지정-로케일" tabindex="-1">사용자 지정 로케일 <a class="header-anchor" href="#사용자-지정-로케일" aria-label="Permalink to &quot;사용자 지정 로케일&quot;">​</a></h3><ul><li>로케일을 프로그래밍 방식으로 재정의합니다.</li><li>UI 요소, 서식 있는 문자열, 레이아웃이 선택된 로케일에 맞춰 올바르게 조정되는지, 해당하는 경우 오른쪽에서 왼쪽으로 쓰는 텍스트 처리도 포함하여 확인합니다.</li></ul><h3 id="기본-리소스" tabindex="-1">기본 리소스 <a class="header-anchor" href="#기본-리소스" aria-label="Permalink to &quot;기본 리소스&quot;">​</a></h3><p>지정된 로케일에 대해 번역을 사용할 수 없을 때 기본 리소스가 사용됩니다. 애플리케이션은 이러한 기본값으로 올바르게 폴백해야 합니다.</p><ul><li>위에서 설명한 플랫폼별 메서드를 사용하여 로케일을 지원되지 않는 값으로 구성합니다.</li><li>폴백 메커니즘이 기본 리소스를 올바르게 로드하고 제대로 표시하는지 확인합니다.</li></ul><h3 id="로케일별-사례" tabindex="-1">로케일별 사례 <a class="header-anchor" href="#로케일별-사례" aria-label="Permalink to &quot;로케일별 사례&quot;">​</a></h3><p>일반적인 지역화 문제를 피하려면 다음 로케일별 사례를 고려하십시오:</p><ul><li>날짜 서식 (<code>MM/dd/yyyy</code> 대 <code>dd/MM/yyyy</code>) 및 숫자 서식과 같은 <a href="./compose-regional-format">로케일별 서식</a>을 테스트합니다.</li><li>아랍어 및 히브리어와 같은 오른쪽에서 왼쪽으로 쓰는 언어가 문자열, 레이아웃 및 정렬을 올바르게 표시하는지 확인하여 <a href="./compose-rtl">RTL 및 LTR 동작</a>을 검증합니다.</li></ul>`,26))])}const m=e(r,[["render",d]]);export{F as __pageData,m as default};
