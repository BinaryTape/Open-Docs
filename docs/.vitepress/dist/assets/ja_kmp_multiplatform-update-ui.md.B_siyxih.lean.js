import{_ as h}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as k}from"./chunks/icon-2.D_3lm1kb.js";import{_ as d}from"./chunks/icon-3-todo.aEuKIG4W.js";import{_ as o}from"./chunks/icon-4-todo.DqbNYzPe.js";import{_ as E}from"./chunks/icon-5-todo.DJgVODZv.js";import{_ as g,a as y}from"./chunks/first-multiplatform-project-on-ios-2.CLUQ81d4.js";import{_ as c,C as t,c as u,o as m,j as i,G as n,ag as F,a,w as e}from"./chunks/framework.Bksy39di.js";const U=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/multiplatform-update-ui.md","filePath":"ja/kmp/multiplatform-update-ui.md","lastUpdated":1755516278000}'),f={name:"ja/kmp/multiplatform-update-ui.md"};function C(b,s,A,B,v,S){const l=t("secondary-label"),p=t("Links"),r=t("tldr");return m(),u("div",null,[s[21]||(s[21]=i("h1",{id:"ユーザーインターフェースを更新する",tabindex:"-1"},[a("ユーザーインターフェースを更新する "),i("a",{class:"header-anchor",href:"#ユーザーインターフェースを更新する","aria-label":'Permalink to "ユーザーインターフェースを更新する"'},"​")],-1)),n(l,{ref:"IntelliJ IDEA"},null,512),n(l,{ref:"Android Studio"},null,512),n(r,null,{default:e(()=>[s[18]||(s[18]=i("p",null,"このチュートリアルではIntelliJ IDEAを使用しますが、Android Studioでも同様に進めることができます。どちらのIDEもコア機能とKotlin Multiplatformのサポートを共有しています。",-1)),s[19]||(s[19]=i("br",null,null,-1)),s[20]||(s[20]=i("p",null,[a("これは「"),i("strong",null,"共有ロジックとネイティブUIを持つKotlin Multiplatformアプリを作成する"),a("」チュートリアルの第2部です。次に進む前に、前の手順を完了していることを確認してください。")],-1)),i("p",null,[s[1]||(s[1]=i("img",{src:h,width:"20",alt:"First step"},null,-1)),s[2]||(s[2]=a()),n(p,{href:"/kmp/multiplatform-create-first-app",summary:"このチュートリアルではIntelliJ IDEAを使用しますが、Android Studioでも同様に進めることができます。どちらのIDEもコア機能とKotlin Multiplatformのサポートを共有しています。これは「共有ロジックとネイティブUIを持つKotlin Multiplatformアプリを作成する」チュートリアルの第1部です。Kotlin Multiplatformアプリを作成する ユーザーインターフェースを更新する 依存関係を追加する ロジックをさらに共有する プロジェクトをまとめる"},{default:e(()=>s[0]||(s[0]=[a("Kotlin Multiplatformアプリを作成する")])),_:1}),s[3]||(s[3]=i("br",null,null,-1)),s[4]||(s[4]=i("img",{src:k,width:"20",alt:"Second step"},null,-1)),s[5]||(s[5]=a()),s[6]||(s[6]=i("strong",null,"ユーザーインターフェースを更新する",-1)),s[7]||(s[7]=i("br",null,null,-1)),s[8]||(s[8]=i("img",{src:d,width:"20",alt:"Third step"},null,-1)),s[9]||(s[9]=a(" 依存関係を追加する")),s[10]||(s[10]=i("br",null,null,-1)),s[11]||(s[11]=i("br",null,null,-1)),s[12]||(s[12]=i("img",{src:o,width:"20",alt:"Fourth step"},null,-1)),s[13]||(s[13]=a(" ロジックをさらに共有する")),s[14]||(s[14]=i("br",null,null,-1)),s[15]||(s[15]=i("img",{src:E,width:"20",alt:"Fifth step"},null,-1)),s[16]||(s[16]=a(" プロジェクトをまとめる")),s[17]||(s[17]=i("br",null,null,-1))])]),_:1}),s[22]||(s[22]=F("",19))])}const M=c(f,[["render",C]]);export{U as __pageData,M as default};
