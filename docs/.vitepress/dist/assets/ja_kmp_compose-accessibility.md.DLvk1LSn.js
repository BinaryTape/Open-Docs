import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.Bksy39di.js";const d=JSON.parse('{"title":"アクセシビリティ","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/compose-accessibility.md","filePath":"ja/kmp/compose-accessibility.md","lastUpdated":1755516278000}'),n={name:"ja/kmp/compose-accessibility.md"};function l(p,s,h,o,k,r){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="アクセシビリティ" tabindex="-1">アクセシビリティ <a class="header-anchor" href="#アクセシビリティ" aria-label="Permalink to &quot;アクセシビリティ&quot;">​</a></h1><p>Compose Multiplatform は、セマンティックプロパティ、アクセシビリティAPI、スクリーンリーダーやキーボードナビゲーションなどの支援技術のサポートといった、アクセシビリティ標準を満たすために不可欠な機能を提供します。</p><p>このフレームワークを使用すると、<a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A32019L0882" target="_blank" rel="noreferrer">欧州アクセシビリティ法</a> (EAA) および <a href="https://www.w3.org/TR/WCAG21/" target="_blank" rel="noreferrer">ウェブコンテンツアクセシビリティガイドライン</a> (WCAG) の要件に準拠したアプリケーションを設計できます。</p><h2 id="セマンティックプロパティ" tabindex="-1">セマンティックプロパティ <a class="header-anchor" href="#セマンティックプロパティ" aria-label="Permalink to &quot;セマンティックプロパティ&quot;">​</a></h2><p>アクセシビリティ、オートフィル、テストなどのサービスにコンテキストを提供するため、セマンティックプロパティを使用してコンポーネントの意味と役割を定義できます。</p><p>セマンティックプロパティはセマンティックツリーの構成要素であり、セマンティックツリーはUIの単純化された表現です。コンポーザブルでセマンティックプロパティを定義すると、それらは自動的にセマンティックツリーに追加されます。支援技術は、UIツリー全体ではなくセマンティックツリーをたどることでアプリと対話します。</p><p>アクセシビリティのための主なセマンティックプロパティ：</p><ul><li><p><code>contentDescription</code> は、<a href="https://kotlinlang.org/api/compose-multiplatform/material3/androidx.compose.material3/-icon-button.html" target="_blank" rel="noreferrer"><code>IconButton</code></a> や <a href="https://kotlinlang.org/api/compose-multiplatform/material3/androidx.compose.material3/-floating-action-button.html" target="_blank" rel="noreferrer"><code>FloatingActionButton</code></a> のような非テキストまたは曖昧なUI要素に説明を提供します。これは主要なアクセシビリティAPIであり、スクリーンリーダーがアナウンスするテキストラベルを提供するために使用されます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { contentDescription </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Description of the image&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div></li><li><p><code>role</code> は、ボタン、チェックボックス、画像など、UIコンポーネントの機能タイプをアクセシビリティサービスに通知します。これにより、スクリーンリーダーがインタラクションモデルを解釈し、要素を適切にアナウンスするのに役立ちます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { role </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Role.Button }</span></span></code></pre></div></li><li><p><code>stateDescription</code> は、インタラクティブなUI要素の現在の状態を記述します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { stateDescription </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (isChecked) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Checked&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Unchecked&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div></li><li><p><code>testTag</code> は、AndroidのEspressoフレームワークまたはiOSのXCUITestを使用したUIテストのために、コンポーザブル要素に一意の識別子を割り当てます。<code>testTag</code>はデバッグや、コンポーネント識別子が必要な特定の自動化シナリオでも使用できます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">testTag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my_unique_element_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><p>セマンティックプロパティの完全なリストについては、<a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/semantics/SemanticsProperties" target="_blank" rel="noreferrer"><code>SemanticsProperties</code></a> のJetpack Compose APIリファレンスを参照してください。</p><h2 id="トラバーサル順序" tabindex="-1">トラバーサル順序 <a class="header-anchor" href="#トラバーサル順序" aria-label="Permalink to &quot;トラバーサル順序&quot;">​</a></h2><p>デフォルトでは、スクリーンリーダーはUI要素を左から右、上から下へとレイアウトに従って固定された順序でナビゲートします。しかし、複雑なレイアウトの場合、スクリーンリーダーが正しい読み上げ順序を自動的に決定できないことがあります。これは、含まれるビューのスクロールやズームをサポートする、テーブルやネストされたビューなどのコンテナビューを持つレイアウトにとって非常に重要です。</p><p>複雑なビューをスクロールおよびスワイプする際に正しい読み上げ順序を保証するには、トラバーサルセマンティックプロパティを定義します。これにより、上にスワイプまたは下にスワイプするアクセシビリティジェスチャーを使用して、異なるトラバーサルグループ間の正しいナビゲーションも保証されます。</p><p>コンポーネントのトラバーサルインデックスのデフォルト値は<code>0f</code>です。コンポーネントのトラバーサルインデックスの値が低いほど、他のコンポーネントに比べてその<code>contentDescription</code>が早く読み上げられます。</p><p>たとえば、スクリーンリーダーにフローティングアクションボタンを優先させたい場合は、そのトラバーサルインデックスを<code>-1f</code>に設定できます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FloatingBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            isTraversalGroup </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // デフォルトインデックスを持つ要素よりも優先順位を高くするために負のインデックスを設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            traversalIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1f</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        FloatingActionButton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                imageVector </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Icons.Default.Add,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                contentDescription </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Icon of floating action button&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="次のステップ" tabindex="-1">次のステップ <a class="header-anchor" href="#次のステップ" aria-label="Permalink to &quot;次のステップ&quot;">​</a></h2><p>iOS向けのアクセシビリティ機能の詳細：</p><ul><li><a href="./compose-ios-accessibility#high-contrast-theme">ハイコントラストテーマ</a></li><li><a href="./compose-ios-accessibility#test-accessibility-with-xctest-framework">XCTestフレームワークでアクセシビリティをテストする</a></li><li><a href="./compose-ios-accessibility#control-via-trackpad-and-keyboard">トラックパッドとキーボードによる制御</a></li><li><a href="./compose-ios-accessibility#choose-the-tree-synchronization-option">セマンティックツリーをiOSアクセシビリティツリーと同期する</a> (Compose Multiplatform 1.7.3以前の場合)</li></ul><p>デスクトップ向けのアクセシビリティ機能の詳細：</p><ul><li><a href="./compose-desktop-accessibility#enabling-accessibility-on-windows">Windowsでアクセシビリティを有効にする</a></li><li><a href="./compose-desktop-accessibility#example-custom-button-with-semantic-rules">macOSおよびWindowsツールでアプリをテストする</a></li></ul><p>実装の詳細については、<a href="https://developer.android.com/develop/ui/compose/accessibility" target="_blank" rel="noreferrer">Jetpack Composeドキュメント</a> を参照してください。</p>`,21)]))}const E=i(n,[["render",l]]);export{d as __pageData,E as default};
