import{_ as g,C as o,c as v,o as f,G as r,ag as p,j as t,w as n,a as i}from"./chunks/framework.Bksy39di.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-https-redirect.md","filePath":"zh-Hant/ktor/server-https-redirect.md","lastUpdated":1755457140000}'),h={name:"zh-Hant/ktor/server-https-redirect.md"};function _(b,e,T,y,H,E){const u=o("TopicTitle"),k=o("primary-label"),d=o("Links"),c=o("tldr"),s=o("code-block"),l=o("TabItem"),a=o("Tabs"),m=o("list");return f(),v("div",null,[r(u,{labelRef:"server-plugin",title:"HttpsRedirect"}),r(k,{ref:"server-plugin"},null,512),r(c,null,{default:n(()=>[e[3]||(e[3]=t("p",null,[t("b",null,"所需依賴項"),i(": "),t("code",null,"io.ktor:ktor-server-http-redirect")],-1)),e[4]||(e[4]=t("p",null,[t("b",null,"程式碼範例"),i(": "),t("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/ssl-engine-main-redirect"}," ssl-engine-main-redirect ")],-1)),t("p",null,[t("b",null,[r(d,{href:"/ktor/server-native",summary:"Ktor 支援 Kotlin/Native，可讓您在沒有額外執行時間或虛擬機器的情況下執行伺服器。"},{default:n(()=>e[0]||(e[0]=[i("原生伺服器")])),_:1}),e[1]||(e[1]=i("支援"))]),e[2]||(e[2]=i(": ✅ "))])]),_:1}),e[17]||(e[17]=p('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-http-redirect/io.ktor.server.plugins.httpsredirect/-https-redirect.html" target="_blank" rel="noreferrer"><code>HttpsRedirect</code></a> 插件會在處理呼叫之前，將所有 HTTP 請求重新導向至其 <a href="./server-ssl">HTTPS 對應項</a>。預設情況下，資源會傳回 <code>301 Moved Permanently</code>，但可以配置為 <code>302 Found</code>。</p><h2 id="add_dependencies" tabindex="-1">新增依賴項 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;新增依賴項 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p> 若要使用 <code>HttpsRedirect</code>，您需要在建置腳本中包含 <code>ktor-server-http-redirect</code> artifact： </p>',3)),r(a,{group:"languages"},{default:n(()=>[r(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[r(s,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-http-redirect:$ktor_version")'})]),_:1}),r(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[r(s,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-http-redirect:$ktor_version"'})]),_:1}),r(l,{title:"Maven","group-key":"maven"},{default:n(()=>[r(s,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-http-redirect-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),e[18]||(e[18]=t("h2",{id:"install_plugin",tabindex:"-1"},[i("安裝 HttpsRedirect "),t("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安裝 HttpsRedirect {id="install_plugin"}"'},"​")],-1)),t("p",null,[e[6]||(e[6]=i(" 若要將 ")),e[7]||(e[7]=t("code",null,"HttpsRedirect",-1)),e[8]||(e[8]=i(" 插件")),e[9]||(e[9]=t("a",{href:"#install"},"安裝",-1)),e[10]||(e[10]=i("到應用程式中， 請在指定的")),r(d,{href:"/ktor/server-modules",summary:"模組可讓您透過分組路由來建構應用程式。"},{default:n(()=>e[5]||(e[5]=[i("模組")])),_:1}),e[11]||(e[11]=i("中將其傳遞給 ")),e[12]||(e[12]=t("code",null,"install",-1)),e[13]||(e[13]=i(" 函數。 以下程式碼片段顯示了如何安裝 ")),e[14]||(e[14]=t("code",null,"HttpsRedirect",-1)),e[15]||(e[15]=i(" ... "))]),r(m,null,{default:n(()=>e[16]||(e[16]=[t("li",null,[i(" ... 在 "),t("code",null,"embeddedServer"),i(" 函數呼叫內部。 ")],-1),t("li",null,[i(" ... 在明確定義的 "),t("code",null,"module"),i(" 內部，它是 "),t("code",null,"Application"),i(" 類別的擴充功能。 ")],-1)])),_:1}),r(a,null,{default:n(()=>[r(l,{title:"embeddedServer"},{default:n(()=>[r(s,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.httpsredirect.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(HttpsRedirect)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),r(l,{title:"module"},{default:n(()=>[r(s,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.httpsredirect.*
            // ...
            fun Application.module() {
                install(HttpsRedirect)
                // ...
            }`})]),_:1})]),_:1}),e[19]||(e[19]=p(`<p>上述程式碼會以預設配置安裝 <code>HttpsRedirect</code> 插件。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>當位於反向代理之後時，您需要安裝 <code>ForwardedHeader</code> 或 <code>XForwardedHeader</code> 插件以正確偵測 HTTPS 請求。如果您在安裝其中一個插件後遇到無限重新導向，請查看 <a href="./FAQ#infinite-redirect">此常見問題 (FAQ) 條目</a> 以取得更多詳細資訊。</p></div><h2 id="configure" tabindex="-1">配置 HttpsRedirect <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置 HttpsRedirect {id=&quot;configure&quot;}&quot;">​</a></h2><p>以下程式碼片段顯示了如何配置所需的 HTTPS 連接埠，並為所請求的資源傳回 <code>301 Moved Permanently</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpsRedirect) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sslPort </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8443</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    permanentRedirect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以在此處找到完整的範例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/ssl-engine-main-redirect" target="_blank" rel="noreferrer">ssl-engine-main-redirect</a>。</p>`,6))])}const S=g(h,[["render",_]]);export{P as __pageData,S as default};
