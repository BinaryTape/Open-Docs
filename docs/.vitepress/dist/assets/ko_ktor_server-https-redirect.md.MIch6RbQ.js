import{_ as g,C as o,c as v,o as f,G as r,ag as p,j as t,w as n,a as i}from"./chunks/framework.Bksy39di.js";const R=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-https-redirect.md","filePath":"ko/ktor/server-https-redirect.md","lastUpdated":1755457140000}'),h={name:"ko/ktor/server-https-redirect.md"};function _(b,e,T,y,E,H){const k=o("TopicTitle"),u=o("primary-label"),d=o("Links"),c=o("tldr"),s=o("code-block"),l=o("TabItem"),a=o("Tabs"),m=o("list");return f(),v("div",null,[r(k,{labelRef:"server-plugin",title:"HTTPS 리다이렉트"}),r(u,{ref:"server-plugin"},null,512),r(c,null,{default:n(()=>[e[3]||(e[3]=t("p",null,[t("b",null,"필수 의존성"),i(": "),t("code",null,"io.ktor:ktor-server-http-redirect")],-1)),e[4]||(e[4]=t("p",null,[t("b",null,"코드 예시"),i(": "),t("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/ssl-engine-main-redirect"}," ssl-engine-main-redirect ")],-1)),t("p",null,[t("b",null,[r(d,{href:"/ktor/server-native",summary:"Ktor는 Kotlin/Native를 지원하며 추가 런타임이나 가상 머신 없이 서버를 실행할 수 있게 합니다."},{default:n(()=>e[0]||(e[0]=[i("네이티브 서버")])),_:1}),e[1]||(e[1]=i(" 지원"))]),e[2]||(e[2]=i(": ✅ "))])]),_:1}),e[16]||(e[16]=p('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-http-redirect/io.ktor.server.plugins.httpsredirect/-https-redirect.html" target="_blank" rel="noreferrer">HttpsRedirect</a> 플러그인은 호출을 처리하기 전에 모든 HTTP 요청을 <a href="./server-ssl">HTTPS 대응 리소스</a>로 리다이렉트합니다. 기본적으로 리소스는 <code>301 Moved Permanently</code>를 반환하지만, <code>302 Found</code>로 구성할 수도 있습니다.</p><h2 id="add_dependencies" tabindex="-1">의존성 추가 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;의존성 추가 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>HttpsRedirect</code>을(를) 사용하려면 빌드 스크립트에 <code>ktor-server-http-redirect</code> 아티팩트를 포함해야 합니다. </p>',3)),r(a,{group:"languages"},{default:n(()=>[r(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[r(s,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-http-redirect:$ktor_version")'})]),_:1}),r(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[r(s,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-http-redirect:$ktor_version"'})]),_:1}),r(l,{title:"Maven","group-key":"maven"},{default:n(()=>[r(s,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-http-redirect-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),e[17]||(e[17]=t("h2",{id:"install_plugin",tabindex:"-1"},[i("HttpsRedirect 설치 "),t("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "HttpsRedirect 설치 {id="install_plugin"}"'},"​")],-1)),t("p",null,[e[6]||(e[6]=t("code",null,"HttpsRedirect",-1)),e[7]||(e[7]=i(" 플러그인을 애플리케이션에 ")),e[8]||(e[8]=t("a",{href:"#install"},"설치",-1)),e[9]||(e[9]=i("하려면, 지정된 ")),r(d,{href:"/ktor/server-modules",summary:"모듈을 사용하면 경로를 그룹화하여 애플리케이션 구조를 구성할 수 있습니다."},{default:n(()=>e[5]||(e[5]=[i("모듈")])),_:1}),e[10]||(e[10]=i("에서 ")),e[11]||(e[11]=t("code",null,"install",-1)),e[12]||(e[12]=i(" 함수에 전달하면 됩니다. 아래 코드 스니펫은 ")),e[13]||(e[13]=t("code",null,"HttpsRedirect",-1)),e[14]||(e[14]=i("을(를) 설치하는 방법을 보여줍니다... "))]),r(m,null,{default:n(()=>e[15]||(e[15]=[t("li",null,[i(" ... "),t("code",null,"embeddedServer"),i(" 함수 호출 내부에. ")],-1),t("li",null,[i(" ... "),t("code",null,"Application"),i(" 클래스의 확장 함수인 명시적으로 정의된 "),t("code",null,"module"),i(" 내부에. ")],-1)])),_:1}),r(a,null,{default:n(()=>[r(l,{title:"embeddedServer"},{default:n(()=>[r(s,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.httpsredirect.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(HttpsRedirect)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),r(l,{title:"module"},{default:n(()=>[r(s,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.httpsredirect.*
            // ...
            fun Application.module() {
                install(HttpsRedirect)
                // ...
            }`})]),_:1})]),_:1}),e[18]||(e[18]=p(`<p>위 코드는 기본 구성으로 <code>HttpsRedirect</code> 플러그인을 설치합니다.</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>리버스 프록시 뒤에 있을 때는 HTTPS 요청을 올바르게 감지하기 위해 <code>ForwardedHeader</code> 또는 <code>XForwardedHeader</code> 플러그인을 설치해야 합니다. 이 플러그인 중 하나를 설치한 후 무한 리다이렉트가 발생하면, 자세한 내용은 <a href="./FAQ#infinite-redirect">이 FAQ 항목</a>을 확인하세요.</p></div><h2 id="configure" tabindex="-1">HttpsRedirect 구성 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;HttpsRedirect 구성 {id=&quot;configure&quot;}&quot;">​</a></h2><p>아래 코드 스니펫은 원하는 HTTPS 포트를 구성하고 요청된 리소스에 대해 <code>301 Moved Permanently</code>를 반환하도록 설정하는 방법을 보여줍니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpsRedirect) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sslPort </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8443</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    permanentRedirect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>전체 예시는 다음에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/ssl-engine-main-redirect" target="_blank" rel="noreferrer">ssl-engine-main-redirect</a>.</p>`,6))])}const S=g(h,[["render",_]]);export{R as __pageData,S as default};
