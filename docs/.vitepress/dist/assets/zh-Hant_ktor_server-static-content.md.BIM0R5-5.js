import{_ as k,C as t,c as o,o as r,j as i,G as e,ag as d,a,w as n}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-static-content.md","filePath":"zh-Hant/ktor/server-static-content.md","lastUpdated":1755457140000}'),E={name:"zh-Hant/ktor/server-static-content.md"};function c(g,s,u,y,F,C){const l=t("show-structure"),h=t("tldr"),p=t("link-summary");return r(),o("div",null,[s[2]||(s[2]=i("h1",{id:"服務靜態內容",tabindex:"-1"},[a("服務靜態內容 "),i("a",{class:"header-anchor",href:"#服務靜態內容","aria-label":'Permalink to "服務靜態內容"'},"​")],-1)),e(l,{for:"chapter",depth:"2"}),e(h,null,{default:n(()=>s[0]||(s[0]=[i("p",null,[i("b",null,"程式碼範例"),a(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/static-files"},"static-files"),a(", "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/static-resources"},"static-resources"),a(", "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/static-zip"},"static-zip")],-1)])),_:1}),e(p,null,{default:n(()=>s[1]||(s[1]=[a(" 了解如何服務靜態內容，例如樣式表、腳本、圖片等等。 ")])),_:1}),s[3]||(s[3]=d(`<p>無論您是正在建立網站還是 HTTP 端點，您的應用程式很可能需要服務檔案，例如 樣式表、腳本或圖片。 雖然 Ktor 確實能夠載入檔案內容並<a href="./server-responses">在回應中</a>傳送給客戶端，但 Ktor 透過提供額外的函式來簡化此過程，以服務靜態內容。</p><p>使用 Ktor，您可以從<a href="#folders">資料夾</a>、<a href="#zipped">ZIP 檔案</a> 以及<a href="#resources">嵌入式應用程式資源</a>服務內容。</p><h2 id="folders" tabindex="-1">資料夾 <a class="header-anchor" href="#folders" aria-label="Permalink to &quot;資料夾 {id=&quot;folders&quot;}&quot;">​</a></h2><p>若要從本機檔案系統服務靜態檔案，請使用 <a href="https://api.ktor.io/ktor-server/ktor-server-core/io.ktor.server.http.content/static-files.html" target="_blank" rel="noreferrer"><code>staticFiles()</code></a> 函式。在此情況下，相對路徑會使用目前工作目錄解析。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    staticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在上述範例中，任何來自 <code>/resources</code> 的請求都會映射到目前工作目錄中名為 <code>files</code> 的實體資料夾。 只要 URL 路徑和實體檔案名稱匹配，Ktor 就會遞迴地服務 <code>files</code> 中的任何檔案。</p><p>有關完整範例， 請參閱 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/static-files" target="_blank" rel="noreferrer">static-files</a>。</p><h2 id="zipped" tabindex="-1">ZIP 檔案 <a class="header-anchor" href="#zipped" aria-label="Permalink to &quot;ZIP 檔案 {id=&quot;zipped&quot;}&quot;">​</a></h2><p>若要從 ZIP 檔案服務靜態內容，Ktor 提供了 <a href="https://api.ktor.io/ktor-server/ktor-server-core/io.ktor.server.http.content/static-zip.html" target="_blank" rel="noreferrer"><code>staticZip()</code></a> 函式。 這允許您將請求直接映射到 ZIP 壓縮檔的內容，如下列範例所示：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    staticZip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;files/text-files.zip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在此範例中，任何來自根 URL <code>/</code> 的請求都會直接映射到 <code>text-files.zip</code> ZIP 檔案的內容。</p><h3 id="zip-auto-reload" tabindex="-1">自動重新載入支援 <a class="header-anchor" href="#zip-auto-reload" aria-label="Permalink to &quot;自動重新載入支援 {id=&quot;zip-auto-reload&quot;}&quot;">​</a></h3><p><code>staticZip()</code> 函式也支援自動重新載入。如果在 ZIP 檔案的父目錄中偵測到任何變更，ZIP 檔案系統會在下次請求時重新載入。這確保了服務的內容保持 最新，而無需伺服器重新啟動。</p><p>有關完整範例， 請參閱 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/static-zip" target="_blank" rel="noreferrer">static-zip</a>。</p><h2 id="resources" tabindex="-1">資源 <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;資源 {id=&quot;resources&quot;}&quot;">​</a></h2><p>若要從類路徑服務內容，請使用 <a href="https://api.ktor.io/ktor-server/ktor-server-core/io.ktor.server.http.content/static-resources.html" target="_blank" rel="noreferrer"><code>staticResources()</code></a> 函式。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    staticResources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;static&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>這會將任何來自 <code>/resources</code> 的請求映射到應用程式資源中的 <code>static</code> 套件。 在此情況下，只要 URL 路徑和資源路徑匹配，Ktor 就會遞迴地服務 <code>static</code> 套件中的任何檔案。</p><p>有關完整範例， 請參閱 <a href="https://github.ktor.io/ktor-documentation/tree/3.2.3/codeSnippets/snippets/static-resources" target="_blank" rel="noreferrer">static-resources</a>。</p><h2 id="configuration" tabindex="-1">額外配置 <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;額外配置 {id=&quot;configuration&quot;}&quot;">​</a></h2><p>Ktor 為靜態檔案和資源提供了更多配置。</p><h3 id="index" tabindex="-1">索引檔案 <a class="header-anchor" href="#index" aria-label="Permalink to &quot;索引檔案 {id=&quot;index&quot;}&quot;">​</a></h3><p>如果存在名為 <code>index.html</code> 的檔案，當請求目錄時，Ktor 預設會服務該檔案。您可以使用 <code>index</code> 參數設定自訂索引檔案：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticResources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/custom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;static&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;custom_index.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>在此情況下，當請求 <code>/custom</code> 時，Ktor 會服務 <code>/custom_index.html</code>。</p><h3 id="precompressed" tabindex="-1">預壓縮檔案 <a class="header-anchor" href="#precompressed" aria-label="Permalink to &quot;預壓縮檔案 {id=&quot;precompressed&quot;}&quot;">​</a></h3><p>Ktor 提供了服務預壓縮檔案並避免使用<a href="./server-compression">動態壓縮</a>的能力。 要使用此功能，請在區塊語句中定義 <code>preCompressed()</code> 函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    preCompressed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CompressedFileType.BROTLI, CompressedFileType.GZIP)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在此範例中，對於對 <code>/js/script.js</code> 的請求，Ktor 可以服務 <code>/js/script.js.br</code> 或 <code>/js/script.js.gz</code>。</p><h3 id="autohead" tabindex="-1">HEAD 請求 <a class="header-anchor" href="#autohead" aria-label="Permalink to &quot;HEAD 請求 {id=&quot;autohead&quot;}&quot;">​</a></h3><p><code>enableAutoHeadResponse()</code> 函式允許您自動回應靜態路由中每個定義了 <code>GET</code> 的路徑的 <code>HEAD</code> 請求。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticResources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;static&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    enableAutoHeadResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="default-file" tabindex="-1">預設檔案回應 <a class="header-anchor" href="#default-file" aria-label="Permalink to &quot;預設檔案回應 {id=&quot;default-file&quot;}&quot;">​</a></h3><p><code>default()</code> 函式提供了為靜態路由中任何沒有對應檔案的請求回覆檔案的能力。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在此範例中，當客戶端請求不存在的資源時，會將 <code>index.html</code> 檔案作為回應服務。</p><h3 id="content-type" tabindex="-1">內容類型 <a class="header-anchor" href="#content-type" aria-label="Permalink to &quot;內容類型 {id=&quot;content-type&quot;}&quot;">​</a></h3><p>預設情況下，Ktor 會嘗試從檔案副檔名猜測 <code>Content-Type</code> 標頭的值。您可以使用 <code>contentType()</code> 函式來明確設定 <code>Content-Type</code> 標頭。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;textFiles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (file.name) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;html-file.txt&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ContentType.Text.Html</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在此範例中，檔案 <code>html-file.txt</code> 的回應將具有 <code>Content-Type: text/html</code> 標頭，而對於其他所有檔案，將應用預設行為。</p><h3 id="caching" tabindex="-1">快取 <a class="header-anchor" href="#caching" aria-label="Permalink to &quot;快取 {id=&quot;caching&quot;}&quot;">​</a></h3><p><code>cacheControl()</code> 函式允許您為 HTTP 快取配置 <code>Cache-Control</code> 標頭。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        staticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;textFiles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            cacheControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (file.name) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    &quot;file.txt&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Immutable, CacheControl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MaxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emptyList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Immutable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CacheControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;immutable&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>有關 Ktor 中快取的更多資訊，請參閱<a href="./server-caching-headers">快取標頭</a>。</p></div><h3 id="exclude" tabindex="-1">排除的檔案 <a class="header-anchor" href="#exclude" aria-label="Permalink to &quot;排除的檔案 {id=&quot;exclude&quot;}&quot;">​</a></h3><p><code>exclude()</code> 函式允許您排除不被服務的檔案。當客戶端請求排除的檔案時， 伺服器將以 <code>403 Forbidden</code> 狀態碼回應。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;textFiles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    exclude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file.path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;excluded&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="extensions" tabindex="-1">檔案副檔名回溯 <a class="header-anchor" href="#extensions" aria-label="Permalink to &quot;檔案副檔名回溯 {id=&quot;extensions&quot;}&quot;">​</a></h3><p>當找不到請求的檔案時，Ktor 可以將給定的副檔名新增到檔案名稱並搜尋它。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticResources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;static&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    extensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;htm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在此範例中，當請求 <code>/index</code> 時，Ktor 將搜尋 <code>/index.html</code> 並服務找到的內容。</p><h3 id="modify" tabindex="-1">自訂修改 <a class="header-anchor" href="#modify" aria-label="Permalink to &quot;自訂修改 {id=&quot;modify&quot;}&quot;">​</a></h3><p><code>modify()</code> 函式允許您對結果回應應用自訂修改。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">staticFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    modify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { file, call </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        call.response.headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpHeaders.ETag, file.name.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="errors" tabindex="-1">處理錯誤 <a class="header-anchor" href="#errors" aria-label="Permalink to &quot;處理錯誤 {id=&quot;errors&quot;}&quot;">​</a></h2><p>如果找不到請求的內容，Ktor 將自動以 <code>404 Not Found</code> HTTP 狀態碼回應。</p><p>要了解如何配置錯誤處理，請參閱 <a href="./server-status-pages">Status Pages</a>。</p>`,57))])}const m=k(E,[["render",c]]);export{b as __pageData,m as default};
