import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.Bksy39di.js";const d=JSON.parse('{"title":"無障礙功能","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/compose-accessibility.md","filePath":"zh-Hant/kmp/compose-accessibility.md","lastUpdated":1755516278000}'),n={name:"zh-Hant/kmp/compose-accessibility.md"};function l(p,s,h,o,k,r){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="無障礙功能" tabindex="-1">無障礙功能 <a class="header-anchor" href="#無障礙功能" aria-label="Permalink to &quot;無障礙功能&quot;">​</a></h1><p>Compose Multiplatform 提供符合無障礙標準所需的基本功能，例如語義屬性、無障礙 API，以及對輔助技術（包括螢幕閱讀器和鍵盤導航）的支援。</p><p>此框架使得設計的應用程式能夠符合 <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A32019L0882" target="_blank" rel="noreferrer">歐洲無障礙法案</a> (EAA) 和 <a href="https://www.w3.org/TR/WCAG21/" target="_blank" rel="noreferrer">網頁內容無障礙指南</a> (WCAG) 的要求。</p><h2 id="語義屬性" tabindex="-1">語義屬性 <a class="header-anchor" href="#語義屬性" aria-label="Permalink to &quot;語義屬性&quot;">​</a></h2><p>為了替無障礙、自動填寫和測試等服務提供上下文，您可以使用語義屬性來定義元件的意義和作用。</p><p>語義屬性是語義樹的構成要素，語義樹是 UI 的簡化表示。當您在 composables 中定義語義屬性時，它們會自動新增到語義樹中。輔助技術透過遍歷語義樹而不是整個 UI 樹來與應用程式互動。</p><p>重要的無障礙語義屬性：</p><ul><li><p><code>contentDescription</code> 提供非文本或模棱兩可的 UI 元素（例如 <a href="https://kotlinlang.org/api/compose-multiplatform/material3/androidx.compose.material3/-icon-button.html" target="_blank" rel="noreferrer"><code>IconButton</code></a> 和 <a href="https://kotlinlang.org/api/compose-multiplatform/material3/androidx.compose.material3/-floating-action-button.html" target="_blank" rel="noreferrer"><code>FloatingActionButton</code></a>）的描述。它是主要的無障礙 API，用於提供螢幕閱讀器會宣告的文本標籤。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { contentDescription </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Description of the image&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div></li><li><p><code>role</code> 告知無障礙服務關於 UI 元件的功能類型，例如按鈕、核取方塊或圖片。這有助於螢幕閱讀器解釋互動模型並正確宣告元素。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { role </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Role.Button }</span></span></code></pre></div></li><li><p><code>stateDescription</code> 描述互動式 UI 元素的當前狀態。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { stateDescription </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (isChecked) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Checked&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Unchecked&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div></li><li><p><code>testTag</code> 為可組合元素分配一個唯一的識別碼，用於在 Android 上使用 Espresso 框架或在 iOS 上使用 XCUITest 進行 UI 測試。您也可以將 <code>testTag</code> 用於偵錯或在需要元件識別碼的特定自動化場景中。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">testTag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my_unique_element_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><p>如需語義屬性的完整列表，請參閱 Jetpack Compose API 參考資料中的 <a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/semantics/SemanticsProperties" target="_blank" rel="noreferrer"><code>SemanticsProperties</code></a>。</p><h2 id="遍歷順序" tabindex="-1">遍歷順序 <a class="header-anchor" href="#遍歷順序" aria-label="Permalink to &quot;遍歷順序&quot;">​</a></h2><p>預設情況下，螢幕閱讀器按照從左到右、從上到下的佈局順序遍歷 UI 元素。然而，對於複雜的佈局，螢幕閱讀器可能無法自動確定正確的閱讀順序。這對於包含容器視圖（例如表格和巢狀視圖）的佈局至關重要，這些視圖支援包含視圖的捲動和縮放。</p><p>為確保在捲動和滑動複雜視圖時有正確的閱讀順序，請定義遍歷語義屬性。這也確保了使用向上滑動或向下滑動的無障礙手勢在不同遍歷組之間進行正確導航。</p><p>元件的遍歷索引預設值為 <code>0f</code>。元件的遍歷索引值越低，其內容描述相對於其他元件將被越早讀取。</p><p>例如，如果您希望螢幕閱讀器優先處理一個浮動動作按鈕，您可以將其遍歷索引設定為 <code>-1f</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FloatingBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            isTraversalGroup </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Sets a negative index to prioritize over elements with the default index</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            traversalIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1f</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        FloatingActionButton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                imageVector </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Icons.Default.Add,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                contentDescription </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Icon of floating action button&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="後續步驟" tabindex="-1">後續步驟 <a class="header-anchor" href="#後續步驟" aria-label="Permalink to &quot;後續步驟&quot;">​</a></h2><p>進一步了解 iOS 的無障礙功能：</p><ul><li><a href="./compose-ios-accessibility#high-contrast-theme">高對比度主題</a></li><li><a href="./compose-ios-accessibility#test-accessibility-with-xctest-framework">使用 XCTest 框架測試無障礙功能</a></li><li><a href="./compose-ios-accessibility#control-via-trackpad-and-keyboard">透過觸控板和鍵盤控制</a></li><li><a href="./compose-ios-accessibility#choose-the-tree-synchronization-option">將語義樹與 iOS 無障礙樹同步</a> （適用於 Compose Multiplatform 1.7.3 及更早版本）</li></ul><p>進一步了解桌上型電腦的無障礙功能：</p><ul><li><a href="./compose-desktop-accessibility#enabling-accessibility-on-windows">在 Windows 上啟用無障礙功能</a></li><li><a href="./compose-desktop-accessibility#example-custom-button-with-semantic-rules">使用 macOS 和 Windows 工具測試您的應用程式</a></li></ul><p>有關實作細節，請參閱 <a href="https://developer.android.com/develop/ui/compose/accessibility" target="_blank" rel="noreferrer">Jetpack Compose 文件</a>。</p>`,21)]))}const E=i(n,[["render",l]]);export{d as __pageData,E as default};
