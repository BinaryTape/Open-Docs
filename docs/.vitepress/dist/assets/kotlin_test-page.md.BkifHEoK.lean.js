import{_ as c}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as y}from"./chunks/icon-2-done.DCMUaFG5.js";import{_ as u}from"./chunks/icon-3.BwKvTetO.js";import{_ as F}from"./chunks/icon-4-todo.GaeEmerm.js";import{_ as b}from"./chunks/create-test.CrrH3ADr.js";import{_ as m,a as C}from"./chunks/multiplatform-create-project-button.ihqOV7P4.js";import{_ as v}from"./chunks/youtrack-logo.BqikxD5b.js";import{_ as f}from"./chunks/ksp-class-diagram.ClaR6pZl.js";import{_ as B,C as n,c as A,o as _,j as s,G as t,ag as p,a as i,w as l}from"./chunks/framework.Bksy39di.js";const X=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/test-page.md","filePath":"kotlin/test-page.md","lastUpdated":1754307826000}'),D={name:"kotlin/test-page.md"};function x(q,a,T,P,S,j){const r=n("web-summary"),d=n("no-index"),o=n("tldr"),e=n("tab"),h=n("tabs"),k=n("def"),g=n("deflist"),E=n("YouTubeVideo");return _(),A("div",null,[a[8]||(a[8]=s("h1",{id:"测试页面",tabindex:"-1"},[i("测试页面 "),s("a",{class:"header-anchor",href:"#测试页面","aria-label":'Permalink to "测试页面"'},"​")],-1)),t(r,null,{default:l(()=>a[0]||(a[0]=[i("此页面仅用于测试。")])),_:1}),t(d),t(o,null,{default:l(()=>a[1]||(a[1]=[s("p",null,[i("这是一个包含图片的区块（取自"),s("strong",null,"Compose Multiplatform 入门"),i("教程）。")],-1),s("p",null,[s("img",{src:c,width:"20",alt:"First step"}),i(),s("a",{href:"/kotlin/jvm-create-project-with-spring-boot"},"使用 Kotlin 创建 Spring Boot 项目"),s("br"),s("img",{src:y,width:"20",alt:"Second step"}),i(),s("a",{href:"/kotlin/jvm-spring-boot-add-data-class"},"向 Spring Boot 项目添加数据类"),s("br"),s("img",{src:u,width:"20",alt:"Third step"}),i(),s("strong",null,"为 Spring Boot 项目添加数据库支持"),s("br"),s("img",{src:F,width:"20",alt:"Fourth step"}),i(" 使用 Spring Data CrudRepository 进行数据库访问>"),s("br")],-1)])),_:1}),a[9]||(a[9]=s("h2",{id:"同步标签页",tabindex:"-1"},[i("同步标签页 "),s("a",{class:"header-anchor",href:"#同步标签页","aria-label":'Permalink to "同步标签页"'},"​")],-1)),t(h,{group:"build-script"},{default:l(()=>[t(e,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[2]||(a[2]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plugins"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    kotlin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"kapt"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(e,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[3]||(a[3]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"plugins {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    id "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.kotlin.kapt"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),t(h,{group:"build-script"},{default:l(()=>[t(e,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[4]||(a[4]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plugins"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    kotlin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"plugin.noarg"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(e,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[5]||(a[5]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"plugins {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    id "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.kotlin.plugin.noarg"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[10]||(a[10]=s("h2",{id:"章节",tabindex:"-1"},[i("章节 "),s("a",{class:"header-anchor",href:"#章节","aria-label":'Permalink to "章节"'},"​")],-1)),a[11]||(a[11]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"可折叠章节",tabindex:"-1"},[i("可折叠章节 "),s("a",{class:"header-anchor",href:"#可折叠章节","aria-label":'Permalink to "可折叠章节 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),a[12]||(a[12]=p("",25)),t(g,{collapsible:"true"},{default:l(()=>[t(k,{title:"可折叠项 #1"},{default:l(()=>a[6]||(a[6]=[s("p",null,[s("code",null,"CrudRepository"),i(" 接口中 "),s("code",null,"findById()"),i(" 函数的返回类型是 "),s("code",null,"Optional"),i(" 类的一个实例。然而，为了保持一致性，返回一个包含单个消息的 "),s("code",null,"List"),i(" 将会很方便。为此，你需要解包 "),s("code",null,"Optional"),i(" 值（如果它存在），并返回一个包含该值的列表。这可以作为 "),s("code",null,"Optional"),i(" 类型的一个"),s("a",{href:"/kotlin/extensions#extension-functions"},"扩展函数"),i("来实现。")],-1),s("p",null,[i("在代码中，"),s("code",null,"Optional<out T>.toList()"),i(" 中的 "),s("code",null,".toList()"),i(" 是 "),s("code",null,"Optional"),i(" 的扩展函数。扩展函数允许你为任何类编写额外的函数，这在你想要扩展某个库类的功能时特别有用。")],-1)])),_:1}),t(k,{title:"可折叠项 #2"},{default:l(()=>a[7]||(a[7]=[s("p",null,[s("a",{href:"https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/#jdbc.entity-persistence"},"此函数基于一个假设工作"),i("：新对象在数据库中没有 ID。因此，插入时 ID "),s("b",null,"应该为 null"),i("。")],-1),s("p",null,[i("如果 ID 不是 "),s("i",null,"null"),i("，"),s("code",null,"CrudRepository"),i(" 假定该对象已存在于数据库中，并且这是一个更新操作，而不是插入操作。在插入操作之后，ID 将由数据存储生成并重新赋值给 "),s("code",null,"Message"),i(" 实例。这就是为什么 ID 属性应该使用 "),s("code",null,"var"),i(" 关键字声明的原因。")],-1),s("p",null,null,-1)])),_:1})]),_:1}),a[13]||(a[13]=p("",6)),t(E,{src:"https://www.youtube.com/v/Ol_96CHKqg8",title:"Kotlin 1.9.20 的新特性"}),a[14]||(a[14]=p("",8)),a[15]||(a[15]=s("p",null,[s("img",{src:f,alt:"类图",thumbnail:"true",width:"700","thumbnail-same-file":"true"})],-1)),a[16]||(a[16]=p("",9))])}const $=B(D,[["render",x]]);export{X as __pageData,$ as default};
