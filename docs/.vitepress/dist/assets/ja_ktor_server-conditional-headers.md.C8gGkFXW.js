import{_ as E,C as a,c,o as f,G as s,ag as p,j as e,w as t,a as n}from"./chunks/framework.Bksy39di.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-conditional-headers.md","filePath":"ja/ktor/server-conditional-headers.md","lastUpdated":1755457140000}'),m={name:"ja/ktor/server-conditional-headers.md"};function y(v,i,C,_,F,b){const k=a("TopicTitle"),h=a("primary-label"),r=a("Links"),g=a("tldr"),o=a("code-block"),l=a("TabItem"),d=a("Tabs"),u=a("list");return f(),c("div",null,[s(k,{labelRef:"server-plugin",title:"条件付きヘッダー"}),s(h,{ref:"server-plugin"},null,512),s(g,null,{default:t(()=>[i[3]||(i[3]=e("p",null,[e("b",null,"必須の依存関係"),n(": "),e("code",null,"io.ktor:ktor-server-conditional-headers")],-1)),i[4]||(i[4]=e("p",null,[e("b",null,"コード例"),n(": "),e("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/conditional-headers"}," conditional-headers ")],-1)),e("p",null,[e("b",null,[s(r,{href:"/ktor/server-native",summary:"KtorはKotlin/Nativeをサポートしており、追加のランタイムや仮想マシンなしでサーバーを実行できます。"},{default:t(()=>i[0]||(i[0]=[n("ネイティブサーバー")])),_:1}),i[1]||(i[1]=n("のサポート"))]),i[2]||(i[2]=n(": ✅ "))])]),_:1}),i[17]||(i[17]=p('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-conditional-headers/io.ktor.server.plugins.conditionalheaders/-conditional-headers.html" target="_blank" rel="noreferrer">ConditionalHeaders</a>プラグインは、コンテンツが前回のリクエストから変更されていない場合、そのコンテンツのボディを送信しないようにします。これは、以下のヘッダーを使用することで実現されます。</p><ul><li><code>Last-Modified</code>レスポンスヘッダーには、リソースの最終変更時刻が含まれます。例えば、クライアントのリクエストに<code>If-Modified-Since</code>の値が含まれている場合、Ktorは指定された日付の後にリソースが変更されている場合にのみ、完全なレスポンスを送信します。<a href="./server-static-content">静的ファイル</a>の場合、Ktorは<code>ConditionalHeaders</code>を<a href="#install_plugin">インストール</a>すると自動的に<code>Last-Modified</code>ヘッダーを追加することに注意してください。</li><li><code>Etag</code>レスポンスヘッダーは、特定のリソースバージョンの識別子です。例えば、クライアントのリクエストに<code>If-None-Match</code>の値が含まれている場合、この値が<code>Etag</code>と一致すれば、Ktorは完全なレスポンスを送信しません。<code>Etag</code>の値は、<code>ConditionalHeaders</code>を<a href="#configure">設定</a>する際に指定できます。</li></ul><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>ConditionalHeaders</code>を使用するには、ビルドスクリプトに<code>ktor-server-conditional-headers</code>アーティファクトを含める必要があります。 </p>',4)),s(d,{group:"languages"},{default:t(()=>[s(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:t(()=>[s(o,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-conditional-headers:$ktor_version")'})]),_:1}),s(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:t(()=>[s(o,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-conditional-headers:$ktor_version"'})]),_:1}),s(l,{title:"Maven","group-key":"maven"},{default:t(()=>[s(o,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-conditional-headers-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),i[18]||(i[18]=e("h2",{id:"install_plugin",tabindex:"-1"},[n("ConditionalHeadersのインストール "),e("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "ConditionalHeadersのインストール {id="install_plugin"}"'},"​")],-1)),e("p",null,[i[6]||(i[6]=n(" アプリケーションに")),i[7]||(i[7]=e("code",null,"ConditionalHeaders",-1)),i[8]||(i[8]=n("プラグインを")),i[9]||(i[9]=e("a",{href:"#install"},"インストール",-1)),i[10]||(i[10]=n("するには、 指定された")),s(r,{href:"/ktor/server-modules",summary:"モジュールを使用すると、ルートをグループ化してアプリケーションを構造化できます。"},{default:t(()=>i[5]||(i[5]=[n("モジュール")])),_:1}),i[11]||(i[11]=n("内の")),i[12]||(i[12]=e("code",null,"install",-1)),i[13]||(i[13]=n("関数に渡します。 以下のコードスニペットは、")),i[14]||(i[14]=e("code",null,"ConditionalHeaders",-1)),i[15]||(i[15]=n("のインストール方法を示しています... "))]),s(u,null,{default:t(()=>i[16]||(i[16]=[e("li",null,[n(" ... "),e("code",null,"embeddedServer"),n("関数呼び出し内で。 ")],-1),e("li",null,[n(" ... "),e("code",null,"Application"),n("クラスの拡張関数である、明示的に定義された"),e("code",null,"module"),n("内で。 ")],-1)])),_:1}),s(d,null,{default:t(()=>[s(l,{title:"embeddedServer"},{default:t(()=>[s(o,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.conditionalheaders.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(ConditionalHeaders)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),s(l,{title:"module"},{default:t(()=>[s(o,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.conditionalheaders.*
            // ...
            fun Application.module() {
                install(ConditionalHeaders)
                // ...
            }`})]),_:1})]),_:1}),i[19]||(i[19]=p(`<p><code>ConditionalHeaders</code>プラグインは、<a href="#install-route">特定のルートにインストール</a>することもできます。 これは、異なるアプリケーションリソースに対して異なる<code>ConditionalHeaders</code>設定が必要な場合に役立ちます。 </p><h2 id="configure" tabindex="-1">ヘッダーの設定 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;ヘッダーの設定 {id=&quot;configure&quot;}&quot;">​</a></h2><p><code>ConditionalHeaders</code>を設定するには、<code>install</code>ブロック内で<a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-conditional-headers/io.ktor.server.plugins.conditionalheaders/-conditional-headers-config/version.html" target="_blank" rel="noreferrer">version</a>関数を呼び出す必要があります。この関数は、特定の<code>ApplicationCall</code>と<code>OutgoingContent</code>に対するリソースバージョンのリストへのアクセスを提供します。必要なバージョンは、<a href="https://api.ktor.io/ktor-http/io.ktor.http.content/-entity-tag-version/index.html" target="_blank" rel="noreferrer">EntityTagVersion</a>および<a href="https://api.ktor.io/ktor-http/io.ktor.http.content/-last-modified-version/index.html" target="_blank" rel="noreferrer">LastModifiedVersion</a>クラスオブジェクトを使用して指定できます。</p><p>以下のコードスニペットは、CSSに<code>Etag</code>と<code>Last-Modified</code>ヘッダーを追加する方法を示しています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ConditionalHeaders) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main/kotlin/com/example/Application.kt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { call, outgoingContent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (outgoingContent.contentType?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withoutParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ContentType.Text.CSS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                EntityTagVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lastModified</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hashCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                LastModifiedVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lastModified</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emptyList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>完全な例はこちらで見つけることができます: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/conditional-headers" target="_blank" rel="noreferrer">conditional-headers</a>。</p>`,6))])}const A=E(m,[["render",y]]);export{S as __pageData,A as default};
