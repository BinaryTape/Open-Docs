import{_ as n}from"./chunks/disable-sandboxing-cocoapods.CXTxy-d-.js";import{_ as p,C as t,c as e,o as h,j as s,G as o,ag as k,a,w as d}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"使用 Kotlin 项目作为 CocoaPods 依赖项","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/multiplatform-cocoapods-xcode.md","filePath":"kmp/multiplatform-cocoapods-xcode.md","lastUpdated":1755516278000}'),r={name:"kmp/multiplatform-cocoapods-xcode.md"};function E(c,i,g,y,F,u){const l=t("tldr");return h(),e("div",null,[i[1]||(i[1]=s("h1",{id:"使用-kotlin-项目作为-cocoapods-依赖项",tabindex:"-1"},[a("使用 Kotlin 项目作为 CocoaPods 依赖项 "),s("a",{class:"header-anchor",href:"#使用-kotlin-项目作为-cocoapods-依赖项","aria-label":'Permalink to "使用 Kotlin 项目作为 CocoaPods 依赖项"'},"​")],-1)),o(l,null,{default:d(()=>i[0]||(i[0]=[s("ul",null,[s("li",null,[a("在添加 Pod 依赖项之前，请"),s("a",{href:"./multiplatform-cocoapods-overview#set-up-an-environment-to-work-with-cocoapods"},"完成初始配置"),a("。")]),s("li",null,[a("您可以在我们的 "),s("a",{href:"https://github.com/Kotlin/kmp-with-cocoapods-multitarget-xcode-sample",target:"_blank",rel:"noreferrer"},"GitHub 版本库"),a(" 中找到一个示例项目。")])],-1)])),_:1}),i[2]||(i[2]=k('<p>您可以将整个 Kotlin 项目用作 Pod 依赖项。为此，您需要在项目的 Podfile 中包含此依赖项，并指定其名称以及生成 Podspec 的项目目录路径。</p><p>此依赖项将随此项目一起自动构建（并重新构建）。这种方法简化了导入 Xcode 的过程，无需手动编写相应的 Gradle 任务和 Xcode 构建步骤。</p><p>您可以在 Kotlin 项目和带有一个或多个目标的 Xcode 项目之间添加依赖项。还可以在 Kotlin 项目和多个 Xcode 项目之间添加依赖项。但是，在这种情况下，您需要为每个 Xcode 项目手动运行 <code>pod install</code>。对于单个 Xcode 项目，此操作是自动完成的。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><ul><li>为了正确导入依赖项到 Kotlin/Native 模块中，Podfile 必须包含 <code>use_modular_headers!</code> 或 <code>use_frameworks!</code> 指令之一。 * 如果您未指定最低部署目标版本，并且某个依赖项 Pod 需要更高的部署目标，则会收到错误。</li></ul></div><h2 id="带单个目标的-xcode-项目" tabindex="-1">带单个目标的 Xcode 项目 <a class="header-anchor" href="#带单个目标的-xcode-项目" aria-label="Permalink to &quot;带单个目标的 Xcode 项目&quot;">​</a></h2><p>要在带单个目标的 Xcode 项目中将 Kotlin 项目用作 Pod 依赖项：</p><ol><li><p>如果您还没有 Xcode 项目，请创建一个。</p></li><li><p>在 Xcode 中，确保在应用程序目标的 <strong>Build Options</strong> 下禁用 <strong>User Script Sandboxing</strong>：</p><p><img src="'+n+`" alt="Disable sandboxing CocoaPods"></p></li><li><p>在 Kotlin 项目的 iOS 部分，创建一个 Podfile。</p></li><li><p>在共享模块的 <code>build.gradle(.kts)</code> 文件中，使用 <code>podfile = project.file()</code> 添加 Podfile 的路径。</p><p>此步骤通过为您的 Podfile 运行 <code>pod install</code>，有助于同步您的 Xcode 项目与 Kotlin 项目的依赖项。</p></li><li><p>为 Pod 库指定最低部署目标版本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ios.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SDWebImage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5.20.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        podfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../ios-app/Podfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>在 Podfile 中，添加要包含在 Xcode 项目中的 Kotlin 项目的名称和路径：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ios-app&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Pods for iosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div></li><li><p>在您的项目目录中运行 <code>pod install</code>。</p><p>首次运行 <code>pod install</code> 时，它会创建 <code>.xcworkspace</code> 文件。此文件包含您原始的 <code>.xcodeproj</code> 和 CocoaPods 项目。</p></li><li><p>关闭您的 <code>.xcodeproj</code>，而是打开新的 <code>.xcworkspace</code> 文件。这样可以避免项目依赖项问题。</p></li><li><p>在 IntelliJ IDEA 中运行 <strong>Build</strong> | <strong>Reload All Gradle Projects</strong>（或在 Android Studio 中运行 <strong>File</strong> | <strong>Sync Project with Gradle Files</strong>），以重新导入项目。</p></li></ol><h2 id="带多个目标的-xcode-项目" tabindex="-1">带多个目标的 Xcode 项目 <a class="header-anchor" href="#带多个目标的-xcode-项目" aria-label="Permalink to &quot;带多个目标的 Xcode 项目&quot;">​</a></h2><p>要在带多个目标的 Xcode 项目中将 Kotlin 项目用作 Pod 依赖项：</p><ol><li><p>如果您还没有 Xcode 项目，请创建一个。</p></li><li><p>在 Kotlin 项目的 iOS 部分，创建一个 Podfile。</p></li><li><p>在共享模块的 <code>build.gradle(.kts)</code> 文件中，使用 <code>podfile = project.file()</code> 添加您项目的 Podfile 路径。</p><p>此步骤通过为您的 Podfile 运行 <code>pod install</code>，有助于同步您的 Xcode 项目与 Kotlin 项目的依赖项。</p></li><li><p>添加您项目中要使用的 Pod 库的依赖项，使用 <code>pod()</code>。</p></li><li><p>对于每个目标，为 Pod 库指定最低部署目标版本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tvosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ios.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        tvos.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SDWebImage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5.20.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Specify the path to the Podfile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        podfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../severalTargetsXcodeProject/Podfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>在 Podfile 中，添加要包含在 Xcode 项目中的 Kotlin 项目的名称和路径：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;iosApp&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Pods for iosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TVosApp&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tvos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Pods for TVosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div></li><li><p>在您的项目目录中运行 <code>pod install</code>。</p><p>首次运行 <code>pod install</code> 时，它会创建 <code>.xcworkspace</code> 文件。此文件包含您原始的 <code>.xcodeproj</code> 和 CocoaPods 项目。</p></li><li><p>关闭您的 <code>.xcodeproj</code>，而是打开新的 <code>.xcworkspace</code> 文件。这样可以避免项目依赖项问题。</p></li><li><p>在 IntelliJ IDEA 中运行 <strong>Build</strong> | <strong>Reload All Gradle Projects</strong>（或在 Android Studio 中运行 <strong>File</strong> | <strong>Sync Project with Gradle Files</strong>），以重新导入项目。</p></li></ol><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><ul><li><a href="./multiplatform-cocoapods-libraries">在您的 Kotlin 项目中添加对 Pod 库的依赖项</a></li><li><a href="./multiplatform-direct-integration">了解如何将 framework 连接到您的 iOS 项目</a></li><li><a href="./multiplatform-cocoapods-dsl-reference">查看完整的 CocoaPods Gradle 插件 DSL 参考</a></li></ul>`,12))])}const b=p(r,[["render",E]]);export{f as __pageData,b as default};
