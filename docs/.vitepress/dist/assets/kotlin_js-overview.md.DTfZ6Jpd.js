import{_ as a,c as r,o as t,ag as o}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"Kotlin 用于 JavaScript","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/js-overview.md","filePath":"kotlin/js-overview.md","lastUpdated":1754307826000}'),l={name:"kotlin/js-overview.md"};function i(n,e,s,p,c,h){return t(),r("div",null,e[0]||(e[0]=[o('<h1 id="kotlin-用于-javascript" tabindex="-1">Kotlin 用于 JavaScript <a class="header-anchor" href="#kotlin-用于-javascript" aria-label="Permalink to &quot;Kotlin 用于 JavaScript&quot;">​</a></h1><p>Kotlin/JS 提供了将 Kotlin 代码、Kotlin 标准库以及任何兼容的依赖项转译为 JavaScript 的能力。Kotlin/JS 的当前实现面向 <a href="https://www.ecma-international.org/ecma-262/5.1/" target="_blank" rel="noreferrer">ES5</a>。</p><p>推荐使用 Kotlin/JS 的方式是通过 <code>kotlin.multiplatform</code> Gradle 插件。它使你能够轻松地集中设置和控制面向 JavaScript 的 Kotlin 项目。这包括基本功能，例如控制应用程序的打包、直接从 npm 添加 JavaScript 依赖项等。要了解可用选项的概述，请参阅 <a href="/kotlin/js-project-setup">设置 Kotlin/JS 项目</a>。</p><h2 id="kotlin-js-ir-编译器" tabindex="-1">Kotlin/JS IR 编译器 <a class="header-anchor" href="#kotlin-js-ir-编译器" aria-label="Permalink to &quot;Kotlin/JS IR 编译器&quot;">​</a></h2><p><a href="/kotlin/js-ir-compiler">Kotlin/JS IR 编译器</a> 相对于旧的默认编译器有许多改进。例如，它通过无用代码消除来减少生成的可执行文件的大小，并提供与 JavaScript 生态系统及其工具更顺畅的互操作性。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>旧编译器自 Kotlin 1.8.0 发布以来已弃用。</p></div><p>通过从 Kotlin 代码生成 TypeScript 声明文件 (<code>d.ts</code>)，IR 编译器使得创建混合 TypeScript 和 Kotlin 代码的“混合”应用程序变得更容易，并能利用 Kotlin Multiplatform 的代码共享功能。</p><p>要了解更多关于 Kotlin/JS IR 编译器中的可用特性以及如何在项目中尝试它，请访问 <a href="/kotlin/js-ir-compiler">Kotlin/JS IR 编译器文档页面</a> 和<a href="/kotlin/js-ir-migration">迁移指南</a>。</p><h2 id="kotlin-js-框架" tabindex="-1">Kotlin/JS 框架 <a class="header-anchor" href="#kotlin-js-框架" aria-label="Permalink to &quot;Kotlin/JS 框架&quot;">​</a></h2><p>现代 Web 开发显著受益于简化 Web 应用程序构建的框架。以下是由不同作者编写的，针对 Kotlin/JS 的流行 Web 框架的一些示例：</p><h3 id="kobweb" tabindex="-1">Kobweb <a class="header-anchor" href="#kobweb" aria-label="Permalink to &quot;Kobweb&quot;">​</a></h3><p><em>Kobweb</em> 是一个有主见的 Kotlin 框架，用于创建网站和 Web 应用。它利用 <a href="https://github.com/JetBrains/compose-multiplatform?tab=readme-ov-file#compose-html" target="_blank" rel="noreferrer">Compose HTML</a> 和热重载来实现快速开发。受 <a href="https://nextjs.org/" target="_blank" rel="noreferrer">Next.js</a> 启发，Kobweb 提倡一种用于添加小部件、布局和页面的标准结构。</p><p>开箱即用，Kobweb 提供页面路由、亮/暗模式、CSS 样式、Markdown 支持、后端 API 和更多特性。它还包含一个名为 Silk 的 UI 库，这是一套用于现代 UI 的多功能小部件。</p><p>Kobweb 还支持网站导出，生成用于 SEO 和自动搜索索引的页面快照。此外，Kobweb 使得创建基于 DOM 的 UI 变得容易，这些 UI 能够高效地响应状态变化并进行更新。</p><p>访问 <a href="https://kobweb.varabyte.com/" target="_blank" rel="noreferrer">Kobweb</a> 网站，获取文档和示例。</p><p>有关该框架的更新和讨论，请加入 Kotlin Slack 中的 <a href="https://kotlinlang.slack.com/archives/C04RTD72RQ8" target="_blank" rel="noreferrer">#kobweb</a> 和 <a href="https://kotlinlang.slack.com/archives/C01F2HV7868" target="_blank" rel="noreferrer">#compose-web</a> 频道。</p><h3 id="kvision" tabindex="-1">KVision <a class="header-anchor" href="#kvision" aria-label="Permalink to &quot;KVision&quot;">​</a></h3><p><em>KVision</em> 是一个面向对象的 Web 框架，它使得可以使用即用型组件在 Kotlin/JS 中编写应用程序，这些组件可以作为应用程序用户界面的构建块。你可以使用反应式和命令式编程模型来构建前端，使用 Ktor、Spring Boot 和其他框架的连接器将其与服务器端应用程序集成，并使用 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/get-started.html" target="_blank" rel="noreferrer">Kotlin Multiplatform</a> 共享代码。</p><p>访问 <a href="https://kvision.io" target="_blank" rel="noreferrer">KVision 网站</a> 获取文档、教程和示例。</p><p>有关该框架的更新和讨论，请加入 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中的 <a href="https://kotlinlang.slack.com/messages/kvision" target="_blank" rel="noreferrer">#kvision</a> 和 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 频道。</p><h3 id="fritz2" tabindex="-1">fritz2 <a class="header-anchor" href="#fritz2" aria-label="Permalink to &quot;fritz2&quot;">​</a></h3><p><em>fritz2</em> 是一个独立框架，用于构建反应式 Web 用户界面。它提供了自己的类型安全的 DSL 用于构建和渲染 HTML 元素，并利用 Kotlin 的协程和 Flow 来表达组件及其数据绑定。它提供开箱即用的状态管理、验证、路由等功能，并与 Kotlin Multiplatform 项目集成。</p><p>访问 <a href="https://www.fritz2.dev" target="_blank" rel="noreferrer">fritz2 网站</a> 获取文档、教程和示例。</p><p>有关该框架的更新和讨论，请加入 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中的 <a href="https://kotlinlang.slack.com/messages/fritz2" target="_blank" rel="noreferrer">#fritz2</a> 和 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 频道。</p><h3 id="doodle" tabindex="-1">Doodle <a class="header-anchor" href="#doodle" aria-label="Permalink to &quot;Doodle&quot;">​</a></h3><p><em>Doodle</em> 是一个基于矢量的 Kotlin/JS UI 框架。Doodle 应用程序利用浏览器的图形能力来绘制用户界面，而不是依赖于 DOM、CSS 或 Javascript。通过这种方法，Doodle 使你能够精确控制任意 UI 元素、矢量图形、渐变和自定义可视化效果的渲染。</p><p>访问 <a href="https://nacular.github.io/doodle/" target="_blank" rel="noreferrer">Doodle 网站</a> 获取文档、教程和示例。</p><p>有关该框架的更新和讨论，请加入 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中的 <a href="https://kotlinlang.slack.com/messages/doodle" target="_blank" rel="noreferrer">#doodle</a> 和 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 频道。</p><h2 id="加入-kotlin-js-社区" tabindex="-1">加入 Kotlin/JS 社区 <a class="header-anchor" href="#加入-kotlin-js-社区" aria-label="Permalink to &quot;加入 Kotlin/JS 社区&quot;">​</a></h2><p>你可以加入官方 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中的 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 频道，与社区和团队交流。</p>',30)]))}const f=a(l,[["render",i]]);export{b as __pageData,f as default};
