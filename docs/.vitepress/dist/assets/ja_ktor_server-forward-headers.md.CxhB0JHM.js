import{_ as m}from"./chunks/forwarded-headers.CS4yn2xX.js";import{_ as v,C as d,c as f,o as y,G as o,ag as k,j as r,w as s,a as t}from"./chunks/framework.Bksy39di.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-forward-headers.md","filePath":"ja/ktor/server-forward-headers.md","lastUpdated":1755457140000}'),F={name:"ja/ktor/server-forward-headers.md"};function b(w,e,E,q,H,_){const u=d("TopicTitle"),h=d("show-structure"),c=d("primary-label"),n=d("Links"),g=d("tldr"),a=d("code-block"),i=d("TabItem"),l=d("Tabs"),p=d("list");return y(),f("div",null,[o(u,{labelRef:"server-plugin",title:"フォワードヘッダー"}),o(h,{for:"chapter",depth:"2"}),o(c,{ref:"server-plugin"},null,512),o(g,null,{default:s(()=>[e[3]||(e[3]=r("p",null,[r("b",null,"必須の依存関係"),t(": "),r("code",null,"io.ktor:ktor-server-forwarded-header")],-1)),e[4]||(e[4]=r("p",null,[r("b",null,"コード例"),t(": "),r("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/forwarded-header"}," forwarded-header ")],-1)),r("p",null,[r("b",null,[o(n,{href:"/ktor/server-native",summary:"KtorはKotlin/Nativeをサポートしており、追加のランタイムや仮想マシンなしでサーバーを実行できます。"},{default:s(()=>e[0]||(e[0]=[t("ネイティブサーバー")])),_:1}),e[1]||(e[1]=t("のサポート"))]),e[2]||(e[2]=t(": ✅ "))])]),_:1}),e[29]||(e[29]=k('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-forwarded-header/io.ktor.server.plugins.forwardedheaders/-forwarded-headers.html" target="_blank" rel="noreferrer">ForwardedHeaders</a>と<a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-forwarded-header/io.ktor.server.plugins.forwardedheaders/-x-forwarded-headers.html" target="_blank" rel="noreferrer">XForwardedHeaders</a>プラグインは、Ktorサーバーがリバースプロキシの背後に配置されている場合に、リバースプロキシヘッダーを処理して元の<a href="./server-requests">リクエスト</a>に関する情報を取得できるようにします。これは<a href="./server-logging">ロギング</a>目的で役立つ場合があります。</p><ul><li><code>ForwardedHeaders</code>は<code>Forwarded</code>ヘッダー（<a href="https://tools.ietf.org/html/rfc7239" target="_blank" rel="noreferrer">RFC 7239</a>）を処理します。</li><li><code>XForwardedHeaders</code>は以下の<code>X-Forwarded-</code>ヘッダーを処理します。 <ul><li><code>X-Forwarded-Host</code>/<code>X-Forwarded-Server</code></li><li><code>X-Forwarded-For</code></li><li><code>X-Forwarded-By</code></li><li><code>X-Forwarded-Proto</code>/<code>X-Forwarded-Protocol</code></li><li><code>X-Forwarded-SSL</code>/<code>Front-End-Https</code></li></ul></li></ul><div class="note custom-block"><p class="custom-block-title">NOTE</p><p><code>Forwarded</code>ヘッダーの改ざんを防ぐため、アプリケーションがリバースプロキシ接続のみを受け入れる場合に、これらのプラグインをインストールしてください。</p></div><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>ForwardedHeaders</code>/<code>XForwardedHeaders</code>プラグインを使用するには、ビルドスクリプトに<code>ktor-server-forwarded-header</code>アーティファクトを含める必要があります。</p>',5)),o(l,{group:"languages"},{default:s(()=>[o(i,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:s(()=>[o(a,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-forwarded-header:$ktor_version")'})]),_:1}),o(i,{title:"Gradle (Groovy)","group-key":"groovy"},{default:s(()=>[o(a,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-forwarded-header:$ktor_version"'})]),_:1}),o(i,{title:"Maven","group-key":"maven"},{default:s(()=>[o(a,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-forwarded-header-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),e[30]||(e[30]=r("h2",{id:"install_plugin",tabindex:"-1"},[t("プラグインのインストール "),r("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "プラグインのインストール {id="install_plugin"}"'},"​")],-1)),o(l,null,{default:s(()=>[o(i,{title:"ForwardedHeader"},{default:s(()=>[r("p",null,[e[6]||(e[6]=t(" アプリケーションに")),e[7]||(e[7]=r("code",null,"ForwardedHeaders",-1)),e[8]||(e[8]=t("プラグインを")),e[9]||(e[9]=r("a",{href:"#install"},"インストール",-1)),e[10]||(e[10]=t("するには、 指定された")),o(n,{href:"/ktor/server-modules",summary:"モジュールを使用すると、ルートをグループ化してアプリケーションを構造化できます。"},{default:s(()=>e[5]||(e[5]=[t("モジュール")])),_:1}),e[11]||(e[11]=t("内の")),e[12]||(e[12]=r("code",null,"install",-1)),e[13]||(e[13]=t("関数に渡します。 以下のコードスニペットは、")),e[14]||(e[14]=r("code",null,"ForwardedHeaders",-1)),e[15]||(e[15]=t("をインストールする方法を示しています... "))]),o(p,null,{default:s(()=>e[16]||(e[16]=[r("li",null,[t(" ... "),r("code",null,"embeddedServer"),t("関数呼び出し内で。 ")],-1),r("li",null,[t(" ... "),r("code",null,"Application"),t("クラスの拡張関数である、明示的に定義された"),r("code",null,"module"),t("内で。 ")],-1)])),_:1}),o(l,null,{default:s(()=>[o(i,{title:"embeddedServer"},{default:s(()=>[o(a,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.forwardedheaders.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(ForwardedHeaders)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),o(i,{title:"module"},{default:s(()=>[o(a,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.forwardedheaders.*
            // ...
            fun Application.module() {
                install(ForwardedHeaders)
                // ...
            }`})]),_:1})]),_:1})]),_:1}),o(i,{title:"XForwardedHeader"},{default:s(()=>[r("p",null,[e[18]||(e[18]=t(" アプリケーションに")),e[19]||(e[19]=r("code",null,"XForwardedHeaders",-1)),e[20]||(e[20]=t("プラグインを")),e[21]||(e[21]=r("a",{href:"#install"},"インストール",-1)),e[22]||(e[22]=t("するには、 指定された")),o(n,{href:"/ktor/server-modules",summary:"モジュールを使用すると、ルートをグループ化してアプリケーションを構造化できます。"},{default:s(()=>e[17]||(e[17]=[t("モジュール")])),_:1}),e[23]||(e[23]=t("内の")),e[24]||(e[24]=r("code",null,"install",-1)),e[25]||(e[25]=t("関数に渡します。 以下のコードスニペットは、")),e[26]||(e[26]=r("code",null,"XForwardedHeaders",-1)),e[27]||(e[27]=t("をインストールする方法を示しています... "))]),o(p,null,{default:s(()=>e[28]||(e[28]=[r("li",null,[t(" ... "),r("code",null,"embeddedServer"),t("関数呼び出し内で。 ")],-1),r("li",null,[t(" ... "),r("code",null,"Application"),t("クラスの拡張関数である、明示的に定義された"),r("code",null,"module"),t("内で。 ")],-1)])),_:1}),o(l,null,{default:s(()=>[o(i,{title:"embeddedServer"},{default:s(()=>[o(a,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.forwardedheaders.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(XForwardedHeaders)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),o(i,{title:"module"},{default:s(()=>[o(a,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.forwardedheaders.*
            // ...
            fun Application.module() {
                install(XForwardedHeaders)
                // ...
            }`})]),_:1})]),_:1})]),_:1})]),_:1}),e[31]||(e[31]=k(`<p><code>ForwardedHeaders</code>/<code>XForwardedHeaders</code>をインストールすると、<a href="#request_info">call.request.origin</a>プロパティを使用して元のリクエストに関する情報を取得できます。</p><h2 id="request_info" tabindex="-1">リクエスト情報の取得 <a class="header-anchor" href="#request_info" aria-label="Permalink to &quot;リクエスト情報の取得 {id=&quot;request_info&quot;}&quot;">​</a></h2><h3 id="proxy_request_info" tabindex="-1">プロキシリクエスト情報 <a class="header-anchor" href="#proxy_request_info" aria-label="Permalink to &quot;プロキシリクエスト情報 {id=&quot;proxy_request_info&quot;}&quot;">​</a></h3><p>プロキシリクエストに関する情報を取得するには、<a href="./server-routing#define_route">ルートハンドラ</a>内で<a href="https://api.ktor.io/ktor-server/ktor-server-core/io.ktor.server.request/-application-request/local.html" target="_blank" rel="noreferrer">call.request.local</a>プロパティを使用します。以下のコードスニペットは、プロキシアドレスとリクエストが送信されたホストに関する情報を取得する方法を示しています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> remoteHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> call.request.local.remoteHost</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> serverHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> call.request.local.serverHost</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="original-request-information" tabindex="-1">元のリクエスト情報 <a class="header-anchor" href="#original-request-information" aria-label="Permalink to &quot;元のリクエスト情報 {id=&quot;original-request-information&quot;}&quot;">​</a></h3><p>元のリクエストに関する情報を読み取るには、<a href="https://api.ktor.io/ktor-server/ktor-server-core/io.ktor.server.plugins/origin.html" target="_blank" rel="noreferrer">call.request.origin</a>プロパティを使用します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> originRemoteHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> call.request.origin.remoteHost</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> originServerHost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> call.request.origin.serverHost</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>以下の表は、<code>ForwardedHeaders</code>/<code>XForwardedHeaders</code>がインストールされているかどうかに応じて、<code>call.request.origin</code>によって公開されるさまざまなプロパティの値を示しています。</p><p><img src="`+m+'" alt="Request diagram" width="706"></p><table tabindex="0"><thead><tr><th>プロパティ</th><th>ForwardedHeadersなし</th><th>ForwarderHeadersあり</th></tr></thead><tbody><tr><td><code>origin.localHost</code></td><td><em>web-server</em></td><td><em>web-server</em></td></tr><tr><td><code>origin.localPort</code></td><td><em>8080</em></td><td><em>8080</em></td></tr><tr><td><code>origin.serverHost</code></td><td><em>web-server</em></td><td><em>proxy</em></td></tr><tr><td><code>origin.serverPort</code></td><td><em>8080</em></td><td><em>80</em></td></tr><tr><td><code>origin.remoteHost</code></td><td><em>proxy</em></td><td><em>client</em></td></tr><tr><td><code>origin.remotePort</code></td><td><em>32864</em></td><td><em>32864</em></td></tr></tbody></table><blockquote><p>完全な例はこちらで見つけることができます: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/forwarded-header" target="_blank" rel="noreferrer">forwarded-header</a>。</p></blockquote><h2 id="configure" tabindex="-1">ForwardedHeadersの構成 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;ForwardedHeadersの構成 {id=&quot;configure&quot;}&quot;">​</a></h2><p>リクエストが複数のプロキシを経由する場合、<code>ForwardedHeaders</code>/<code>XForwardedHeaders</code>を構成する必要がある場合があります。この場合、<code>X-Forwarded-For</code>には各連続するプロキシのすべてのIPアドレスが含まれます。例えば、以下のようになります。</p><div class="language-HTTP vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTTP</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">X-Forwarded-For</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;client&gt;, &lt;proxy1&gt;, &lt;proxy2&gt;</span></span></code></pre></div><p>デフォルトでは、<code>XForwardedHeader</code>は<code>X-Forwarded-For</code>の最初のエントリを<code>call.request.origin.remoteHost</code>プロパティに割り当てます。<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#selecting_an_ip_address" target="_blank" rel="noreferrer">IPアドレスの選択</a>のためにカスタムロジックを提供することもできます。<a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-forwarded-header/io.ktor.server.plugins.forwardedheaders/-x-forwarded-headers-config/index.html" target="_blank" rel="noreferrer">XForwardedHeadersConfig</a>は、これに以下のAPIを公開しています。</p><ul><li><p><code>useFirstProxy</code>と<code>useLastProxy</code>は、IPアドレスのリストからそれぞれ最初または最後の値を取得できます。</p></li><li><p><code>skipLastProxies</code>は、右から指定された数のエントリをスキップし、次のエントリを取得します。例えば、<code>proxiesCount</code>パラメーターが<code>3</code>に等しい場合、以下のヘッダーに対して<code>origin.remoteHost</code>は<code>10.0.0.123</code>を返します。</p><div class="language-HTTP vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTTP</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">X-Forwarded-For</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10.0.0.123, proxy-1, proxy-2, proxy-3</span></span></code></pre></div></li><li><p><code>skipKnownProxies</code>は、リストから指定されたエントリを削除し、最後のエントリを取得します。例えば、この関数に<code>listOf(&quot;proxy-1&quot;, &quot;proxy-3&quot;)</code>を渡すと、以下のヘッダーに対して<code>origin.remoteHost</code>は<code>proxy-2</code>を返します。</p><div class="language-HTTP vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTTP</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">X-Forwarded-For</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10.0.0.123, proxy-1, proxy-2, proxy-3</span></span></code></pre></div></li><li><p><code>extractEdgeProxy</code>は、<code>X-Forward-*</code>ヘッダーから値を抽出するためのカスタムロジックを提供できます。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div></li></ul>',17))])}const X=v(F,[["render",b]]);export{P as __pageData,X as default};
