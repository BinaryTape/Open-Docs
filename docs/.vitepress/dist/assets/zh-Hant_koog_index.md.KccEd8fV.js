import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.Bksy39di.js";const g=JSON.parse('{"title":"總覽","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/koog/index.md","filePath":"zh-Hant/koog/index.md","lastUpdated":1755146406000}'),t={name:"zh-Hant/koog/index.md"};function e(p,s,o,h,r,k){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="總覽" tabindex="-1">總覽 <a class="header-anchor" href="#總覽" aria-label="Permalink to &quot;總覽&quot;">​</a></h1><p>Koog 是一個基於 Kotlin 的框架，旨在完全以慣用 Kotlin 語法建立並執行 AI 代理。它讓您能夠建立可與工具互動、處理複雜工作流程並與使用者溝通的代理。</p><p>該框架支援以下類型的代理：</p><ul><li>單次執行代理：具有最少設定，處理單一輸入並提供回應。此類代理在單一工具呼叫週期內運作，以完成其任務並提供回應。</li><li>複雜工作流程代理：具有進階功能，支援自訂策略和設定。</li></ul><h2 id="主要功能" tabindex="-1">主要功能 <a class="header-anchor" href="#主要功能" aria-label="Permalink to &quot;主要功能&quot;">​</a></h2><p>Koog 的主要功能包括：</p><ul><li><strong>純 Kotlin 實現</strong>：完全以自然且慣用的 Kotlin 語法建立 AI 代理。</li><li><strong>MCP 整合</strong>：連接至 Model Control Protocol，以實現增強的模型管理。</li><li><strong>嵌入功能</strong>：使用向量嵌入進行語義搜尋和知識檢索。</li><li><strong>自訂工具建立</strong>：透過存取外部系統和 API 的工具擴展您的代理。</li><li><strong>開箱即用組件</strong>：透過針對常見 AI 工程挑戰的預建解決方案加速開發。</li><li><strong>智慧歷史壓縮</strong>：使用各種預建策略，在維持對話上下文的同時優化令牌使用。</li><li><strong>強大串流 API</strong>：透過串流支援和平行工具呼叫，即時處理回應。</li><li><strong>持久代理記憶</strong>：實現跨會話甚至不同代理的知識保留。</li><li><strong>全面追蹤</strong>：透過詳細且可設定的追蹤，偵錯並監控代理執行。</li><li><strong>彈性圖形工作流程</strong>：使用直觀的圖形化工作流程設計複雜的代理行為。</li><li><strong>模組化功能系統</strong>：透過可組合架構自訂代理功能。</li><li><strong>可擴展架構</strong>：處理從簡單聊天機器人到企業應用程式的工作負載。</li><li><strong>多平台</strong>：透過 Kotlin Multiplatform 在 JVM、JS、WasmJS 目標上執行代理。</li></ul><h1 id="可用的-llm-提供者和平台" tabindex="-1">可用的 LLM 提供者和平台 <a class="header-anchor" href="#可用的-llm-提供者和平台" aria-label="Permalink to &quot;可用的 LLM 提供者和平台&quot;">​</a></h1><p>您可以用來為代理功能提供動力的 LLM 提供者和平台：</p><ul><li>Google</li><li>OpenAI</li><li>Anthropic</li><li>OpenRouter</li><li>Ollama</li></ul><h1 id="安裝" tabindex="-1">安裝 <a class="header-anchor" href="#安裝" aria-label="Permalink to &quot;安裝&quot;">​</a></h1><p>要使用 Koog，您需要在建置設定中包含所有必要的依賴項。</p><h2 id="gradle" tabindex="-1">Gradle <a class="header-anchor" href="#gradle" aria-label="Permalink to &quot;Gradle&quot;">​</a></h2><h3 id="gradle-kotlin-dsl" tabindex="-1">Gradle (Kotlin DSL) <a class="header-anchor" href="#gradle-kotlin-dsl" aria-label="Permalink to &quot;Gradle (Kotlin DSL)&quot;">​</a></h3><ol><li><p>將依賴項新增至 <code>build.gradle.kts</code> 檔案：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dependencies {</span></span>
<span class="line"><span>    implementation(&quot;ai.koog:koog-agents:LATEST_VERSION&quot;)</span></span>
<span class="line"><span>}</span></span></code></pre></div></li><li><p>確保您的儲存庫列表中包含 <code>mavenCentral()</code>。</p></li></ol><h3 id="gradle-groovy" tabindex="-1">Gradle (Groovy) <a class="header-anchor" href="#gradle-groovy" aria-label="Permalink to &quot;Gradle (Groovy)&quot;">​</a></h3><ol><li><p>將依賴項新增至 <code>build.gradle</code> 檔案：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dependencies {</span></span>
<span class="line"><span>    implementation &#39;ai.koog:koog-agents:LATEST_VERSION&#39;</span></span>
<span class="line"><span>}</span></span></code></pre></div></li><li><p>確保您的儲存庫列表中包含 <code>mavenCentral()</code>。</p></li></ol><h2 id="maven" tabindex="-1">Maven <a class="header-anchor" href="#maven" aria-label="Permalink to &quot;Maven&quot;">​</a></h2><ol><li><p>將依賴項新增至 <code>pom.xml</code> 檔案：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;ai.koog&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;koog-agents&lt;/artifactId&gt;</span></span>
<span class="line"><span>    &lt;version&gt;LATEST_VERSION&lt;/version&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre></div></li><li><p>確保您的儲存庫列表中包含 <code>mavenCentral</code>。</p></li></ol><h1 id="快速入門範例" tabindex="-1">快速入門範例 <a class="header-anchor" href="#快速入門範例" aria-label="Permalink to &quot;快速入門範例&quot;">​</a></h1><p>為了幫助您開始使用 AI 代理，這是一個單次執行代理的快速範例：</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>在執行範例之前，請將相應的 API 金鑰設定為環境變數。詳細資訊請參閱 <a href="./single-run-agents">開始使用</a>。</p></div><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    runBlocking</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apiKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OPENAI_API_KEY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or Anthropic, Google, OpenRouter, etc.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AIAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            executor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> simpleOpenAIExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(apiKey), </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or Anthropic, Google, OpenRouter, etc.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            systemPrompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;You are a helpful assistant. Answer user questions concisely.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            llmModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAIModels.Chat.GPT4o</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello! How can you help me?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>更多詳細資訊，請參閱 <a href="./single-run-agents">開始使用</a>。</p>`,24)]))}const c=a(t,[["render",e]]);export{g as __pageData,c as default};
