import{_ as m}from"./chunks/compose-multiplatform-and-jetpack-compose.CSURSSFa.js";import{_ as s,C as r,c as i,o as c,j as o,G as a,ag as n,a as t,w as p}from"./chunks/framework.Bksy39di.js";const J=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/compose-multiplatform-and-jetpack-compose.md","filePath":"zh-Hant/kmp/compose-multiplatform-and-jetpack-compose.md","lastUpdated":1755516278000}'),f={name:"zh-Hant/kmp/compose-multiplatform-and-jetpack-compose.md"};function u(h,e,k,C,b,g){const d=r("web-summary"),l=r("tldr");return c(),i("div",null,[e[2]||(e[2]=o("h1",{id:"compose-multiplatform-與-jetpack-compose",tabindex:"-1"},[t("Compose Multiplatform 與 Jetpack Compose "),o("a",{class:"header-anchor",href:"#compose-multiplatform-與-jetpack-compose","aria-label":'Permalink to "Compose Multiplatform 與 Jetpack Compose"'},"​")],-1)),a(d,null,{default:p(()=>e[0]||(e[0]=[t("本文解釋了 Compose Multiplatform 與 Jetpack Compose 之間的關係。您將會深入了解這兩個工具包以及它們如何協調。")])),_:1}),e[3]||(e[3]=o("p",null,[o("img",{src:m,alt:"由 JetBrains 建立的 Compose Multiplatform，由 Google 建立的 Jetpack Compose",width:"730"})],-1)),a(l,null,{default:p(()=>e[1]||(e[1]=[t("本文解釋了 Compose Multiplatform 與 Jetpack Compose 之間的關係。 您將了解這兩個工具包如何協調、函式庫如何在不同目標平台之間處理， 以及如何為多平台專案建立或調整您自己的 UI 函式庫。")])),_:1}),e[4]||(e[4]=n('<p>Compose Multiplatform 是由 JetBrains 開發的跨平台 UI 工具包。 它透過支援額外的目標平台來擴展 Google 針對 Android 的 <a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noreferrer">Jetpack Compose</a> 工具包。</p><p>Compose Multiplatform 將 Compose API 從<a href="./multiplatform-discover-project#common-code">共同 Kotlin 程式碼</a>中提供，讓您能夠編寫可在 Android、iOS、桌面和網路上運行的共享 Compose UI 程式碼。</p><table tabindex="0"><thead><tr><th></th><th><strong>Compose Multiplatform</strong></th><th><strong>Jetpack Compose</strong></th></tr></thead><tbody><tr><td><strong>平台</strong></td><td>Android、iOS、桌面、網路</td><td>Android</td></tr><tr><td><strong>支援者</strong></td><td>JetBrains</td><td>Google</td></tr></tbody></table><h2 id="jetpack-compose-與可組合項" tabindex="-1">Jetpack Compose 與可組合項 <a class="header-anchor" href="#jetpack-compose-與可組合項" aria-label="Permalink to &quot;Jetpack Compose 與可組合項&quot;">​</a></h2><p>Jetpack Compose 是一個宣告式 UI 工具包，用於建立原生 Android 介面。 其基礎是使用 <code>@Composable</code> 註解標記的_可組合函式_ (composable functions)。 這些函式定義了 UI 的部分，並在底層資料變更時自動更新。 您可以組合可組合項 (composables) 來建立佈局、處理使用者輸入、管理狀態和應用動畫。 Jetpack Compose 包含 <code>Text</code>、<code>Button</code>、<code>Row</code> 和 <code>Column</code> 等常用 UI 元件，您可以使用修飾符 (modifiers) 進行自訂。</p><p>Compose Multiplatform 建立在相同的原則之上。 它與 Jetpack Compose 共享 Compose 編譯器和執行時 (runtime)，並使用相同的 API — <code>@Composable</code> 函式、<code>remember</code> 等狀態管理工具、佈局元件、修飾符和動畫支援。 這意味著您可以將您的 Jetpack Compose 知識應用於 Compose Multiplatform，以建立適用於 Android、iOS、桌面和網路的跨平台 UI。</p><h2 id="compose-multiplatform-與-jetpack-compose-功能" tabindex="-1">Compose Multiplatform 與 Jetpack Compose 功能 <a class="header-anchor" href="#compose-multiplatform-與-jetpack-compose-功能" aria-label="Permalink to &quot;Compose Multiplatform 與 Jetpack Compose 功能&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>您可以從幾乎所有 Jetpack Compose 資料中了解這兩個 UI 框架的基礎知識，包括 <a href="https://developer.android.com/jetpack/compose/documentation" target="_blank" rel="noreferrer">Google 的官方文件</a>。</p></div><p>當然，Compose Multiplatform 具有平台專屬的功能和考量：</p><ul><li><a href="./compose-android-only-components">僅限 Android 的元件</a>頁面列出了與 Android 平台緊密相關的 API，因此無法從共同 Compose Multiplatform 程式碼中取得。</li><li>某些平台專屬的 API，例如用於桌面的視窗處理 API 或用於 iOS 的 UIKit 相容性 API，僅在其各自的平台上可用。</li></ul><p>以下是常用元件和 API 可用性的概述：</p><table tabindex="0"><thead><tr><th></th><th><strong>Compose Multiplatform</strong></th><th><strong>Jetpack Compose</strong></th></tr></thead><tbody><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/compose-animation" target="_blank" rel="noreferrer">Compose Animation</a></td><td>是</td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/compose-compiler" target="_blank" rel="noreferrer">Compose Compiler</a></td><td>是</td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/compose-foundation" target="_blank" rel="noreferrer">Compose Foundation</a></td><td>是</td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/compose-material" target="_blank" rel="noreferrer">Compose Material</a></td><td>是</td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/compose-material30" target="_blank" rel="noreferrer">Compose Material 3</a></td><td>是</td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/compose-runtime" target="_blank" rel="noreferrer">Compose Runtime</a></td><td>是，除了 <code>androidx.compose.runtime.rxjava2</code> 和 <code>androidx.compose.runtime.rxjava3</code></td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/compose-ui" target="_blank" rel="noreferrer">Compose UI</a></td><td>是</td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/lifecycle" target="_blank" rel="noreferrer">Jetpack Lifecycle</a></td><td><a href="./compose-lifecycle">是</a></td><td>是</td></tr><tr><td><a href="https://developer.android.com/topic/libraries/architecture/viewmodel" target="_blank" rel="noreferrer">Jetpack ViewModel</a></td><td><a href="./compose-viewmodel">是</a></td><td>是</td></tr><tr><td><a href="https://developer.android.com/jetpack/androidx/releases/navigation" target="_blank" rel="noreferrer">Jetpack Navigation Compose</a></td><td><a href="./compose-navigation-routing">是</a></td><td>是</td></tr><tr><td>資源</td><td><a href="./compose-multiplatform-resources">Compose Multiplatform 資源函式庫</a> 使用 <code>Res</code> 類別</td><td><a href="https://developer.android.com/jetpack/compose/resources" target="_blank" rel="noreferrer">Android 資源系統</a> 使用 <code>R</code> 類別</td></tr><tr><td><a href="https://developers.google.com/maps/documentation/android-sdk/maps-compose" target="_blank" rel="noreferrer">Maps Compose</a></td><td>否</td><td>是</td></tr><tr><td><a href="#libraries-for-compose-multiplatform">第三方函式庫</a> (適用於 UI 元件、導航、架構等)</td><td><a href="https://github.com/terrakok/kmp-awesome?tab=readme-ov-file#-compose-ui" target="_blank" rel="noreferrer">Compose Multiplatform 函式庫</a></td><td>Jetpack Compose 和 Compose Multiplatform 函式庫</td></tr></tbody></table><h2 id="技術細節" tabindex="-1">技術細節 <a class="header-anchor" href="#技術細節" aria-label="Permalink to &quot;技術細節&quot;">​</a></h2><p>Compose Multiplatform 建立在 Google 發佈的程式碼和版本之上。 雖然 Google 的重點是針對 Android 的 Jetpack Compose，但 Google 和 JetBrains 之間有密切合作以啟用 Compose Multiplatform。</p><p>Jetpack 包含 Foundation 和 Material 等第一方函式庫，Google 針對 Android 發佈了這些函式庫。 為了使<a href="https://github.com/JetBrains/compose-multiplatform-core" target="_blank" rel="noreferrer">這些函式庫</a>提供的 API 可從共同程式碼中取得，JetBrains 維護了這些函式庫的多平台版本，這些版本針對 Android 以外的目標平台發佈。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在<a href="./compose-compatibility-and-versioning#jetpack-compose-and-compose-multiplatform-release-cycles">相容性和版本</a>頁面上了解更多關於發佈週期的資訊。</p></div><p>當您為 Android 建置您的 Compose Multiplatform 應用程式時，您會使用 Google 發佈的 Jetpack Compose 構件。 例如，如果您將 <code>compose.material3</code> 新增到您的依賴項中，您的專案將在 Android 目標中使用 <code>androidx.compose.material3:material3</code>，並在其他目標中使用 <code>org.jetbrains.compose.material3:material3</code>。 這是根據多平台構件中的 Gradle 模組中繼資料自動完成的。</p><h2 id="適用於-compose-multiplatform-的函式庫" tabindex="-1">適用於 Compose Multiplatform 的函式庫 <a class="header-anchor" href="#適用於-compose-multiplatform-的函式庫" aria-label="Permalink to &quot;適用於 Compose Multiplatform 的函式庫&quot;">​</a></h2><p>透過使用 Compose Multiplatform，您可以將使用 Compose API 的函式庫作為 <a href="./multiplatform-publish-lib-setup">Kotlin 多平台函式庫</a>發佈。 這使得它們可從共同 Kotlin 程式碼中使用，目標是多個平台。</p><p>因此，如果您正在使用 Compose API 建立一個新函式庫，請考慮利用這一點，並將其作為使用 Compose Multiplatform 的多平台函式庫來建置。 如果您已經為 Android 建置了一個 Jetpack Compose 函式庫，請考慮將該函式庫多平台化。 生態系統中已經有<a href="https://github.com/terrakok/kmp-awesome#-compose-ui" target="_blank" rel="noreferrer">許多 Compose Multiplatform 函式庫</a>可用。</p><p>當函式庫與 Compose Multiplatform 一起發佈時，僅使用 Jetpack Compose 的應用程式仍然能夠無縫地使用它； 它們只是使用該函式庫的 Android 構件。</p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><p>閱讀更多關於以下元件的 Compose Multiplatform 實作：</p><ul><li><a href="./compose-lifecycle">生命週期</a></li><li><a href="./compose-multiplatform-resources">資源</a></li><li><a href="./compose-viewmodel">共同 ViewModel</a></li><li><a href="./compose-navigation-routing">導航和路由</a></li></ul>',24))])}const v=s(f,[["render",u]]);export{J as __pageData,v as default};
