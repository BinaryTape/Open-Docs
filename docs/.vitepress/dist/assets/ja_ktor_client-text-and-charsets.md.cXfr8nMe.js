import{_ as p,C as a,c as h,o as k,j as i,G as n,ag as r,a as t,w as d}from"./chunks/framework.Bksy39di.js";const A=JSON.parse('{"title":"テキストと文字セット","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/client-text-and-charsets.md","filePath":"ja/ktor/client-text-and-charsets.md","lastUpdated":1755457140000}'),c={name:"ja/ktor/client-text-and-charsets.md"};function o(E,s,g,y,_,C){const e=a("tip"),l=a("primary-label");return k(),h("div",null,[s[1]||(s[1]=i("h1",{id:"テキストと文字セット",tabindex:"-1"},[t("テキストと文字セット "),i("a",{class:"header-anchor",href:"#テキストと文字セット","aria-label":'Permalink to "テキストと文字セット"'},"​")],-1)),n(e,null,{default:d(()=>s[0]||(s[0]=[t(" このヘルプトピックは開発中であり、今後更新される予定です。 ")])),_:1}),n(l,{ref:"client-plugin"},null,512),s[2]||(s[2]=r(`<p>このプラグインを使用すると、リクエストおよびレスポンスにおけるプレーンテキストコンテンツを処理できます。具体的には、登録された文字セットで <code>Accept</code> ヘッダーを設定し、<code>ContentType</code> の文字セットに従ってリクエストボディのエンコードとレスポンスボディのデコードを行います。</p><h2 id="設定" tabindex="-1">設定 <a class="header-anchor" href="#設定" aria-label="Permalink to &quot;設定&quot;">​</a></h2><p>設定またはHTTPコールプロパティで構成が指定されていない場合、デフォルトで <code>Charsets.UTF_8</code> が使用されます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpClientEngine) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Charsets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // \`UTF_8\` の使用を許可します。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Charsets.UTF_8)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // \`ISO_8859_1\` を品質 0.1 で使用することを許可します。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Charsets.ISO_8859_1, quality</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // リクエストを送信する文字セットを指定します（リクエストヘッダーに文字セットがない場合）。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sendCharset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // レスポンスを受信する文字セットを指定します（レスポンスヘッダーに文字セットがない場合）。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        responseCharsetFallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,4))])}const m=p(c,[["render",o]]);export{A as __pageData,m as default};
