import{_ as r,C as p,c,o as u,j as i,G as a,ag as n,a as e,w as t}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/rsa-keys-generation.md","filePath":"ko/ktor/rsa-keys-generation.md","lastUpdated":1755457140000}'),g={name:"ko/ktor/rsa-keys-generation.md"};function F(y,s,b,C,E,_){const k=p("show-structure"),h=p("tldr"),o=p("warning"),l=p("code-block"),d=p("note");return u(),c("div",null,[s[6]||(s[6]=i("h1",{id:"rsa-키-생성",tabindex:"-1"},[e("RSA 키 생성 "),i("a",{class:"header-anchor",href:"#rsa-키-생성","aria-label":'Permalink to "RSA 키 생성"'},"​")],-1)),a(k,{for:"chapter",depth:"2"}),a(h,null,{default:t(()=>s[0]||(s[0]=[i("p",null,[i("b",null,"코드 예시"),e(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-jwt-rs256"}," auth-jwt-rs256 ")],-1)])),_:1}),s[7]||(s[7]=i("p",null,[i("a",{href:"https://en.wikipedia.org/wiki/RSA_(cryptosystem)",target:"_blank",rel:"noreferrer"},"RSA (Rivest–Shamir–Adleman)"),e("는 안전한 데이터 전송, 디지털 서명, 키 교환을 가능하게 하는 널리 사용되는 공개 키 암호화 시스템입니다.")],-1)),s[8]||(s[8]=i("p",null,"RS256은 RSA 암호화 알고리즘의 일부로, 디지털 통신을 보호하기 위해 SHA-256을 해싱에 사용하고 키(일반적으로 2048비트, 4096비트 이상)를 활용합니다.",-1)),s[9]||(s[9]=i("p",null,[i("a",{href:"https://jwt.io/",target:"_blank",rel:"noreferrer"},"JSON 웹 토큰(JSON Web Token)"),e(" 인증 영역에서 RS256은 중요한 역할을 합니다. JWT의 무결성과 신뢰성은 RS256과 같은 서명 메커니즘(여기서는 공개/개인 키 쌍이 사용됨)을 통해 검증될 수 있기 때문입니다. 이는 토큰에 포함된 정보가 변조되지 않고 신뢰할 수 있음을 보장합니다.")],-1)),s[10]||(s[10]=i("p",null,[e("이 섹션에서는 Ktor가 제공하는 "),i("a",{href:"./server-jwt"},"인증 JWT(Authentication JWT)"),e(" 플러그인과 함께 이러한 키가 어떻게 생성되고 사용되는지 알아봅니다.")],-1)),a(o,null,{default:t(()=>s[1]||(s[1]=[i("p",null,[e(" 프로덕션 환경에서는 RSA보다 더 효율적이고 안전한 암호화를 기반으로 하는 "),i("a",{href:"https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm"},"ES256"),e("과 같은 최신 대안을 선택하는 것이 좋습니다. ")],-1)])),_:1}),s[11]||(s[11]=i("h2",{id:"rsa-개인-키-생성",tabindex:"-1"},[e("RSA 개인 키 생성 "),i("a",{class:"header-anchor",href:"#rsa-개인-키-생성","aria-label":'Permalink to "RSA 개인 키 생성"'},"​")],-1)),s[12]||(s[12]=i("p",null,[e("개인 키를 생성하려면 OpenSSL, "),i("code",null,"ssh-keygen"),e(" 또는 인증 키 쌍 생성을 위한 다른 도구를 사용할 수 있습니다. 여기서는 시연을 위해 OpenSSL을 사용합니다.")],-1)),s[13]||(s[13]=i("p",null,"새 터미널 창에서 다음 명령어를 실행합니다:",-1)),a(l,{lang:"shell",code:"openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 &gt; ktor.pk8"}),s[14]||(s[14]=n("",6)),a(l,{lang:"shell",code:"openssl rsa -in ktor.pk8 -pubout | tee ktor.spki"}),s[15]||(s[15]=n("",6)),a(l,{lang:"shell",code:"openssl pkey -in ktor.spki -pubin -noout -text"}),s[16]||(s[16]=n("",3)),a(o,null,{default:t(()=>s[2]||(s[2]=[i("p",null," 이 예시에서는 공개 키가 512비트를 사용하며, 이는 안전하지 않다는 점에 유의하십시오. 이상적으로는 2048비트 또는 4096비트 키를 선택해야 합니다. ",-1)])),_:1}),s[17]||(s[17]=n("",4)),a(l,{lang:"shell",code:"echo 010001 | xxd -p -r | base64 "}),s[18]||(s[18]=n("",1)),a(d,null,{default:t(()=>s[3]||(s[3]=[i("p",null," 왼쪽에 0을 추가하여 짝수 개의 16진수 숫자가 사용되었음에 유의하십시오. ",-1)])),_:1}),s[19]||(s[19]=n("",5)),a(l,{lang:"shell",code:`echo "b5:f2:5a:2e:bc:d7:20:b5:20:d5:4d:cd:d4:a5:
    7c:c8:9a:fd:d8:61:e7:e4:eb:58:65:1e:ea:5a:4d:
    4c:73:87:32:e0:91:a3:92:56:2e:a7:bc:1e:32:30:
    43:f5:fd:db:05:5a:08:b2:25:15:5f:ac:4d:71:82:
    2b:d0:87:b4:01" | tr -d ": 
" | xxd -p -r | base64 | tr +/ -_ | tr -d "=
"`}),a(d,null,{default:t(()=>s[4]||(s[4]=[i("p",null," 선행 `00` 바이트가 생략되었음에 유의하십시오. 모듈러스의 선행 `00` 바이트는 RSA 공개 키의 ASN.1 인코딩과 관련이 있습니다. 정수의 ASN.1 DER 인코딩에서 정수의 최상위 비트가 0인 경우 선행 0 바이트는 제거됩니다. 이는 ASN.1 인코딩 규칙의 표준 부분입니다. RSA 공개 키의 맥락에서 모듈러스는 빅 엔디안 정수이며, DER 인코딩으로 표현될 때 이러한 규칙을 따릅니다. 선행 0 바이트 제거는 DER 규칙에 따라 정수가 올바르게 해석되도록 하기 위해 수행됩니다. ",-1)])),_:1}),s[20]||(s[20]=n("",15)),a(o,null,{default:t(()=>s[5]||(s[5]=[i("p",null,[e(" 개인 키는 민감한 정보로 간주되므로 코드에 직접 저장해서는 안 됩니다. 민감한 데이터는 환경 변수 또는 "),i("a",{href:"https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"},"비밀 저장소"),e("를 사용하는 것을 고려하십시오. ")],-1)])),_:1})])}const f=r(g,[["render",F]]);export{B as __pageData,f as default};
