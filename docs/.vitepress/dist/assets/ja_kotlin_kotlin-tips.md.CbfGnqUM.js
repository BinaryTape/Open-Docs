import{_ as a,C as r,c as s,o as d,ag as o,G as n,j as e,a as l}from"./chunks/framework.Bksy39di.js";const g=JSON.parse('{"title":"Kotlinのヒント","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/kotlin-tips.md","filePath":"ja/kotlin/kotlin-tips.md","lastUpdated":1754307826000}'),u={name:"ja/kotlin/kotlin-tips.md"};function h(p,t,b,w,m,k){const i=r("YouTubeVideo");return d(),s("div",null,[t[0]||(t[0]=o('<h1 id="kotlinのヒント" tabindex="-1">Kotlinのヒント <a class="header-anchor" href="#kotlinのヒント" aria-label="Permalink to &quot;Kotlinのヒント&quot;">​</a></h1><p>Kotlin Tipsは、Kotlinチームのメンバーが、より効率的かつイディオマティックな方法でKotlinを使用し、コードを書くことをより楽しくする方法を紹介する短編動画シリーズです。</p><p>新しいKotlin Tips動画を見逃さないように、<a href="https://www.youtube.com/channel/UCP7uiEZIqci43m22KDl0sNw" target="_blank" rel="noreferrer">YouTubeチャンネルを購読</a>してください。</p><h2 id="kotlinでのnull-null" tabindex="-1">Kotlinでの<code>null + null</code> <a class="header-anchor" href="#kotlinでのnull-null" aria-label="Permalink to &quot;Kotlinでの`null + null`&quot;">​</a></h2><p>Kotlinで<code>null + null</code>を加算するとどうなるのか、そして何が返されるのでしょうか？Sebastian Aignerが最新のクイックヒントでこの謎を解き明かします。その過程で、彼はnullable型を恐れる必要がない理由も示します：</p>',5)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/wwplVknTza4",title:"Kotlin Tips: null + null in Kotlin"}),t[1]||(t[1]=e("h2",{id:"コレクションアイテムの重複排除",tabindex:"-1"},[l("コレクションアイテムの重複排除 "),e("a",{class:"header-anchor",href:"#コレクションアイテムの重複排除","aria-label":'Permalink to "コレクションアイテムの重複排除"'},"​")],-1)),t[2]||(t[2]=e("p",null,"重複を含むKotlinのコレクションをお持ちですか？重複しないアイテムのみを含むコレクションが必要ですか？このKotlin Tipsで、Sebastian Aignerがリストから重複を削除する方法、またはそれらをセットに変換する方法を紹介します：",-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/ECOf0PeSANw",title:"Kotlin Tips: Deduplicating Collection Items"}),t[3]||(t[3]=o('<h2 id="suspendとinlineの謎" tabindex="-1"><code>suspend</code>と<code>inline</code>の謎 <a class="header-anchor" href="#suspendとinlineの謎" aria-label="Permalink to &quot;`suspend`と`inline`の謎&quot;">​</a></h2><p><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/repeat.html" target="_blank" rel="noreferrer"><code>repeat()</code></a>、<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/map.html" target="_blank" rel="noreferrer"><code>map()</code></a>、<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/filter.html" target="_blank" rel="noreferrer"><code>filter()</code></a>のような関数は、それらのシグネチャがコルーチンに対応していないにもかかわらず、ラムダで<code>suspend</code>関数を受け入れますが、これはなぜでしょうか？このKotlin Tipsのエピソードで、Sebastian Aignerがこの謎を解き明かします。それは<code>inline</code>修飾子と関係があります：</p>',2)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/R2395u7SdcI",title:"Kotlin Tips: The Suspend and Inline Mystery"}),t[4]||(t[4]=e("h2",{id:"完全修飾名による宣言のアンシャドウイング",tabindex:"-1"},[l("完全修飾名による宣言のアンシャドウイング "),e("a",{class:"header-anchor",href:"#完全修飾名による宣言のアンシャドウイング","aria-label":'Permalink to "完全修飾名による宣言のアンシャドウイング"'},"​")],-1)),t[5]||(t[5]=e("p",null,"シャドウイングとは、スコープ内に同じ名前の宣言が2つ存在することを意味します。では、どのように選択すればよいのでしょうか？このKotlin Tipsのエピソードで、Sebastian Aignerが完全修飾名の力を使って、必要な関数を正確に呼び出すシンプルなKotlinのトリックを紹介します：",-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/mJRzF9WtCpU",title:"Kotlin Tips: Unshadowing Declarations"}),t[6]||(t[6]=o('<h2 id="エルビス演算子によるreturnとthrow" tabindex="-1">エルビス演算子による<code>return</code>と<code>throw</code> <a class="header-anchor" href="#エルビス演算子によるreturnとthrow" aria-label="Permalink to &quot;エルビス演算子による`return`と`throw`&quot;">​</a></h2><p><a href="/ja/kotlin/null-safety#elvis-operator">エルビス演算子</a>が再び登場！Sebastian Aignerが、なぜこの演算子が有名な歌手にちなんで名付けられたのか、そしてKotlinで<code>?:</code>を使って値を返すか、例外をスローする方法を説明します。その裏にある魔法とは？ <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-nothing.html" target="_blank" rel="noreferrer">Nothing型</a>です。</p>',2)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/L8aFK7QrbA8",title:"Kotlin Tips: Return and Throw with the Elvis Operator"}),t[7]||(t[7]=e("h2",{id:"分割宣言",tabindex:"-1"},[l("分割宣言 "),e("a",{class:"header-anchor",href:"#分割宣言","aria-label":'Permalink to "分割宣言"'},"​")],-1)),t[8]||(t[8]=e("p",null,[l("Kotlinの"),e("a",{href:"/ja/kotlin/destructuring-declarations"},"分割宣言"),l("を使用すると、単一のオブジェクトから複数の変数を一度に作成できます。この動画では、Sebastian Aignerが分割できるものの一部、例えばペア、リスト、マップなどを紹介します。独自のオブジェクトについてはどうでしょうか？ Kotlinのコンポーネント関数がそれらにも対応します：")],-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/zu1PUAvk_Lw",title:"Kotlin Tips: Destructuring Declarations"}),t[9]||(t[9]=e("h2",{id:"nullable値を持つ演算子関数",tabindex:"-1"},[l("nullable値を持つ演算子関数 "),e("a",{class:"header-anchor",href:"#nullable値を持つ演算子関数","aria-label":'Permalink to "nullable値を持つ演算子関数"'},"​")],-1)),t[10]||(t[10]=e("p",null,"Kotlinでは、クラスに対して加算や減算などの演算子をオーバーライドし、独自のロジックを提供できます。しかし、左側と右側の両方でnull値を許可したい場合はどうでしょうか？この動画で、Sebastian Aignerがこの質問に答えます：",-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/x2bZJv8i0vw",title:"Kotlin Tips: Operator Functions With Nullable Values"}),t[11]||(t[11]=e("h2",{id:"コードの実行時間計測",tabindex:"-1"},[l("コードの実行時間計測 "),e("a",{class:"header-anchor",href:"#コードの実行時間計測","aria-label":'Permalink to "コードの実行時間計測"'},"​")],-1)),t[12]||(t[12]=e("p",null,[l("Sebastian Aignerが"),e("a",{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.time/measure-timed-value.html",target:"_blank",rel:"noreferrer"},[e("code",null,"measureTimedValue()")]),l("関数の概要を簡単に説明し、コードの実行時間を計測する方法を学びましょう：")],-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/j_LEcry7Pms",title:"Kotlin Tips: Timing Code"}),t[13]||(t[13]=e("h2",{id:"ループの改善",tabindex:"-1"},[l("ループの改善 "),e("a",{class:"header-anchor",href:"#ループの改善","aria-label":'Permalink to "ループの改善"'},"​")],-1)),t[14]||(t[14]=e("p",null,[l("この動画では、Sebastian Aignerが"),e("a",{href:"/ja/kotlin/control-flow#for-loops"},"ループ"),l("を改善して、コードをより読みやすく、理解しやすく、簡潔にする方法をデモンストレーションします：")],-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/i-kyPp1qFBA",title:"Kotlin Tips: Improving Loops"}),t[15]||(t[15]=e("h2",{id:"文字列",tabindex:"-1"},[l("文字列 "),e("a",{class:"header-anchor",href:"#文字列","aria-label":'Permalink to "文字列"'},"​")],-1)),t[16]||(t[16]=e("p",null,[l("このエピソードでは、Kate PetrovaがKotlinで"),e("a",{href:"/ja/kotlin/strings"},"文字列"),l("を操作するのに役立つ3つのヒントを紹介します：")],-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/IL3RLKvWJF4",title:"Kotlin Tips: Strings"}),t[17]||(t[17]=e("h2",{id:"エルビス演算子をさらに活用する",tabindex:"-1"},[l("エルビス演算子をさらに活用する "),e("a",{class:"header-anchor",href:"#エルビス演算子をさらに活用する","aria-label":'Permalink to "エルビス演算子をさらに活用する"'},"​")],-1)),t[18]||(t[18]=e("p",null,[l("この動画では、Sebastian Aignerが"),e("a",{href:"/ja/kotlin/null-safety#elvis-operator"},"エルビス演算子"),l("にさらなるロジックを追加する方法、例えば、演算子の右側でログを記録する方法などを紹介します：")],-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/L9wqYQ-fXaM",title:"Kotlin Tips: The Elvis Operator"}),t[19]||(t[19]=e("h2",{id:"kotlinコレクション",tabindex:"-1"},[l("Kotlinコレクション "),e("a",{class:"header-anchor",href:"#kotlinコレクション","aria-label":'Permalink to "Kotlinコレクション"'},"​")],-1)),t[20]||(t[20]=e("p",null,[l("このエピソードでは、Kate Petrovaが"),e("a",{href:"/ja/kotlin/collections-overview"},"Kotlinコレクション"),l("を操作するのに役立つ3つのヒントを紹介します：")],-1)),n(i,{width:"560",height:"315",src:"https://www.youtube.com/v/ApXbm1T_eI4",title:"Kotlin Tips: Kotlin Collections"}),t[21]||(t[21]=e("h2",{id:"次のステップ",tabindex:"-1"},[l("次のステップ "),e("a",{class:"header-anchor",href:"#次のステップ","aria-label":'Permalink to "次のステップ"'},"​")],-1)),t[22]||(t[22]=e("ul",null,[e("li",null,[e("a",{href:"https://youtube.com/playlist?list=PLlFc5cFwUnmyDrc-mwwAL9cYFkSHoHHz7",target:"_blank",rel:"noreferrer"},"YouTubeプレイリスト"),l("でKotlin Tipsの完全なリストを確認する")]),e("li",null,[e("a",{href:"/ja/kotlin/idioms"},"一般的なケースでイディオマティックなKotlinコード"),l("を書く方法を学びましょう")])],-1))])}const T=a(u,[["render",h]]);export{g as __pageData,T as default};
