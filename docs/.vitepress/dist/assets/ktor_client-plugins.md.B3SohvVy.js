import{_ as k,C as a,c as g,o as d,j as l,G as i,ag as o,a as p,w as n}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"客户端插件","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/client-plugins.md","filePath":"ktor/client-plugins.md","lastUpdated":1755457140000}'),c={name:"ktor/client-plugins.md"};function E(u,s,y,_,F,m){const r=a("link-summary"),t=a("code-block"),e=a("TabItem"),h=a("Tabs");return d(),g("div",null,[s[1]||(s[1]=l("h1",{id:"客户端插件",tabindex:"-1"},[p("客户端插件 "),l("a",{class:"header-anchor",href:"#客户端插件","aria-label":'Permalink to "客户端插件"'},"​")],-1)),i(r,null,{default:n(()=>s[0]||(s[0]=[p("了解提供常见功能（例如日志、序列化、授权等）的插件。")])),_:1}),s[2]||(s[2]=o('<p>许多<strong>应用程序</strong>需要超出<strong>应用程序</strong>逻辑范围的常见<strong>功能</strong>。这可能包括像<a href="./client-logging">日志</a>、<a href="./client-serialization">序列化</a>或<a href="./client-auth">授权</a>等。所有这些都在 Ktor 中通过我们称之为“<strong>插件</strong>”的方式提供。</p><h2 id="plugin-dependency" tabindex="-1">添加插件<strong>依赖项</strong> <a class="header-anchor" href="#plugin-dependency" aria-label="Permalink to &quot;添加插件**依赖项** {id=&quot;plugin-dependency&quot;}&quot;">​</a></h2><p>插件可能需要单独的<a href="./client-dependencies"><strong>依赖项</strong></a>。<strong>例如</strong>，<a href="./client-logging">Logging</a> 插件要求在<strong>构建</strong>脚本中添加 <code>ktor-client-logging</code> <strong>artifact</strong>：</p>',3)),i(h,{group:"languages"},{default:n(()=>[i(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(t,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-client-logging:$ktor_version")'})]),_:1}),i(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(t,{lang:"Groovy",code:'            implementation "io.ktor:ktor-client-logging:$ktor_version"'})]),_:1}),i(e,{title:"Maven","group-key":"maven"},{default:n(()=>[i(t,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-client-logging-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[3]||(s[3]=o(`<p>你可以从所需插件的相关主题中了解所需的<strong>依赖项</strong>。</p><h2 id="install" tabindex="-1">安装插件 <a class="header-anchor" href="#install" aria-label="Permalink to &quot;安装插件 {id=&quot;install&quot;}&quot;">​</a></h2><p>要安装插件，你需要将其传递给 <a href="./client-create-and-configure#configure-client"><strong>客户端</strong>配置<strong>代码块</strong></a>内的 <code>install</code> <strong>函数</strong>。<strong>例如</strong>，安装 <code>Logging</code> 插件如下所示：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.logging.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Logging)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configure_plugin" tabindex="-1">配置插件 <a class="header-anchor" href="#configure_plugin" aria-label="Permalink to &quot;配置插件 {id=&quot;configure_plugin&quot;}&quot;">​</a></h2><p>你可以在 <code>install</code> <strong>代码块</strong>内配置插件。<strong>例如</strong>，对于 <a href="./client-logging">Logging</a> 插件，你可以指定日志记录器、日志级别以及过滤日志消息的条件：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runBlocking</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Logging) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            logger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Logger.DEFAULT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            level </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LogLevel.HEADERS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                request.url.host.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ktor.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            sanitizeHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpHeaders.Authorization }</span></span></code></pre></div><h2 id="custom" tabindex="-1">创建自定义插件 <a class="header-anchor" href="#custom" aria-label="Permalink to &quot;创建自定义插件 {id=&quot;custom&quot;}&quot;">​</a></h2><p>要了解如何创建自定义插件，请参考 <a href="./client-custom-plugins">Custom client plugins</a>。</p>`,9))])}const v=k(c,[["render",E]]);export{C as __pageData,v as default};
