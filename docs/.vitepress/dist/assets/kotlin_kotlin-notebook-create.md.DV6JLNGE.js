import{_ as l}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as n}from"./chunks/icon-2.DCnUydpf.js";import{_ as s}from"./chunks/icon-3-todo.Gx4op1du.js";import{_ as r,a,b as p,c as k,d,e as c}from"./chunks/kotlin-notebook-scratch-file.BYF63uYo.js";import{_ as g,C as b,c as h,o as m,j as o,G as _,ag as N,a as e,w as u}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/kotlin-notebook-create.md","filePath":"kotlin/kotlin-notebook-create.md","lastUpdated":1754307826000}'),w={name:"kotlin/kotlin-notebook-create.md"};function f(K,t,v,E,C,P){const i=b("tldr");return m(),h("div",null,[t[1]||(t[1]=o("h1",{id:"创建你的第一个-kotlin-notebook",tabindex:"-1"},[e("创建你的第一个 Kotlin Notebook "),o("a",{class:"header-anchor",href:"#创建你的第一个-kotlin-notebook","aria-label":'Permalink to "创建你的第一个 Kotlin Notebook"'},"​")],-1)),_(i,null,{default:u(()=>t[0]||(t[0]=[o("p",null,[e("这是《"),o("strong",null,"Kotlin Notebook 入门"),e("》教程的第二部分。在继续之前，请确保你已完成上一步。")],-1),o("p",null,[o("img",{src:l,width:"20",alt:"第一步"}),e(),o("a",{href:"/kotlin/kotlin-notebook-set-up-env"},"设置环境"),o("br"),o("img",{src:n,width:"20",alt:"第二步"}),e(),o("strong",null,"创建 Kotlin Notebook"),o("br"),o("img",{src:s,width:"20",alt:"第三步"}),e(" 向 Kotlin Notebook 添加依赖项"),o("br")],-1)])),_:1}),t[2]||(t[2]=N('<p>在这里，你将学习如何创建你的第一个 <a href="/kotlin/kotlin-notebook-overview">Kotlin Notebook</a>，执行简单操作，并运行代码单元格。</p><h2 id="创建空项目" tabindex="-1">创建空项目 <a class="header-anchor" href="#创建空项目" aria-label="Permalink to &quot;创建空项目&quot;">​</a></h2><ol><li><p>在 IntelliJ IDEA 中，选择 <strong>File | New | Project</strong>。</p></li><li><p>在左侧面板中，选择 <strong>New Project</strong>。</p></li><li><p>命名新项目，如有必要，更改其位置。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>选中 <strong>Create Git repository</strong> 复选框以将新项目置于版本控制之下。 你可以随时在以后执行此操作。</p></div></li><li><p>从 <strong>Language</strong> 列表中，选择 <strong>Kotlin</strong>。</p><p><img src="'+r+'" alt="创建新的 Kotlin Notebook 项目" width="700"></p></li><li><p>选择 <strong>IntelliJ</strong> 构建系统。</p></li><li><p>从 <strong>JDK</strong> 列表中，选择你希望在项目中使用的 <a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer">JDK</a>。</p></li><li><p>启用 <strong>Add sample code</strong> 选项以创建一个包含示例“Hello World!”应用程序的文件。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>你还可以启用 <strong>Generate code with onboarding tips</strong> 选项，向示例代码添加一些额外的有用注释。</p></div></li><li><p>点击 <strong>Create</strong>。</p></li></ol><h2 id="创建-kotlin-notebook" tabindex="-1">创建 Kotlin Notebook <a class="header-anchor" href="#创建-kotlin-notebook" aria-label="Permalink to &quot;创建 Kotlin Notebook&quot;">​</a></h2><ol><li><p>要创建新 Notebook，请选择 <strong>File | New | Kotlin Notebook</strong>，或右键点击文件夹并选择 <strong>New | Kotlin Notebook</strong>。</p><p><img src="'+a+'" alt="创建新的 Kotlin Notebook" width="700"></p></li><li><p>设置新 Notebook 的名称，例如 <strong>first-notebook</strong>，然后按下 <strong>Enter</strong> 键。 一个带有 Kotlin Notebook <strong>first-notebook.ipynb</strong> 的新选项卡将打开。</p></li><li><p>在打开的选项卡中，在代码单元格中输入以下代码：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, this is a Kotlin Notebook!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>要运行代码单元格，请点击 <strong>Run Cell and Select Below</strong> <img src="'+p+'" alt="运行单元格并选择下方" width="30" type="joined"> 按钮或按下 <strong>Shift</strong> + <strong>Return</strong> 键。</p></li><li><p>通过点击 <strong>Add Markdown Cell</strong> 按钮添加 Markdown 单元格。</p></li><li><p>在单元格中输入 <code># Example operations</code>，并以运行代码单元格的相同方式运行它以进行渲染。</p></li><li><p>在新的代码单元格中，输入 <code>10 + 10</code> 并运行它。</p></li><li><p>在代码单元格中定义变量。例如，<code>val a = 100</code>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>一旦你运行了包含定义变量的代码单元格，这些变量将在所有其他代码单元格中变得可访问。</p></div></li><li><p>创建新的代码单元格并添加 <code>println(a * a)</code>。</p></li><li><p>使用 <strong>Run All</strong> <img src="'+k+'" alt="全部运行按钮" width="30" type="joined"> 按钮运行 Notebook 中的所有代码和 Markdown 单元格。</p><p><img src="'+d+'" alt="第一个 Notebook" width="700"></p></li></ol><p>恭喜！你已成功创建你的第一个 Kotlin Notebook。</p><h2 id="创建临时-kotlin-notebook" tabindex="-1">创建临时 Kotlin Notebook <a class="header-anchor" href="#创建临时-kotlin-notebook" aria-label="Permalink to &quot;创建临时 Kotlin Notebook&quot;">​</a></h2><p>从 IntelliJ IDEA 2024.1.1 开始，你还可以将 Kotlin Notebook 创建为临时文件。</p><p><a href="https://www.jetbrains.com/help/idea/scratches.html#create-scratch-file" target="_blank" rel="noreferrer">临时文件</a> 允许你测试小段代码，而无需创建新项目或修改现有项目。</p><p>要创建临时 Kotlin Notebook：</p><ol><li><p>点击 <strong>File | New | Scratch File</strong>。</p></li><li><p>从 <strong>New Scratch File</strong> 列表中选择 <strong>Kotlin Notebook</strong>。</p><p><img src="'+c+'" alt="临时 Notebook" width="400"></p></li></ol><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><p>在教程的下一部分，你将学习如何向 Kotlin Notebook 添加依赖项。</p><p><strong><a href="/kotlin/kotlin-notebook-add-dependencies">继续下一章</a></strong></p>',14))])}const S=g(w,[["render",f]]);export{T as __pageData,S as default};
