import{_ as r,C as n,c as e,o as a,j as d,G as l,ag as i,a as s}from"./chunks/framework.Bksy39di.js";const S=JSON.parse('{"title":"Kotlin 组件的稳定性（1.4 版本前）","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/components-stability-pre-1.4.md","filePath":"kotlin/components-stability-pre-1.4.md","lastUpdated":1754307826000}'),p={name:"kotlin/components-stability-pre-1.4.md"};function g(F,t,c,_,M,k){const o=n("no-index");return a(),e("div",null,[t[0]||(t[0]=d("h1",{id:"kotlin-组件的稳定性-1-4-版本前",tabindex:"-1"},[s("Kotlin 组件的稳定性（1.4 版本前） "),d("a",{class:"header-anchor",href:"#kotlin-组件的稳定性-1-4-版本前","aria-label":'Permalink to "Kotlin 组件的稳定性（1.4 版本前）"'},"​")],-1)),l(o),t[1]||(t[1]=i('<p>组件的稳定性模式可能有所不同，具体取决于其演进速度：</p><a name="moving-fast"></a><ul><li><p><strong>快速演进 (MF)</strong>：即使是 <a href="/kotlin/kotlin-evolution-principles#language-and-tooling-releases">增量版本</a> 之间也不应期望兼容性，任何功能都可以不另行通知地添加、移除或更改。</p></li><li><p><strong>增量版本可添加 (AIR)</strong>：可以在增量版本中添加内容，应避免移除和行为变更，如有必要，则应在之前的增量版本中宣布。</p></li><li><p><strong>稳定的增量版本 (SIR)</strong>：增量版本完全兼容，仅进行优化和错误修复。任何更改都可以在 <a href="/kotlin/kotlin-evolution-principles#language-and-tooling-releases">语言版本</a> 中进行。</p></li></ul><a name="fully-stable"></a><ul><li><strong>完全稳定 (FS)</strong>：增量版本完全兼容，仅进行优化和错误修复。特性版本向后兼容。</li></ul><p>同一个组件的源码和二进制兼容性可能具有不同的模式，例如，源码语言可以在二进制格式稳定之前达到完全稳定，反之亦然。</p><p><a href="/kotlin/kotlin-evolution-principles">Kotlin 演进策略</a> 的条款仅完全适用于已达到完全稳定 (FS) 的组件。从那时起，不兼容的更改必须得到语言委员会的批准。</p><table tabindex="0"><thead><tr><th><strong>组件</strong></th><th><strong>在哪个版本达到该状态</strong></th><th><strong>源码模式</strong></th><th><strong>二进制模式</strong></th></tr></thead><tbody><tr><td>Kotlin/JVM</td><td>1.0</td><td>FS</td><td>FS</td></tr><tr><td>kotlin-stdlib (JVM)</td><td>1.0</td><td>FS</td><td>FS</td></tr><tr><td>KDoc 语法</td><td>1.0</td><td>FS</td><td>不适用</td></tr><tr><td>协程</td><td>1.3</td><td>FS</td><td>FS</td></tr><tr><td>kotlin-reflect (JVM)</td><td>1.0</td><td>SIR</td><td>SIR</td></tr><tr><td>Kotlin/JS</td><td>1.1</td><td>AIR</td><td>MF</td></tr><tr><td>Kotlin/Native</td><td>1.3</td><td>AIR</td><td>MF</td></tr><tr><td>Kotlin 脚本 (*.kts)</td><td>1.2</td><td>AIR</td><td>MF</td></tr><tr><td>dokka</td><td>0.1</td><td>MF</td><td>不适用</td></tr><tr><td>Kotlin 脚本 API</td><td>1.2</td><td>MF</td><td>MF</td></tr><tr><td>编译器插件 API</td><td>1.0</td><td>MF</td><td>MF</td></tr><tr><td>序列化</td><td>1.3</td><td>MF</td><td>MF</td></tr><tr><td>多平台项目</td><td>1.2</td><td>MF</td><td>MF</td></tr><tr><td>内联类</td><td>1.3</td><td>MF</td><td>MF</td></tr><tr><td>无符号算术</td><td>1.3</td><td>MF</td><td>MF</td></tr><tr><td><strong>所有其他实验性特性，默认</strong></td><td>不适用</td><td><strong>MF</strong></td><td><strong>MF</strong></td></tr></tbody></table>',8))])}const h=r(p,[["render",g]]);export{S as __pageData,h as default};
