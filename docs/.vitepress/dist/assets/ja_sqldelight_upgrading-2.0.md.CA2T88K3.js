import{_ as i,c as a,o as e,ag as l}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"2.0へのアップグレード","description":"","frontmatter":{},"headers":[],"relativePath":"ja/sqldelight/upgrading-2.0.md","filePath":"ja/sqldelight/upgrading-2.0.md","lastUpdated":1748435462000}'),n={name:"ja/sqldelight/upgrading-2.0.md"};function t(p,s,h,d,k,r){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="_2-0へのアップグレード" tabindex="-1">2.0へのアップグレード <a class="header-anchor" href="#_2-0へのアップグレード" aria-label="Permalink to &quot;2.0へのアップグレード&quot;">​</a></h1><p>SQLDelight 2.0では、GradleプラグインとランタイムAPIにいくつかの破壊的変更が加えられています。</p><p>このページでは、それらの破壊的変更点と2.0での新しい同等物について説明します。新機能やその他の変更点の完全なリストについては、<a href="/ja/sqldelight/changelog">変更履歴</a>を参照してください。</p><h2 id="新しいパッケージ名とアーティファクトグループ" tabindex="-1">新しいパッケージ名とアーティファクトグループ <a class="header-anchor" href="#新しいパッケージ名とアーティファクトグループ" aria-label="Permalink to &quot;新しいパッケージ名とアーティファクトグループ&quot;">​</a></h2><p><code>com.squareup.sqldelight</code>のすべてのインスタンスを<code>app.cash.sqldelight</code>に置き換える必要があります。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar">Gradleの依存関係</div><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  id(&quot;com.squareup.sqldelight&quot;) version &quot;2.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  id(&quot;app.cash.sqldelight&quot;) version &quot;2.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  implementation(&quot;com.squareup.sqldelight:sqlite-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  implementation(&quot;app.cash.sqldelight:sqlite-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">純粋なAndroid SqlDelight 1.xプロジェクトの場合、android-driverとcoroutines-extensions-jvmを使用してください。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  implementation(&quot;com.squareup.sqldelight:android-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  implementation(&quot;app.cash.sqldelight:android-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  implementation(&quot;com.squareup.sqldelight:coroutines-extensions:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  implementation(&quot;app.cash.sqldelight:coroutines-extensions-jvm:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><div class="vp-code-block-title"><div class="vp-code-block-title-bar">コード内</div><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-import com.squareup.sqldelight.db.SqlDriver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+import app.cash.sqldelight.db.SqlDriver</span></span></code></pre></div></div><h2 id="gradle設定の変更点" tabindex="-1">Gradle設定の変更点 <a class="header-anchor" href="#gradle設定の変更点" aria-label="Permalink to &quot;Gradle設定の変更点&quot;">​</a></h2><ul><li><p>SQLDelight 2.0のビルドにはJava 11が、ランタイムにはJava 8が必要です。</p></li><li><p>SQLDelightの設定APIでは、データベースにマネージドプロパティと<code>DomainObjectCollection</code>を使用するようになりました。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-RUGYc" id="tab-Vvqr_-8" checked><label data-title="Kotlin" for="tab-Vvqr_-8">Kotlin</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqldelight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  databases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (1)!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Database&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (2)!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><pre><code>  1. 新しい\`DomainObjectCollection\`ラッパーです。
  2. \`Property&lt;String&gt;\`になりました。
</code></pre><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-BdjHS" id="tab-fxsdy8S" checked><label data-title="Groovy" for="tab-fxsdy8S">Groovy</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqldelight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  databases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (1)!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><pre><code>  1. 新しい\`DomainObjectCollection\`ラッパーです。
</code></pre></li><li><p><code>sourceFolders</code>設定が<code>srcDirs</code>に名称変更されました。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lhh0B" id="tab-aqhzqiD" checked><label data-title="Kotlin" for="tab-aqhzqiD">Kotlin</label><input type="radio" name="group-lhh0B" id="tab-1NuicF8"><label data-title="Groovy" for="tab-1NuicF8">Groovy</label></div><div class="blocks"><div class="language-groovy vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    create(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyDatabase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      srcDirs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setFrom(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main/sqldelight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    MyDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      srcDirs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/main/sqldelight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div></li><li><p>データベースのSQL方言（ダイアレクト）は、Gradleの依存関係を使用して指定されるようになりました。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Ft9Ei" id="tab-rZD9rOy" checked><label data-title="Kotlin" for="tab-rZD9rOy">Kotlin</label><input type="radio" name="group-Ft9Ei" id="tab-hHuRBvV"><label data-title="Groovy" for="tab-hHuRBvV">Groovy</label></div><div class="blocks"><div class="language-groovy vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    create(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyDatabase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.cash.sqldelight:mysql-dialect:2.1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Version catalogs also work!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect(libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dialects</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    MyDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.cash.sqldelight:mysql-dialect:2.1.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Version catalogs also work!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dialects</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>現在サポートされている方言は、<code>mysql-dialect</code>、<code>postgresql-dialect</code>、<code>hsql-dialect</code>、<code>sqlite-3-18-dialect</code>、<code>sqlite-3-24-dialect</code>、<code>sqlite-3-25-dialect</code>、<code>sqlite-3-30-dialect</code>、<code>sqlite-3-35-dialect</code>、および<code>sqlite-3-38-dialect</code>です。</p></li></ul><h2 id="ランタイムの変更点" tabindex="-1">ランタイムの変更点 <a class="header-anchor" href="#ランタイムの変更点" aria-label="Permalink to &quot;ランタイムの変更点&quot;">​</a></h2><ul><li><p>プリミティブ型は、<code>.sq</code>および<code>.sqm</code>ファイルにインポートする必要があります。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+import kotlin.Boolean;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CREATE TABLE HockeyPlayer (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name TEXT NOT NULL,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  good INTEGER </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">AS Boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>以前サポートされていた一部の型では、アダプターが必要になりました。プリミティブ型用のアダプターは、<code>app.cash.sqldelight:primitive-adapters:2.1.0</code>アーティファクトで利用できます。例：<code>INTEGER As kotlin.Int</code>変換を行うための<code>IntColumnAdapter</code>。</p></li><li><p><code>AfterVersionWithDriver</code>型は、常にドライバーを含むようになった<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-after-version" target="_blank" rel="noreferrer"><code>AfterVersion</code></a>に置き換えられ、<code>migrateWithCallbacks</code>拡張関数は、コールバックを受け入れるようになったメインの<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-schema/#-775472427%2FFunctions%2F-2112917107" target="_blank" rel="noreferrer"><code>migrate</code></a>メソッドに置き換えられました。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Database.Schema.</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">migrate</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">WithCallbacks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  driver = driver,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  oldVersion = 1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  newVersion = Database.Schema.version,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  AfterVersionWithDriver(3) { driver -&gt;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    driver.execute(null, &quot;INSERT INTO test (value) VALUES(&#39;hello&#39;)&quot;, 0)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  AfterVersion(3) { driver -&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    driver.execute(null, &quot;INSERT INTO test (value) VALUES(&#39;hello&#39;)&quot;, 0)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p><code>Schema</code>型は<code>SqlDriver</code>のネストされた型ではなくなり、<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-schema" target="_blank" rel="noreferrer"><code>SqlSchema</code></a>と呼ばれるようになりました。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-val schema: SqlDriver.Schema</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+val schema: SqlSchema</span></span></code></pre></div></li><li><p><a href="https://sqldelight.github.io/sqldelight/latest/2.x/extensions/androidx-paging3/app.cash.sqldelight.paging3/" target="_blank" rel="noreferrer">Paging3拡張API</a>は、カウントに<code>Int</code>型のみを許可するように変更されました。</p></li><li><p><a href="https://sqldelight.github.io/sqldelight/latest/2.x/extensions/coroutines-extensions/app.cash.sqldelight.coroutines/" target="_blank" rel="noreferrer">コルーチン拡張API</a>では、ディスパッチャを明示的に渡す必要があります。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">val players: Flow&lt;List&lt;HockeyPlayer&gt;&gt; =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  playerQueries.selectAll()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .asFlow()</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+   .mapToList(Dispatchers.IO)</span></span></code></pre></div></li><li><p><code>execute()</code>、<code>executeQuery()</code>、<code>newTransaction()</code>、<code>endTransaction()</code>などの一部のドライバーメソッドは、<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-query-result" target="_blank" rel="noreferrer"><code>QueryResult</code></a>オブジェクトを返すようになりました。返された値にアクセスするには、<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-query-result/value" target="_blank" rel="noreferrer"><code>QueryResult.value</code></a>を使用します。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-driver.executeQuery(null, &quot;PRAGMA user_version&quot;, { /*...*/ })</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+driver.executeQuery(null, &quot;PRAGMA user_version&quot;, { /*...*/ }).value</span></span></code></pre></div><p>この変更により、ドライバーの実装はノンブロッキングAPIに基づいて行われるようになり、返された値にはサスペンド関数である<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-query-result/await" target="_blank" rel="noreferrer"><code>QueryResult.await()</code></a>メソッドを使用してアクセスできます。</p><ul><li><code>SqlCursor</code>インターフェースの<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-cursor/next" target="_blank" rel="noreferrer"><code>next()</code></a>メソッドも、非同期ドライバーでのより良いカーソルサポートを可能にするために、<code>QueryResult</code>を返すように変更されました。</li></ul></li><li><p><a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-schema" target="_blank" rel="noreferrer"><code>SqlSchema</code></a>インターフェースには、ジェネリックな<code>QueryResult</code>型パラメータが追加されました。これは、非同期ドライバーで使用するために生成されたスキーマランタイムを区別するために使用され、これらは同期ドライバーと直接互換性がない場合があります。これは、JSターゲットを持つマルチプラットフォームプロジェクトのように、同期ドライバーと非同期ドライバーを同時に使用するプロジェクトにのみ関連します。詳細については、「<a href="/ja/sqldelight/js_sqlite/multiplatform.md">Web Workerドライバーを使用したマルチプラットフォームセットアップ</a>」を参照してください。</p></li><li><p><code>SqlSchema.Version</code>の型がIntからLongに変更され、サーバー環境でタイムスタンプをバージョンとして活用できるようになりました。既存のセットアップではIntとLong間で安全にキャストでき、バージョンにInt範囲を必要とするドライバーは、範囲外のバージョンの場合、データベース作成前にクラッシュします。</p></li></ul>`,11)]))}const E=i(n,[["render",t]]);export{c as __pageData,E as default};
