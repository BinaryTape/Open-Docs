import{_ as l,a as t,b as e,c as n,d as r}from"./chunks/jvm-output-gradle.DaNbfMb_.js";import{_ as o,c as p,o as h,ag as i,j as a,a as d}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"Gradle 및 Kotlin/JVM 시작하기","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/get-started-with-jvm-gradle-project.md","filePath":"ko/kotlin/get-started-with-jvm-gradle-project.md","lastUpdated":1754307826000}'),k={name:"ko/kotlin/get-started-with-jvm-gradle-project.md"};function g(c,s,E,u,m,_){return h(),p("div",null,s[0]||(s[0]=[i('<h1 id="gradle-및-kotlin-jvm-시작하기" tabindex="-1">Gradle 및 Kotlin/JVM 시작하기 <a class="header-anchor" href="#gradle-및-kotlin-jvm-시작하기" aria-label="Permalink to &quot;Gradle 및 Kotlin/JVM 시작하기&quot;">​</a></h1><p>이 튜토리얼에서는 IntelliJ IDEA와 Gradle을 사용하여 JVM 콘솔 애플리케이션을 생성하는 방법을 설명합니다.</p><p>시작하려면 먼저 <a href="https://www.jetbrains.com/idea/download/index.html" target="_blank" rel="noreferrer">IntelliJ IDEA</a>의 최신 버전을 다운로드하여 설치하세요.</p><h2 id="프로젝트-생성" tabindex="-1">프로젝트 생성 <a class="header-anchor" href="#프로젝트-생성" aria-label="Permalink to &quot;프로젝트 생성&quot;">​</a></h2><ol><li><p>IntelliJ IDEA에서 <strong>파일</strong> | <strong>새로 만들기</strong> | <strong>프로젝트</strong>를 선택합니다.</p></li><li><p>왼쪽 패널에서 <strong>Kotlin</strong>을 선택합니다.</p></li><li><p>새 프로젝트의 이름을 지정하고 필요한 경우 위치를 변경합니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Git 저장소 생성</strong> 확인란을 선택하여 새 프로젝트를 버전 제어 하에 둘 수 있습니다. 이 작업은 나중에 언제든지 수행할 수 있습니다.</p></div><p><img src="'+l+'" alt="Create a console application" width="700"></p></li><li><p><strong>Gradle</strong> 빌드 시스템을 선택합니다.</p></li><li><p><strong>JDK</strong> 목록에서 프로젝트에서 사용할 <a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer">JDK</a>를 선택합니다.</p><ul><li>JDK가 컴퓨터에 설치되어 있지만 IDE에 정의되어 있지 않은 경우, <strong>JDK 추가</strong>를 선택하고 JDK 홈 디렉터리의 경로를 지정합니다.</li><li>필요한 JDK가 컴퓨터에 없는 경우, <strong>JDK 다운로드</strong>를 선택합니다.</li></ul></li><li><p>Gradle용 <strong>Kotlin</strong> DSL을 선택합니다.</p></li><li><p><strong>샘플 코드 추가</strong> 확인란을 선택하여 <code>&quot;Hello World!&quot;</code> 샘플 애플리케이션 파일을 생성합니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>온보딩 팁과 함께 코드 생성</strong> 옵션을 활성화하여 샘플 코드에 유용한 추가 주석을 추가할 수도 있습니다.</p></div></li><li><p><strong>생성</strong>을 클릭합니다.</p></li></ol><p>Gradle로 프로젝트를 성공적으로 생성했습니다!</p>',6),a("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"프로젝트의-gradle-버전-지정",tabindex:"-1"},[d("프로젝트의 Gradle 버전 지정 "),a("a",{class:"header-anchor",href:"#프로젝트의-gradle-버전-지정","aria-label":'Permalink to "프로젝트의 Gradle 버전 지정 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1),i('<p><strong>고급 설정</strong> 섹션에서 Gradle Wrapper를 사용하거나 Gradle의 로컬 설치를 통해 프로젝트의 Gradle 버전을 명시적으로 지정할 수 있습니다.</p><ul><li><p><strong>Gradle Wrapper:</strong></p><ol><li><strong>Gradle 배포</strong> 목록에서 <strong>Wrapper</strong>를 선택합니다.</li><li><strong>자동 선택</strong> 확인란을 비활성화합니다.</li><li><strong>Gradle 버전</strong> 목록에서 사용할 Gradle 버전을 선택합니다.</li></ol></li><li><p><strong>로컬 설치:</strong></p><ol><li><strong>Gradle 배포</strong> 목록에서 <strong>로컬 설치</strong>를 선택합니다.</li><li><strong>Gradle 위치</strong>에 대해 로컬 Gradle 버전의 경로를 지정합니다.</li></ol><p><img src="'+t+`" alt="Advanced settings" width="700"></p></li></ul><h2 id="빌드-스크립트-살펴보기" tabindex="-1">빌드 스크립트 살펴보기 <a class="header-anchor" href="#빌드-스크립트-살펴보기" aria-label="Permalink to &quot;빌드 스크립트 살펴보기&quot;">​</a></h2><p><code>build.gradle.kts</code> 파일을 엽니다. 이 파일은 Gradle Kotlin 빌드 스크립트이며, 애플리케이션에 필요한 Kotlin 관련 아티팩트 및 기타 부분을 포함합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.10&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 사용할 Kotlin 버전</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;org.example&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 회사 이름, 예: \`org.jetbrains\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0-SNAPSHOT&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 빌드된 아티팩트에 할당할 버전</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 종속성 소스입니다. 1️⃣ 참고</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mavenCentral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Maven Central 저장소입니다. 2️⃣ 참고</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 사용할 모든 라이브러리입니다. 3️⃣ 참고</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 저장소에서 종속성을 찾은 후 이름을 복사하세요.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    testImplementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Kotlin 테스트 라이브러리</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4️⃣ 참고</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    useJUnitPlatform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 테스트용 JUnitPlatform입니다. 5️⃣ 참고</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>1️⃣ <a href="https://docs.gradle.org/current/userguide/declaring_repositories.html" target="_blank" rel="noreferrer">종속성 소스</a>에 대해 자세히 알아보세요.</li><li>2️⃣ <a href="https://central.sonatype.com/" target="_blank" rel="noreferrer">Maven Central 저장소</a>입니다. <a href="https://maven.google.com/" target="_blank" rel="noreferrer">Google의 Maven 저장소</a> 또는 회사 비공개 저장소일 수도 있습니다.</li><li>3️⃣ <a href="https://docs.gradle.org/current/userguide/declaring_dependencies.html" target="_blank" rel="noreferrer">종속성 선언</a>에 대해 자세히 알아보세요.</li><li>4️⃣ <a href="https://docs.gradle.org/current/dsl/org.gradle.api.Task.html" target="_blank" rel="noreferrer">태스크</a>에 대해 자세히 알아보세요.</li><li>5️⃣ <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/Test.html#useJUnitPlatform" target="_blank" rel="noreferrer">테스트용 JUnitPlatform</a>.</li></ul><p>보시다시피, Gradle 빌드 파일에 몇 가지 Kotlin 관련 아티팩트가 추가되었습니다.</p><ol><li><p><code>plugins {}</code> 블록에는 <code>kotlin(&quot;jvm&quot;)</code> 아티팩트가 있습니다. 이 플러그인은 프로젝트에서 사용할 Kotlin 버전을 정의합니다.</p></li><li><p><code>dependencies {}</code> 블록에는 <code>testImplementation(kotlin(&quot;test&quot;))</code>가 있습니다. <a href="/ko/kotlin/gradle-configure-project#set-dependencies-on-test-libraries">테스트 라이브러리에 종속성 설정</a>에 대해 자세히 알아보세요.</p></li></ol><h2 id="애플리케이션-실행" tabindex="-1">애플리케이션 실행 <a class="header-anchor" href="#애플리케이션-실행" aria-label="Permalink to &quot;애플리케이션 실행&quot;">​</a></h2><ol><li><p><strong>보기</strong> | <strong>도구 창</strong> | <strong>Gradle</strong>을 선택하여 Gradle 창을 엽니다.</p><p><img src="`+e+'" alt="Main.kt with main fun" width="700"></p></li><li><p><code>Tasks\\build\\</code>에서 <strong>build</strong> Gradle 태스크를 실행합니다. <strong>빌드</strong> 창에 <code>BUILD SUCCESSFUL</code>이 나타납니다. 이는 Gradle이 애플리케이션을 성공적으로 빌드했음을 의미합니다.</p></li><li><p><code>src/main/kotlin</code>에서 <code>Main.kt</code> 파일을 엽니다.</p><ul><li><code>src</code> 디렉터리에는 Kotlin 소스 파일 및 리소스가 포함되어 있습니다.</li><li><code>Main.kt</code> 파일에는 <code>Hello World!</code>를 출력할 샘플 코드가 포함되어 있습니다.</li></ul></li><li><p>거터(gutter)에 있는 녹색 <strong>실행</strong> 아이콘을 클릭하고 <strong>&#39;MainKt&#39; 실행</strong>을 선택하여 애플리케이션을 실행합니다.</p><p><img src="'+n+'" alt="Running a console app" width="350"></p></li></ol><p><strong>실행</strong> 도구 창에서 결과를 확인할 수 있습니다.</p><p><img src="'+r+'" alt="Kotlin run output" width="600"></p><p>축하합니다! 첫 Kotlin 애플리케이션을 성공적으로 실행했습니다.</p><h2 id="다음-단계는" tabindex="-1">다음 단계는? <a class="header-anchor" href="#다음-단계는" aria-label="Permalink to &quot;다음 단계는?&quot;">​</a></h2><p>다음 사항에 대해 자세히 알아보세요.</p><ul><li><a href="https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#N14E9A" target="_blank" rel="noreferrer">Gradle 빌드 파일 속성</a>.</li><li><a href="/ko/kotlin/gradle-configure-project">다른 플랫폼 타겟팅 및 라이브러리 종속성 설정</a>.</li><li><a href="/ko/kotlin/gradle-compiler-options">컴파일러 옵션 및 전달 방법</a>.</li><li><a href="/ko/kotlin/gradle-compilation-and-caches">증분 컴파일, 캐시 지원, 빌드 보고서 및 Kotlin 데몬</a>.</li></ul>',16)]))}const D=o(k,[["render",g]]);export{b as __pageData,D as default};
