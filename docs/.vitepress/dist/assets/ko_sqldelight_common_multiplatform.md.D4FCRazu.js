import{_ as a,c as i,o as t,ag as n}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"멀티플랫폼","description":"","frontmatter":{},"headers":[],"relativePath":"ko/sqldelight/common/multiplatform.md","filePath":"ko/sqldelight/common/multiplatform.md","lastUpdated":1748435462000}'),l={name:"ko/sqldelight/common/multiplatform.md"};function e(p,s,h,o,k,d){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="멀티플랫폼" tabindex="-1">멀티플랫폼 <a class="header-anchor" href="#멀티플랫폼" aria-label="Permalink to &quot;멀티플랫폼&quot;">​</a></h1><p>Kotlin 멀티플랫폼에서 SQLDelight를 사용하려면 코드를 생성할 패키지와 함께 Gradle 플러그인을 설정해야 합니다.</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">apply </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.kotlin.multiplatform&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">apply </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.cash.sqldelight&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    MyDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.example.hockey&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>.sq</code> 파일을 <code>src/commonMain/sqldelight</code> 디렉토리에 배치하고, <code>Database</code>를 생성할 때 개별 플랫폼에서 <code>SqlDriver</code>가 <code>expect</code>되도록 해야 합니다. 마이그레이션 파일 또한 동일한 <code>src/commonMain/sqldelight</code> 디렉토리에 있어야 합니다.</p>`,4)]))}const E=a(l,[["render",e]]);export{c as __pageData,E as default};
