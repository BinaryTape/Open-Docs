import{_ as h,C as i,c as r,o as c,G as a,ag as d,w as e,j as t,a as n}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/client-cookies.md","filePath":"ko/ktor/client-cookies.md","lastUpdated":1755457140000}'),g={name:"ko/ktor/client-cookies.md"};function E(u,s,y,C,m,F){const l=i("TopicTitle"),o=i("primary-label"),k=i("tldr"),p=i("link-summary");return c(),r("div",null,[a(l,{labelRef:"client-plugin",title:"쿠키"}),a(o,{ref:"client-plugin"},null,512),a(k,null,{default:e(()=>s[0]||(s[0]=[t("p",null,[t("b",null,"코드 예시"),n(": "),t("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-cookies"}," client-cookies ")],-1)])),_:1}),a(p,null,{default:e(()=>s[1]||(s[1]=[n(" HttpCookies 플러그인은 쿠키를 자동으로 처리하며, 호출 간에 저장소에 보관합니다. ")])),_:1}),s[2]||(s[2]=d(`<p>Ktor 클라이언트는 다음과 같은 방법으로 쿠키를 수동으로 처리할 수 있도록 합니다:</p><ul><li><code>cookie</code> 함수를 사용하여 <a href="./client-requests#cookies">특정 요청</a>에 쿠키를 추가할 수 있습니다.</li><li><code>setCookie</code> 함수를 사용하면 <a href="./client-responses#headers">응답</a>으로 받은 <code>Set-Cookie</code> 헤더 값을 파싱할 수 있습니다.</li></ul><p><a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.plugins.cookies/-http-cookies/index.html" target="_blank" rel="noreferrer">HttpCookies</a> 플러그인은 쿠키를 자동으로 처리하며, 호출 간에 저장소에 보관합니다. 기본적으로 인메모리 저장소를 사용하지만, <a href="#custom_storage">CookiesStorage</a>를 사용하여 영구 저장소를 구현할 수도 있습니다.</p><h2 id="add_dependencies" tabindex="-1">의존성 추가 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;의존성 추가 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>HttpCookies</code>는 <a href="./client-dependencies">ktor-client-core</a> 아티팩트만 필요하며, 특정 의존성은 필요하지 않습니다.</p><h2 id="install_plugin" tabindex="-1">HttpCookies 설치 및 구성 <a class="header-anchor" href="#install_plugin" aria-label="Permalink to &quot;HttpCookies 설치 및 구성 {id=&quot;install_plugin&quot;}&quot;">​</a></h2><p><code>HttpCookies</code>를 설치하려면 <a href="./client-create-and-configure#configure-client">클라이언트 구성 블록</a> 내의 <code>install</code> 함수에 전달하세요:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpCookies)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이것으로 Ktor 클라이언트가 요청 간에 쿠키를 유지할 수 있도록 하는 데 충분합니다. 전체 예시는 여기에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-cookies" target="_blank" rel="noreferrer">client-cookies</a>.</p><p><code>HttpCookies</code> 플러그인은 <code>ConstantCookiesStorage</code>를 사용하여 각 요청에 특정 쿠키 세트를 추가할 수도 있습니다. 이는 서버 응답을 검증하는 테스트 케이스에서 유용할 수 있습니다. 아래 예시는 특정 도메인에 대한 모든 요청에 지정된 쿠키를 추가하는 방법을 보여줍니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpCookies) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        storage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConstantCookiesStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;user_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;jetbrains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, domain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0.0.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="get_cookies" tabindex="-1">쿠키 가져오기 <a class="header-anchor" href="#get_cookies" aria-label="Permalink to &quot;쿠키 가져오기 {id=&quot;get_cookies&quot;}&quot;">​</a></h2><p>클라이언트는 지정된 URL에 대한 모든 쿠키를 얻기 위해 <code>cookies</code> 함수를 제공합니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cookies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://0.0.0.0:8080/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="custom_storage" tabindex="-1">사용자 지정 쿠키 저장소 <a class="header-anchor" href="#custom_storage" aria-label="Permalink to &quot;사용자 지정 쿠키 저장소 {id=&quot;custom_storage&quot;}&quot;">​</a></h2><p>필요한 경우, <a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.plugins.cookies/-cookies-storage/index.html" target="_blank" rel="noreferrer">CookiesStorage</a> 인터페이스를 구현하여 사용자 지정 쿠키 저장소를 생성할 수 있습니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpCookies) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        storage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomCookiesStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomCookiesStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CookiesStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://github.com/ktorio/ktor/blob/main/ktor-client/ktor-client-core/common/src/io/ktor/client/plugins/cookies/AcceptAllCookiesStorage.kt" target="_blank" rel="noreferrer">AcceptAllCookiesStorage</a>를 참고 자료로 사용할 수 있습니다.</p>`,18))])}const f=h(g,[["render",E]]);export{b as __pageData,f as default};
