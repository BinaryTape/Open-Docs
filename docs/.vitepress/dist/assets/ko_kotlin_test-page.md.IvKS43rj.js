import{_ as c}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as y}from"./chunks/icon-2-done.DCMUaFG5.js";import{_ as u}from"./chunks/icon-3.BwKvTetO.js";import{_ as F}from"./chunks/icon-4-todo.GaeEmerm.js";import{_ as b}from"./chunks/create-test.CrrH3ADr.js";import{_ as m,a as C}from"./chunks/multiplatform-create-project-button.ihqOV7P4.js";import{_ as v}from"./chunks/youtrack-logo.BqikxD5b.js";import{_ as f}from"./chunks/ksp-class-diagram.ClaR6pZl.js";import{_ as B,C as n,c as A,o as _,j as s,G as t,ag as p,a as i,w as l}from"./chunks/framework.Bksy39di.js";const G=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/test-page.md","filePath":"ko/kotlin/test-page.md","lastUpdated":1754307826000}'),D={name:"ko/kotlin/test-page.md"};function x(q,a,T,P,S,j){const r=n("web-summary"),d=n("no-index"),o=n("tldr"),e=n("tab"),h=n("tabs"),k=n("def"),g=n("deflist"),E=n("YouTubeVideo");return _(),A("div",null,[a[8]||(a[8]=s("h1",{id:"테스트-페이지",tabindex:"-1"},[i("테스트 페이지 "),s("a",{class:"header-anchor",href:"#테스트-페이지","aria-label":'Permalink to "테스트 페이지"'},"​")],-1)),t(r,null,{default:l(()=>a[0]||(a[0]=[i("이 페이지는 테스트 목적으로만 사용됩니다.")])),_:1}),t(d),t(o,null,{default:l(()=>a[1]||(a[1]=[s("p",null,[i("이 블록은 이미지를 포함하고 있습니다 ("),s("strong",null,"Getting started with Compose Multiplatform"),i(" 튜토리얼에서 가져옴).")],-1),s("p",null,[s("img",{src:c,width:"20",alt:"First step"}),i(),s("a",{href:"/ko/kotlin/jvm-create-project-with-spring-boot"},"Kotlin으로 Spring Boot 프로젝트 생성하기"),s("br"),s("img",{src:y,width:"20",alt:"Second step"}),i(),s("a",{href:"/ko/kotlin/jvm-spring-boot-add-data-class"},"Spring Boot 프로젝트에 데이터 클래스 추가하기"),s("br"),s("img",{src:u,width:"20",alt:"Third step"}),i(),s("strong",null,"Spring Boot 프로젝트에 데이터베이스 지원 추가하기"),s("br"),s("img",{src:F,width:"20",alt:"Fourth step"}),i(" 데이터베이스 액세스에 Spring Data CrudRepository 사용하기>"),s("br")],-1)])),_:1}),a[9]||(a[9]=s("h2",{id:"동기화된-탭",tabindex:"-1"},[i("동기화된 탭 "),s("a",{class:"header-anchor",href:"#동기화된-탭","aria-label":'Permalink to "동기화된 탭"'},"​")],-1)),t(h,{group:"build-script"},{default:l(()=>[t(e,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[2]||(a[2]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plugins"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    kotlin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"kapt"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(e,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[3]||(a[3]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"plugins {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    id "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.kotlin.kapt"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),t(h,{group:"build-script"},{default:l(()=>[t(e,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[4]||(a[4]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"plugins"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    kotlin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"plugin.noarg"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(e,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[5]||(a[5]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"plugins {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    id "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.kotlin.plugin.noarg"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," version "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"1.9.23"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[10]||(a[10]=s("h2",{id:"섹션",tabindex:"-1"},[i("섹션 "),s("a",{class:"header-anchor",href:"#섹션","aria-label":'Permalink to "섹션"'},"​")],-1)),a[11]||(a[11]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"접힌-섹션",tabindex:"-1"},[i("접힌 섹션 "),s("a",{class:"header-anchor",href:"#접힌-섹션","aria-label":'Permalink to "접힌 섹션 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),a[12]||(a[12]=p(`<p>여기에 몇몇 텍스트와 코드 블록:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;plugin.noarg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.9.23&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="코드-블록" tabindex="-1">코드 블록 <a class="header-anchor" href="#코드-블록" aria-label="Permalink to &quot;코드 블록&quot;">​</a></h2><p>그냥 코드 블록:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> java.util.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MessageService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MessageRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> findMessages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> findMessageById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        db.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Optional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">out T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (isPresent) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emptyList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="확장-가능한-코드-블록" tabindex="-1">확장 가능한 코드 블록 <a class="header-anchor" href="#확장-가능한-코드-블록" aria-label="Permalink to &quot;확장 가능한 코드 블록&quot;">​</a></h3><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> com.example.demo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.springframework.boot.autoconfigure.SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.springframework.boot.runApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.springframework.web.bind.annotation.GetMapping</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.springframework.web.bind.annotation.RequestParam</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.springframework.web.bind.annotation.RestController</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DemoApplication</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    runApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DemoApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">args)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@RestController</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MessageController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @GetMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@RequestParam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">!&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="실행-가능한-코드-블록" tabindex="-1">실행 가능한 코드 블록 <a class="header-anchor" href="#실행-가능한-코드-블록" aria-label="Permalink to &quot;실행 가능한 코드 블록&quot;">​</a></h3><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 출력을 쉽게 읽을 수 있도록 toString() 함수를 자동으로 사용합니다.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user)            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // User(name=Alex, id=1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="표" tabindex="-1">표 <a class="header-anchor" href="#표" aria-label="Permalink to &quot;표&quot;">​</a></h2><h3 id="마크다운-표" tabindex="-1">마크다운 표 <a class="header-anchor" href="#마크다운-표" aria-label="Permalink to &quot;마크다운 표&quot;">​</a></h3><table tabindex="0"><thead><tr><th>기본 타입 배열</th><th>Java에서의 동등 타입</th></tr></thead><tbody><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean-array/" target="_blank" rel="noreferrer"><code>BooleanArray</code></a></td><td><code>boolean[]</code></td></tr><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/" target="_blank" rel="noreferrer"><code>ByteArray</code></a></td><td><code>byte[]</code></td></tr><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-char-array/" target="_blank" rel="noreferrer"><code>CharArray</code></a></td><td><code>char[]</code></td></tr><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double-array/" target="_blank" rel="noreferrer"><code>DoubleArray</code></a></td><td><code>double[]</code></td></tr><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-float-array/" target="_blank" rel="noreferrer"><code>FloatArray</code></a></td><td><code>float[]</code></td></tr><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int-array/" target="_blank" rel="noreferrer"><code>IntArray</code></a></td><td><code>int[]</code></td></tr><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-long-array/" target="_blank" rel="noreferrer"><code>LongArray</code></a></td><td><code>long[]</code></td></tr><tr><td><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-short-array/" target="_blank" rel="noreferrer"><code>ShortArray</code></a></td><td><code>short[]</code></td></tr></tbody></table><h3 id="xml-표" tabindex="-1">XML 표 <a class="header-anchor" href="#xml-표" aria-label="Permalink to &quot;XML 표&quot;">​</a></h3><table><tr><td><strong>최종 수정일</strong></td><td><strong>2023년 12월</strong></td></tr><tr><td><strong>다음 업데이트</strong></td><td><strong>2024년 6월</strong></td></tr></table><h3 id="코드-블록이-포함된-xml-표" tabindex="-1">코드 블록이 포함된 XML 표 <a class="header-anchor" href="#코드-블록이-포함된-xml-표" aria-label="Permalink to &quot;코드 블록이 포함된 XML 표&quot;">​</a></h3><p>간단한 표:</p><table><tr><td>이전</td><td>현재</td></tr><tr><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;windows&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;linux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></td><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findByName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;windows&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            findByName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;linux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></td></tr></table><p>더 복잡한 표:</p><table><tr><td></td><td>이전</td><td>현재</td></tr><tr><td rowspan="2"><code>jvmMain</code> 컴파일의 의존성</td><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></td><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvmCompilation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></td></tr><tr><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvmImplementation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;foo.bar.baz:1.2.3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></td><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvmCompilationImplementation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;foo.bar.baz:1.2.3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></td></tr><tr><td><code>jvmMain</code> 소스 세트의 의존성</td><td colspan="2"><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvmMain</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></td></tr><tr><td><code>jvmTest</code> 컴파일의 의존성</td><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvmTest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></td><td><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvmTestCompilation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></td></tr><tr><td><code>jvmTest</code> 소스 세트의 의존성</td><td colspan="2"><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvmTest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></td></tr></table><h2 id="목록" tabindex="-1">목록 <a class="header-anchor" href="#목록" aria-label="Permalink to &quot;목록&quot;">​</a></h2><h3 id="순서가-있는-목록" tabindex="-1">순서가 있는 목록 <a class="header-anchor" href="#순서가-있는-목록" aria-label="Permalink to &quot;순서가 있는 목록&quot;">​</a></h3><ol><li><p>하나</p></li><li><p>둘</p></li><li><p>셋</p><ol><li>셋-1</li><li>셋-2</li><li>셋-3 <ol><li>셋-1-1</li></ol></li></ol></li><li><p>코드 블록 포함:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvmTest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li></ol><h3 id="순서가-없는-목록" tabindex="-1">순서가 없는 목록 <a class="header-anchor" href="#순서가-없는-목록" aria-label="Permalink to &quot;순서가 없는 목록&quot;">​</a></h3><ul><li><p>첫 번째 항목</p></li><li><p>두 번째 항목</p></li><li><p>세 번째 항목</p><ul><li>추가 항목</li><li>또 다른 항목 <ul><li>와우, 하나 더</li></ul></li></ul></li><li><p>코드 블록 포함:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jvmTest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li></ul><h3 id="정의-목록" tabindex="-1">정의 목록 <a class="header-anchor" href="#정의-목록" aria-label="Permalink to &quot;정의 목록&quot;">​</a></h3>`,25)),t(g,{collapsible:"true"},{default:l(()=>[t(k,{title:"접을 수 있는 항목 #1"},{default:l(()=>a[6]||(a[6]=[s("p",null,[s("code",null,"CrudRepository"),i(" 인터페이스의 "),s("code",null,"findById()"),i(" 함수의 반환 타입은 "),s("code",null,"Optional"),i(" 클래스의 인스턴스입니다. 하지만 일관성을 위해 단일 메시지를 포함하는 "),s("code",null,"List"),i("를 반환하는 것이 편리합니다. 이를 위해서는 "),s("code",null,"Optional"),i(" 값이 존재할 경우 해당 값을 풀고(unwrap) 값을 포함하는 리스트를 반환해야 합니다. 이는 "),s("code",null,"Optional"),i(" 타입에 대한 "),s("a",{href:"/ko/kotlin/extensions#extension-functions"},"확장 함수"),i("로 구현될 수 있습니다.")],-1),s("p",null,[i("코드에서 "),s("code",null,"Optional<out T>.toList()"),i(" 중 "),s("code",null,".toList()"),i("는 "),s("code",null,"Optional"),i("에 대한 확장 함수입니다. 확장 함수를 사용하면 모든 클래스에 추가 함수를 작성할 수 있으며, 이는 특히 일부 라이브러리 클래스의 기능을 확장하려는 경우에 유용합니다.")],-1)])),_:1}),t(k,{title:"접을 수 있는 항목 #2"},{default:l(()=>a[7]||(a[7]=[s("p",null,[s("a",{href:"https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/#jdbc.entity-persistence"},"이 함수는"),i(" 새 객체에 데이터베이스에 ID가 없다는 가정 하에 작동합니다. 따라서 삽입을 위해 ID는 "),s("b",null,"null"),i("이어야 합니다.")],-1),s("p",null,[i("ID가 "),s("i",null,"null"),i("이 아니면, "),s("code",null,"CrudRepository"),i("는 해당 객체가 데이터베이스에 이미 존재하며 이것이 "),s("i",null,"삽입"),i(" 작업이 아닌 "),s("i",null,"업데이트"),i(" 작업이라고 가정합니다. 삽입 작업 후에는 ID가 데이터 저장소에 의해 생성되어 "),s("code",null,"Message"),i(" 인스턴스에 다시 할당됩니다. 이것이 "),s("code",null,"id"),i(" 속성이 "),s("code",null,"var"),i(" 키워드를 사용하여 선언되어야 하는 이유입니다.")],-1),s("p",null,null,-1)])),_:1})]),_:1}),a[13]||(a[13]=p('<h2 id="텍스트-요소" tabindex="-1">텍스트 요소 <a class="header-anchor" href="#텍스트-요소" aria-label="Permalink to &quot;텍스트 요소&quot;">​</a></h2><ul><li><strong>굵은 텍스트</strong></li><li><em>기울임 텍스트</em></li><li><code>인라인 코드</code></li><li><a href="#lists">내부 앵커</a></li><li><a href="/ko/kotlin/roadmap">내부 링크</a></li><li><a href="https://jetbrains.com" target="_blank" rel="noreferrer">외부 링크</a></li><li>이모티콘 ❌✅🆕</li></ul><h2 id="변수" tabindex="-1">변수 <a class="header-anchor" href="#변수" aria-label="Permalink to &quot;변수&quot;">​</a></h2><ul><li>변수 사용: 최신 Kotlin 버전은 2.2.10 입니다.</li></ul><h2 id="임베디드-요소" tabindex="-1">임베디드 요소 <a class="header-anchor" href="#임베디드-요소" aria-label="Permalink to &quot;임베디드 요소&quot;">​</a></h2><h3 id="youtube-비디오" tabindex="-1">YouTube 비디오 <a class="header-anchor" href="#youtube-비디오" aria-label="Permalink to &quot;YouTube 비디오&quot;">​</a></h3>',6)),t(E,{src:"https://www.youtube.com/v/Ol_96CHKqg8",title:"Kotlin 1.9.20의 새로운 기능"}),a[14]||(a[14]=p('<h3 id="그림" tabindex="-1">그림 <a class="header-anchor" href="#그림" aria-label="Permalink to &quot;그림&quot;">​</a></h3><p>일반 (마크다운):</p><p><img src="'+b+'" alt="테스트 생성" width="700"></p><p>일반 (XML):</p><img src="'+m+'" alt="Multiplatform web wizard" width="400"><p>인라인:</p><p><img src="'+v+'" alt="YouTrack" width="30" type="joined"></p><p>확대 가능:</p>',8)),a[15]||(a[15]=s("p",null,[s("img",{src:f,alt:"클래스 다이어그램",thumbnail:"true",width:"700","thumbnail-same-file":"true"})],-1)),a[16]||(a[16]=p('<p>버튼 스타일:</p><a href="https://kmp.jetbrains.com"><img src="'+C+'" alt="프로젝트 생성" style=""></a><h2 id="노트" tabindex="-1">노트 <a class="header-anchor" href="#노트" aria-label="Permalink to &quot;노트&quot;">​</a></h2><p>경고:</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>kapt 컴파일러 플러그인의 K2 지원은 <a href="/ko/kotlin/components-stability">실험적 기능</a>입니다. 옵트인(opt-in)이 필요하며(자세한 내용은 아래 참조), 평가 목적으로만 사용해야 합니다.</p></div><p>참고:</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin/Native와 함께 제공되는 네이티브 플랫폼 라이브러리(예: Foundation, UIKit, POSIX)의 경우, 일부 API만 <code>@ExperimentalForeignApi</code>를 통한 옵트인이 필요합니다. 이러한 경우, 옵트인 요구 사항에 대한 경고가 표시됩니다.</p></div><p>팁:</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Kotlin/Native와 함께 제공되는 네이티브 플랫폼 라이브러리(예: Foundation, UIKit, POSIX)의 경우, 일부 API만 <code>@ExperimentalForeignApi</code>를 통한 옵트인이 필요합니다. 이러한 경우, 옵트인 요구 사항에 대한 경고가 표시됩니다.</p></div>',9))])}const X=B(D,[["render",x]]);export{G as __pageData,X as default};
