import{_ as o,C as p,c as d,o as E,j as i,G as s,ag as h,a as l,w as n}from"./chunks/framework.Bksy39di.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-css-dsl.md","filePath":"ja/ktor/server-css-dsl.md","lastUpdated":1755457140000}'),g={name:"ja/ktor/server-css-dsl.md"};function c(y,a,u,F,C,_){const r=p("tldr"),t=p("code-block"),e=p("TabItem"),k=p("Tabs");return E(),d("div",null,[a[1]||(a[1]=i("h1",{id:"css-dsl",tabindex:"-1"},[l("CSS DSL "),i("a",{class:"header-anchor",href:"#css-dsl","aria-label":'Permalink to "CSS DSL"'},"​")],-1)),s(r,null,{default:n(()=>a[0]||(a[0]=[i("p",null,[i("b",null,"必要な依存関係"),l(": "),i("code",null,"io.ktor:ktor-server-html-builder"),l(", "),i("code",null,"org.jetbrains.kotlin-wrappers:kotlin-css")],-1),i("p",null,[i("b",null,"コード例"),l(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/css-dsl"}," css-dsl ")],-1)])),_:1}),a[2]||(a[2]=h('<p>CSS DSLは<a href="./server-html-dsl">HTML DSL</a>を拡張し、<a href="./https://github.com/JetBrains/kotlin-wrappers/blob/master/kotlin-css/README">kotlin-css</a>ラッパーを使用してKotlinでスタイルシートを作成できるようにします。</p><blockquote><p>スタイルシートを静的コンテンツとして提供する方法については、<a href="./server-static-content">静的コンテンツの提供</a>を参照してください。</p></blockquote><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>CSS DSLは<a href="./server-plugins#install">インストール</a>を必要としませんが、ビルドスクリプトに以下のアーティファクトを含める必要があります。</p><ol><li>HTML DSL用の<code>ktor-server-html-builder</code>アーティファクト:</li></ol>',5)),s(k,{group:"languages"},{default:n(()=>[s(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[s(t,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-server-html-builder:$ktor_version")'})]),_:1}),s(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[s(t,{lang:"Groovy",code:'               implementation "io.ktor:ktor-server-html-builder:$ktor_version"'})]),_:1}),s(e,{title:"Maven","group-key":"maven"},{default:n(()=>[s(t,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-server-html-builder-jvm</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1}),a[3]||(a[3]=i("ol",{start:"2"},[i("li",null,[l("CSSをビルドするための"),i("code",null,"kotlin-css-jvm"),l("アーティファクト:")])],-1)),s(k,{group:"languages"},{default:n(()=>[s(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[s(t,{lang:"Kotlin",code:'               implementation("org.jetbrains.kotlin-wrappers:kotlin-css:$kotlin_css_version")'})]),_:1}),s(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[s(t,{lang:"Groovy",code:'               implementation "org.jetbrains.kotlin-wrappers:kotlin-css:$kotlin_css_version"'})]),_:1}),s(e,{title:"Maven","group-key":"maven"},{default:n(()=>[s(t,{lang:"XML",code:`               <dependency>
                   <groupId>org.jetbrains.kotlin-wrappers</groupId>
                   <artifactId>kotlin-css</artifactId>
                   <version>\${kotlin_css_version}</version>
               </dependency>`})]),_:1})]),_:1}),a[4]||(a[4]=h(`<p><code>$kotlin_css_version</code>は、例えば<code>1.0.0-pre.625</code>のように、必要な<code>kotlin-css</code>アーティファクトのバージョンに置き換えることができます。</p><h2 id="serve_css" tabindex="-1">CSSの提供 <a class="header-anchor" href="#serve_css" aria-label="Permalink to &quot;CSSの提供 {id=&quot;serve_css&quot;}&quot;">​</a></h2><p>CSSレスポンスを送信するには、<code>ApplicationCall</code>を拡張し、スタイルシートを文字列にシリアライズして<code>CSS</code>コンテンツタイプでクライアントに送信する<code>respondCss</code>メソッドを追加する必要があります。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">suspend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> inline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationCall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondCss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(builder: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CssBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Unit) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CssBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(builder).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), ContentType.Text.CSS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>次に、必要な<a href="./server-routing">ルート</a>内でCSSを提供できます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/styles.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondCss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            backgroundColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Color.darkBlue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            margin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.px)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        rule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h1.page-title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Color.white</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>最後に、<a href="./server-html-dsl">HTML DSL</a>で作成されたHTMLドキュメントに指定されたCSSを使用できます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/html-dsl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondHtml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;stylesheet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/styles.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;text/css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(classes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;page-title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from Ktor!&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>完全な例はこちらで見つけることができます: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/css-dsl" target="_blank" rel="noreferrer">css-dsl</a>。</p>`,9))])}const b=o(g,[["render",c]]);export{m as __pageData,b as default};
