import{_ as e,c as a,o,ag as l}from"./chunks/framework.Bksy39di.js";const h=JSON.parse('{"title":"기본 타입","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/basic-types.md","filePath":"ko/kotlin/basic-types.md","lastUpdated":1754307826000}'),i={name:"ko/kotlin/basic-types.md"};function n(r,t,s,c,p,d){return o(),a("div",null,t[0]||(t[0]=[l('<h1 id="기본-타입" tabindex="-1">기본 타입 <a class="header-anchor" href="#기본-타입" aria-label="Permalink to &quot;기본 타입&quot;">​</a></h1><p>Kotlin에서는 모든 변수에서 멤버 함수와 프로퍼티를 호출할 수 있다는 점에서 모든 것이 객체입니다. 특정 타입은 런타임에 (숫자, 문자, 불리언 등과 같은) 원시 값으로 최적화된 내부 표현을 가지지만, 사용자에게는 일반 클래스처럼 보이고 동작합니다.</p><p>이 섹션에서는 Kotlin에서 사용되는 기본 타입을 설명합니다:</p><ul><li><a href="/ko/kotlin/numbers">숫자</a> 및 해당 <a href="/ko/kotlin/unsigned-integer-types">부호 없는 정수 타입</a></li><li><a href="/ko/kotlin/booleans">불리언</a></li><li><a href="/ko/kotlin/characters">문자</a></li><li><a href="/ko/kotlin/strings">문자열</a></li><li><a href="/ko/kotlin/arrays">배열</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="/ko/kotlin/typecasts">Kotlin에서 타입 검사 및 캐스트를 수행하는 방법을 알아보세요.</a></p></div><p><code>Nothing</code>, <code>Any</code>, <code>Unit</code>과 같은 다른 Kotlin 타입에 대해 알아보려면 Kotlin API 레퍼런스를 참조하세요:</p><ul><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/" target="_blank" rel="noreferrer"><code>Any</code></a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-nothing.html" target="_blank" rel="noreferrer"><code>Nothing</code></a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/" target="_blank" rel="noreferrer"><code>Unit</code></a></li></ul>',7)]))}const _=e(i,[["render",n]]);export{h as __pageData,_ as default};
