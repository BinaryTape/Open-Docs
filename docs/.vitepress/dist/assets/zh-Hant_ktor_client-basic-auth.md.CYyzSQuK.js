import{_ as e,C as n,c as l,o as h,j as s,G as o,ag as p,a,w as r}from"./chunks/framework.Bksy39di.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/client-basic-auth.md","filePath":"zh-Hant/ktor/client-basic-auth.md","lastUpdated":1755457140000}'),c={name:"zh-Hant/ktor/client-basic-auth.md"};function k(d,i,u,E,g,b){const t=n("tldr");return h(),l("div",null,[i[1]||(i[1]=s("h1",{id:"ktor-用戶端的基本身份驗證",tabindex:"-1"},[a("Ktor 用戶端的基本身份驗證 "),s("a",{class:"header-anchor",href:"#ktor-用戶端的基本身份驗證","aria-label":'Permalink to "Ktor 用戶端的基本身份驗證"'},"​")],-1)),o(t,null,{default:r(()=>i[0]||(i[0]=[s("p",null,[s("b",null,"必要相依性"),a(": "),s("code",null,"io.ktor:ktor-client-auth")],-1),s("p",null,[s("b",null,"程式碼範例"),a(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-basic"}," client-auth-basic ")],-1)])),_:1}),i[2]||(i[2]=p(`<p>Basic <a href="./client-auth">身份驗證方案</a>可用於使用者登入。在此方案中，使用者憑證以 Base64 編碼的使用者名稱/密碼對形式傳輸。</p><blockquote><p>在伺服器端，Ktor 提供了 <a href="./server-basic-auth">Authentication</a> 外掛程式用於處理基本身份驗證。</p></blockquote><h2 id="flow" tabindex="-1">基本身份驗證流程 <a class="header-anchor" href="#flow" aria-label="Permalink to &quot;基本身份驗證流程 {id=&quot;flow&quot;}&quot;">​</a></h2><p>基本身份驗證流程如下所示：</p><ol><li>用戶端向伺服器應用程式中的特定資源發出未帶有 <code>Authorization</code> 標頭的請求。</li><li>伺服器回應用戶端一個 <code>401</code> (未經授權) 回應狀態，並使用 <code>WWW-Authenticate</code> 回應標頭提供資訊，表明使用基本身份驗證方案來保護路由。一個典型的 <code>WWW-Authenticate</code> 標頭如下所示：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>WWW-Authenticate: Basic realm=&quot;Access to the &#39;/&#39; path&quot;, charset=&quot;UTF-8&quot;</span></span></code></pre></div><p>Ktor 用戶端允許您無需等待 <code>WWW-Authenticate</code> 標頭即可發送憑證，透過使用 <code>sendWithoutRequest</code> <a href="#configure">函數</a>。</p><ol start="3"><li>通常，用戶端會顯示一個登入對話框，使用者可以在其中輸入憑證。然後，用戶端發出一個帶有 <code>Authorization</code> 標頭的請求，其中包含使用 Base64 編碼的使用者名稱和密碼對，例如：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Authorization: Basic amV0YnJhaW5zOmZvb2Jhcg</span></span></code></pre></div><ol start="4"><li>伺服器驗證用戶端發送的憑證並回應所請求的內容。</li></ol><h2 id="configure" tabindex="-1">配置基本身份驗證 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置基本身份驗證 {id=&quot;configure&quot;}&quot;">​</a></h2><p>要使用 <code>Basic</code> 方案在 <code>Authorization</code> 標頭中發送使用者憑證，您需要按如下方式配置 <code>basic</code> 身份驗證提供者：</p><ol><li>在 <code>install</code> 區塊內呼叫 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/basic.html" target="_blank" rel="noreferrer">basic</a> 函數。</li><li>使用 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-basic-auth-credentials/index.html" target="_blank" rel="noreferrer">BasicAuthCredentials</a> 提供所需憑證，並將此物件傳遞給 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-basic-auth-config/credentials.html" target="_blank" rel="noreferrer">credentials</a> 函數。</li><li>使用 <code>realm</code> 屬性配置領域。</li></ol><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Auth) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                BasicAuthCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;jetbrains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foobar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            realm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Access to the &#39;/&#39; path&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="4"><li>可選地，啟用在初始請求中發送憑證，無需等待帶有 <code>WWW-Authenticate</code> 標頭的 <code>401</code> (未經授權) 回應。您需要呼叫返回布林值的 <code>sendWithoutRequest</code> 函數並檢查請求參數。</li></ol><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Auth) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sendWithoutRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.url.host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0.0.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>您可以在此處找到完整範例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-basic" target="_blank" rel="noreferrer">client-auth-basic</a>。</p></blockquote>`,17))])}const m=e(c,[["render",k]]);export{F as __pageData,m as default};
