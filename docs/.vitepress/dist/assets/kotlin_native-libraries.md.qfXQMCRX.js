import{_ as h,C as e,c as k,o as d,ag as o,G as t,w as l,j as s,a as i}from"./chunks/framework.Bksy39di.js";const u=JSON.parse('{"title":"Kotlin/Native 库","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/native-libraries.md","filePath":"kotlin/native-libraries.md","lastUpdated":1754307826000}'),r={name:"kotlin/native-libraries.md"};function c(g,a,F,y,b,E){const n=e("tab"),p=e("tabs");return d(),k("div",null,[a[2]||(a[2]=o(`<h1 id="kotlin-native-库" tabindex="-1">Kotlin/Native 库 <a class="header-anchor" href="#kotlin-native-库" aria-label="Permalink to &quot;Kotlin/Native 库&quot;">​</a></h1><h2 id="kotlin-编译器具体细节" tabindex="-1">Kotlin 编译器具体细节 <a class="header-anchor" href="#kotlin-编译器具体细节" aria-label="Permalink to &quot;Kotlin 编译器具体细节&quot;">​</a></h2><p>要使用 Kotlin/Native 编译器生成库，请使用 <code>-produce library</code> 或 <code>-p library</code> 标志。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinc-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo.kt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bar</span></span></code></pre></div><p>此命令将生成一个 <code>bar.klib</code> 文件，其中包含 <code>foo.kt</code> 的编译内容。</p><p>要链接到库，请使用 <code>-library &lt;name&gt;</code> 或 <code>-l &lt;name&gt;</code> 标志。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinc-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qux.kt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bar</span></span></code></pre></div><p>此命令将从 <code>qux.kt</code> 和 <code>bar.klib</code> 生成一个 <code>program.kexe</code> 文件。</p><h2 id="cinterop-工具具体细节" tabindex="-1">cinterop 工具具体细节 <a class="header-anchor" href="#cinterop-工具具体细节" aria-label="Permalink to &quot;cinterop 工具具体细节&quot;">​</a></h2><p><strong>cinterop</strong> 工具的主要输出是为原生库生成 <code>.klib</code> 封装器。例如，使用你的 Kotlin/Native 发行版中提供的简单 <code>libgit2.def</code> 原生库定义文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cinterop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -def</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> samples/gitchurn/src/nativeInterop/cinterop/libgit2.def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -compiler-option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I/usr/local/include</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgit2</span></span></code></pre></div><p>我们将得到 <code>libgit2.klib</code>。</p><p>更多详情请参见 <a href="/kotlin/native-c-interop">C Interop</a>。</p><h2 id="klib-实用工具" tabindex="-1">klib 实用工具 <a class="header-anchor" href="#klib-实用工具" aria-label="Permalink to &quot;klib 实用工具&quot;">​</a></h2><p><strong>klib</strong> 库管理实用工具允许你探查和安装库。</p><p>以下命令可用：</p><ul><li><p><code>content</code> – 列出库内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> klib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><code>info</code> – 探查库的簿记详细信息</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> klib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><code>install</code> – 将库安装到默认位置</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> klib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p><code>remove</code> – 从默认版本库中移除库</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> klib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li></ul><p>所有上述命令都接受一个附加的 <code>-repository &lt;directory&gt;</code> 实参，用于指定一个不同于默认的版本库。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> klib</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">comman</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -repository</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">director</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="几个示例" tabindex="-1">几个示例 <a class="header-anchor" href="#几个示例" aria-label="Permalink to &quot;几个示例&quot;">​</a></h2><p>首先，让我们创建一个库。 将这个小库的源代码放入 <code>kotlinizer.kt</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinizer</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String.kotlinized</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Kotlin </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinc-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinizer.kt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinizer</span></span></code></pre></div><p>该库已在当前目录中创建：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinizer.klib</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlinizer.klib</span></span></code></pre></div><p>现在让我们检测库的内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> klib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contents</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinizer</span></span></code></pre></div><p>你可以将 <code>kotlinizer</code> 安装到默认版本库中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> klib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinizer</span></span></code></pre></div><p>从当前目录中移除它的任何痕迹：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinizer.klib</span></span></code></pre></div><p>创建一个非常短的程序并将其放入 <code>use.kt</code> 中：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinizer.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, \${&quot;world&quot;.kotlinized}!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在，编译程序并链接你刚刚创建的库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinc-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use.kt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlinizer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kohello</span></span></code></pre></div><p>并运行程序：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./kohello.kexe</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hello,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Kotlin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> world!</span></span></code></pre></div><p>玩得开心！</p><h2 id="高级主题" tabindex="-1">高级主题 <a class="header-anchor" href="#高级主题" aria-label="Permalink to &quot;高级主题&quot;">​</a></h2><h3 id="库搜索序列" tabindex="-1">库搜索序列 <a class="header-anchor" href="#库搜索序列" aria-label="Permalink to &quot;库搜索序列&quot;">​</a></h3><p>当给定 <code>-library foo</code> 标志时，编译器按以下顺序搜索 <code>foo</code> 库：</p><ul><li><p>当前编译目录或绝对路径。</p></li><li><p>所有使用 <code>-repo</code> 标志指定的版本库。</p></li><li><p>安装在默认版本库中的库。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>默认版本库是 <code>~/.konan</code>。你可以通过设置 <code>kotlin.data.dir</code> Gradle 属性来更改它。 或者，你可以使用 <code>-Xkonan-data-dir</code> 编译器选项，通过 <code>cinterop</code> 和 <code>konanc</code> 工具来配置你的自定义目录路径。</p></div></li><li><p>安装在 <code>$installation/klib</code> 目录中的库。</p></li></ul><h3 id="库格式" tabindex="-1">库格式 <a class="header-anchor" href="#库格式" aria-label="Permalink to &quot;库格式&quot;">​</a></h3><p>Kotlin/Native 库是包含预定义内容的 zip 文件，具有以下布局的目录结构：</p><p>当 <code>foo.klib</code> 被解包为 <code>foo/</code> 时，我们会得到：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  - foo/</span></span>
<span class="line"><span>    - $component_name/</span></span>
<span class="line"><span>      - ir/</span></span>
<span class="line"><span>        - 序列化的 Kotlin IR。</span></span>
<span class="line"><span>      - targets/</span></span>
<span class="line"><span>        - $platform/</span></span>
<span class="line"><span>          - kotlin/</span></span>
<span class="line"><span>            - 编译为 LLVM bitcode 的 Kotlin 代码。</span></span>
<span class="line"><span>          - native/</span></span>
<span class="line"><span>            - 附加原生对象的 Bitcode 文件。</span></span>
<span class="line"><span>        - $another_platform/</span></span>
<span class="line"><span>          - 可以有多个平台特有的 Kotlin 和原生对。</span></span>
<span class="line"><span>      - linkdata/</span></span>
<span class="line"><span>        - 一组包含序列化链接元数据的 ProtoBuf 文件。</span></span>
<span class="line"><span>      - resources/</span></span>
<span class="line"><span>        - 通用资源，例如图片。（尚未启用）。</span></span>
<span class="line"><span>      - manifest - 一个以 Java 属性格式描述库的文件。</span></span></code></pre></div><p>一个示例布局可以在你安装目录下的 <code>klib/stdlib</code> 目录中找到。</p><h3 id="在-klib-中使用相对路径" tabindex="-1">在 klib 中使用相对路径 <a class="header-anchor" href="#在-klib-中使用相对路径" aria-label="Permalink to &quot;在 klib 中使用相对路径&quot;">​</a></h3><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>在 klib 中使用相对路径自 Kotlin 1.6.20 版本起可用。</p></div><p>源代码的序列化 IR 表示是 <code>klib</code> 库的 <a href="#library-format">一部分</a>。它包含用于生成正确调试信息的文件路径。默认情况下，存储的路径是绝对的。 使用 <code>-Xklib-relative-path-base</code> 编译器选项，你可以更改格式并在构件中仅使用相对路径。为了使其工作，请将一个或多个源代码文件的基路径作为实参传递：</p>`,50)),t(p,{group:"build-script"},{default:l(()=>[t(n,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[0]||(a[0]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// ...")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"tasks."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"named"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"KotlinCompilationTask"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<*>>("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"compileKotlin"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"configure"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // $base 是源代码文件的基路径")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    compilerOptions.freeCompilerArgs."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"add"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"-Xklib-relative-path-base='),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"$base"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(n,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[1]||(a[1]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// ...")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"tasks"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"named("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'compileKotlin'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"KotlinCompilationTask"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    compilerOptions {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // $base 是源代码文件的基路径")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        freeCompilerArgs"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"add("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"-Xklib-relative-path-base='),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$base"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})])}const v=h(r,[["render",c]]);export{u as __pageData,v as default};
