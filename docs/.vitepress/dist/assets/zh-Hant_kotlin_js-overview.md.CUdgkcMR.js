import{_ as a,c as r,o as t,ag as o}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"Kotlin for JavaScript","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/js-overview.md","filePath":"zh-Hant/kotlin/js-overview.md","lastUpdated":1754307826000}'),l={name:"zh-Hant/kotlin/js-overview.md"};function i(n,e,s,p,h,c){return t(),r("div",null,e[0]||(e[0]=[o('<h1 id="kotlin-for-javascript" tabindex="-1">Kotlin for JavaScript <a class="header-anchor" href="#kotlin-for-javascript" aria-label="Permalink to &quot;Kotlin for JavaScript&quot;">​</a></h1><p>Kotlin/JS 提供了將您的 Kotlin 程式碼、Kotlin 標準函式庫以及任何相容的依賴項轉譯為 JavaScript 的能力。Kotlin/JS 的當前實作目標是 <a href="https://www.ecma-international.org/ecma-262/5.1/" target="_blank" rel="noreferrer">ES5</a>。</p><p>使用 Kotlin/JS 的推薦方式是透過 <code>kotlin.multiplatform</code> Gradle 插件。它讓您能輕鬆地在一個地方設定和控制目標為 JavaScript 的 Kotlin 專案。這包括了基本功能，例如控制應用程式的捆綁、直接從 npm 添加 JavaScript 依賴項等等。要概覽可用選項，請參閱 <a href="/zh-Hant/kotlin/js-project-setup">設定 Kotlin/JS 專案</a>。</p><h2 id="kotlin-js-ir-編譯器" tabindex="-1">Kotlin/JS IR 編譯器 <a class="header-anchor" href="#kotlin-js-ir-編譯器" aria-label="Permalink to &quot;Kotlin/JS IR 編譯器&quot;">​</a></h2><p><a href="/zh-Hant/kotlin/js-ir-compiler">Kotlin/JS IR 編譯器</a> 相較於舊版預設編譯器，帶來了許多改進。例如，它透過死碼消除減少了產生之可執行檔的大小，並提供了與 JavaScript 生態系統及其工具鏈更流暢的互通性。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>舊版編譯器自 Kotlin 1.8.0 版本起已被棄用。</p></div><p>透過從 Kotlin 程式碼產生 TypeScript 宣告檔案 (<code>d.ts</code>)，IR 編譯器使得建立混合 TypeScript 和 Kotlin 程式碼的「混合」應用程式，以及利用 Kotlin Multiplatform 的程式碼共享功能變得更加容易。</p><p>要了解更多關於 Kotlin/JS IR 編譯器中的可用功能以及如何在您的專案中嘗試它，請造訪 <a href="/zh-Hant/kotlin/js-ir-compiler">Kotlin/JS IR 編譯器文件頁面</a> 和 <a href="/zh-Hant/kotlin/js-ir-migration">遷移指南</a>。</p><h2 id="kotlin-js-框架" tabindex="-1">Kotlin/JS 框架 <a class="header-anchor" href="#kotlin-js-框架" aria-label="Permalink to &quot;Kotlin/JS 框架&quot;">​</a></h2><p>現代網頁開發從簡化網頁應用程式建置的框架中獲益匪淺。以下是一些由不同作者編寫的、針對 Kotlin/JS 的流行網頁框架範例：</p><h3 id="kobweb" tabindex="-1">Kobweb <a class="header-anchor" href="#kobweb" aria-label="Permalink to &quot;Kobweb&quot;">​</a></h3><p><em>Kobweb</em> 是一個有明確觀點的 Kotlin 框架，用於建立網站和網頁應用程式。它利用 <a href="https://github.com/JetBrains/compose-multiplatform?tab=readme-ov-file#compose-html" target="_blank" rel="noreferrer">Compose HTML</a> 和即時重載來實現快速開發。受 <a href="https://nextjs.org/" target="_blank" rel="noreferrer">Next.js</a> 啟發，Kobweb 提倡一種標準結構來添加小工具、佈局和頁面。</p><p>開箱即用，Kobweb 提供了頁面路由、淺色/深色模式、CSS 樣式、Markdown 支援、後端 API 和更多功能。它還包含一個名為 Silk 的 UI 函式庫，一套用於現代 UI 的多功能小工具。</p><p>Kobweb 還支援網站匯出，為 SEO 和自動搜尋索引產生頁面快照。此外，Kobweb 使建立基於 DOM 的 UI 變得容易，這些 UI 可以有效率地響應狀態變化進行更新。</p><p>請造訪 <a href="https://kobweb.varabyte.com/" target="_blank" rel="noreferrer">Kobweb</a> 網站以獲取文件和範例。</p><p>關於該框架的更新和討論，請在 Kotlin Slack 中加入 <a href="https://kotlinlang.slack.com/archives/C04RTD72RQ8" target="_blank" rel="noreferrer">#kobweb</a> 和 <a href="https://kotlinlang.slack.com/archives/C01F2HV7868" target="_blank" rel="noreferrer">#compose-web</a> 頻道。</p><h3 id="kvision" tabindex="-1">KVision <a class="header-anchor" href="#kvision" aria-label="Permalink to &quot;KVision&quot;">​</a></h3><p><em>KVision</em> 是一個物件導向的網頁框架，它使得可以使用 Kotlin/JS 編寫應用程式，並提供即用型元件，這些元件可用作應用程式使用者介面的建置塊。您可以使用反應式和指令式程式設計模型來建置前端，使用 Ktor、Spring Boot 和其他框架的連接器將其與您的伺服器端應用程式整合，並使用 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/get-started.html" target="_blank" rel="noreferrer">Kotlin Multiplatform</a> 共享程式碼。</p><p><a href="https://kvision.io" target="_blank" rel="noreferrer">造訪 KVision 網站</a> 以獲取文件、教學課程和範例。</p><p>關於該框架的更新和討論，請在 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中加入 <a href="https://kotlinlang.slack.com/messages/kvision" target="_blank" rel="noreferrer">#kvision</a> 和 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 頻道。</p><h3 id="fritz2" tabindex="-1">fritz2 <a class="header-anchor" href="#fritz2" aria-label="Permalink to &quot;fritz2&quot;">​</a></h3><p><em>fritz2</em> 是一個獨立框架，用於建置反應式網頁使用者介面。它提供了自己的型別安全 DSL，用於建置和渲染 HTML 元素，並利用 Kotlin 的協程和流來表達元件及其資料綁定。它開箱即用地提供了狀態管理、驗證、路由等功能，並與 Kotlin Multiplatform 專案整合。</p><p><a href="https://www.fritz2.dev" target="_blank" rel="noreferrer">造訪 fritz2 網站</a> 以獲取文件、教學課程和範例。</p><p>關於該框架的更新和討論，請在 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中加入 <a href="https://kotlinlang.slack.com/messages/fritz2" target="_blank" rel="noreferrer">#fritz2</a> 和 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 頻道。</p><h3 id="doodle" tabindex="-1">Doodle <a class="header-anchor" href="#doodle" aria-label="Permalink to &quot;Doodle&quot;">​</a></h3><p><em>Doodle</em> 是一個基於向量的 Kotlin/JS UI 框架。Doodle 應用程式使用瀏覽器的圖形功能來繪製使用者介面，而不是依賴 DOM、CSS 或 Javascript。透過這種方法，Doodle 讓您能夠精確控制任意 UI 元素、向量形狀、漸層和自訂視覺化的渲染。</p><p><a href="https://nacular.github.io/doodle/" target="_blank" rel="noreferrer">造訪 Doodle 網站</a> 以獲取文件、教學課程和範例。</p><p>關於該框架的更新和討論，請在 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中加入 <a href="https://kotlinlang.slack.com/messages/doodle" target="_blank" rel="noreferrer">#doodle</a> 和 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 頻道。</p><h2 id="加入-kotlin-js-社群" tabindex="-1">加入 Kotlin/JS 社群 <a class="header-anchor" href="#加入-kotlin-js-社群" aria-label="Permalink to &quot;加入 Kotlin/JS 社群&quot;">​</a></h2><p>您可以加入官方 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">Kotlin Slack</a> 中的 <a href="https://kotlinlang.slack.com/archives/C0B8L3U69" target="_blank" rel="noreferrer">#javascript</a> 頻道，與社群和團隊聊天。</p>',30)]))}const b=a(l,[["render",i]]);export{f as __pageData,b as default};
