import{_ as e,a as l,b as o}from"./chunks/wasm-performance-compose.D4ElAMQ8.js";import{_ as t}from"./chunks/slack.7XnOPcJK.js";import{_ as r,c as s,o as i,ag as n}from"./chunks/framework.Bksy39di.js";const K=JSON.parse('{"title":"Kotlin/Wasm","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/wasm-overview.md","filePath":"zh-Hant/kotlin/wasm-overview.md","lastUpdated":1754307826000}'),m={name:"zh-Hant/kotlin/wasm-overview.md"};function p(h,a,c,f,k,b){return i(),s("div",null,a[0]||(a[0]=[n('<h1 id="kotlin-wasm" tabindex="-1">Kotlin/Wasm <a class="header-anchor" href="#kotlin-wasm" aria-label="Permalink to &quot;Kotlin/Wasm&quot;">​</a></h1><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin/Wasm 處於 <a href="/zh-Hant/kotlin/components-stability">Alpha 階段</a>。 它可能隨時變更。您可以在非生產環境中使用它。我們歡迎您透過 <a href="https://youtrack.jetbrains.com/issue/KT-56492" target="_blank" rel="noreferrer">YouTrack</a> 提供回饋。 <a href="https://slack-chats.kotlinlang.org/c/webassembly" target="_blank" rel="noreferrer">加入 Kotlin/Wasm 社群</a>。</p></div><p>Kotlin/Wasm 能夠將您的 Kotlin 程式碼編譯成 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly (Wasm)</a> 格式。 透過 Kotlin/Wasm，您可以建立在支援 Wasm 並符合 Kotlin 要求的不同環境與裝置上執行的應用程式。</p><p>Wasm 是一種基於堆疊虛擬機器的二進位指令格式。這種格式與平台無關，因為它在自己的虛擬機器上執行。Wasm 為 Kotlin 和其他語言提供了編譯目標。</p><p>您可以在不同的目標環境中使用 Kotlin/Wasm，例如瀏覽器，用於開發基於 <a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a> 的網頁應用程式，或者在瀏覽器外部的獨立 Wasm 虛擬機器中。在瀏覽器外部的情況下，<a href="https://wasi.dev/" target="_blank" rel="noreferrer">WebAssembly System Interface (WASI)</a> 提供了對平台 API 的存取權，您也可以利用這些 API。</p><h2 id="kotlin-wasm-與-compose-multiplatform" tabindex="-1">Kotlin/Wasm 與 Compose Multiplatform <a class="header-anchor" href="#kotlin-wasm-與-compose-multiplatform" aria-label="Permalink to &quot;Kotlin/Wasm 與 Compose Multiplatform&quot;">​</a></h2><p>透過 Kotlin，您可以透過 Compose Multiplatform 和 Kotlin/Wasm，建立應用程式並在您的網頁專案中重複使用行動裝置與桌面使用者介面 (UI)。</p><p><a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a> 是一個基於 Kotlin 和 <a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noreferrer">Jetpack Compose</a> 的宣告式框架，它允許您一次實作 UI 並在所有目標平台之間共用。</p><p>對於網頁平台，Compose Multiplatform 使用 Kotlin/Wasm 作為其編譯目標。使用 Kotlin/Wasm 和 Compose Multiplatform 建置的應用程式使用 <code>wasm-js</code> 目標並在瀏覽器中執行。</p><p><a href="https://zal.im/wasm/jetsnack/" target="_blank" rel="noreferrer">探索我們使用 Compose Multiplatform 和 Kotlin/Wasm 建置的應用程式線上示範</a></p><p><img src="'+e+'" alt="Kotlin/Wasm 示範" width="700"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>若要在瀏覽器中執行使用 Kotlin/Wasm 建置的應用程式，您需要支援新的垃圾收集和傳統例外處理提案的瀏覽器版本。若要檢查瀏覽器支援狀態，請參閱 <a href="https://webassembly.org/roadmap/" target="_blank" rel="noreferrer">WebAssembly 路線圖</a>。</p></div><p>此外，您可以在 Kotlin/Wasm 中直接使用最受歡迎的 Kotlin 函式庫。如同在其他 Kotlin 和多平台專案中一樣，您可以在建置指令碼中包含依賴宣告。如需更多資訊，請參閱 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-add-dependencies.html" target="_blank" rel="noreferrer">新增多平台函式庫的依賴</a>。</p><p>您想親自試試看嗎？</p><p><a href="/zh-Hant/kotlin/wasm-get-started"><img src="'+l+'" width="600" alt="開始使用 Kotlin/Wasm" style=""></a></p><h2 id="kotlin-wasm-與-wasi" tabindex="-1">Kotlin/Wasm 與 WASI <a class="header-anchor" href="#kotlin-wasm-與-wasi" aria-label="Permalink to &quot;Kotlin/Wasm 與 WASI&quot;">​</a></h2><p>Kotlin/Wasm 針對伺服器端應用程式使用 <a href="https://wasi.dev/" target="_blank" rel="noreferrer">WebAssembly System Interface (WASI)</a>。使用 Kotlin/Wasm 和 WASI 建置的應用程式使用 Wasm-WASI 目標，讓您可以呼叫 WASI API 並在瀏覽器環境外部執行應用程式。</p><p>Kotlin/Wasm 利用 WASI 抽象化平台特定的細節，讓相同的 Kotlin 程式碼可以在各種不同的平台上執行。這將 Kotlin/Wasm 的觸及範圍擴展到網頁應用程式之外，而無需針對每個執行時期進行客製化處理。</p><p>WASI 提供一個安全的標準介面，用於在不同環境中執行編譯為 WebAssembly 的 Kotlin 應用程式。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>若要查看 Kotlin/Wasm 和 WASI 的實際應用，請查看 <a href="/zh-Hant/kotlin/wasm-wasi">開始使用 Kotlin/Wasm 和 WASI 教學</a>。</p></div><h2 id="kotlin-wasm-效能" tabindex="-1">Kotlin/Wasm 效能 <a class="header-anchor" href="#kotlin-wasm-效能" aria-label="Permalink to &quot;Kotlin/Wasm 效能&quot;">​</a></h2><p>儘管 Kotlin/Wasm 仍處於 Alpha 階段，但在 Kotlin/Wasm 上執行的 Compose Multiplatform 已展現出令人鼓舞的效能特徵。您可以看到它的執行速度超越了 JavaScript，並且正在接近 JVM 的速度：</p><p><img src="'+o+'" alt="Kotlin/Wasm 效能" width="700"></p><p>我們定期對 Kotlin/Wasm 執行基準測試，這些結果來自我們在最新版本 Google Chrome 中的測試。</p><h2 id="瀏覽器-api-支援" tabindex="-1">瀏覽器 API 支援 <a class="header-anchor" href="#瀏覽器-api-支援" aria-label="Permalink to &quot;瀏覽器 API 支援&quot;">​</a></h2><p>Kotlin/Wasm 標準函式庫提供了瀏覽器 API 的宣告，包括 DOM API。透過這些宣告，您可以直接使用 Kotlin API 來存取和利用各種瀏覽器功能。例如，在您的 Kotlin/Wasm 應用程式中，您可以使用 DOM 元素的操縱或擷取 API，而無需從頭定義這些宣告。若要了解更多，請參閱我們的 <a href="https://github.com/Kotlin/kotlin-wasm-examples/tree/main/browser-example" target="_blank" rel="noreferrer">Kotlin/Wasm 瀏覽器範例</a>。</p><p>瀏覽器 API 支援的宣告是使用 JavaScript <a href="/zh-Hant/kotlin/wasm-js-interop">互通性功能</a> 來定義的。您可以使用相同的功能來定義您自己的宣告。此外，Kotlin/Wasm–JavaScript 互通性允許您從 JavaScript 使用 Kotlin 程式碼。如需更多資訊，請參閱 <a href="/zh-Hant/kotlin/wasm-js-interop#use-kotlin-code-in-javascript">在 JavaScript 中使用 Kotlin 程式碼</a>。</p><h2 id="提供回饋" tabindex="-1">提供回饋 <a class="header-anchor" href="#提供回饋" aria-label="Permalink to &quot;提供回饋&quot;">​</a></h2><h3 id="kotlin-wasm-回饋" tabindex="-1">Kotlin/Wasm 回饋 <a class="header-anchor" href="#kotlin-wasm-回饋" aria-label="Permalink to &quot;Kotlin/Wasm 回饋&quot;">​</a></h3><ul><li><img src="'+t+'" alt="Slack" width="25" type="joined"> Slack: <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">取得 Slack 邀請函</a> 並直接在我們的 <a href="https://kotlinlang.slack.com/archives/CDFP59223" target="_blank" rel="noreferrer">#webassembly</a> 頻道向開發者提供您的回饋。</li><li>在 <a href="https://youtrack.jetbrains.com/issue/KT-56492" target="_blank" rel="noreferrer">YouTrack</a> 中報告任何問題。</li></ul><h3 id="compose-multiplatform-回饋" tabindex="-1">Compose Multiplatform 回饋 <a class="header-anchor" href="#compose-multiplatform-回饋" aria-label="Permalink to &quot;Compose Multiplatform 回饋&quot;">​</a></h3><ul><li><img src="'+t+'" alt="Slack" width="25" type="joined"> Slack: 在 <a href="https://slack-chats.kotlinlang.org/c/compose-web" target="_blank" rel="noreferrer">#compose-web</a> 公開頻道中提供您的回饋。</li><li><a href="https://github.com/JetBrains/compose-multiplatform/issues" target="_blank" rel="noreferrer">在 GitHub 中報告任何問題</a>。</li></ul><h2 id="了解更多" tabindex="-1">了解更多 <a class="header-anchor" href="#了解更多" aria-label="Permalink to &quot;了解更多&quot;">​</a></h2><ul><li>在此 <a href="https://kotl.in/wasm-pl" target="_blank" rel="noreferrer">YouTube 播放清單</a> 中了解更多關於 Kotlin/Wasm 的資訊。</li><li>探索我們 GitHub 儲存庫中的 <a href="https://github.com/Kotlin/kotlin-wasm-examples" target="_blank" rel="noreferrer">Kotlin/Wasm 範例</a>。</li></ul>',34)]))}const w=r(m,[["render",p]]);export{K as __pageData,w as default};
