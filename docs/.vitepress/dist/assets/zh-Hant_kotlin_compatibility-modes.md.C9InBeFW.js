import{_ as a,c as e,o,ag as i}from"./chunks/framework.Bksy39di.js";const m=JSON.parse('{"title":"相容模式","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/compatibility-modes.md","filePath":"zh-Hant/kotlin/compatibility-modes.md","lastUpdated":1754307826000}'),n={name:"zh-Hant/kotlin/compatibility-modes.md"};function l(r,t,s,c,d,p){return o(),e("div",null,t[0]||(t[0]=[i('<h1 id="相容模式" tabindex="-1">相容模式 <a class="header-anchor" href="#相容模式" aria-label="Permalink to &quot;相容模式&quot;">​</a></h1><p>當大型團隊升級到新版本時，可能會在某個時間點出現「不一致狀態」，即部分開發人員已更新，而其他開發人員尚未更新。為防止前者編寫並提交他人可能無法編譯的程式碼，我們提供了以下命令列開關（在 IDE 和 <a href="/zh-Hant/kotlin/gradle-compiler-options">Gradle</a>/<a href="/zh-Hant/kotlin/maven#specify-compiler-options">Maven</a> 中也可用）：</p><ul><li><code>-language-version X.Y</code> - Kotlin 語言版本 X.Y 的相容模式，報告所有稍後推出的語言功能所產生的錯誤。</li><li><code>-api-version X.Y</code> - Kotlin API 版本 X.Y 的相容模式，報告所有使用 Kotlin 標準函式庫中較新 API 的程式碼所產生的錯誤（包括編譯器生成的程式碼）。</li></ul><p>目前，除了最新的穩定版本外，我們還支援至少三個以前的語言和 API 版本的開發。</p>',4)]))}const h=a(n,[["render",l]]);export{m as __pageData,h as default};
