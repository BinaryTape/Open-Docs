import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"使用 Amper 進行專案配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/amper.md","filePath":"zh-Hant/kmp/amper.md","lastUpdated":1755516278000}'),p={name:"zh-Hant/kmp/amper.md"};function t(l,s,r,h,k,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="使用-amper-進行專案配置" tabindex="-1">使用 Amper 進行專案配置 <a class="header-anchor" href="#使用-amper-進行專案配置" aria-label="Permalink to &quot;使用 Amper 進行專案配置&quot;">​</a></h1><p><a href="https://github.com/JetBrains/amper/tree/HEAD" target="_blank" rel="noreferrer">Amper</a> 是 JetBrains 創建的一個新工具，旨在協助您配置專案以進行建置、打包、發佈等。透過 Amper，您可以花費更少的時間處理建置系統，而將重心放在解決實際的業務挑戰上。</p><p>Amper 允許您為 Kotlin 多平台應用程式建立配置檔案，這些應用程式可在 JVM、Android、iOS、macOS 和 Linux 上運行，也可用於支援所有這些目標平台的多平台函式庫。</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>Amper 目前為 <a href="./supported-platforms#general-kotlin-stability-levels">實驗性質</a>。 歡迎您在 Kotlin 多平台專案中嘗試使用它。 我們將感謝您在 <a href="https://youtrack.jetbrains.com/issues/AMPER" target="_blank" rel="noreferrer">YouTrack</a> 中提供回饋。</p></div><h2 id="amper-的運作方式" tabindex="-1">Amper 的運作方式 <a class="header-anchor" href="#amper-的運作方式" aria-label="Permalink to &quot;Amper 的運作方式&quot;">​</a></h2><p>Amper 目前使用 Gradle 作為後端，並使用 YAML 作為定義專案配置的前端。它透過 Gradle 互通性支援自訂任務、CocoaPods、將函式庫發佈到 Maven，以及打包桌面應用程式。</p><p>透過 Amper，您可以為特定平台應用程式和共享 Kotlin 函式庫設定配置。它們被宣告為 <code>.yaml</code> 模組清單檔案中的模組，使用特殊的宣告式 DSL。</p><p>此 DSL 的核心概念是 Kotlin Multiplatform。Amper 允許您快速輕鬆地配置 Kotlin 多平台專案，而無需深入複雜的 Gradle 概念。Amper DSL 提供一種特殊語法，讓您可以處理多平台配置，包括依賴項、設定等。</p><p>以下是一個 Amper 清單檔案的範例，用於 Kotlin 多平台共享函式庫，可與 JVM、Android 和 iOS 應用程式搭配使用：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">product</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lib</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  platforms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jvm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iosSimulatorArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iosX64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 共享 Compose 多平台依賴項:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">org.jetbrains.compose.foundation:foundation:1.5.0-rc01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">org.jetbrains.compose.material3:material3:1.5.0-rc01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 僅限 Android 的依賴項  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies@android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 將 Compose 與活動整合</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.activity:activity-compose:1.7.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.appcompat:appcompat:1.6.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 僅限 iOS 的依賴項，並依賴 CocoaPod</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 請注意，CocoaPods 依賴項尚未在原型中實作</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies@ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;FirebaseCore&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~&gt; 6.6&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 啟用 Kotlin 序列化</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    serialization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 啟用 Compose 多平台框架</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  compose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">enabled</span></span></code></pre></div><ul><li><code>product</code> 部分定義了專案類型和目標平台列表。</li><li><code>dependencies</code> 部分不僅添加了 Kotlin 和 Maven 依賴項，還添加了特定平台的套件管理器，例如 CocoaPods 和 Swift Package Manager。</li><li><code>@platform</code> 限定符標記了特定平台的部分，包括依賴項和設定。</li></ul><h2 id="試用-amper" tabindex="-1">試用 Amper <a class="header-anchor" href="#試用-amper" aria-label="Permalink to &quot;試用 Amper&quot;">​</a></h2><p>您可以透過以下方式之一試用 Amper：</p><ul><li>在 JVM 和 Android 專案中（從建置版本 233.11555 開始）使用 <a href="https://www.jetbrains.com/idea/nextversion/" target="_blank" rel="noreferrer">IntelliJ IDEA</a> 2023.3 及更高版本。</li><li>使用 <a href="https://docs.gradle.org/current/userguide/userguide.html" target="_blank" rel="noreferrer">Gradle</a> 從命令列或您的 CI/CD 工具建置 Amper 專案。</li></ul><p>依照 <a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/Tutorial">本教學課程</a> 建立您的第一個 Kotlin 多平台專案。探索 <a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/Documentation">說明文件</a> 以了解更多關於 Amper 的功能和設計。</p><p>歡迎隨時向我們的 <a href="https://youtrack.jetbrains.com/issues/AMPER" target="_blank" rel="noreferrer">問題追蹤器</a> 提交任何回饋。您的意見將幫助我們塑造 Amper 的未來。</p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><ul><li>查看 <a href="https://blog.jetbrains.com/blog/2023/11/09/amper-improving-the-build-tooling-user-experience" target="_blank" rel="noreferrer">JetBrains 部落格</a> 以了解更多關於我們創建 Amper 的動機、其使用案例、專案的當前狀態及其未來。</li><li>查看 <a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/FAQ">Amper 常見問題</a> 以尋找最常見問題的答案。</li><li>閱讀 <a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/Documentation">Amper 說明文件</a>，其中涵蓋了 Amper 功能和設計的不同方面。</li></ul>`,18)]))}const c=i(p,[["render",t]]);export{E as __pageData,c as default};
