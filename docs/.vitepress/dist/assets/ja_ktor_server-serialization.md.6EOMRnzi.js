import{_ as F,C as k,c as C,o as m,G as t,ag as r,j as i,w as n,a as s}from"./chunks/framework.Bksy39di.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-serialization.md","filePath":"ja/ktor/server-serialization.md","lastUpdated":1755457140000}'),v={name:"ja/ktor/server-serialization.md"};function b(f,a,_,B,x,z){const d=k("TopicTitle"),g=k("show-structure"),E=k("primary-label"),p=k("Links"),c=k("tldr"),y=k("link-summary"),l=k("code-block"),e=k("TabItem"),o=k("Tabs"),h=k("snippet"),u=k("list");return m(),C("div",null,[t(d,{labelRef:"server-plugin",title:"Ktor Serverにおけるコンテンツネゴシエーションとシリアライゼーション"}),t(g,{for:"chapter",depth:"2"}),t(E,{ref:"server-plugin"},null,512),t(c,null,{default:n(()=>[a[3]||(a[3]=i("p",null,[i("b",null,"必要な依存関係"),s(": "),i("code",null,"io.ktor:ktor-server-content-negotiation")],-1)),a[4]||(a[4]=i("p",null,[i("b",null,"コード例"),s(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/json-kotlinx"}," json-kotlinx ")],-1)),i("p",null,[i("b",null,[t(p,{href:"/ktor/server-native",summary:"KtorはKotlin/Nativeをサポートしており、追加のランタイムや仮想マシンなしでサーバーを実行できます。"},{default:n(()=>a[0]||(a[0]=[s("ネイティブサーバー")])),_:1}),a[1]||(a[1]=s("のサポート"))]),a[2]||(a[2]=s(": ✅ "))])]),_:1}),t(y,null,{default:n(()=>a[5]||(a[5]=[s(" ContentNegotiationプラグインには主に2つの目的があります。クライアントとサーバー間のメディアタイプネゴシエーションと、特定のフォーマットでのコンテンツのシリアライゼーション/デシリアライゼーションです。 ")])),_:1}),a[37]||(a[37]=r('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-content-negotiation/io.ktor.server.plugins.contentnegotiation/-content-negotiation.html" target="_blank" rel="noreferrer">ContentNegotiation</a>プラグインには主に2つの目的があります。</p><ul><li>クライアントとサーバー間のメディアタイプをネゴシエーションする。これには<code>Accept</code>ヘッダーと<code>Content-Type</code>ヘッダーが使用されます。</li><li>特定のフォーマットでコンテンツをシリアライズ/デシリアライズする。Ktorは以下のフォーマットをそのままサポートしています: JSON、XML、CBOR、ProtoBuf。</li></ul><blockquote><p>クライアント側では、Ktorはコンテンツのシリアライゼーション/デシリアライゼーションのために<a href="./client-serialization">ContentNegotiation</a>プラグインを提供しています。</p></blockquote><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><h3 id="add_content_negotiation_dependency" tabindex="-1">ContentNegotiation <a class="header-anchor" href="#add_content_negotiation_dependency" aria-label="Permalink to &quot;ContentNegotiation {id=&quot;add_content_negotiation_dependency&quot;}&quot;">​</a></h3><p><code>ContentNegotiation</code>を使用するには、ビルドスクリプトに<code>ktor-server-content-negotiation</code>アーティファクトを含める必要があります: </p>',6)),t(o,{group:"languages"},{default:n(()=>[t(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-content-negotiation:$ktor_version")'})]),_:1}),t(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"'})]),_:1}),t(e,{title:"Maven","group-key":"maven"},{default:n(()=>[t(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-content-negotiation-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),a[38]||(a[38]=i("p",null,[s("特定のフォーマット用のシリアライザーには、追加のアーティファクトが必要となることに注意してください。たとえば、kotlinx.serializationではJSON用に"),i("code",null,"ktor-serialization-kotlinx-json"),s("の依存関係が必要です。")],-1)),a[39]||(a[39]=i("h3",{id:"serialization_dependency",tabindex:"-1"},[s("シリアライゼーション "),i("a",{class:"header-anchor",href:"#serialization_dependency","aria-label":'Permalink to "シリアライゼーション {id="serialization_dependency"}"'},"​")],-1)),t(h,{id:"add_serialization_dependency"},{default:n(()=>[a[9]||(a[9]=i("p",null,[s("kotlinx.serializationコンバーターを使用する前に、"),i("a",{href:"https://github.com/Kotlin/kotlinx.serialization#setup",target:"_blank",rel:"noreferrer"},"セットアップ"),s("セクションで説明されているように、Kotlin serializationプラグインを追加する必要があります。")],-1)),a[10]||(a[10]=i("h4",{id:"add_json_dependency",tabindex:"-1"},[s("JSON "),i("a",{class:"header-anchor",href:"#add_json_dependency","aria-label":'Permalink to "JSON {id="add_json_dependency"}"'},"​")],-1)),a[11]||(a[11]=i("p",null,"JSONデータをシリアライズ/デシリアライズするには、kotlinx.serialization、Gson、Jacksonのいずれかのライブラリを選択できます。",-1)),t(o,{group:"json-libraries"},{default:n(()=>[t(e,{title:"kotlinx.serialization","group-key":"kotlinx"},{default:n(()=>[a[6]||(a[6]=i("p",null,[s("ビルドスクリプトに"),i("code",null,"ktor-serialization-kotlinx-json"),s("アーティファクトを追加します:")],-1)),t(o,{group:"languages"},{default:n(()=>[t(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")'})]),_:1}),t(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"'})]),_:1}),t(e,{title:"Maven","group-key":"maven"},{default:n(()=>[t(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-serialization-kotlinx-json-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1})]),_:1}),t(e,{title:"Gson","group-key":"gson"},{default:n(()=>[a[7]||(a[7]=i("p",null,[s("ビルドスクリプトに"),i("code",null,"ktor-serialization-gson"),s("アーティファクトを追加します:")],-1)),t(o,{group:"languages"},{default:n(()=>[t(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-serialization-gson:$ktor_version")'})]),_:1}),t(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-serialization-gson:$ktor_version"'})]),_:1}),t(e,{title:"Maven","group-key":"maven"},{default:n(()=>[t(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-serialization-gson-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1})]),_:1}),t(e,{title:"Jackson","group-key":"jackson"},{default:n(()=>[a[8]||(a[8]=i("p",null,[s("ビルドスクリプトに"),i("code",null,"ktor-serialization-jackson"),s("アーティファクトを追加します:")],-1)),t(o,{group:"languages"},{default:n(()=>[t(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-serialization-jackson:$ktor_version")'})]),_:1}),t(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-serialization-jackson:$ktor_version"'})]),_:1}),t(e,{title:"Maven","group-key":"maven"},{default:n(()=>[t(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-serialization-jackson-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1})]),_:1})]),_:1}),a[12]||(a[12]=i("h4",{id:"add_xml_dependency",tabindex:"-1"},[s("XML "),i("a",{class:"header-anchor",href:"#add_xml_dependency","aria-label":'Permalink to "XML {id="add_xml_dependency"}"'},"​")],-1)),a[13]||(a[13]=i("p",null,[s("XMLをシリアライズ/デシリアライズするには、ビルドスクリプトに"),i("code",null,"ktor-serialization-kotlinx-xml"),s("を追加します:")],-1)),t(o,{group:"languages"},{default:n(()=>[t(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-serialization-kotlinx-xml:$ktor_version")'})]),_:1}),t(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-serialization-kotlinx-xml:$ktor_version"'})]),_:1}),t(e,{title:"Maven","group-key":"maven"},{default:n(()=>[t(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-serialization-kotlinx-xml-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),a[14]||(a[14]=i("div",{class:"note custom-block"},[i("p",{class:"custom-block-title"},"NOTE"),i("p",null,[s("XMLシリアライゼーションは"),i("a",{href:"https://github.com/pdvrieze/xmlutil/issues/83",target:"_blank",rel:"noreferrer"},[i("code",null,"jsNode"),s("ターゲットでサポートされていません")]),s("のでご注意ください。")])],-1)),a[15]||(a[15]=i("h4",{id:"add_cbor_dependency",tabindex:"-1"},[s("CBOR "),i("a",{class:"header-anchor",href:"#add_cbor_dependency","aria-label":'Permalink to "CBOR {id="add_cbor_dependency"}"'},"​")],-1)),a[16]||(a[16]=i("p",null,[s("CBORをシリアライズ/デシリアライズするには、ビルドスクリプトに"),i("code",null,"ktor-serialization-kotlinx-cbor"),s("を追加します:")],-1)),t(o,{group:"languages"},{default:n(()=>[t(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-serialization-kotlinx-cbor:$ktor_version")'})]),_:1}),t(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-serialization-kotlinx-cbor:$ktor_version"'})]),_:1}),t(e,{title:"Maven","group-key":"maven"},{default:n(()=>[t(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-serialization-kotlinx-cbor-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),a[17]||(a[17]=i("h4",{id:"add_protobuf_dependency",tabindex:"-1"},[s("ProtoBuf "),i("a",{class:"header-anchor",href:"#add_protobuf_dependency","aria-label":'Permalink to "ProtoBuf {id="add_protobuf_dependency"}"'},"​")],-1)),a[18]||(a[18]=i("p",null,[s("ProtoBufをシリアライズ/デシリアライズするには、ビルドスクリプトに"),i("code",null,"ktor-serialization-kotlinx-protobuf"),s("を追加します:")],-1)),t(o,{group:"languages"},{default:n(()=>[t(e,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-serialization-kotlinx-protobuf:$ktor_version")'})]),_:1}),t(e,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-serialization-kotlinx-protobuf:$ktor_version"'})]),_:1}),t(e,{title:"Maven","group-key":"maven"},{default:n(()=>[t(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-serialization-kotlinx-protobuf-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1})]),_:1}),a[40]||(a[40]=i("h2",{id:"install_plugin",tabindex:"-1"},[s("ContentNegotiationのインストール "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "ContentNegotiationのインストール {id="install_plugin"}"'},"​")],-1)),i("p",null,[a[20]||(a[20]=s(" アプリケーションに")),a[21]||(a[21]=i("a",{href:"#install"},"インストール",-1)),a[22]||(a[22]=s("するには、指定された")),t(p,{href:"/ktor/server-modules",summary:"モジュールを使用すると、ルートをグループ化してアプリケーションを構造化できます。"},{default:n(()=>a[19]||(a[19]=[s("モジュール")])),_:1}),a[23]||(a[23]=s("内の")),a[24]||(a[24]=i("code",null,"install",-1)),a[25]||(a[25]=s("関数に")),a[26]||(a[26]=i("code",null,"ContentNegotiation",-1)),a[27]||(a[27]=s("プラグインを渡します。 以下のコードスニペットは、")),a[28]||(a[28]=i("code",null,"ContentNegotiation",-1)),a[29]||(a[29]=s("をインストールする方法を示しています... "))]),t(u,null,{default:n(()=>a[30]||(a[30]=[i("li",null,[s(" ... "),i("code",null,"embeddedServer"),s("関数呼び出し内。 ")],-1),i("li",null,[s(" ... "),i("code",null,"Application"),s("クラスの拡張関数である明示的に定義された"),i("code",null,"module"),s("内。 ")],-1)])),_:1}),t(o,null,{default:n(()=>[t(e,{title:"embeddedServer"},{default:n(()=>[t(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.contentnegotiation.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(ContentNegotiation)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),t(e,{title:"module"},{default:n(()=>[t(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.contentnegotiation.*
            // ...
            fun Application.module() {
                install(ContentNegotiation)
                // ...
            }`})]),_:1})]),_:1}),a[41]||(a[41]=r('<h2 id="configure_serializer" tabindex="-1">シリアライザーの設定 <a class="header-anchor" href="#configure_serializer" aria-label="Permalink to &quot;シリアライザーの設定 {id=&quot;configure_serializer&quot;}&quot;">​</a></h2><p>Ktorは以下のフォーマットをそのままサポートしています: <a href="#register_json">JSON</a>、<a href="#register_xml">XML</a>、<a href="#register_cbor">CBOR</a>。独自のカスタムシリアライザーを実装することもできます。</p><h3 id="register_json" tabindex="-1">JSONシリアライザー <a class="header-anchor" href="#register_json" aria-label="Permalink to &quot;JSONシリアライザー {id=&quot;register_json&quot;}&quot;">​</a></h3>',3)),t(o,{group:"json-libraries"},{default:n(()=>[t(e,{title:"kotlinx.serialization","group-key":"kotlinx"},{default:n(()=>a[31]||(a[31]=[i("p",null,[s("アプリケーションでJSONシリアライザーを登録するには、"),i("code",null,"json"),s("メソッドを呼び出します:")],-1),i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.server.plugins.contentnegotiation."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.serialization.kotlinx.json."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"install"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ContentNegotiation) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    json"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1),i("p",null,[i("code",null,"json"),s("メソッドでは、"),i("a",{href:"https://kotlinlang.org/api/kotlinx.serialization/kotlinx-serialization-json/kotlinx.serialization.json/-json-builder/",target:"_blank",rel:"noreferrer"},"JsonBuilder"),s("によって提供されるシリアライゼーション設定を調整することもできます。例:")],-1),i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    install"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ContentNegotiation) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        json"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Json"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            prettyPrint "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            isLenient "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        })")])])])],-1)])),_:1}),t(e,{title:"Gson","group-key":"gson"},{default:n(()=>a[32]||(a[32]=[i("p",null,[s("アプリケーションでGsonシリアライザーを登録するには、"),i("code",null,"gson"),s("メソッドを呼び出します:")],-1),i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.server.plugins.contentnegotiation."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.serialization.gson."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"install"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ContentNegotiation) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    gson"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1),i("p",null,[i("code",null,"gson"),s("メソッドでは、"),i("a",{href:"https://www.javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/GsonBuilder.html",target:"_blank",rel:"noreferrer"},"GsonBuilder"),s("によって提供されるシリアライゼーション設定を調整することもできます。例:")],-1),i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"install"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ContentNegotiation) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    gson"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        registerTypeAdapter"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(LocalDate::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"class"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".java, "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"LocalDateAdapter"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        setDateFormat"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(DateFormat.LONG, DateFormat.SHORT)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        setPrettyPrinting"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")])])])],-1)])),_:1}),t(e,{title:"Jackson","group-key":"jackson"},{default:n(()=>a[33]||(a[33]=[i("p",null,[s("アプリケーションでJacksonシリアライザーを登録するには、"),i("code",null,"jackson"),s("メソッドを呼び出します:")],-1),i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.server.plugins.contentnegotiation."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.serialization.jackson."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"install"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ContentNegotiation) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    jackson"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1),i("p",null,[i("code",null,"jackson"),s("メソッドでは、"),i("a",{href:"https://fasterxml.github.io/jackson-databind/javadoc/2.9/com/fasterxml/jackson/databind/ObjectMapper.html",target:"_blank",rel:"noreferrer"},"ObjectMapper"),s("によって提供されるシリアライゼーション設定を調整することもできます。例:")],-1),i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"install"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ContentNegotiation) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    jackson"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        configure"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(SerializationFeature.INDENT_OUTPUT, "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        setDefaultPrettyPrinter"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"DefaultPrettyPrinter"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"apply"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            indentArraysWith"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(DefaultPrettyPrinter.FixedSpaceIndenter.instance)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            indentObjectsWith"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"DefaultIndenter"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"  "'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        })")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        registerModule"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"JavaTimeModule"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())  "),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// support java.time.* types")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[42]||(a[42]=r(`<h3 id="register_xml" tabindex="-1">XMLシリアライザー <a class="header-anchor" href="#register_xml" aria-label="Permalink to &quot;XMLシリアライザー {id=&quot;register_xml&quot;}&quot;">​</a></h3><p>アプリケーションでXMLシリアライザーを登録するには、<code>xml</code>メソッドを呼び出します:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.contentnegotiation.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.serialization.kotlinx.xml.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentNegotiation) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>xml</code>メソッドでは、XMLシリアライゼーション設定にアクセスすることもできます。例:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.contentnegotiation.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.serialization.kotlinx.xml.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> nl.adaptivity.xmlutil.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> nl.adaptivity.xmlutil.serialization.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentNegotiation) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        xmlDeclMode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XmlDeclMode.Charset</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="register_cbor" tabindex="-1">CBORシリアライザー <a class="header-anchor" href="#register_cbor" aria-label="Permalink to &quot;CBORシリアライザー {id=&quot;register_cbor&quot;}&quot;">​</a></h3><p>アプリケーションでCBORシリアライザーを登録するには、<code>cbor</code>メソッドを呼び出します:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.contentnegotiation.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.serialization.kotlinx.cbor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentNegotiation) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cbor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>cbor</code>メソッドでは、<a href="https://kotlinlang.org/api/kotlinx.serialization/kotlinx-serialization-cbor/kotlinx.serialization.cbor/-cbor-builder/" target="_blank" rel="noreferrer">CborBuilder</a>によって提供されるCBORシリアライゼーション設定にアクセスすることもできます。例:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.contentnegotiation.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.serialization.kotlinx.cbor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinx.serialization.cbor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentNegotiation) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cbor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cbor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ignoreUnknownKeys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="register_protobuf" tabindex="-1">ProtoBufシリアライザー <a class="header-anchor" href="#register_protobuf" aria-label="Permalink to &quot;ProtoBufシリアライザー {id=&quot;register_protobuf&quot;}&quot;">​</a></h3><p>アプリケーションでProtoBufシリアライザーを登録するには、<code>protobuf</code>メソッドを呼び出します:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.contentnegotiation.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.serialization.kotlinx.protobuf.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentNegotiation) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    protobuf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>protobuf</code>メソッドでは、<a href="https://kotlinlang.org/api/kotlinx.serialization/kotlinx-serialization-protobuf/kotlinx.serialization.protobuf/-proto-buf-builder/" target="_blank" rel="noreferrer">ProtoBufBuilder</a>によって提供されるProtoBufシリアライゼーション設定にアクセスすることもできます。例:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.contentnegotiation.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.serialization.kotlinx.protobuf.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinx.serialization.protobuf.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentNegotiation) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    protobuf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ProtoBuf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        encodeDefaults </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="register_custom" tabindex="-1">カスタムシリアライザー <a class="header-anchor" href="#register_custom" aria-label="Permalink to &quot;カスタムシリアライザー {id=&quot;register_custom&quot;}&quot;">​</a></h3><p>指定された<code>Content-Type</code>にカスタムシリアライザーを登録するには、<code>register</code>メソッドを呼び出す必要があります。以下の例では、<code>application/json</code>および<code>application/xml</code>データをデシリアライズするために2つの<a href="#implement_custom_serializer">カスタムシリアライザー</a>が登録されています:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentNegotiation) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentType.Application.Json, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CustomJsonConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ContentType.Application.Xml, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CustomXmlConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="receive_send_data" tabindex="-1">データの受信と送信 <a class="header-anchor" href="#receive_send_data" aria-label="Permalink to &quot;データの受信と送信 {id=&quot;receive_send_data&quot;}&quot;">​</a></h2><h3 id="create_data_class" tabindex="-1">データクラスの作成 <a class="header-anchor" href="#create_data_class" aria-label="Permalink to &quot;データクラスの作成 {id=&quot;create_data_class&quot;}&quot;">​</a></h3><p>受信したデータをオブジェクトにデシリアライズするには、データクラスを作成する必要があります。例:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Serializable</span></span></code></pre></div><p>kotlinx.serializationを使用する場合、このクラスに<code>@Serializable</code>アノテーションが付いていることを確認してください:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinx.serialization.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.util.getValue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Serializable</span></span></code></pre></div>`,24)),t(h,{id:"serialization_types"},{default:n(()=>a[34]||(a[34]=[i("p",null,"以下の型のシリアライゼーション/デシリアライゼーションは、kotlinx.serializationライブラリによってサポートされています:",-1),i("ul",null,[i("li",null,[i("a",{href:"./https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/builtin-classes"},"組み込みクラス")]),i("li",null,[i("a",{href:"https://kotlinlang.org/docs/sequences.html",target:"_blank",rel:"noreferrer"},"シーケンス"),s("のデシリアライゼーション")]),i("li",null,[i("a",{href:"https://kotlinlang.org/docs/flow.html",target:"_blank",rel:"noreferrer"},"フロー"),s("のシリアライゼーション")])],-1)])),_:1}),a[43]||(a[43]=r(`<h3 id="receive_data" tabindex="-1">データの受信 <a class="header-anchor" href="#receive_data" aria-label="Permalink to &quot;データの受信 {id=&quot;receive_data&quot;}&quot;">​</a></h3><p>リクエストのコンテンツを受信して変換するには、データクラスをパラメータとして受け取る<code>receive</code>メソッドを呼び出します:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/customer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">receive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Customer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            customerStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(customer)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Customer stored correctly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpStatusCode.Created)</span></span></code></pre></div><p>リクエストの<code>Content-Type</code>は、リクエストを処理するための<a href="#configure_serializer">シリアライザー</a>を選択するために使用されます。以下の例は、JSONまたはXMLデータを含む<a href="https://www.jetbrains.com/help/idea/http-client-in-product-code-editor.html" target="_blank" rel="noreferrer">HTTPクライアント</a>リクエストが、サーバー側で<code>Customer</code>オブジェクトに変換される様子を示しています:</p>`,4)),t(o,null,{default:n(()=>[t(e,{title:"JSON"},{default:n(()=>a[35]||(a[35]=[i("div",{class:"language-HTTP vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"HTTP"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"POST"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," http://0.0.0.0:8080/customer")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"Content-Type"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," application/json")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "id"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "firstName"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Jet"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "lastName"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Brains"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(e,{title:"XML"},{default:n(()=>a[36]||(a[36]=[i("div",{class:"language-HTTP vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"HTTP"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"POST"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," http://0.0.0.0:8080/customer")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"Content-Type"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," application/xml")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"Customer"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," id"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"="),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"3"'),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," firstName"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"="),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Jet"'),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," lastName"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"="),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Brains"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"/>")])])])],-1)])),_:1})]),_:1}),a[44]||(a[44]=r(`<p>完全な例は、<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/json-kotlinx" target="_blank" rel="noreferrer">json-kotlinx</a>で確認できます。</p><h3 id="send_data" tabindex="-1">データの送信 <a class="header-anchor" href="#send_data" aria-label="Permalink to &quot;データの送信 {id=&quot;send_data&quot;}&quot;">​</a></h3><p>レスポンスでデータオブジェクトを渡すには、<code>respond</code>メソッドを使用できます:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/customer/{id}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.parameters</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customer: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Customer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customerStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { it.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(customer)</span></span></code></pre></div><p>この場合、Ktorは<code>Accept</code>ヘッダーを使用して必要な<a href="#configure_serializer">シリアライザー</a>を選択します。完全な例は、<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/json-kotlinx" target="_blank" rel="noreferrer">json-kotlinx</a>で確認できます。</p><h2 id="implement_custom_serializer" tabindex="-1">カスタムシリアライザーの実装 <a class="header-anchor" href="#implement_custom_serializer" aria-label="Permalink to &quot;カスタムシリアライザーの実装 {id=&quot;implement_custom_serializer&quot;}&quot;">​</a></h2><p>Ktorでは、データのシリアライゼーション/デシリアライゼーションのために独自の<a href="#configure_serializer">シリアライザー</a>を作成できます。これを行うには、<a href="https://api.ktor.io/ktor-shared/ktor-serialization/io.ktor.serialization/-content-converter/index.html" target="_blank" rel="noreferrer">ContentConverter</a>インターフェースを実装する必要があります:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    suspend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> serialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(contentType: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ContentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, charset: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, typeInfo: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TypeInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OutgoingContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    suspend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> deserialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(charset: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, typeInfo: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TypeInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, content: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ByteReadChannel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>実装例として、<a href="https://github.com/ktorio/ktor/blob/main/ktor-shared/ktor-serialization/ktor-serialization-gson/jvm/src/GsonConverter.kt" target="_blank" rel="noreferrer">GsonConverter</a>クラスを参照してください。</p>`,9))])}const T=F(v,[["render",b]]);export{D as __pageData,T as default};
