import{_ as i,c as t,o as e,ag as o}from"./chunks/framework.Bksy39di.js";const I=JSON.parse('{"title":"APIの安定性とリリースタイプ","description":"","frontmatter":{"title":"APIの安定性とリリースタイプ","custom_edit_url":null},"headers":[],"relativePath":"ja/koin/support/api-stability.md","filePath":"ja/koin/support/api-stability.md","lastUpdated":1748365453000}'),n={name:"ja/koin/support/api-stability.md"};function r(l,a,p,s,d,c){return e(),t("div",null,a[0]||(a[0]=[o('<h1 id="apiの安定性とリリースタイプ" tabindex="-1">APIの安定性とリリースタイプ <a class="header-anchor" href="#apiの安定性とリリースタイプ" aria-label="Permalink to &quot;APIの安定性とリリースタイプ&quot;">​</a></h1><h2 id="apiの安定性" tabindex="-1">APIの安定性 <a class="header-anchor" href="#apiの安定性" aria-label="Permalink to &quot;APIの安定性&quot;">​</a></h2><p>Koinプロジェクトは、バージョン間での高い互換性を維持することにコミットしています。Kotszillaチームとすべての現行メンテナーは、新しいリリースで導入されるいかなる変更、機能強化、または最適化も、既存のアプリケーションを破壊しないことを確実にするために取り組んでいます。 私たちは、安定した予測可能なアップグレードパスがユーザーにとって重要であることを理解しており、APIを進化させる際に混乱を最小限に抑えるよう努めています。</p><h3 id="実験的api-koinexperimentalapi" tabindex="-1">実験的API - @KoinExperimentalAPI <a class="header-anchor" href="#実験的api-koinexperimentalapi" aria-label="Permalink to &quot;実験的API - @KoinExperimentalAPI&quot;">​</a></h3><p>イノベーションを促進しつつ、貴重なコミュニティフィードバックを収集するため、<code>@KoinExperimentalAPI</code>アノテーションのもとで新機能とAPIを導入しています。この指定は以下を示します。</p><ul><li><strong>活発な開発中</strong>: APIはまだ設計フェーズにあり、変更される可能性があります。</li><li><strong>フィードバックを推奨</strong>: 開発者の皆様には、これらの機能をテストし、その経験を共有していただくことで、設計の洗練と改善にご協力をお願いしています。</li><li><strong>破壊的変更の可能性</strong>: これらのAPIは実験的であるため、コミュニティからの入力に基づいて反復するにつれて、後続のリリースで変更または削除される可能性があります。</li></ul><h3 id="非推奨ポリシー-deprecated" tabindex="-1">非推奨ポリシー - @Deprecated <a class="header-anchor" href="#非推奨ポリシー-deprecated" aria-label="Permalink to &quot;非推奨ポリシー - @Deprecated&quot;">​</a></h3><p>APIの一部が段階的に廃止される際に円滑な移行を確実にするため、Koinは<code>@Deprecated</code>アノテーションを使用してこれらの領域を明確にマークします。私たちの非推奨化戦略には以下が含まれます。</p><p>明確な警告: 非推奨APIには、推奨される代替案または非推奨の理由を示すメッセージが付随しています。</p><p>非推奨レベル:</p><ul><li><strong>Warning (警告)</strong>: APIはまだ利用可能であるものの、その使用は推奨されず、可能な限り早期に置き換えるべきであることを示します。</li><li><strong>Error (エラー)</strong>: APIがもはや使用を意図されておらず、コンパイルされないことを示し、重要な変更が速やかに対応されることを確実にします。</li></ul><p>このアプローチは、開発者が古いAPIに依存するコードを特定し、更新するのに役立ち、技術的負債を削減し、よりクリーンで堅牢なコードベースへの道を開きます。 更新の複雑さに応じて、APIと共に<code>ReplaceWith</code>が提供される場合があります。</p><h3 id="内部api-koininternalapi" tabindex="-1">内部API - @KoinInternalAPI <a class="header-anchor" href="#内部api-koininternalapi" aria-label="Permalink to &quot;内部API - @KoinInternalAPI&quot;">​</a></h3><p>Koinフレームワーク内で厳密に内部使用を意図した機能のために、私たちは<code>@KoinInternalAPI</code>アノテーションを導入しています。これらのAPIは公開契約の一部ではなく、以下に該当します。</p><ul><li><strong>内部使用のみ</strong>: Koinの内部メカニズム専用に設計されています。</li><li><strong>変更される可能性あり</strong>: 将来のリリースで事前の通知なしに変更または削除される場合があります。</li><li><strong>外部での使用を避ける</strong>: 長期的な互換性を維持するため、開発者はアプリケーションコードでこれらのAPIの使用を推奨されません。</li></ul><h3 id="kotlinの-optinアノテーションによるオプトイン" tabindex="-1">Kotlinの@OptInアノテーションによるオプトイン <a class="header-anchor" href="#kotlinの-optinアノテーションによるオプトイン" aria-label="Permalink to &quot;Kotlinの@OptInアノテーションによるオプトイン&quot;">​</a></h3><p>Koinにおける実験的APIと非推奨APIの両方の使用はオプトインを必要とし、開発者がAPIのステータスと潜在的なリスクについて完全に認識していることを確実にします。 Kotlinの<code>@OptIn</code>アノテーションを使用することで、あなたのコードが実験的または非推奨とマークされたAPIに依存していることを明示的に認めることになります。</p><h2 id="リリースタイプ" tabindex="-1">リリースタイプ <a class="header-anchor" href="#リリースタイプ" aria-label="Permalink to &quot;リリースタイプ&quot;">​</a></h2><p>Koinはセマンティックバージョニング (SemVer) に準拠しており、各リリースの成熟度と意図された使用法を示す追加のプレフィックス識別子を使用します。私たちが使用するプレフィックスは次のとおりです。</p><ul><li><strong>リリース候補 (RC)</strong>: これらのリリースは、安定版の機能が完成した候補です。それらは最終テストと洗練が行われます。RCバージョンは高い互換性を持つことを意図していますが、公式リリース前の最終フィードバックに基づいて軽微な変更が発生する可能性があります。</li><li><strong>アルファ / ベータ</strong>: アルファ版とベータ版は、主にテストとフィードバックのために提供されます。それらはしばしば実験的な機能を含み、安定版APIの保証に完全に準拠しない場合があります。開発者は非本番環境でこれらのリリースを試すことを推奨され、潜在的な問題を特定し、将来の改善を導くのに役立つように活用できます。</li></ul>',20)]))}const h=i(n,[["render",r]]);export{I as __pageData,h as default};
