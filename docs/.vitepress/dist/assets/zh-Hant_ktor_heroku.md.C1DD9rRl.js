import{_ as l,C as a,c as o,o as r,j as e,G as i,ag as h,a as t,w as d}from"./chunks/framework.Bksy39di.js";const F=JSON.parse('{"title":"Heroku","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/heroku.md","filePath":"zh-Hant/ktor/heroku.md","lastUpdated":1755457140000}'),k={name:"zh-Hant/ktor/heroku.md"};function c(u,s,g,E,y,b){const p=a("show-structure"),n=a("link-summary");return r(),o("div",null,[s[1]||(s[1]=e("h1",{id:"heroku",tabindex:"-1"},[t("Heroku "),e("a",{class:"header-anchor",href:"#heroku","aria-label":'Permalink to "Heroku"'},"​")],-1)),i(p,{for:"chapter",depth:"2"}),i(n,null,{default:d(()=>s[0]||(s[0]=[t("學習如何準備與部署 Ktor 應用程式到 Heroku。")])),_:1}),s[2]||(s[2]=h(`<p>在本教學中，我們將展示如何準備與部署 Ktor 應用程式到 Heroku。</p><h2 id="prerequisites" tabindex="-1">前提條件 <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;前提條件 {id=&quot;prerequisites&quot;}&quot;">​</a></h2><p>在開始本教學之前，請確保符合以下前提條件：</p><ul><li>您擁有一個 Heroku 帳戶。</li><li><a href="https://devcenter.heroku.com/articles/heroku-cli" target="_blank" rel="noreferrer">Heroku CLI</a> 已安裝在您的機器上。</li></ul><h2 id="create-sample-app" tabindex="-1">建立範例應用程式 <a class="header-anchor" href="#create-sample-app" aria-label="Permalink to &quot;建立範例應用程式 {id=&quot;create-sample-app&quot;}&quot;">​</a></h2><p>按照 <a href="./server-create-a-new-project">建立、開啟並執行新的 Ktor 專案</a> 中的說明建立範例應用程式。</p><blockquote><p>請注意，Ktor 提供了兩種方式來 <a href="./server-create-and-configure">建立與設定伺服器</a>：在程式碼中或透過使用設定檔。部署時的唯一區別在於如何 <a href="#port">指定用於監聽傳入請求的連接埠</a>。</p></blockquote><h2 id="prepare-app" tabindex="-1">準備應用程式 <a class="header-anchor" href="#prepare-app" aria-label="Permalink to &quot;準備應用程式 {id=&quot;prepare-app&quot;}&quot;">​</a></h2><h3 id="port" tabindex="-1">步驟 1：設定連接埠 <a class="header-anchor" href="#port" aria-label="Permalink to &quot;步驟 1：設定連接埠 {id=&quot;port&quot;}&quot;">​</a></h3><p>首先，您需要指定一個用於監聽傳入請求的連接埠。由於 Heroku 使用 <code>PORT</code> 環境變數，您需要設定應用程式以使用此變數的值。根據 <a href="./server-create-and-configure">設定 Ktor 伺服器</a> 的方式，執行以下其中一項操作：</p><ul><li><p>如果伺服器設定是在程式碼中指定，您可以使用 <code>System.getenv</code> 取得環境變數值。開啟位於 <code>src/main/kotlin/com/example</code> 資料夾中的 <code>Application.kt</code> 檔案，並按照以下所示更改 <code>embeddedServer</code> 函式的 <code>port</code> 參數值：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   embeddedServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Netty, port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PORT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wait </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>如果您的伺服器設定是在 <code>application.conf</code> 檔案中指定，您可以使用 <code>\${ENV}</code> 語法將環境變數指派給 <code>port</code> 參數。開啟位於 <code>src/main/resources</code> 中的 <code>application.conf</code> 檔案並按照以下所示進行更新：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ktor {</span></span>
<span class="line"><span>    deployment {</span></span>
<span class="line"><span>        port = 8080</span></span>
<span class="line"><span>        port = \${?PORT}</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div></li></ul><h3 id="stage" tabindex="-1">步驟 2：新增 <code>stage</code> 任務 <a class="header-anchor" href="#stage" aria-label="Permalink to &quot;步驟 2：新增 \`stage\` 任務 {id=&quot;stage&quot;}&quot;">​</a></h3><p>開啟 <code>build.gradle.kts</code> 檔案並新增一個自訂的 <code>stage</code> 任務，Heroku 會使用此任務來建立可在 Heroku 平台上執行的可執行檔：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tasks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependsOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;installDist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>請注意，<code>installDist</code> 任務隨附於 Gradle <a href="https://docs.gradle.org/current/userguide/application_plugin.html" target="_blank" rel="noreferrer">應用程式外掛程式</a>，該外掛程式已新增到範例專案中。</p><h3 id="procfile" tabindex="-1">步驟 3：建立 Procfile <a class="header-anchor" href="#procfile" aria-label="Permalink to &quot;步驟 3：建立 Procfile {id=&quot;procfile&quot;}&quot;">​</a></h3><p>在專案根目錄中建立一個 <a href="https://devcenter.heroku.com/articles/procfile" target="_blank" rel="noreferrer">Procfile</a> 檔案，並新增以下內容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>web: ./build/install/ktor-get-started-sample/bin/ktor-get-started-sample</span></span></code></pre></div><p>此檔案指定應用程式可執行檔的路徑，由 <a href="#stage">stage</a> 任務產生，並允許 Heroku 啟動應用程式。 您可能需要將 <code>ktor-get-started-sample</code> 替換為您的專案名稱。</p><h2 id="deploy-app" tabindex="-1">部署應用程式 <a class="header-anchor" href="#deploy-app" aria-label="Permalink to &quot;部署應用程式 {id=&quot;deploy-app&quot;}&quot;">​</a></h2><p>若要使用 Git 將應用程式部署到 Heroku，請開啟終端機並依照以下步驟操作：</p><ol><li><p>在本機提交 <a href="#prepare-app">上一節</a> 中所做的更改：</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Prepare app for deploying&quot;</span></span></code></pre></div></li><li><p>登入 Heroku CLI：</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">heroku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span></code></pre></div></li><li><p>使用 <code>heroku create</code> 命令建立 Heroku 應用程式。 您需要將 <code>ktor-sample-heroku</code> 替換為您的應用程式名稱：</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">heroku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ktor-sample-heroku</span></span></code></pre></div><p>此命令執行兩項操作：</p><ul><li>建立一個新的 Heroku 應用程式，該應用程式可在 <a href="https://dashboard.heroku.com/apps/" target="_blank" rel="noreferrer">Web 儀表板</a> 上使用。</li><li>將一個名為 <code>heroku</code> 的新 Git 遠端新增到本機儲存庫。</li></ul></li><li><p>若要部署應用程式，將更改推送到 <code>heroku main</code>...</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> heroku</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p>... 並等待 Heroku 建置並發佈應用程式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>...</span></span>
<span class="line"><span>remote: https://ktor-sample-heroku.herokuapp.com/ deployed to Heroku</span></span>
<span class="line"><span>remote:</span></span>
<span class="line"><span>remote: Verifying deploy... done.</span></span></code></pre></div></li></ol>`,22))])}const v=l(k,[["render",c]]);export{F as __pageData,v as default};
