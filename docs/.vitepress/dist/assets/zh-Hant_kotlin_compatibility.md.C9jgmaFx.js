import{_ as a,c as s,o as t,ag as l}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/compatibility.md","filePath":"zh-Hant/kotlin/compatibility.md","lastUpdated":1754307826000}'),e={name:"zh-Hant/kotlin/compatibility.md"};function n(r,i,o,p,h,k){return t(),s("div",null,i[0]||(i[0]=[l(`<ul><li><a href="#compatibility">相容性</a></li><li><a href="#public-api-types">公開 API 類型</a><ul><li><a href="#experimental-api">實驗性 API</a></li><li><a href="#flow-preview-api">Flow 預覽版 API</a></li><li><a href="#obsolete-api">過時 API</a></li><li><a href="#internal-api">內部 API</a></li><li><a href="#stable-api">穩定版 API</a></li><li><a href="#deprecation-cycle">棄用週期</a></li></ul></li><li><a href="#using-annotated-api">使用註解 API</a><ul><li><a href="#programmatically">以程式碼方式</a></li><li><a href="#gradle">Gradle</a></li><li><a href="#maven">Maven</a></li></ul></li></ul><h2 id="相容性" tabindex="-1">相容性 <a class="header-anchor" href="#相容性" aria-label="Permalink to &quot;相容性&quot;">​</a></h2><p>本文件描述了自 1.0.0 版以來 <code>kotlinx.coroutines</code> 函式庫的相容性政策，以及特定於相容性的註解語義。</p><h2 id="公開-api-類型" tabindex="-1">公開 API 類型 <a class="header-anchor" href="#公開-api-類型" aria-label="Permalink to &quot;公開 API 類型&quot;">​</a></h2><p><code>kotlinx.coroutines</code> 公開 API 分為五種類型：穩定版、實驗性、過時、內部和已棄用。除穩定版外的所有公開 API 都標記了對應的註解。</p><h3 id="實驗性-api" tabindex="-1">實驗性 API <a class="header-anchor" href="#實驗性-api" aria-label="Permalink to &quot;實驗性 API&quot;">​</a></h3><p>實驗性 API 標記有 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-experimental-coroutines-api/index.html" target="_blank" rel="noreferrer">@ExperimentalCoroutinesApi</a> 註解。當 API 的設計存在潛在的未解決問題，最終可能導致 API 的語義變更或其棄用時，該 API 會被標記為實驗性。</p><p>預設情況下，大多數新 API 都會被標記為實驗性，如果沒有出現新問題，會在接下來的主要版本發佈之一中變為穩定版。否則，語義會在不改變 ABI 的情況下修復，或 API 進入棄用週期。</p><p>何時使用實驗性 API 可能很危險：</p><ul><li>您正在編寫一個依賴於 <code>kotlinx.coroutines</code> 的函式庫，並想在函式庫的穩定版 API 中使用實驗性協程 API。當您函式庫的終端使用者更新 <code>kotlinx.coroutines</code> 版本時，若實驗性 API 的語義略有不同，這可能會導致不樂見的後果。</li><li>您想圍繞實驗性 API 構建應用程式的核心基礎設施。</li></ul><h3 id="flow-預覽版-api" tabindex="-1">Flow 預覽版 API <a class="header-anchor" href="#flow-預覽版-api" aria-label="Permalink to &quot;Flow 預覽版 API&quot;">​</a></h3><p>所有 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html" target="_blank" rel="noreferrer">Flow</a> 相關 API 都標記有 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-flow-preview/index.html" target="_blank" rel="noreferrer">@FlowPreview</a> 註解。此註解表示 Flow API 處於預覽狀態。我們不為預覽功能提供跨版本相容性保證，包括二進位、原始碼和語義相容性。</p><p>何時使用預覽版 API 可能很危險：</p><ul><li>您正在編寫函式庫/框架，並想在穩定版本或穩定 API 中使用 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html" target="_blank" rel="noreferrer">Flow</a> API。</li><li>您想在應用程式的核心基礎設施中使用 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html" target="_blank" rel="noreferrer">Flow</a>。</li><li>您想將 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html" target="_blank" rel="noreferrer">Flow</a> 作為「寫完即忘」的解決方案，並且在 <code>kotlinx.coroutines</code> 更新時無法承擔額外的維護成本。</li></ul><h3 id="過時-api" tabindex="-1">過時 API <a class="header-anchor" href="#過時-api" aria-label="Permalink to &quot;過時 API&quot;">​</a></h3><p>過時 API 標記有 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-obsolete-coroutines-api/index.html" target="_blank" rel="noreferrer">@ObsoleteCoroutinesApi</a> 註解。過時 API 與實驗性 API 類似，但已知存在嚴重的設計缺陷，並有潛在的替代方案，只是該替代方案尚未實現。</p><p>此 API 的語義不會改變，但一旦替代方案準備就緒，它將進入棄用週期。</p><h3 id="內部-api" tabindex="-1">內部 API <a class="header-anchor" href="#內部-api" aria-label="Permalink to &quot;內部 API&quot;">​</a></h3><p>內部 API 標記有 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-internal-coroutines-api/index.html" target="_blank" rel="noreferrer">@InternalCoroutinesApi</a> 註解，或是 <code>kotlinx.coroutines.internal</code> 套件的一部分。此 API 不保證其穩定性，可能會在未來的版本中變更及/或移除。如果您無法避免使用內部 API，請向 <a href="https://github.com/Kotlin/kotlinx.coroutines/issues/new" target="_blank" rel="noreferrer">問題追蹤器</a> 回報。</p><h3 id="穩定版-api" tabindex="-1">穩定版 API <a class="header-anchor" href="#穩定版-api" aria-label="Permalink to &quot;穩定版 API&quot;">​</a></h3><p>穩定版 API 保證保留其 ABI 和文件化語義。如果在某個時間點發現無法修復的設計缺陷，此 API 將進入棄用週期，並在盡可能長的時期內保持二進位相容。</p><h3 id="棄用週期" tabindex="-1">棄用週期 <a class="header-anchor" href="#棄用週期" aria-label="Permalink to &quot;棄用週期&quot;">​</a></h3><p>當某些 API 被棄用時，它會經歷多個階段，每個階段之間至少會有一個主要版本發佈。</p><ul><li>功能會以編譯警告的形式棄用。大多數情況下，會提供適當的替代方案（及對應的 <code>replaceWith</code> 宣告），以借助 IntelliJ IDEA 自動遷移棄用用法。</li><li>棄用級別會提高到 <code>error</code> 或 <code>hidden</code>。不再可能針對棄用 API 編譯新程式碼，儘管它仍然存在於 ABI 中。</li><li>API 被完全移除。雖然我們盡最大努力不這樣做，也沒有移除任何 API 的計畫，但我們仍然保留此選項，以防範不可預見的問題，例如安全漏洞。</li></ul><h2 id="使用註解-api" tabindex="-1">使用註解 API <a class="header-anchor" href="#使用註解-api" aria-label="Permalink to &quot;使用註解 API&quot;">​</a></h2><p>所有 API 註解都是 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-experimental/" target="_blank" rel="noreferrer">kotlin.Experimental</a>。這樣做旨在產生關於使用實驗性或過時 API 的編譯警告。警告可以透過程式碼方式停用，針對特定的呼叫點，或針對整個模組全域停用。</p><h3 id="以程式碼方式" tabindex="-1">以程式碼方式 <a class="header-anchor" href="#以程式碼方式" aria-label="Permalink to &quot;以程式碼方式&quot;">​</a></h3><p>對於特定的呼叫點，可以透過使用 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-opt-in/" target="_blank" rel="noreferrer">OptIn</a> 註解來停用警告：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@OptIn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExperimentalCoroutinesApi::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 停用關於實驗性協程 API 的警告</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> experimentalApiUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    someKotlinxCoroutinesExperimentalMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="gradle" tabindex="-1">Gradle <a class="header-anchor" href="#gradle" aria-label="Permalink to &quot;Gradle&quot;">​</a></h3><p>對於 Gradle 專案，可以透過在您的 <code>build.gradle</code> 檔案中傳遞編譯器旗標來停用警告：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">withType(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">all {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kotlinOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">freeCompilerArgs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="maven" tabindex="-1">Maven <a class="header-anchor" href="#maven" aria-label="Permalink to &quot;Maven&quot;">​</a></h3><p>對於 Maven 專案，可以透過在您的 <code>pom.xml</code> 檔案中傳遞編譯器旗標來停用警告：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;kotlin-maven-plugin&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.jetbrains.kotlin&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ... your configuration ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,35)]))}const c=a(e,[["render",n]]);export{E as __pageData,c as default};
