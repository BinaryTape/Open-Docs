import{_ as r,a as h,b as d}from"./chunks/compose_expressive_theme.animated.Dd_wIje5.js";import{_ as k,C as s,c,o as E,ag as e,G as t,j as i,w as m,a as l}from"./chunks/framework.Bksy39di.js";const M=JSON.parse('{"title":"Compose Multiplatform 1.9.0-beta03 的新功能","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/whats-new-compose-190.md","filePath":"zh-Hant/kmp/whats-new-compose-190.md","lastUpdated":1755516278000}'),g={name:"zh-Hant/kmp/whats-new-compose-190.md"};function u(b,a,y,f,C,v){const n=s("code-block"),p=s("list"),o=s("secondary-label");return E(),c("div",null,[a[1]||(a[1]=e('<h1 id="compose-multiplatform-1-9-0-beta03-的新功能" tabindex="-1">Compose Multiplatform 1.9.0-beta03 的新功能 <a class="header-anchor" href="#compose-multiplatform-1-9-0-beta03-的新功能" aria-label="Permalink to &quot;Compose Multiplatform 1.9.0-beta03 的新功能&quot;">​</a></h1><p>以下是此 EAP 功能發行版的重要亮點：</p><ul><li><a href="#new-material-3-expressive-theme">Material 3 表達性主題</a></li><li><a href="#customizable-shadows">可自訂陰影</a></li><li><a href="#parameters-for-the-preview-annotation">@Preview 註解的參數</a></li><li><a href="#frame-rate-configuration">iOS 上的畫面更新率配置</a></li><li><a href="#accessibility-support">網頁目標上的輔助功能支援</a></li><li><a href="#new-api-for-embedding-html-content">用於嵌入 HTML 內容的新 API</a></li></ul><p>請參閱 <a href="https://github.com/JetBrains/compose-multiplatform/releases/tag/v1.9.0-beta01" target="_blank" rel="noreferrer">GitHub</a> 上此發行版的完整變更列表。</p><h2 id="相依性" tabindex="-1">相依性 <a class="header-anchor" href="#相依性" aria-label="Permalink to &quot;相依性&quot;">​</a></h2><ul><li><p>Gradle 外掛程式 <code>org.jetbrains.compose</code>，版本 <code>1.9.0-beta03</code>。基於 Jetpack Compose 函式庫：</p><ul><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-runtime#1.9.0-rc01" target="_blank" rel="noreferrer">Runtime 1.9.0-rc01</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-ui#1.9.0-rc01" target="_blank" rel="noreferrer">UI 1.9.0-rc01</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-foundation#1.9.0-rc01" target="_blank" rel="noreferrer">Foundation 1.9.0-rc01</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-material#1.9.0-rc01" target="_blank" rel="noreferrer">Material 1.9.0-rc01</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-material3#1.3.2" target="_blank" rel="noreferrer">Material3 1.3.2</a></li></ul></li><li><p>Compose Material3 函式庫 <code>org.jetbrains.compose.material3:1.9.0-beta03</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/compose-material3#1.4.0-beta01" target="_blank" rel="noreferrer">Jetpack Material3 1.4.0-beta01</a>。</p><p>通用 Material3 函式庫的穩定版本基於 Jetpack Compose Material3 1.3.2，但由於 Compose Multiplatform 和 Material3 的<a href="#decoupled-material3-versioning">解耦版本控制</a>，您可以為專案選擇較新的預發行版本。</p></li><li><p>Compose Material3 Adaptive 函式庫 <code>org.jetbrains.compose.material3.adaptive:adaptive*:1.2.0-alpha05</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/compose-material3-adaptive#1.2.0-alpha10" target="_blank" rel="noreferrer">Jetpack Material3 Adaptive 1.2.0-alpha10</a></p></li><li><p>Lifecycle 函式庫 <code>org.jetbrains.androidx.lifecycle:lifecycle-*:2.9.2</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/lifecycle#2.9.2" target="_blank" rel="noreferrer">Jetpack Lifecycle 2.9.2</a></p></li><li><p>Navigation 函式庫 <code>org.jetbrains.androidx.navigation:navigation-*:2.9.0-beta05</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/navigation#2.9.1" target="_blank" rel="noreferrer">Jetpack Navigation 2.9.1</a></p></li><li><p>Savedstate 函式庫 <code>org.jetbrains.androidx.savedstate:savedstate:1.3.2</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/savedstate#1.3.1" target="_blank" rel="noreferrer">Jetpack Savedstate 1.3.1</a></p></li><li><p>WindowManager Core 函式庫 <code>org.jetbrains.androidx.window:window-core:1.4.0-beta01</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/window#1.4.0" target="_blank" rel="noreferrer">Jetpack WindowManager 1.4.0</a></p></li></ul><h2 id="破壞性變更" tabindex="-1">破壞性變更 <a class="header-anchor" href="#破壞性變更" aria-label="Permalink to &quot;破壞性變更&quot;">​</a></h2><p>為與 Jetpack Material3 <a href="https://developer.android.com/jetpack/androidx/releases/compose-material3#1.4.0-beta01" target="_blank" rel="noreferrer">1.4.0-beta01 發行版</a>保持一致，Compose Multiplatform 已移除所有標記為 <code>ExperimentalMaterial3ExpressiveApi</code> 和 <code>ExperimentalMaterial3ComponentOverrideApi</code> 的公共 API。</p><p>如果您想繼續使用這些實驗性功能，可以明確地包含先前的 Material3 Alpha 版本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.compose.material3:material3:1.9.0-alpha04&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="跨平台" tabindex="-1">跨平台 <a class="header-anchor" href="#跨平台" aria-label="Permalink to &quot;跨平台&quot;">​</a></h2><h3 id="preview-註解的參數" tabindex="-1">@Preview 註解的參數 <a class="header-anchor" href="#preview-註解的參數" aria-label="Permalink to &quot;@Preview 註解的參數&quot;">​</a></h3><p>Compose Multiplatform 中的 <code>@Preview</code> 註解現在包含額外參數，用於設定 <code>@Composable</code> 函式在設計時預覽中的渲染方式：</p><ul><li><code>name</code>：預覽的顯示名稱。</li><li><code>group</code>：預覽的群組名稱，可實現相關預覽的邏輯組織和選擇性顯示。</li><li><code>widthDp</code>：最大寬度 (單位為 dp)。</li><li><code>heightDp</code>：最大高度 (單位為 dp)。</li><li><code>locale</code>：應用程式目前的語系。</li><li><code>showBackground</code>：一個旗標，用於將預設背景顏色應用於預覽。</li><li><code>backgroundColor</code>：一個 32 位元 ARGB 色彩整數，定義預覽的背景顏色。</li></ul><p>這些新的預覽參數在 IntelliJ IDEA 和 Android Studio 中均可辨識並運作。</p><h3 id="可自訂陰影" tabindex="-1">可自訂陰影 <a class="header-anchor" href="#可自訂陰影" aria-label="Permalink to &quot;可自訂陰影&quot;">​</a></h3><p>在 Compose Multiplatform 1.9.0-beta03 中，我們引入了可自訂陰影，採用了 Jetpack Compose 的新陰影原始物件和 API。除了先前支援的 <code>shadow</code> 修飾符外，您現在可以使用新的 API 來創建更進階和靈活的陰影效果。</p><p>有兩個新的原始物件可用於創建不同類型的陰影：<code>DropShadowPainter()</code> 和 <code>InnerShadowPainter()</code>。</p><p>若要將這些新陰影套用於 UI 元件，請使用 <code>dropShadow</code> 或 <code>innerShadow</code> 修飾符配置陰影效果：</p>',19)),t(p,{columns:"2"},{default:m(()=>[i("li",null,[t(n,{lang:"kotlin",code:`        Box(
            Modifier.size(120.dp)
                .dropShadow(
                    RectangleShape,
                    DropShadow(12.dp)
                )
                .background(Color.White)
        )
        Box(
            Modifier.size(120.dp)
                .innerShadow(
                    RectangleShape,
                    InnerShadow(12.dp)
                )
        )`})]),a[0]||(a[0]=i("li",null,[i("img",{src:r,type:"inline",alt:"Customizable shadows",width:"200"})],-1))]),_:1}),a[2]||(a[2]=i("p",null,"您可以繪製任何形狀和顏色的陰影，甚至可以使用陰影幾何圖形作為遮罩來創建內部漸層填充陰影：",-1)),a[3]||(a[3]=i("img",{src:h,alt:"Expressive shadows",width:"244"},null,-1)),a[4]||(a[4]=i("p",null,[l("詳情請參閱 "),i("a",{href:"https://developer.android.com/reference/kotlin/androidx/compose/ui/graphics/shadow/package-summary.html",target:"_blank",rel:"noreferrer"},"陰影 API 參考資料"),l("。")],-1)),a[5]||(a[5]=i("h3",{id:"新增-material-3-表達性主題",tabindex:"-1"},[l("新增 Material 3 表達性主題 "),i("a",{class:"header-anchor",href:"#新增-material-3-表達性主題","aria-label":'Permalink to "新增 Material 3 表達性主題"'},"​")],-1)),t(o,{ref:"Experimental"},null,512),a[6]||(a[6]=e('<p>Compose Multiplatform 現在支援 Material 3 函式庫中的實驗性 <a href="https://developer.android.com/reference/kotlin/androidx/compose/material3/package-summary?hl=en#MaterialExpressiveTheme(androidx.compose.material3.ColorScheme,androidx.compose.material3.MotionScheme,androidx.compose.material3.Shapes,androidx.compose.material3.Typography,kotlin.Function0)" target="_blank" rel="noreferrer"><code>MaterialExpressiveTheme</code></a>。表達性主題設計允許您自訂 Material Design 應用程式以獲得更個人化的體驗。</p><p>若要使用表達性主題：</p><ol><li><p>包含最新版本的 Material 3：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.compose.material3:material3:1.9.0-alpha04&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>使用 <code>MaterialExpressiveTheme()</code> 函式與 <code>@OptIn(ExperimentalMaterial3ExpressiveApi::class)</code> 選擇啟用，透過設定 <code>colorScheme</code>、<code>motionScheme</code>、<code>shapes</code> 和 <code>typography</code> 參數來配置 UI 元素的整體主題。</p></li></ol><p>然後，Material 元件，例如 <a href="https://kotlinlang.org/api/compose-multiplatform/material3/androidx.compose.material3/-button.html" target="_blank" rel="noreferrer"><code>Button()</code></a> 和 <a href="https://kotlinlang.org/api/compose-multiplatform/material3/androidx.compose.material3/-checkbox.html" target="_blank" rel="noreferrer"><code>Checkbox()</code></a>，將自動使用您提供的值。</p>',4)),a[7]||(a[7]=i("img",{src:d,alt:"Material 3 Expressive",width:"250","preview-src":"compose_expressive_theme.png"},null,-1)),a[8]||(a[8]=e(`<h3 id="androidx-compose-runtime-runtime-中的多平台目標" tabindex="-1"><code>androidx.compose.runtime:runtime</code> 中的多平台目標 <a class="header-anchor" href="#androidx-compose-runtime-runtime-中的多平台目標" aria-label="Permalink to &quot;\`androidx.compose.runtime:runtime\` 中的多平台目標&quot;">​</a></h3><p>為改善 Compose Multiplatform 與 Jetpack Compose 的一致性，我們已將所有目標支援直接新增到 <code>androidx.compose.runtime:runtime</code> 構件中。</p><p><code>org.jetbrains.compose.runtime:runtime</code> 構件保持完全相容，現在作為別名使用。</p><h3 id="帶-suspend-lambda-的-runcomposeuitest" tabindex="-1">帶 <code>suspend</code> lambda 的 <code>runComposeUiTest()</code> <a class="header-anchor" href="#帶-suspend-lambda-的-runcomposeuitest" aria-label="Permalink to &quot;帶 \`suspend\` lambda 的 \`runComposeUiTest()\`&quot;">​</a></h3><p><code>runComposeUiTest()</code> 函式現在接受 <code>suspend</code> lambda，允許您使用 <code>awaitIdle()</code> 等暫停函式。</p><p>新的 API 保證了所有支援平台上的正確測試執行，包括網頁環境的適當非同步處理：</p><ul><li>對於 JVM 和原生目標，<code>runComposeUiTest()</code> 的功能類似於 <code>runBlocking()</code>，但會跳過延遲。</li><li>對於網頁目標 (Wasm 和 JS)，它會回傳 <code>Promise</code> 並在跳過延遲的情況下執行測試主體。</li></ul><h2 id="ios" tabindex="-1">iOS <a class="header-anchor" href="#ios" aria-label="Permalink to &quot;iOS&quot;">​</a></h2><h3 id="畫面更新率配置" tabindex="-1">畫面更新率配置 <a class="header-anchor" href="#畫面更新率配置" aria-label="Permalink to &quot;畫面更新率配置&quot;">​</a></h3><p>Compose Multiplatform for iOS 現在支援配置渲染可組合項的首選畫面更新率。如果動畫卡頓，您可能需要提高畫面更新率。另一方面，如果動畫緩慢或靜態，您可能希望以較低的畫面更新率運行以減少功耗。</p><p>您可以設定首選畫面更新率類別如下：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preferredFrameRate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FrameRateCategory.High)</span></span></code></pre></div><p>或者，如果您需要特定畫面更新率的可組合項，可以使用非負數定義每秒影格數的首選畫面更新率：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preferredFrameRate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="網頁" tabindex="-1">網頁 <a class="header-anchor" href="#網頁" aria-label="Permalink to &quot;網頁&quot;">​</a></h2><h3 id="輔助功能支援" tabindex="-1">輔助功能支援 <a class="header-anchor" href="#輔助功能支援" aria-label="Permalink to &quot;輔助功能支援&quot;">​</a></h3><p>Compose Multiplatform 現在為網頁目標提供初始輔助功能支援。此版本允許螢幕閱讀器存取描述標籤，並允許使用者在輔助功能導航模式下導航和點擊按鈕。</p><p>在此版本中，以下功能尚未支援：</p><ul><li>互操作和帶捲軸和滑桿的容器檢視的輔助功能。</li><li>遍歷索引。</li></ul><p>您可以定義元件的<a href="./compose-accessibility#semantic-properties">語義屬性</a>以向輔助功能服務提供各種詳細資訊，例如元件的文字描述、功能類型、目前狀態或唯一識別碼。</p><p>例如，透過在可組合項上設定 <code>Modifier.semantics { heading() }</code>，您可以通知輔助功能服務此元素作為標題，類似於文件中的章節或小節標題。螢幕閱讀器隨後可以使用此資訊進行內容導航，允許使用者直接在標題之間跳轉。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;This is heading&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">semantics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">heading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>輔助功能支援現在預設啟用，但您可以隨時透過調整 <code>isA11YEnabled</code> 來停用它：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComposeViewport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    viewportContainer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    configure </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { isA11YEnabled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, Compose Multiplatform for web&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="用於嵌入-html-內容的新-api" tabindex="-1">用於嵌入 HTML 內容的新 API <a class="header-anchor" href="#用於嵌入-html-內容的新-api" aria-label="Permalink to &quot;用於嵌入 HTML 內容的新 API&quot;">​</a></h3><p>透過新的 <code>WebElementView()</code> 可組合函式，您可以將 HTML 元素無縫整合到您的網頁應用程式中。</p><p>嵌入的 HTML 元素會根據 Compose 程式碼中定義的大小覆蓋畫布區域。它會攔截該區域內的輸入事件，阻止 Compose Multiplatform 接收這些事件。</p><p>以下是 <code>WebElementView()</code> 用於創建和嵌入 HTML 元素的一個範例，該元素在 Compose 應用程式中顯示互動式地圖檢視：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ttOSM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://www.openstreetmap.org/export/embed.html?bbox=4.890965223312379%2C52.33722052818563%2C4.893990755081177%2C52.33860862450587&amp;amp;layer=mapnik&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxHeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        WebElementView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            factory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                (document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;iframe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                        as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HTMLIFrameElement)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { src </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ttOSM }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { iframe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iframe.src </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iframe.src }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>請注意，您只能將此函式與 <code>ComposeViewport</code> 進入點一起使用，因為 <code>CanvasBasedWindow</code> 已棄用。</p><h3 id="環境選單" tabindex="-1">環境選單 <a class="header-anchor" href="#環境選單" aria-label="Permalink to &quot;環境選單&quot;">​</a></h3><p>Compose Multiplatform 1.9.0-beta03 為網頁環境選單帶來了以下更新：</p><ul><li><p>文字環境選單：標準 Compose 文字環境選單現在完全支援行動裝置和桌面模式。</p></li><li><p>新增可自訂環境選單：我們採用了 Jetpack Compose 的新 API 用於自訂網頁環境選單。目前，它僅在桌面模式下可用。</p><p>若要啟用此新 API，請在應用程式進入點中使用以下設定：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComposeFoundationFlags.isNewContextMenuEnabled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div></li></ul><h3 id="簡化綁定導航圖的-api" tabindex="-1">簡化綁定導航圖的 API <a class="header-anchor" href="#簡化綁定導航圖的-api" aria-label="Permalink to &quot;簡化綁定導航圖的 API&quot;">​</a></h3><p>Compose Multiplatform 引入了一個新的 API，用於將瀏覽器的導航狀態綁定到 <code>NavController</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">suspend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NavController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bindToBrowserNavigation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>新函式不再需要直接與 <code>window</code> API 互動，簡化了 Kotlin/Wasm 和 Kotlin/JS 原始碼集。</p><p>先前使用的 <code>Window.bindToNavigation()</code> 函式已棄用，並由新的 <code>NavController.bindToBrowserNavigation()</code> 函式取代。</p><p>之前：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LaunchedEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Unit) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Directly interacts with the window object</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bindToNavigation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navController)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>之後：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LaunchedEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Unit) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Implicitly accesses the window object</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    navController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bindToBrowserNavigation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="gradle-外掛程式" tabindex="-1">Gradle 外掛程式 <a class="header-anchor" href="#gradle-外掛程式" aria-label="Permalink to &quot;Gradle 外掛程式&quot;">​</a></h2><h3 id="material3-版本解耦" tabindex="-1">Material3 版本解耦 <a class="header-anchor" href="#material3-版本解耦" aria-label="Permalink to &quot;Material3 版本解耦&quot;">​</a></h3><p>Material3 函式庫和 Compose Multiplatform Gradle 外掛程式的版本和穩定性等級不再需要保持一致。<code>compose.material3</code> DSL 別名現在參考來自 Jetpack Compose 先前穩定發行版的 Material3 1.8.2。</p><p>如果您想使用支援表達性設計的較新 Material3 版本，請將 <code>build.gradle.kts</code> 中的 Material 3 相依性替換為以下內容：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.compose.material3:material3:1.9.0-alpha04&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,47))])}const w=k(g,[["render",u]]);export{M as __pageData,w as default};
