import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"플러스 및 마이너스 연산자","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/collection-plus-minus.md","filePath":"ko/kotlin/collection-plus-minus.md","lastUpdated":1754307826000}'),l={name:"ko/kotlin/collection-plus-minus.md"};function e(k,s,p,h,o,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="플러스-및-마이너스-연산자" tabindex="-1">플러스 및 마이너스 연산자 <a class="header-anchor" href="#플러스-및-마이너스-연산자" aria-label="Permalink to &quot;플러스 및 마이너스 연산자&quot;">​</a></h1><p>Kotlin에서 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus.html" target="_blank" rel="noreferrer"><code>plus</code></a> (<code>+</code>) 및 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/minus.html" target="_blank" rel="noreferrer"><code>minus</code></a> (<code>-</code>) 연산자는 컬렉션에 대해 정의됩니다. 이 연산자들은 첫 번째 피연산자로 컬렉션을 받으며, 두 번째 피연산자는 요소 또는 다른 컬렉션이 될 수 있습니다. 반환 값은 새로운 읽기 전용 컬렉션입니다:</p><ul><li><code>plus</code> 연산의 결과는 원본 컬렉션의 요소와 두 번째 피연산자의 요소를 모두 포함합니다.</li><li><code>minus</code> 연산의 결과는 두 번째 피연산자의 요소를 <em>제외한</em> 원본 컬렉션의 요소를 포함합니다. 두 번째 피연산자가 요소인 경우, <code>minus</code>는 해당 요소의 <em>첫 번째</em> 발생을 제거합니다. 컬렉션인 경우, 해당 컬렉션 요소의 <em>모든</em> 발생이 제거됩니다.</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;one&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;three&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;four&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plusList </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;five&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minusList </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;three&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;four&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plusList)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(minusList)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>맵(map)의 <code>plus</code> 및 <code>minus</code> 연산자에 대한 자세한 내용은 <a href="/ko/kotlin/map-operations">맵별 연산</a>을 참조하세요. 컬렉션에는 <a href="/ko/kotlin/operator-overloading#augmented-assignments">복합 할당 연산자</a>인 <code>plusAssign</code> (<code>+=</code>) 및 <code>minusAssign</code> (<code>-=</code>)도 정의되어 있습니다. 하지만 읽기 전용 컬렉션의 경우, 이 연산자들은 실제로는 <code>plus</code> 또는 <code>minus</code> 연산자를 사용하며 결과를 동일한 변수에 할당하려고 시도합니다. 따라서 <code>var</code>로 선언된 읽기 전용 컬렉션에서만 사용할 수 있습니다. 변경 가능한 컬렉션의 경우, <code>val</code>로 선언된 컬렉션이라도 컬렉션을 수정합니다. 더 자세한 내용은 <a href="/ko/kotlin/collection-write">컬렉션 쓰기 연산</a>을 참조하세요.</p>`,5)]))}const E=i(l,[["render",e]]);export{c as __pageData,E as default};
