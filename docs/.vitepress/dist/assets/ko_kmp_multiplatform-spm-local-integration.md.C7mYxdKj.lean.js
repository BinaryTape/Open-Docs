import{_ as r}from"./chunks/direct-integration-scheme.Cw1ubqmC.js";import{_ as d,a as k,b as h,c as g}from"./chunks/xcode-spm-usage.Dn1odtN3.js";import{_ as c,C as p,c as u,o as E,j as s,G as l,ag as t,a,w as n}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"로컬 Swift 패키지에서 Kotlin 사용","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-spm-local-integration.md","filePath":"ko/kmp/multiplatform-spm-local-integration.md","lastUpdated":1755516278000}'),m={name:"ko/kmp/multiplatform-spm-local-integration.md"};function F(y,i,f,C,b,S){const o=p("tldr"),e=p("shortcut");return E(),u("div",null,[i[17]||(i[17]=s("h1",{id:"로컬-swift-패키지에서-kotlin-사용",tabindex:"-1"},[a("로컬 Swift 패키지에서 Kotlin 사용 "),s("a",{class:"header-anchor",href:"#로컬-swift-패키지에서-kotlin-사용","aria-label":'Permalink to "로컬 Swift 패키지에서 Kotlin 사용"'},"​")],-1)),l(o,null,{default:n(()=>i[0]||(i[0]=[a(" 이것은 로컬 통합 방식입니다. 다음 경우에 유용합니다:"),s("br",null,null,-1),s("ul",null,[s("li",null,"iOS 앱에 로컬 SPM 모듈이 있는 경우."),s("li",null,"로컬 머신에 이미 iOS를 타겟팅하는 Kotlin Multiplatform 프로젝트를 설정한 경우."),s("li",null,[a("기존 iOS 프로젝트가 정적 링크 유형인 경우."),s("br")])],-1),s("p",null,[s("a",{href:"./multiplatform-ios-integration-overview"},"가장 적합한 통합 방식을 선택하세요")],-1)])),_:1}),i[18]||(i[18]=t("",9)),i[19]||(i[19]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"spm-binarytarget-통합에서-마이그레이션",tabindex:"-1"},[a("SPM binaryTarget 통합에서 마이그레이션 "),s("a",{class:"header-anchor",href:"#spm-binarytarget-통합에서-마이그레이션","aria-label":'Permalink to "SPM binaryTarget 통합에서 마이그레이션 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[20]||(i[20]=s("p",null,[s("code",null,"binaryTarget"),a("를 사용한 SPM 통합에서 마이그레이션하려면:")],-1)),s("ol",null,[s("li",null,[i[2]||(i[2]=a("Xcode에서 ")),i[3]||(i[3]=s("strong",null,"Product",-1)),i[4]||(i[4]=a(" | ")),i[5]||(i[5]=s("strong",null,"Clean Build Folder",-1)),i[6]||(i[6]=a("를 사용하거나 ")),l(e,null,{default:n(()=>i[1]||(i[1]=[a("Cmd + Shift + K")])),_:1}),i[7]||(i[7]=a(" 단축키를 사용하여 빌드 디렉토리를 정리합니다."))]),i[8]||(i[8]=s("li",null,[a("모든 "),s("code",null,"Package.swift"),a(" 파일에서 Kotlin 프레임워크가 포함된 패키지에 대한 의존성과 제품에 대한 타겟 의존성을 모두 제거합니다.")],-1))]),i[21]||(i[21]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"cocoapods-플러그인에서-마이그레이션",tabindex:"-1"},[a("CocoaPods 플러그인에서 마이그레이션 "),s("a",{class:"header-anchor",href:"#cocoapods-플러그인에서-마이그레이션","aria-label":'Permalink to "CocoaPods 플러그인에서 마이그레이션 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[22]||(i[22]=s("div",{class:"danger custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,[s("code",null,"cocoapods {}"),a(" 블록에 다른 Pod에 대한 의존성이 있다면 CocoaPods 통합 방식을 사용해야 합니다. 현재 멀티모달 SPM 프로젝트에서 Pod 및 Kotlin 프레임워크에 대한 의존성을 동시에 가질 수는 없습니다.")])],-1)),i[23]||(i[23]=s("p",null,"CocoaPods 플러그인에서 마이그레이션하려면:",-1)),s("ol",null,[s("li",null,[s("p",null,[i[10]||(i[10]=a("Xcode에서 ")),i[11]||(i[11]=s("strong",null,"Product",-1)),i[12]||(i[12]=a(" | ")),i[13]||(i[13]=s("strong",null,"Clean Build Folder",-1)),i[14]||(i[14]=a("를 사용하거나 ")),l(e,null,{default:n(()=>i[9]||(i[9]=[a("Cmd + Shift + K")])),_:1}),i[15]||(i[15]=a(" 단축키를 사용하여 빌드 디렉토리를 정리합니다."))])]),i[16]||(i[16]=t("",3))]),i[24]||(i[24]=t("",8))])}const A=c(m,[["render",F]]);export{B as __pageData,A as default};
