import{_ as h}from"./chunks/server_get_started_ktor_sample_app_output.BqyRKElU.js";import{_ as k,C as t,c as E,o as r,j as s,G as n,ag as d,a,w as l}from"./chunks/framework.Bksy39di.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/maven-assembly-plugin.md","filePath":"ko/ktor/maven-assembly-plugin.md","lastUpdated":1755457140000}'),g={name:"ko/ktor/maven-assembly-plugin.md"};function o(y,i,c,u,m,b){const e=t("control"),p=t("tldr");return r(),E("div",null,[i[3]||(i[3]=s("h1",{id:"maven-assembly-플러그인을-사용하여-fat-jar-생성하기",tabindex:"-1"},[a("Maven Assembly 플러그인을 사용하여 Fat JAR 생성하기 "),s("a",{class:"header-anchor",href:"#maven-assembly-플러그인을-사용하여-fat-jar-생성하기","aria-label":'Permalink to "Maven Assembly 플러그인을 사용하여 Fat JAR 생성하기"'},"​")],-1)),n(p,null,{default:l(()=>[s("p",null,[n(e,null,{default:l(()=>i[0]||(i[0]=[a("샘플 프로젝트")])),_:1}),i[1]||(i[1]=a(": ")),i[2]||(i[2]=s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tutorial-server-get-started-maven"},"tutorial-server-get-started-maven",-1))])]),_:1}),i[4]||(i[4]=d(`<p><a href="http://maven.apache.org/plugins/maven-assembly-plugin/" target="_blank" rel="noreferrer">Maven Assembly 플러그인</a>은 프로젝트 결과물을 의존성, 모듈, 사이트 문서 및 기타 파일을 포함하는 단일 배포 가능한 아카이브로 결합하는 기능을 제공합니다.</p><h2 id="configure-plugin" tabindex="-1">Assembly 플러그인 구성 <a class="header-anchor" href="#configure-plugin" aria-label="Permalink to &quot;Assembly 플러그인 구성 {id=&quot;configure-plugin&quot;}&quot;">​</a></h2><p>어셈블리를 빌드하려면 먼저 Assembly 플러그인을 구성해야 합니다:</p><ol><li><p><strong>pom.xml</strong> 파일로 이동하여 <a href="./server-dependencies#create-entry-point">메인 애플리케이션 클래스</a>가 지정되었는지 확인합니다.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main.class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;com.example.ApplicationKt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main.class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="./server-create-and-configure#engine-main">EngineMain</a>을 명시적인 <code>main()</code> 함수 없이 사용하는 경우, 애플리케이션의 메인 클래스는 사용된 엔진에 따라 <code>io.ktor.server.netty.EngineMain</code>과 같이 보일 수 있습니다.</p></div></li><li><p><code>maven-assembly-plugin</code>을 <code>plugins</code> 블록에 다음과 같이 추가합니다.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;org.apache.maven.plugins&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;maven-assembly-plugin&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2.6&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">descriptorRefs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">descriptorRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;jar-with-dependencies&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">descriptorRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">descriptorRefs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">archive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">manifest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">addClasspath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">addClasspath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mainClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${main.class}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mainClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">manifest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">archive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">executions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">execution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;assemble-all&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">phase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;package&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">phase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">goals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">goal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;single&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">goal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">goals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">execution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">executions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol><h2 id="build" tabindex="-1">Assembly 빌드 <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Assembly 빌드 {id=&quot;build&quot;}&quot;">​</a></h2><p>애플리케이션용 어셈블리를 빌드하려면 터미널을 열고 다음 명령어를 실행합니다.</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span></span></code></pre></div><p>이 명령어는 어셈블리용 새 <strong>target</strong> 디렉터리를 생성하며, 이 디렉터리에는 <strong>.jar</strong> 파일이 포함됩니다.</p><blockquote><p>결과 패키지를 사용하여 Docker로 애플리케이션을 배포하는 방법을 알아보려면 <a href="./docker">Docker</a> 도움말 항목을 참조하세요.</p></blockquote><h2 id="run" tabindex="-1">애플리케이션 실행 <a class="header-anchor" href="#run" aria-label="Permalink to &quot;애플리케이션 실행 {id=&quot;run&quot;}&quot;">​</a></h2><p>빌드된 애플리케이션을 실행하려면 다음 단계를 따릅니다.</p>`,11)),i[5]||(i[5]=s("ol",null,[s("li",null,[s("p",null,[a("새 터미널 창에서 "),s("code",null,"java -jar"),a(" 명령어를 사용하여 애플리케이션을 실행합니다. 샘플 프로젝트의 경우 다음과 같습니다.")]),s("div",{class:"language-Bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"Bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"java"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -jar"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," target/tutorial-server-get-started-maven-0.0.1-jar-with-dependencies.jar")])])])])]),s("li",null,[s("p",null,"앱이 실행되면 다음과 같은 확인 메시지가 표시됩니다."),s("div",{class:"language-Bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"Bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[main] INFO  Application - Responding at http://0.0.0.0:8080")])])])])]),s("li",null,[s("p",null,"URL 링크를 클릭하여 기본 브라우저에서 애플리케이션을 엽니다."),s("p",null,[s("img",{src:h,alt:"Output of generated ktor project","border-effect":"rounded",width:"706"})])])],-1))])}const f=k(g,[["render",o]]);export{D as __pageData,f as default};
