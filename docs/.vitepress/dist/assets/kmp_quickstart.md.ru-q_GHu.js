import{_ as d,a as m,b as h,l as g,c as f,d as k,e as b,f as c,g as I,h as _,i as D,j as E,k as A}from"./chunks/run-wasm-app.BQkB6EyS.js";import{_ as w,C as a,c as K,o as M,j as l,G as e,ag as s,a as t,w as o}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"Kotlin Multiplatform 快速入门","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/quickstart.md","filePath":"kmp/quickstart.md","lastUpdated":1755516278000}'),S={name:"kmp/quickstart.md"},C={style:{}};function J(x,i,P,v,O,y){const p=a("web-summary"),r=a("TabItem"),n=a("Tabs"),u=a("shortcut");return M(),K("div",null,[i[17]||(i[17]=l("h1",{id:"kotlin-multiplatform-快速入门",tabindex:"-1"},[t("Kotlin Multiplatform 快速入门 "),l("a",{class:"header-anchor",href:"#kotlin-multiplatform-快速入门","aria-label":'Permalink to "Kotlin Multiplatform 快速入门"'},"​")],-1)),e(p,null,{default:o(()=>i[0]||(i[0]=[t("JetBrains 为 IntelliJ IDEA 和 Android Studio 提供官方 Kotlin IDE 支持。")])),_:1}),i[18]||(i[18]=l("p",null,"通过本教程，你可以让一个简单的 Kotlin Multiplatform 应用程序运行起来。",-1)),i[19]||(i[19]=l("h2",{id:"设置环境",tabindex:"-1"},[t("设置环境 "),l("a",{class:"header-anchor",href:"#设置环境","aria-label":'Permalink to "设置环境"'},"​")],-1)),i[20]||(i[20]=l("p",null,"Kotlin Multiplatform (KMP) 项目需要特定的环境，但大多数要求都会通过 IDE 中的预检得到明确。",-1)),i[21]||(i[21]=l("p",null,"从 IDE 和必要的插件开始：",-1)),l("ol",C,[i[4]||(i[4]=s('<li><p>选择并安装 IDE。 IntelliJ IDEA 和 Android Studio 都支持 Kotlin Multiplatform，因此你可以使用你偏好的 IDE。</p><p><a href="https://www.jetbrains.com/toolbox/app/" target="_blank" rel="noreferrer">JetBrains Toolbox App</a> 是安装 IDE 的推荐工具。它允许你管理多个产品或版本，包括 <a href="https://www.jetbrains.com/resources/eap/" target="_blank" rel="noreferrer">抢先体验计划</a> (EAP) 和每夜构建版本。</p><p>对于独立安装，请下载 <a href="https://www.jetbrains.com/idea/download/" target="_blank" rel="noreferrer">IntelliJ IDEA</a> 或 <a href="https://developer.android.com/studio" target="_blank" rel="noreferrer">Android Studio</a> 的安装程序。</p><p>Kotlin Multiplatform 所需的插件需要 <strong>IntelliJ IDEA 2025.1.1.1</strong> 或 <strong>Android Studio Narwhal 2025.1.1</strong>。</p></li><li style=""><p>安装 <a href="https://plugins.jetbrains.com/plugin/14936-kotlin-multiplatform" target="_blank" rel="noreferrer">Kotlin Multiplatform IDE 插件</a>（不要与 Kotlin Multiplatform Gradle 插件混淆）。</p><blockquote><p>Kotlin Multiplatform 插件尚未在 Windows 或 Linux 上的 IDE 中提供。但它在这些平台上也并非绝对必要：你仍然可以按照教程生成并运行 KMP 项目。</p></blockquote></li><li><p>为 IntelliJ IDEA 安装 Kotlin Multiplatform IDE 插件还会安装所有必要的依赖项（如果你还没有安装），Android Studio 已捆绑所有必要的插件。</p><p>如果你在 Windows 或 Linux 上使用 IntelliJ IDEA，请确保手动安装所有必要的插件：</p><ul><li><a href="https://plugins.jetbrains.com/plugin/22989-android" target="_blank" rel="noreferrer">Android</a></li><li><a href="https://plugins.jetbrains.com/plugin/22990-android-design-tools" target="_blank" rel="noreferrer">Android Design Tools</a></li><li><a href="https://plugins.jetbrains.com/plugin/18409-jetpack-compose" target="_blank" rel="noreferrer">Jetpack Compose</a></li><li><a href="https://plugins.jetbrains.com/plugin/12775-native-debugging-support" target="_blank" rel="noreferrer">Native Debugging Support</a></li><li><a href="https://plugins.jetbrains.com/plugin/16541-compose-multiplatform-for-desktop-ide-support" target="_blank" rel="noreferrer">Compose Multiplatform for Desktop IDE Support</a>（仅当你没有 Kotlin Multiplatform 插件时才需要）。</li></ul></li>',3)),l("li",null,[i[3]||(i[3]=l("p",null,[t("如果你的 "),l("code",null,"ANDROID_HOME"),t(" 环境变量未设置，请配置你的系统以识别它：")],-1)),e(n,null,{default:o(()=>[e(r,{title:"Bash 或 Zsh"},{default:o(()=>i[1]||(i[1]=[l("p",null,[t("将以下命令添加到你的 "),l("code",null,".profile"),t(" 或 "),l("code",null,".zprofile"),t("：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ANDROID_HOME"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=~"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"/Library/Android/sdk")])])])],-1)])),_:1}),e(r,{title:"Windows PowerShell 或 CMD"},{default:o(()=>i[2]||(i[2]=[l("p",null,[t("对于 PowerShell，你可以使用以下命令添加一个持久性环境变量（详见 "),l("a",{href:"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables",target:"_blank",rel:"noreferrer"},"PowerShell 文档"),t("）：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[Environment]::SetEnvironmentVariable("),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"'ANDROID_HOME'"),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},","),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '<path to the SDK>',"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'Machine'"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")])])])],-1),l("p",null,[t("对于 CMD，使用 "),l("a",{href:"https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/setx",target:"_blank",rel:"noreferrer"},[l("code",null,"setx")]),t(" 命令：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"setx"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ANDROID_HOME"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "<path to the SDK>"')])])])],-1)])),_:1})]),_:1})]),i[5]||(i[5]=l("li",null,[l("p",null,[t("要创建 iOS 应用程序，你需要一台安装了 "),l("a",{href:"https://apps.apple.com/us/app/xcode/id497799835",target:"_blank",rel:"noreferrer"},"Xcode"),t(" 的 macOS 主机。你的 IDE 会在后台运行 Xcode 来构建 iOS framework。")]),l("p",null,"确保在开始使用 KMP 项目之前至少启动 Xcode 一次，以便它完成初始设置。"),l("blockquote",null,[l("p",null,"每次 Xcode 更新时，你都需要手动启动它并下载更新的工具。Kotlin Multiplatform IDE 插件会进行预检，在 Xcode 未处于正确工作状态时提醒你。")])],-1))]),i[22]||(i[22]=l("h2",{id:"创建项目",tabindex:"-1"},[t("创建项目 "),l("a",{class:"header-anchor",href:"#创建项目","aria-label":'Permalink to "创建项目"'},"​")],-1)),i[23]||(i[23]=l("h3",{id:"在-macos-上",tabindex:"-1"},[t("在 macOS 上 "),l("a",{class:"header-anchor",href:"#在-macos-上","aria-label":'Permalink to "在 macOS 上"'},"​")],-1)),i[24]||(i[24]=l("p",null,"在 macOS 上，Kotlin Multiplatform 插件在 IDE 内部提供了一个项目生成向导：",-1)),e(n,null,{default:o(()=>[e(r,{title:"IntelliJ IDEA"},{default:o(()=>i[6]||(i[6]=[l("p",null,"使用 IDE 向导创建新的 KMP 项目：",-1),l("ol",null,[l("li",null,[t("在主菜单中选择 "),l("strong",null,"File"),t(" | "),l("strong",null,"New"),t(" | "),l("strong",null,"Project"),t("。")]),l("li",null,[t("在左侧列表中选择 "),l("strong",null,"Kotlin Multiplatform"),t("。")]),l("li",null,"根据需要设置项目的名称、位置和其他基本属性。"),l("li",null,[t("我们建议选择一个版本的 "),l("a",{href:"https://github.com/JetBrains/JetBrainsRuntime",target:"_blank",rel:"noreferrer"},"JetBrains Runtime"),t(" (JBR) 作为项目的 JDK，因为它提供了重要的修复，特别是为了提高桌面 KMP 应用程序的兼容性。 每个 IntelliJ IDEA 发行版都包含相关版本的 JBR，因此无需额外设置。")]),l("li",null,[t("选择你希望作为项目一部分的平台： "),l("ul",null,[l("li",null,"所有目标平台都可以设置为使用 Compose Multiplatform 从一开始就共享 UI 代码（服务器模块除外，因为它没有 UI 代码）。"),l("li",null,[t("对于 iOS，你可以选择两种实现之一： "),l("ul",null,[l("li",null,"共享 UI 代码，使用 Compose Multiplatform，"),l("li",null,"完全原生的 UI，使用 SwiftUI 构建并与共享逻辑的 Kotlin 模块连接。")])]),l("li",null,[t("桌面目标包含 "),l("a",{href:"./compose-hot-reload"},"Compose Hot Reload"),t(" 功能的 Alpha 版本，它允许你在更改相应代码后立即看到 UI 更改。 即使你没有计划制作桌面应用程序，你也可能希望使用桌面版本来加速编写 UI 代码。")])])])],-1),l("p",null,[t("选择完平台后，点击 "),l("strong",null,"Create"),t(" 按钮，等待 IDE 生成并导入项目。")],-1),l("p",null,[l("img",{src:d,alt:"IntelliJ IDEA 向导，包含默认设置并选择了 Android、iOS、桌面和 Web 平台",width:"800"})],-1)])),_:1}),e(r,{title:"Android Studio"},{default:o(()=>i[7]||(i[7]=[l("p",null,[t("Kotlin Multiplatform IDE 插件高度依赖 K2 功能，如果没有 K2 功能将无法按所述工作。 因此，在开始之前，请确保 K2 模式已启用："),l("strong",null,"Settings"),t(" | "),l("strong",null,"Languages & Frameworks"),t(" | "),l("strong",null,"Kotlin"),t(" | "),l("strong",null,"Enable K2 mode"),t("。")],-1),l("p",null,"使用 IDE 向导创建新的 KMP 项目：",-1),l("ol",null,[l("li",null,[l("p",null,[t("在主菜单中选择 "),l("strong",null,"File"),t(" | "),l("strong",null,"New"),t(" | "),l("strong",null,"New project"),t("。")])]),l("li",null,[l("p",null,[t("在默认的 "),l("strong",null,"Phone and Tablet"),t(" 模板类别中选择 "),l("strong",null,"Kotlin Multiplatform"),t("。")]),l("p",null,[l("img",{src:m,alt:"Android Studio 中的新项目第一步",width:"400"})])]),l("li",null,[l("p",null,[t("根据需要设置项目的名称、位置和其他基本属性，然后点击 "),l("strong",null,"Next"),t("。")])]),l("li",null,[l("p",null,"选择你希望作为项目一部分的平台："),l("ul",null,[l("li",null,"所有目标平台都可以设置为使用 Compose Multiplatform 从一开始就共享 UI 代码（服务器模块除外，因为它没有 UI 代码）。"),l("li",null,[t("对于 iOS，你可以选择两种实现之一： "),l("ul",null,[l("li",null,"共享 UI 代码，使用 Compose Multiplatform，"),l("li",null,"完全原生的 UI，使用 SwiftUI 构建并与共享逻辑的 Kotlin 模块连接。")])]),l("li",null,"桌面目标包含 hot reload 功能的 alpha 版本，它允许你在更改相应代码后立即看到 UI 更改。 即使你没有计划制作桌面应用程序，你也可能希望使用桌面版本来加速编写 UI 代码。")])]),l("li",null,[l("p",null,[t("项目生成后，我们建议选择一个版本的 "),l("a",{href:"https://github.com/JetBrains/JetBrainsRuntime",target:"_blank",rel:"noreferrer"},"JetBrains Runtime"),t(" (JBR) 作为项目的 JDK，因为它提供了重要的修复，特别是为了提高桌面 KMP 应用程序的兼容性。 每个 IntelliJ IDEA 发行版都包含相关版本的 JBR，因此无需额外设置。")])])],-1),l("p",null,[t("选择完平台后，点击 "),l("strong",null,"Finish"),t(" 按钮，等待 IDE 生成并导入项目。")],-1),l("p",null,[l("img",{src:h,alt:"Android Studio 向导的最后一步，选择了 Android、iOS、桌面和 Web 平台",width:"800"})],-1)])),_:1})]),_:1}),i[25]||(i[25]=s('<h3 id="在-windows-或-linux-上" tabindex="-1">在 Windows 或 Linux 上 <a class="header-anchor" href="#在-windows-或-linux-上" aria-label="Permalink to &quot;在 Windows 或 Linux 上&quot;">​</a></h3><p>如果你在 Windows 或 Linux 上：</p><ol><li>使用 <a href="https://kmp.jetbrains.com/" target="_blank" rel="noreferrer">web KMP 向导</a> 生成项目。</li><li>解压归档文件并在你的 IDE 中打开生成的文件夹。</li><li>等待导入完成，然后前往 <a href="#run-the-sample-apps">运行示例应用</a> 部分，了解如何构建和运行应用程序。</li></ol><h2 id="查阅预检" tabindex="-1">查阅预检 <a class="header-anchor" href="#查阅预检" aria-label="Permalink to &quot;查阅预检&quot;">​</a></h2><p>你可以通过打开 <strong>Project Environment Preflight Checks</strong> 工具窗口来确保项目设置没有环境问题：点击右侧边栏或底部栏上的预检图标 <img src="'+A+'" alt="带有飞机的预检图标" width="20"></p><p>在这个工具窗口中，你可以查看与这些检测相关的消息，重新运行它们，或更改它们的设置。</p>',6)),l("p",null,[i[9]||(i[9]=t("预检命令也可以在 ")),i[10]||(i[10]=l("strong",null,"Search Everywhere",-1)),i[11]||(i[11]=t(" 对话框中找到。 按下双重 ")),e(u,null,{default:o(()=>i[8]||(i[8]=[t("Shift")])),_:1}),i[12]||(i[12]=t(" 并搜索包含“preflight”一词的命令："))]),i[26]||(i[26]=l("p",null,[l("img",{src:g,alt:"Search Everywhere 菜单，输入了“preflight”一词"})],-1)),i[27]||(i[27]=l("h2",{id:"运行示例应用",tabindex:"-1"},[t("运行示例应用 "),l("a",{class:"header-anchor",href:"#运行示例应用","aria-label":'Permalink to "运行示例应用"'},"​")],-1)),i[28]||(i[28]=l("p",null,"IDE 向导创建的项目包含为 iOS、Android、桌面和 Web 应用程序生成的运行配置，以及用于运行服务器应用程序的 Gradle 任务。 在 Windows 和 Linux 上，请参阅下方每个平台的 Gradle 命令。",-1)),e(n,null,{default:o(()=>[e(r,{title:"Android"},{default:o(()=>i[13]||(i[13]=[l("p",null,[t("要运行 Android 应用程序，请启动 "),l("strong",null,"composeApp"),t(" 运行配置：")],-1),l("p",null,[l("img",{src:f,alt:"突出显示 Android 运行配置的下拉菜单",width:"250"})],-1),l("p",null,[t("要在 Windows 或 Linux 上运行 Android 应用程序，请创建 "),l("strong",null,"Android App"),t(" 运行配置，并选择模块 "),l("strong",null,"[项目名称].composeApp"),t("。")],-1),l("p",null,"默认情况下，它会在第一个可用的虚拟设备上运行：",-1),l("p",null,[l("img",{src:k,alt:"在虚拟设备上运行的 Android 应用程序",width:"350"})],-1)])),_:1}),e(r,{title:"iOS"},{default:o(()=>i[14]||(i[14]=[l("blockquote",{style:{}},[l("p",null,"你需要 macOS 主机来构建 iOS 应用程序。")],-1),l("p",null,[t("如果你为项目选择了 iOS 目标并设置了带有 Xcode 的 macOS 机器，你可以选择 "),l("strong",null,"iosApp"),t(" 运行配置并选择一个模拟设备：")],-1),l("p",null,[l("img",{src:b,alt:"突出显示 iOS 运行配置的下拉菜单",width:"250"})],-1),l("p",null,"当你运行 iOS 应用程序时，它会在后台使用 Xcode 构建，并在 iOS 模拟器中启动。 第一次构建会收集编译所需的原生依赖项，并为后续运行预热构建：",-1),l("p",null,[l("img",{src:c,alt:"在虚拟设备上运行的 iOS 应用程序",width:"350"})],-1)])),_:1}),e(r,{title:"Desktop"},{default:o(()=>i[15]||(i[15]=[l("p",null,[t("桌面应用程序的默认运行配置创建为 "),l("strong",null,"composeApp [desktop]"),t("：")],-1),l("p",null,[l("img",{src:I,alt:"突出显示默认桌面运行配置的下拉菜单",width:"250"})],-1),l("p",null,[t("要在 Windows 或 Linux 上运行桌面应用程序，请创建一个 "),l("strong",null,"Gradle"),t(" 运行配置，指向 "),l("strong",null,"[app name]:composeApp"),t(" Gradle 项目，并使用以下命令：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"desktopRun"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -DmainClass=com.example.myapplication.MainKt"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --quiet")])])])],-1),l("p",null,"通过此配置，你可以运行 JVM 桌面应用程序：",-1),l("p",null,[l("img",{src:_,alt:"在虚拟设备上运行的 JVM 应用程序",width:"600"})],-1)])),_:1}),e(r,{title:"Web"},{default:o(()=>i[16]||(i[16]=[l("p",null,[t("Web 应用程序的默认运行配置创建为 "),l("strong",null,"composeApp [wasmJs]"),t("：")],-1),l("p",null,[l("img",{src:D,alt:"突出显示默认 Wasm 运行配置的下拉菜单",width:"250"})],-1),l("p",null,[t("要在 Windows 或 Linux 上运行 Web 应用程序，请创建一个 "),l("strong",null,"Gradle"),t(" 运行配置，指向 "),l("strong",null,"[app name]:composeApp"),t(" Gradle 项目，并使用以下命令：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"wasmJsBrowserDevelopmentRun")])])])],-1),l("p",null,"当你运行此配置时，IDE 会构建 Kotlin/Wasm 应用程序并在默认浏览器中打开它：",-1),l("p",null,[l("img",{src:E,alt:"在虚拟设备上运行的 Web 应用程序",width:"600"})],-1)])),_:1})]),_:1}),i[29]||(i[29]=s('<h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><h3 id="java-和-jdk" tabindex="-1">Java 和 JDK <a class="header-anchor" href="#java-和-jdk" aria-label="Permalink to &quot;Java 和 JDK&quot;">​</a></h3><p>Java 常见问题：</p><ul><li>某些工具可能找不到要运行的 Java 版本或使用了错误的版本。 解决此问题： <ul><li style=""><p>将 <code>JAVA_HOME</code> 环境变量设置为安装了相应 JDK 的目录。</p><blockquote><p>我们建议使用 <a href="https://github.com/JetBrains/JetBrainsRuntime" target="_blank" rel="noreferrer">JetBrains Runtime</a>，这是一个支持类重定义的 OpenJDK 分支。</p></blockquote></li><li><p>将 <code>JAVA_HOME</code> 目录内的 <code>bin</code> 文件夹路径附加到 <code>PATH</code> 变量，以便 JDK 中包含的工具在终端中可用。</p></li></ul></li><li>如果在 Android Studio 中遇到 Gradle JDK 问题，请确保其配置正确： 选择 <strong>Settings</strong> | <strong>Build, Execution, Deployment</strong> | <strong>Build Tools</strong> | <strong>Gradle</strong>。</li></ul><h3 id="android-工具" tabindex="-1">Android 工具 <a class="header-anchor" href="#android-工具" aria-label="Permalink to &quot;Android 工具&quot;">​</a></h3><p>与 JDK 类似，如果你在启动 <code>adb</code> 等 Android 工具时遇到问题，请确保已将 <code>ANDROID_HOME/tools</code>、<code>ANDROID_HOME/tools/bin</code> 和 <code>ANDROID_HOME/platform-tools</code> 的路径添加到你的 <code>PATH</code> 环境变量中。</p><h3 id="xcode" tabindex="-1">Xcode <a class="header-anchor" href="#xcode" aria-label="Permalink to &quot;Xcode&quot;">​</a></h3><p>如果你的 iOS 运行配置报告没有可运行的虚拟设备，请确保启动 Xcode 并查看是否有 iOS 模拟器的任何更新。</p><h3 id="获取帮助" tabindex="-1">获取帮助 <a class="header-anchor" href="#获取帮助" aria-label="Permalink to &quot;获取帮助&quot;">​</a></h3><ul><li><strong>Kotlin Slack</strong>。获取 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">邀请</a> 并加入 <a href="https://kotlinlang.slack.com/archives/C3PQML5NU" target="_blank" rel="noreferrer">#multiplatform</a> 频道。</li><li><strong>Kotlin Multiplatform Tooling 问题跟踪器</strong>。 <a href="https://youtrack.jetbrains.com/newIssue?project=KMT" target="_blank" rel="noreferrer">报告新问题</a>。</li></ul><h2 id="后续步骤" tabindex="-1">后续步骤 <a class="header-anchor" href="#后续步骤" aria-label="Permalink to &quot;后续步骤&quot;">​</a></h2><p>了解更多关于 KMP 项目结构和编写共享代码的信息：</p><ul><li>关于使用共享 UI 代码的系列教程：<a href="./compose-multiplatform-create-first-app">创建你的 Compose Multiplatform 应用程序</a></li><li>关于将共享代码与原生 UI 结合使用的系列教程：<a href="./multiplatform-create-first-app">创建你的 Kotlin Multiplatform 应用程序</a></li><li>深入研究 Kotlin Multiplatform 文档： <ul><li><a href="./multiplatform-project-configuration">项目配置</a></li><li><a href="https://kotlinlang.org/docs/multiplatform-add-dependencies.html" target="_blank" rel="noreferrer">使用多平台依赖项</a></li></ul></li><li>了解 Compose Multiplatform UI 框架、其基础知识和平台特有的特性： <a href="./compose-multiplatform-and-jetpack-compose">Compose Multiplatform 和 Jetpack Compose</a>。</li></ul><p>发现已为 KMP 编写的代码：</p><ul><li>我们的 <a href="./multiplatform-samples">示例</a> 页面，包含 JetBrains 官方示例以及精心策划的展示 KMP 功能的项目列表。</li><li>GitHub 主题： <ul><li><a href="https://github.com/topics/kotlin-multiplatform" target="_blank" rel="noreferrer">kotlin-multiplatform</a>，用 Kotlin Multiplatform 实现的项目。</li><li><a href="https://github.com/topics/kotlin-multiplatform-sample" target="_blank" rel="noreferrer">kotlin-multiplatform-sample</a>， 用 KMP 编写的示例项目列表。</li></ul></li><li><a href="https://klibs.io" target="_blank" rel="noreferrer">klibs.io</a> – KMP 库搜索平台，迄今已收录 2000 多个库，包括 OkHttp、Ktor、Coil、Koin、SQLDelight 等。</li></ul>',15))])}const q=w(S,[["render",J]]);export{T as __pageData,q as default};
