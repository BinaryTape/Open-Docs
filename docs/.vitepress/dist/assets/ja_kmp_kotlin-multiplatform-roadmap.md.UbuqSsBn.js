import{_ as i,c as t,o as a,ag as o}from"./chunks/framework.Bksy39di.js";const h=JSON.parse('{"title":"Kotlin Multiplatform ロードマップ","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/kotlin-multiplatform-roadmap.md","filePath":"ja/kmp/kotlin-multiplatform-roadmap.md","lastUpdated":1755516278000}'),e={name:"ja/kmp/kotlin-multiplatform-roadmap.md"};function r(n,l,p,m,d,s){return a(),t("div",null,l[0]||(l[0]=[o('<h1 id="kotlin-multiplatform-ロードマップ" tabindex="-1">Kotlin Multiplatform ロードマップ <a class="header-anchor" href="#kotlin-multiplatform-ロードマップ" aria-label="Permalink to &quot;Kotlin Multiplatform ロードマップ&quot;">​</a></h1><p>Kotlin Multiplatform ロードマップは、Kotlin Multiplatform プロジェクトの優先事項と全体的な方向性の概要を示すものです。</p><p>最新の<a href="https://blog.jetbrains.com/kotlin/2024/10/kotlin-multiplatform-development-roadmap-for-2025/" target="_blank" rel="noreferrer">ロードマップに関するブログ記事</a>は、2024年10月28日に公開されました。 以下のページはそれを要約したものであり、宣言されたマイルストーンに到達したとき、または戦略の変更を反映する必要があるときに更新されます。</p><ul><li>2025年2月14日、ロードマップは<a href="https://blog.jetbrains.com/kotlin/2025/02/kotlin-multiplatform-tooling-shifting-gears/" target="_blank" rel="noreferrer">Kotlin Multiplatform Tooling – Shifting Gears</a>ブログ記事で説明されている変更を反映するために更新されました。</li></ul><p>Kotlin Multiplatform の目標は、<a href="https://kotlinlang.org/docs/roadmap.html" target="_blank" rel="noreferrer">Kotlin ロードマップ</a>と密接に連携しています。私たちが進む方向性についてより多くの情報を得るために、ぜひご確認ください。</p><h2 id="主要な優先事項" tabindex="-1">主要な優先事項 <a class="header-anchor" href="#主要な優先事項" aria-label="Permalink to &quot;主要な優先事項&quot;">​</a></h2><ul><li>iOS 向け Compose Multiplatform の安定化：iOS ターゲットを安定版リリースに導くには、基盤となるフレームワークの改善と、iOS 固有の統合およびベンチマークの両方が必要です。</li><li>IntelliJ ベースの IDE におけるマルチプラットフォーム開発のサポート強化：Kotlin Multiplatform および Compose Multiplatform のために最適化された環境を提供します。</li><li>Kotlin から Swift へのエクスポートの最初の公開バージョンをリリースする。最初のリリースでは、既存の Objective-C エクスポートに匹敵するエクスペリエンスを提供し、将来的に Swift エクスポートを完全に活用するための道を開くことを目指します。</li><li>より良いツールとガイダンスを提供することで、マルチプラットフォームライブラリ作成のエクスペリエンスを向上させる。<code>klib</code> フォーマットをより柔軟で強力なものに改善し、マルチプラットフォームライブラリ作成のためのより良いテンプレートと手順を提供します。</li><li>Amper をマルチプラットフォームモバイル開発に適したものにする。2025年には、Amper は Compose Multiplatform を使用した UI コードの共有を含め、iOS と Android のマルチプラットフォーム開発を完全にサポートするはずです。</li></ul><p>よくある質問とその回答は、<a href="#faq">FAQセクション</a>で確認できます。</p><h2 id="compose-multiplatform" tabindex="-1">Compose Multiplatform <a class="header-anchor" href="#compose-multiplatform" aria-label="Permalink to &quot;Compose Multiplatform&quot;">​</a></h2><p>Compose Multiplatform の注力分野は以下の通りです。</p><ul><li><strong>Jetpack Compose との機能パリティ</strong>。すべてのコア API とコンポーネントがマルチプラットフォームであることを保証します。</li><li><strong>iOS のレンダリングパフォーマンス</strong>。リグレッションを捕捉し、フレームワークのパフォーマンスをユーザーに透明化するためのベンチマークインフラストラクチャを実装します。</li><li><strong>コアコンポーネントの機能完備</strong>。以下を含む、必須機能を完成させます。 <ul><li>ナビゲーション、</li><li>リソース管理、</li><li>アクセシビリティ、</li><li>国際化。</li></ul></li><li><strong>フレームワークの全体的な安定化</strong>。Compose とネイティブビュー間の相互運用性を含め、全体的な安定性を向上させつつ、Compose Multiplatform のプレビューを通じてユーザーエクスペリエンスを強化します。</li><li><strong>ドキュメント</strong>。Compose Multiplatform を学習し、使用するために必要なすべてのリソースを1か所でユーザーに提供します。</li><li><strong>ウェブ向け Compose Multiplatform</strong>。他のサポートされているプラットフォームとの機能パリティを達成します。</li></ul><h3 id="compose-html-に関する計画はありますか" tabindex="-1">Compose HTML に関する計画はありますか？ <a class="header-anchor" href="#compose-html-に関する計画はありますか" aria-label="Permalink to &quot;Compose HTML に関する計画はありますか？&quot;">​</a></h3><p>Compose HTML ライブラリのバグ修正によるメンテナンスを継続しつつ、既存ユーザー間でのユースケースも探求しており、将来の開発計画を策定できるようにします。</p><h2 id="ツール" tabindex="-1">ツール <a class="header-anchor" href="#ツール" aria-label="Permalink to &quot;ツール&quot;">​</a></h2><p>私たちは、Kotlin Multiplatform が <code>IntelliJ IDEA</code> や <code>Android Studio</code> など、KMP 開発で既に一般的に使用されている IDE とシームレスに統合されることを目指し、プロジェクト内またはプロジェクト間でのコード共有をより簡単に行えるようにします。</p><p>開発エクスペリエンスを向上させるための新たな分野も探求しています。</p><ul><li>Apple デバイスへのアクセスが容易でない開発者を支援するため、クラウドマシンを使用して iOS アプリをビルドすることを検討しています。</li><li>コード生成だけでなく、より複雑な開発タスクも支援するために、より深い AI ツール統合を試しています。</li></ul><h2 id="kotlin-から-swift-へのエクスポート" tabindex="-1">Kotlin から Swift へのエクスポート <a class="header-anchor" href="#kotlin-から-swift-へのエクスポート" aria-label="Permalink to &quot;Kotlin から Swift へのエクスポート&quot;">​</a></h2><p>2025年の私たちの目標は、Kotlin から Swift への直接エクスポートの最初の公開バージョンをリリースすることです。 最初のリリースでは、既存の Objective-C エクスポートに匹敵するユーザーエクスペリエンスを提供しつつ、Objective-C の制約を克服することを目指します。</p><p>これにより、Swift 言語のより幅広いサポートが可能になり、API のエクスポートが容易になり、将来的に Swift エクスポートを完全に活用するための道が開かれます。</p><h2 id="ライブラリエコシステム" tabindex="-1">ライブラリエコシステム <a class="header-anchor" href="#ライブラリエコシステム" aria-label="Permalink to &quot;ライブラリエコシステム&quot;">​</a></h2><p>Kotlin Multiplatform エコシステムが急速に拡大するにつれて、ライブラリの後方互換性を確保することが重要になります。 私たちが計画していることは以下の通りです。</p><ul><li>ライブラリ作成者が JVM ライブラリ構築の知識を活用できるように、<code>klib</code> フォーマットを改善します。</li><li>Kotlin Multiplatform ライブラリで、JVM と同じコードインライン化の動作を実装します。</li><li>マルチプラットフォームライブラリのパブリック API が後方互換性を保つことを保証するツールを提供します。</li></ul><p>私たちはまた、Kotlin Multiplatform ライブラリの公開プロセスを改善することを目指しています。私たちは以下を望んでいます。</p><ul><li>KMP ライブラリを作成および公開するためのテンプレートと包括的なガイドラインを提供します。</li><li>異なるプラットフォームでの <code>klib</code> クロスコンパイルを安定化させます。</li><li>完全に再設計された KMP ライブラリ公開プロセスを開始します。</li><li>ライブラリのドキュメント作成プロセスを大幅に改善します。</li></ul><p>Kotlin Multiplatform は大幅な更新を受ける一方で、現在のフォーマットで構築されたライブラリは、新しい Kotlin バージョンでも引き続き機能します。</p><h3 id="マルチプラットフォームライブラリの検索改善" tabindex="-1">マルチプラットフォームライブラリの検索改善 <a class="header-anchor" href="#マルチプラットフォームライブラリの検索改善" aria-label="Permalink to &quot;マルチプラットフォームライブラリの検索改善&quot;">​</a></h3><p>現在、2500を超えるKotlin Multiplatformライブラリが利用可能です。 しかし、幅広い選択肢があるにもかかわらず、開発者が自身の特定のニーズを満たし、選択したプラットフォームをサポートするライブラリを見つけるのは難しい場合があります。</p><p>私たちの目標は、これらのライブラリの発見を容易にし、開発者が簡単に試せるようにするソリューションを導入することです。</p><h3 id="amper" tabindex="-1">Amper <a class="header-anchor" href="#amper" aria-label="Permalink to &quot;Amper&quot;">​</a></h3><p>Amper は JetBrains が提供する実験的なプロジェクト設定およびビルドツールです。2025年には、Amper を Android および iOS 向けのマルチプラットフォームモバイルアプリ開発に完全に適合させ、Compose Multiplatform UI を共有できるようにすることに注力します。</p><p>以下のサポートを目指します。</p><ul><li>アプリケーションをローカル、物理デバイス、および CI 内で実行およびテストすること。</li><li>アプリケーションに署名し、Play Store および App Store で公開すること。</li><li>スムーズで快適なエクスペリエンスを保証するための IDE 統合。</li></ul><h3 id="gradle-およびその他のビルドツール" tabindex="-1">Gradle およびその他のビルドツール <a class="header-anchor" href="#gradle-およびその他のビルドツール" aria-label="Permalink to &quot;Gradle およびその他のビルドツール&quot;">​</a></h3><p>2025年に向けて、Gradle の機能強化に関する私たちの取り組みは、<a href="https://kotlinlang.org/docs/roadmap.html#tooling" target="_blank" rel="noreferrer">Kotlin ロードマップ</a>に概説されています。</p><p>特に Kotlin Multiplatform に関して、私たちが取り組む主要な分野は以下の通りです。</p><ul><li>プロジェクトレベルでの Kotlin Multiplatform の依存関係宣言をサポートする。これにより、開発者がプロジェクトの依存関係を効果的に管理しやすくなります。</li><li>Kotlin/Native ツールチェーンの Gradle への統合を改善する。</li><li>マルチプラットフォームライブラリの次世代配布フォーマットを実装する。 これにより、マルチプラットフォームライブラリの依存関係モデルと公開レイアウトが簡素化され、サードパーティのビルドツールでの使用が容易になり、ライブラリ作成者の複雑さを軽減します。</li><li>Declarative Gradle における Kotlin Multiplatform の完全なサポートを提供する。 Declarative Gradle をサポートする Experimental Kotlin Ecosystem Plugin に関する私たちの取り組みは、開発者が Gradle ビルドへの宣言的アプローチを探求するのに役立つことを目指しています。</li></ul><div class="note custom-block"><p class="custom-block-title">NOTE</p><ul><li>このロードマップは、チームが取り組んでいるすべてのことを網羅したリストではなく、最も大規模なプロジェクトのみを対象としています。 * 特定のバージョンで特定の機能や修正を提供することを約束するものではありません。 * 私たちは進捗に応じて優先順位を調整し、ロードマップを更新します。</li></ul></div><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><h3 id="intellij-idea-での-kmp-サポートは修正できますか" tabindex="-1">IntelliJ IDEA での KMP サポートは修正できますか？ <a class="header-anchor" href="#intellij-idea-での-kmp-サポートは修正できますか" aria-label="Permalink to &quot;IntelliJ IDEA での KMP サポートは修正できますか？&quot;">​</a></h3><p>私たちは IntelliJ IDEA における素晴らしい KMP エクスペリエンス提供の重要性を認識しています。 <a href="https://blog.jetbrains.com/kotlin/2025/02/kotlin-multiplatform-tooling-shifting-gears/" target="_blank" rel="noreferrer">KMP ツールに関するブログ記事</a>で述べられているように、私たちは IntelliJ Platform 全体での KMP サポートの強化に専念します。 これには、品質と安定性の向上、および特定の機能の導入が含まれ、IntelliJ IDEA をマルチプラットフォーム開発に好む開発者が、好みの IDE で完全な KMP サポートを享受できるようにします。</p><h3 id="android-studio-での-kmp-サポートはどうなりますか" tabindex="-1">Android Studio での KMP サポートはどうなりますか？ <a class="header-anchor" href="#android-studio-での-kmp-サポートはどうなりますか" aria-label="Permalink to &quot;Android Studio での KMP サポートはどうなりますか？&quot;">​</a></h3><p>私たちは Google と積極的に協力して、Android Studio での KMP サポートを改善しています。 詳細な計画は後日発表されます。 ご期待ください！</p><h3 id="現在、kmp-開発に推奨される-ide-は何ですか" tabindex="-1">現在、KMP 開発に推奨される IDE は何ですか？ <a class="header-anchor" href="#現在、kmp-開発に推奨される-ide-は何ですか" aria-label="Permalink to &quot;現在、KMP 開発に推奨される IDE は何ですか？&quot;">​</a></h3><p>主なユースケースがモバイルである場合は、Android Studio の使用をお勧めします。 IntelliJ IDEA での優れたサポートも提供できるよう取り組んでいます。</p><h3 id="intellij-idea-と-android-studio-で-swift-は利用可能になりますか" tabindex="-1">IntelliJ IDEA と Android Studio で Swift は利用可能になりますか？ <a class="header-anchor" href="#intellij-idea-と-android-studio-で-swift-は利用可能になりますか" aria-label="Permalink to &quot;IntelliJ IDEA と Android Studio で Swift は利用可能になりますか？&quot;">​</a></h3><p>Swift は特定の KMP シナリオの重要な部分であり、私たちはこれらのユースケースをサポートするよう取り組んでいます。</p><h3 id="ウェブを諦めるのですか" tabindex="-1">ウェブを諦めるのですか？ <a class="header-anchor" href="#ウェブを諦めるのですか" aria-label="Permalink to &quot;ウェブを諦めるのですか？&quot;">​</a></h3><p>いいえ、ウェブをまったく諦めていません！ 私たちは Kotlin/Wasm のサポートと、他のプラットフォームとの機能パリティを達成するためにウェブ向け Compose Multiplatform に積極的に取り組んでいます。 現在の取り組みには、ドラッグ＆ドロップサポートの実装、テキスト入力とレンダリングの改善、HTML コンテンツとのシームレスな相互運用性の確保が含まれます。 ウェブに関する詳細な計画は近日中に共有します。ご期待ください！</p><h3 id="compose-html-についてはどうですか" tabindex="-1">Compose HTML についてはどうですか？ <a class="header-anchor" href="#compose-html-についてはどうですか" aria-label="Permalink to &quot;Compose HTML についてはどうですか？&quot;">​</a></h3><p>Compose HTML ライブラリのバグ修正によるメンテナンスを継続しつつ、既存ユーザー間でのユースケースも探求しており、将来の開発計画を策定できるようにします。</p>',51)]))}const f=i(e,[["render",r]]);export{h as __pageData,f as default};
