import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.Bksy39di.js";const o=JSON.parse('{"title":"遷移","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/sqldelight/android_sqlite/migrations.md","filePath":"zh-Hant/sqldelight/android_sqlite/migrations.md","lastUpdated":1748435462000}'),t={name:"zh-Hant/sqldelight/android_sqlite/migrations.md"};function l(h,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="遷移" tabindex="-1">遷移 <a class="header-anchor" href="#遷移" aria-label="Permalink to &quot;遷移&quot;">​</a></h1><p><code>.sq</code> 檔案始終描述如何在一個空白資料庫中建立最新的結構描述 (schema)。如果你的資料庫目前處於較早版本，遷移檔案 (migration files) 會將這些資料庫更新至最新狀態。遷移檔案儲存在與你的 <code>.sq</code> 檔案相同的 <code>sqldelight</code> 資料夾中：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>src</span></span>
<span class="line"><span>└─ main</span></span>
<span class="line"><span>   └─ sqdelight</span></span>
<span class="line"><span>      ├─ com/example/hockey</span></span>
<span class="line"><span>      |  ├─ Team.sq</span></span>
<span class="line"><span>      |  └─ Player.sq</span></span>
<span class="line"><span>      └─ migrations</span></span>
<span class="line"><span>         ├─ 1.sqm</span></span>
<span class="line"><span>         └─ 2.sqm</span></span></code></pre></div><p>如果驅動程式 (driver) 支援，遷移作業會在交易 (transaction) 中執行。你不應將你的遷移作業用 <code>BEGIN/END TRANSACTION</code> 包裹，因為這可能會導致某些驅動程式崩潰。</p><h2 id="版本控制" tabindex="-1">版本控制 <a class="header-anchor" href="#版本控制" aria-label="Permalink to &quot;版本控制&quot;">​</a></h2><p>結構描述的第一個版本是 1。遷移檔案命名為 <code>&lt;version to upgrade from&gt;.sqm</code>。要遷移到版本 2，請將遷移陳述式放在 <code>1.sqm</code> 中：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hockeyPlayer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN draft_year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hockeyPlayer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN draft_order </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>這些 SQL 陳述式由 <code>Database.Schema.migrate()</code> 方法執行。遷移檔案與你的 <code>.sq</code> 檔案位於相同的原始碼集 (source set) 中。</p><h2 id="驗證遷移" tabindex="-1">驗證遷移 <a class="header-anchor" href="#驗證遷移" aria-label="Permalink to &quot;驗證遷移&quot;">​</a></h2><p>一個 <code>verifySqlDelightMigration</code> 任務 (task) 將會新增至 Gradle 專案，並且它將作為 <code>check</code> 任務的一部分執行。對於你的 SqlDelight 原始碼集（例如 <code>src/main/sqldelight</code>）中任何名為 <code>&lt;version number&gt;.db</code> 的 <code>.db</code> 檔案，它將從 <code>&lt;version number&gt;.sqm</code> 開始套用所有遷移，並確認這些遷移會產生一個具有最新結構描述的資料庫。</p><p>要從你的最新結構描述產生一個 <code>.db</code> 檔案，請執行 <code>generate&lt;source set name&gt;&lt;database name&gt;Schema</code> 任務，該任務在你指定 <code>schemaOutputDirectory</code> 後即可使用，如 <a href="/zh-Hant/sqldelight/android_sqlite/gradle.md">gradle.md</a> 中所述。你可能應該在建立第一個遷移之前執行此操作。例如，如果你的專案使用 <code>main</code> 原始碼集，並且自訂名稱為 <code>&quot;MyDatabase&quot;</code>，你將需要執行 <code>generateMainMyDatabaseSchema</code> 任務。</p><p>大多數使用案例會受益於只擁有一個代表其資料庫初始版本結構描述的 <code>1.db</code> 檔案。允許有多個 <code>.db</code> 檔案，但這會導致每個 <code>.db</code> 檔案都被套用所有其遷移，從而導致許多不必要的工作。</p><h2 id="程式碼遷移" tabindex="-1">程式碼遷移 <a class="header-anchor" href="#程式碼遷移" aria-label="Permalink to &quot;程式碼遷移&quot;">​</a></h2><p>如果你從程式碼執行遷移，並且想要執行資料遷移 (data migrations)，你可以使用 <code>Database.Schema.migrate</code> API：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Database.Schema.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">migrate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    oldVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    newVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Database.Schema.version,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    AfterVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INSERT INTO test (value) VALUES(&#39;hello&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>在以下範例中，如果你有 1.sqm、2.sqm、3.sqm、4.sqm 和 5.sqm 作為遷移，上述回呼 (callback) 將在 3.sqm 完成後發生，此時資料庫版本為 4。回呼後，它將從 4.sqm 繼續，並完成剩餘的遷移，在此情況下是 4.sqm 和 5.sqm，這意味著最終資料庫版本為 6。</p><p>如果您正在使用 <code>AndroidSqliteDriver</code>，您可以在建立驅動程式時傳入這些回呼：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SqlDriver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AndroidSqliteDriver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    schema </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Database.Schema,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test.db&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    callback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AndroidSqliteDriver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        schema </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Database.Schema,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        AfterVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INSERT INTO test (value) VALUES(&#39;hello&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,18)]))}const c=i(t,[["render",l]]);export{o as __pageData,c as default};
