import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.Bksy39di.js";const r=JSON.parse('{"title":"在 Compose 應用程式中使用孤立上下文","description":"","frontmatter":{"title":"在 Compose 應用程式中使用孤立上下文"},"headers":[],"relativePath":"zh-Hant/koin/reference/koin-compose/isolated-context.md","filePath":"zh-Hant/koin/reference/koin-compose/isolated-context.md","lastUpdated":1748365453000}'),t={name:"zh-Hant/koin/reference/koin-compose/isolated-context.md"};function o(p,s,l,h,k,c){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="在-compose-應用程式中使用孤立上下文" tabindex="-1">在 Compose 應用程式中使用孤立上下文 <a class="header-anchor" href="#在-compose-應用程式中使用孤立上下文" aria-label="Permalink to &quot;在 Compose 應用程式中使用孤立上下文&quot;">​</a></h1><p>對於 Compose 應用程式，您可以以相同的方式使用<a href="/zh-Hant/koin/reference/koin-core/context-isolation">孤立上下文</a>，以處理 SDK 或白標應用程式，從而避免將您的 Koin 定義與終端使用者的定義混淆。</p><h2 id="定義孤立上下文" tabindex="-1">定義孤立上下文 <a class="header-anchor" href="#定義孤立上下文" aria-label="Permalink to &quot;定義孤立上下文&quot;">​</a></h2><p>首先，讓我們宣告我們的孤立上下文持有者，以便將我們的孤立 Koin 實例儲存在記憶體中。這可以透過一個簡單的 Object 類別來完成，如下所示。<code>MyIsolatedKoinContext</code> 類別持有我們的 Koin 實例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyIsolatedKoinContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> koinApp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> koinApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // declare used modules</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sdkAppModule)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>請根據您的初始化需求調整 <code>MyIsolatedKoinContext</code> 類別。</p></div><h2 id="使用-compose-設定孤立上下文" tabindex="-1">使用 Compose 設定孤立上下文 <a class="header-anchor" href="#使用-compose-設定孤立上下文" aria-label="Permalink to &quot;使用 Compose 設定孤立上下文&quot;">​</a></h2><p>現在您已經定義了一個孤立的 Koin 上下文，我們可以將其設定到 Compose 中，以便使用它並覆寫所有 API。只需在根 Compose 函數中使用 <code>KoinIsolatedContext</code>。這會將您的 Koin 上下文傳播到所有子 composables 中。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Set current Koin instance to Compose context</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    KoinIsolatedContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MyIsolatedKoinContext.koinApp) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        MyScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>所有 Koin Compose API 在使用 <code>KoinIsolatedContext</code> 後，將會使用您的 Koin 孤立上下文。</p></div>`,10)]))}const E=i(t,[["render",o]]);export{r as __pageData,E as default};
