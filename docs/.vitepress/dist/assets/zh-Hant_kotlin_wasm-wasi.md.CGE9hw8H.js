import{_ as s,a as e,b as t,c as i}from"./chunks/wasm-wasi-tests-results.B152b-mz.js";import{_ as l}from"./chunks/join-slack-channel.C908i2w7.js";import{_ as o,c as n,o as r,ag as p}from"./chunks/framework.Bksy39di.js";const v=JSON.parse('{"title":"Kotlin/Wasm 和 WASI 入門","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/wasm-wasi.md","filePath":"zh-Hant/kotlin/wasm-wasi.md","lastUpdated":1754307826000}'),h={name:"zh-Hant/kotlin/wasm-wasi.md"};function d(c,a,m,g,k,b){return r(),n("div",null,a[0]||(a[0]=[p('<h1 id="kotlin-wasm-和-wasi-入門" tabindex="-1">Kotlin/Wasm 和 WASI 入門 <a class="header-anchor" href="#kotlin-wasm-和-wasi-入門" aria-label="Permalink to &quot;Kotlin/Wasm 和 WASI 入門&quot;">​</a></h1><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin/Wasm 處於 <a href="/zh-Hant/kotlin/components-stability">Alpha</a> 階段。它可能隨時變更。 <a href="https://slack-chats.kotlinlang.org/c/webassembly" target="_blank" rel="noreferrer">加入 Kotlin/Wasm 社群。</a></p></div><p>本教學示範如何使用 <a href="https://wasi.dev/" target="_blank" rel="noreferrer">WebAssembly 系統介面 (WASI)</a> 在各種 WebAssembly 虛擬機器中執行一個簡單的 <a href="/zh-Hant/kotlin/wasm-overview">Kotlin/Wasm</a> 應用程式。</p><p>您可以在 <a href="https://nodejs.org/en" target="_blank" rel="noreferrer">Node.js</a>、<a href="https://deno.com/" target="_blank" rel="noreferrer">Deno</a> 和 <a href="https://wasmedge.org/" target="_blank" rel="noreferrer">WasmEdge</a> 虛擬機器上找到應用程式執行的範例。輸出是一個使用標準 WASI API 的簡單應用程式。</p><p>目前，Kotlin/Wasm 支援 WASI 0.1，也稱為 Preview 1。<a href="https://youtrack.jetbrains.com/issue/KT-64568" target="_blank" rel="noreferrer">WASI 0.2 的支援計劃在未來版本中推出</a>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Kotlin/Wasm 工具鏈提供開箱即用的 Node.js 任務 (<code>wasmWasiNode*</code>)。 專案中的其他任務變體，例如利用 Deno 或 WasmEdge 的那些，都作為自訂任務包含在內。</p></div><h2 id="開始之前" tabindex="-1">開始之前 <a class="header-anchor" href="#開始之前" aria-label="Permalink to &quot;開始之前&quot;">​</a></h2><ol><li><p>下載並安裝最新版本的 <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noreferrer">IntelliJ IDEA</a>。</p></li><li><p>透過在 IntelliJ IDEA 中選擇 <strong>File | New | Project from Version Control</strong>，複製 <a href="https://github.com/Kotlin/kotlin-wasm-wasi-template" target="_blank" rel="noreferrer">Kotlin/Wasm WASI 模板儲存庫</a>。</p><p>您也可以從命令列複製它：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:Kotlin/kotlin-wasm-wasi-template.git</span></span></code></pre></div></li></ol><h2 id="執行應用程式" tabindex="-1">執行應用程式 <a class="header-anchor" href="#執行應用程式" aria-label="Permalink to &quot;執行應用程式&quot;">​</a></h2><ol><li><p>透過選擇 <strong>View | Tool Windows | Gradle</strong>，打開 <strong>Gradle</strong> 工具視窗。</p><p>在 <strong>Gradle</strong> 工具視窗中，您可以在專案載入後於 <strong>kotlin-wasm-wasi-example</strong> 下找到 Gradle 任務。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>您需要至少 Java 11 作為您的 Gradle JVM，才能成功載入任務。</p></div></li><li><p>從 <strong>kotlin-wasm-wasi-example | Tasks | kotlin node</strong>，選擇並執行以下其中一個 Gradle 任務：</p><ul><li><p><strong>wasmWasiNodeRun</strong> 以在 Node.js 中執行應用程式。</p></li><li><p><strong>wasmWasiDenoRun</strong> 以在 Deno 中執行應用程式。</p></li><li><p><strong>wasmWasiWasmEdgeRun</strong> 以在 WasmEdge 中執行應用程式。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在 Windows 平台上使用 Deno 時，請確保已安裝 <code>deno.exe</code>。欲了解更多資訊， 請參閱 <a href="https://docs.deno.com/runtime/manual/getting_started/installation" target="_blank" rel="noreferrer">Deno 的安裝文件</a>。</p></div></li></ul><p><img src="'+s+'" alt="Kotlin/Wasm and WASI tasks" width="600"></p></li></ol><p>或者，在終端機中從 <code>kotlin-wasm-wasi-template</code> 根目錄執行以下其中一個命令：</p><ul><li><p>在 Node.js 中執行應用程式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiNodeRun</span></span></code></pre></div></li><li><p>在 Deno 中執行應用程式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiDenoRun</span></span></code></pre></div></li><li><p>在 WasmEdge 中執行應用程式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiWasmEdgeRun</span></span></code></pre></div></li></ul><p>終端機在您的應用程式成功建置後會顯示一則訊息：</p><p><img src="'+e+'" alt="Kotlin/Wasm and WASI app" width="600"></p><h2 id="測試應用程式" tabindex="-1">測試應用程式 <a class="header-anchor" href="#測試應用程式" aria-label="Permalink to &quot;測試應用程式&quot;">​</a></h2><p>您也可以測試 Kotlin/Wasm 應用程式是否在各種虛擬機器中正常運作。</p><p>在 Gradle 工具視窗中，從 <strong>kotlin-wasm-wasi-example | Tasks | verification</strong> 執行以下其中一個 Gradle 任務：</p><ul><li><strong>wasmWasiNodeTest</strong> 以在 Node.js 中測試應用程式。</li><li><strong>wasmWasiDenoTest</strong> 以在 Deno 中測試應用程式。</li><li><strong>wasmWasiWasmEdgeTest</strong> 以在 WasmEdge 中測試應用程式。</li></ul><p><img src="'+t+'" alt="Kotlin/Wasm and WASI test tasks" width="600"></p><p>或者，在終端機中從 <code>kotlin-wasm-wasi-template</code> 根目錄執行以下其中一個命令：</p><ul><li><p>在 Node.js 中測試應用程式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiNodeTest</span></span></code></pre></div></li><li><p>在 Deno 中測試應用程式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiDenoTest</span></span></code></pre></div></li><li><p>在 WasmEdge 中測試應用程式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmWasiWasmEdgeTest</span></span></code></pre></div></li></ul><p>終端機顯示測試結果：</p><p><img src="'+i+'" alt="Kotlin/Wasm and WASI test" width="600"></p><h2 id="接下來是什麼" tabindex="-1">接下來是什麼？ <a class="header-anchor" href="#接下來是什麼" aria-label="Permalink to &quot;接下來是什麼？&quot;">​</a></h2><p>在 Kotlin Slack 中加入 Kotlin/Wasm 社群：</p><p><a href="https://slack-chats.kotlinlang.org/c/webassembly"><img src="'+l+'" width="500" alt="Join the Kotlin/Wasm community" style=""></a></p><p>嘗試更多 Kotlin/Wasm 範例：</p><ul><li><a href="https://github.com/JetBrains/compose-multiplatform/tree/master/examples/imageviewer" target="_blank" rel="noreferrer">Compose image viewer</a></li><li><a href="https://github.com/JetBrains/compose-multiplatform/tree/master/examples/jetsnack" target="_blank" rel="noreferrer">Jetsnack application</a></li><li><a href="https://github.com/Kotlin/kotlin-wasm-nodejs-template" target="_blank" rel="noreferrer">Node.js example</a></li><li><a href="https://github.com/Kotlin/kotlin-wasm-compose-template" target="_blank" rel="noreferrer">Compose example</a></li></ul>',28)]))}const f=o(h,[["render",d]]);export{v as __pageData,f as default};
