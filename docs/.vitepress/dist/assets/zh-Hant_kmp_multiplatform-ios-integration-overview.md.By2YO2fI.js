import{_ as o}from"./chunks/ios-integration-scheme.BWILfhhI.js";import{_ as r,c as t,o as e,ag as i}from"./chunks/framework.Bksy39di.js";const u=JSON.parse('{"title":"iOS 整合方法","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/multiplatform-ios-integration-overview.md","filePath":"zh-Hant/kmp/multiplatform-ios-integration-overview.md","lastUpdated":1755516278000}'),l={name:"zh-Hant/kmp/multiplatform-ios-integration-overview.md"};function p(s,a,n,c,d,m){return e(),t("div",null,a[0]||(a[0]=[i('<h1 id="ios-整合方法" tabindex="-1">iOS 整合方法 <a class="header-anchor" href="#ios-整合方法" aria-label="Permalink to &quot;iOS 整合方法&quot;">​</a></h1><p>您可以將 Kotlin Multiplatform 共享模組整合到您的 iOS 應用程式中。為此，您可以從共享模組產生一個 <a href="https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPFrameworks/Concepts/WhatAreFrameworks.html" target="_blank" rel="noreferrer">iOS 框架</a>，然後將其作為依賴項新增到 iOS 專案中：</p><p><img src="'+o+'" alt="iOS 整合方案"></p><p>可以將此框架作為本地或遠端依賴項來使用。如果您想完全控制整個程式碼庫並在常用程式碼變更時即時更新最終應用程式，請選擇本地整合。</p><p>如果您想將最終應用程式的程式碼庫與常用程式碼庫明確分離，請設定遠端整合。在這種情況下，共享程式碼將像常規的第三方依賴項一樣整合到最終應用程式中。</p><h2 id="本地整合" tabindex="-1">本地整合 <a class="header-anchor" href="#本地整合" aria-label="Permalink to &quot;本地整合&quot;">​</a></h2><p>在本地設定中，有兩種主要的整合選項。您可以使用透過特殊腳本進行的直接整合，這使 Kotlin 建置成為 iOS 建置的一部分。如果您的 Kotlin Multiplatform 專案中包含 Pod 依賴項，請採用 CocoaPods 整合方法。</p><h3 id="直接整合" tabindex="-1">直接整合 <a class="header-anchor" href="#直接整合" aria-label="Permalink to &quot;直接整合&quot;">​</a></h3><p>您可以透過向您的 Xcode 專案新增一個特殊腳本，直接從 Kotlin Multiplatform 專案連接 iOS 框架。該腳本會整合到您專案建置設定的建置階段中。</p><p>如果您的 Kotlin Multiplatform 專案中<strong>沒有</strong>匯入 CocoaPods 依賴項，此整合方法則適用於您。</p><p>如果您在 Android Studio 中建立專案，請選擇<strong>常規框架</strong>選項以自動產生此設定。如果您使用 <a href="https://kmp.jetbrains.com/" target="_blank" rel="noreferrer">Kotlin Multiplatform 網頁精靈</a>，則會預設應用直接整合。</p><p>如需更多資訊，請參閱 <a href="./multiplatform-direct-integration">直接整合</a>。</p><h3 id="cocoapods-整合與本地-podspec" tabindex="-1">CocoaPods 整合與本地 podspec <a class="header-anchor" href="#cocoapods-整合與本地-podspec" aria-label="Permalink to &quot;CocoaPods 整合與本地 podspec&quot;">​</a></h3><p>您可以透過 <a href="https://cocoapods.org/" target="_blank" rel="noreferrer">CocoaPods</a>（一個適用於 Swift 和 Objective-C 專案的流行依賴項管理器）從 Kotlin Multiplatform 專案連結 iOS 框架。</p><p>此整合方法適用於以下情況：</p><ul><li>您有一個使用 CocoaPods 的 iOS 專案的單一儲存庫設定</li><li>您在 Kotlin Multiplatform 專案中匯入 CocoaPods 依賴項</li></ul><p>要設定一個包含本地 CocoaPods 依賴項的工作流程，您可以手動編輯腳本，或使用 Android Studio 中的精靈產生專案。</p><p>如需更多資訊，請參閱 <a href="./multiplatform-cocoapods-overview">CocoaPods 概覽與設定</a>。</p><h2 id="遠端整合" tabindex="-1">遠端整合 <a class="header-anchor" href="#遠端整合" aria-label="Permalink to &quot;遠端整合&quot;">​</a></h2><p>對於遠端整合，您的專案可能會使用 Swift Package Manager (SPM) 或 CocoaPods 依賴項管理器來連結來自 Kotlin Multiplatform 專案的 iOS 框架。</p><h3 id="swift-package-manager-與-xcframeworks" tabindex="-1">Swift Package Manager 與 XCFrameworks <a class="header-anchor" href="#swift-package-manager-與-xcframeworks" aria-label="Permalink to &quot;Swift Package Manager 與 XCFrameworks&quot;">​</a></h3><p>您可以使用 XCFrameworks 設定 Swift Package Manager (SPM) 依賴項，以連結來自 Kotlin Multiplatform 專案的 iOS 框架。</p><p>如需更多資訊，請參閱 <a href="./multiplatform-spm-export">Swift 套件匯出設定</a>。</p><h3 id="cocoapods-整合與-xcframeworks" tabindex="-1">CocoaPods 整合與 XCFrameworks <a class="header-anchor" href="#cocoapods-整合與-xcframeworks" aria-label="Permalink to &quot;CocoaPods 整合與 XCFrameworks&quot;">​</a></h3><p>您可以使用 Kotlin CocoaPods Gradle 外掛程式建置 XCFrameworks，然後透過 CocoaPods 將專案的共享部分與行動應用程式分開分發。</p><p>如需更多資訊，請參閱 <a href="./multiplatform-build-native-binaries#build-frameworks">建置最終原生二進位檔</a>。</p>',26)]))}const k=r(l,[["render",p]]);export{u as __pageData,k as default};
