import{_ as i,c as a,o as t,ag as l}from"./chunks/framework.Bksy39di.js";const o=JSON.parse('{"title":"类型投影","description":"","frontmatter":{},"headers":[],"relativePath":"sqldelight/common/custom_projections.md","filePath":"sqldelight/common/custom_projections.md","lastUpdated":1748435462000}'),n={name:"sqldelight/common/custom_projections.md"};function e(p,s,h,k,r,d){return t(),a("div",null,s[0]||(s[0]=[l(`<h1 id="类型投影" tabindex="-1">类型投影 <a class="header-anchor" href="#类型投影" aria-label="Permalink to &quot;类型投影&quot;">​</a></h1><p>默认情况下，查询将返回一个带有你投影的数据类，但你可以使用类型安全的映射器来覆盖该行为。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selectAllNames </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> playerQueries.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">selectAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mapper </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { player_number, full_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> full_name.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toUppercase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(selectAllNames.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">executeAsList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints [&quot;RYAN GETZLAF&quot;, &quot;COREY PERRY&quot;]</span></span></code></pre></div><p>通常，你应该尽可能利用 SQL 来进行自定义投影。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selectNames:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> upper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(full_name)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hockeyPlayer;</span></span></code></pre></div><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selectAllNames </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> playerQueries.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">selectNames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(selectAllNames.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">executeAsList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints [&quot;RYAN GETZLAF&quot;, &quot;COREY PERRY&quot;]</span></span></code></pre></div>`,6)]))}const c=i(n,[["render",e]]);export{o as __pageData,c as default};
