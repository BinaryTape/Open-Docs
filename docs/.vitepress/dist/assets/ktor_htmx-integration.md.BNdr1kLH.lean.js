import{_ as o,C as l,c as g,o as u,G as t,ag as k,j as e,w as a,a as i}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/htmx-integration.md","filePath":"ktor/htmx-integration.md","lastUpdated":1755457140000}'),y={name:"ktor/htmx-integration.md"};function F(H,s,x,m,f,T){const h=l("TopicTitle"),r=l("show-structure"),d=l("primary-label"),E=l("tldr"),n=l("def"),p=l("deflist");return u(),g("div",null,[t(h,{labelRef:"experimental",title:"HTMX 集成"}),t(r,{for:"chapter",depth:"2"}),t(d,{ref:"experimental"},null,512),t(E,null,{default:a(()=>s[0]||(s[0]=[e("p",null,[e("b",null,"必需的依赖项"),i(": "),e("code",null,"io.ktor:ktor-htmx"),i(", "),e("code",null,"io.ktor:ktor-htmx-html"),i(", "),e("code",null,"io.ktor:ktor-server-htmx")],-1),e("p",null,[e("b",null,"代码示例"),i(": "),e("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/htmx-integration"}," htmx-integration ")],-1)])),_:1}),s[29]||(s[29]=k("",10)),t(p,{type:"wide"},{default:a(()=>[t(n,{title:"HxRequestHeaders.Request"},{default:a(()=>s[1]||(s[1]=[i("对于 HTMX 请求始终为 "),e("code",null,"true",-1)])),_:1}),t(n,{title:"HxRequestHeaders.Target"},{default:a(()=>s[2]||(s[2]=[i("目标元素的 ID")])),_:1}),t(n,{title:"HxRequestHeaders.Trigger"},{default:a(()=>s[3]||(s[3]=[i("触发元素的 ID")])),_:1}),t(n,{title:"HxRequestHeaders.TriggerName"},{default:a(()=>s[4]||(s[4]=[i("触发元素的名称")])),_:1}),t(n,{title:"HxRequestHeaders.Boosted"},{default:a(()=>s[5]||(s[5]=[i("指示请求是否通过 hx-boost")])),_:1}),t(n,{title:"HxRequestHeaders.CurrentUrl"},{default:a(()=>s[6]||(s[6]=[i("当前浏览器 URL")])),_:1}),t(n,{title:"HxRequestHeaders.HistoryRestoreRequest"},{default:a(()=>s[7]||(s[7]=[i("用于历史恢复")])),_:1}),t(n,{title:"HxRequestHeaders.Prompt"},{default:a(()=>s[8]||(s[8]=[i("用户对 hx-prompt 的响应")])),_:1})]),_:1}),s[30]||(s[30]=e("h3",{id:"响应标头",tabindex:"-1"},[i("响应标头 "),e("a",{class:"header-anchor",href:"#响应标头","aria-label":'Permalink to "响应标头"'},"​")],-1)),s[31]||(s[31]=e("p",null,[i("你可以使用 "),e("code",null,"HxResponseHeaders"),i(" 对象来访问 HTMX 响应标头的常量：")],-1)),t(p,{type:"wide"},{default:a(()=>[t(n,{title:"HxResponseHeaders.Location"},{default:a(()=>s[9]||(s[9]=[i("无需页面重新加载的客户端重定向")])),_:1}),t(n,{title:"HxResponseHeaders.PushUrl"},{default:a(()=>s[10]||(s[10]=[i("将 URL 推入历史栈")])),_:1}),t(n,{title:"HxResponseHeaders.Redirect"},{default:a(()=>s[11]||(s[11]=[i("客户端重定向")])),_:1}),t(n,{title:"HxResponseHeaders.Refresh"},{default:a(()=>s[12]||(s[12]=[i("强制完全刷新页面")])),_:1}),t(n,{title:"HxResponseHeaders.ReplaceUrl"},{default:a(()=>s[13]||(s[13]=[i("替换当前 URL")])),_:1}),t(n,{title:"HxResponseHeaders.Reswap"},{default:a(()=>s[14]||(s[14]=[i("控制响应如何交换")])),_:1}),t(n,{title:"HxResponseHeaders.Retarget"},{default:a(()=>s[15]||(s[15]=[i("更新内容更新的目标")])),_:1}),t(n,{title:"HxResponseHeaders.Reselect"},{default:a(()=>s[16]||(s[16]=[i("选择响应的哪一部分进行交换")])),_:1}),t(n,{title:"HxResponseHeaders.Trigger"},{default:a(()=>s[17]||(s[17]=[i("触发客户端事件")])),_:1}),t(n,{title:"HxResponseHeaders.TriggerAfterSettle"},{default:a(()=>s[18]||(s[18]=[i("在 settle 后触发事件")])),_:1}),t(n,{title:"HxResponseHeaders.TriggerAfterSwap"},{default:a(()=>s[19]||(s[19]=[i("在 swap 后触发事件")])),_:1})]),_:1}),s[32]||(s[32]=e("h2",{id:"交换模式",tabindex:"-1"},[i("交换模式 "),e("a",{class:"header-anchor",href:"#交换模式","aria-label":'Permalink to "交换模式"'},"​")],-1)),s[33]||(s[33]=e("p",null,[i("你可以使用核心 "),e("code",null,"ktor-htmx"),i(" 模块中的 "),e("code",null,"HxSwap"),i(" 对象来访问不同 HTMX 交换模式的常量。")],-1)),t(p,{type:"medium"},{default:a(()=>[t(n,{title:"HxSwap.innerHtml"},{default:a(()=>s[20]||(s[20]=[i("替换内部 HTML (默认)")])),_:1}),t(n,{title:"HxSwap.outerHtml "},{default:a(()=>s[21]||(s[21]=[i("替换整个元素")])),_:1}),t(n,{title:"HxSwap.textContent"},{default:a(()=>s[22]||(s[22]=[i("仅替换文本内容")])),_:1}),t(n,{title:"HxSwap.beforeBegin"},{default:a(()=>s[23]||(s[23]=[i("在目标元素之前插入")])),_:1}),t(n,{title:"HxSwap.afterBegin"},{default:a(()=>s[24]||(s[24]=[i("作为第一个子元素插入")])),_:1}),t(n,{title:"HxSwap.beforeEnd"},{default:a(()=>s[25]||(s[25]=[i("作为最后一个子元素插入")])),_:1}),t(n,{title:"HxSwap.afterEnd"},{default:a(()=>s[26]||(s[26]=[i("在目标元素之后插入")])),_:1}),t(n,{title:"HxSwap.delete"},{default:a(()=>s[27]||(s[27]=[i("删除目标元素")])),_:1}),t(n,{title:"HxSwap.none"},{default:a(()=>s[28]||(s[28]=[i("不追加内容")])),_:1})]),_:1}),s[34]||(s[34]=k("",9))])}const q=o(y,[["render",F]]);export{b as __pageData,q as default};
