import{_ as h}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as k}from"./chunks/icon-2-done.e1N9yMQF.js";import{_ as o}from"./chunks/icon-3.DqpDG4W7.js";import{_ as d}from"./chunks/icon-4-todo.DqbNYzPe.js";import{_ as E}from"./chunks/icon-5-todo.DJgVODZv.js";import{_ as g}from"./chunks/gradle-sync.fCQp85Nh.js";import{_ as u}from"./chunks/first-multiplatform-project-3.DSsneMHX.js";import{_ as m,C as l,c as y,o as F,j as s,G as t,ag as f,a,w as n}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/multiplatform-dependencies.md","filePath":"kmp/multiplatform-dependencies.md","lastUpdated":1755516278000}'),c={name:"kmp/multiplatform-dependencies.md"};function C(b,i,B,A,D,v){const e=l("secondary-label"),p=l("Links"),r=l("tldr");return F(),y("div",null,[i[22]||(i[22]=s("h1",{id:"向项目添加依赖项",tabindex:"-1"},[a("向项目添加依赖项 "),s("a",{class:"header-anchor",href:"#向项目添加依赖项","aria-label":'Permalink to "向项目添加依赖项"'},"​")],-1)),t(e,{ref:"IntelliJ IDEA"},null,512),t(e,{ref:"Android Studio"},null,512),t(r,null,{default:n(()=>[i[18]||(i[18]=s("p",null,"本教程使用 IntelliJ IDEA，但你也可以在 Android Studio 中进行操作 —— 这两款 IDE 共享相同的核心功能和 Kotlin Multiplatform 支持。",-1)),i[19]||(i[19]=s("br",null,null,-1)),i[20]||(i[20]=s("br",null,null,-1)),i[21]||(i[21]=s("p",null,[a("这是"),s("strong",null,"使用共享逻辑和原生 UI 创建 Kotlin Multiplatform 应用"),a("教程的第三部分。在继续之前，请确保你已完成前述步骤。")],-1)),s("p",null,[i[2]||(i[2]=s("img",{src:h,width:"20",alt:"第一步"},null,-1)),i[3]||(i[3]=a()),t(p,{href:"/kmp/multiplatform-create-first-app",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the first part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:n(()=>i[0]||(i[0]=[a("创建你的 Kotlin Multiplatform 应用")])),_:1}),i[4]||(i[4]=s("br",null,null,-1)),i[5]||(i[5]=s("img",{src:k,width:"20",alt:"第二步"},null,-1)),i[6]||(i[6]=a()),t(p,{href:"/kmp/multiplatform-update-ui",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the second part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Before proceeding, make sure you've completed previous steps. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:n(()=>i[1]||(i[1]=[a("更新用户界面")])),_:1}),i[7]||(i[7]=s("br",null,null,-1)),i[8]||(i[8]=s("img",{src:o,width:"20",alt:"第三步"},null,-1)),i[9]||(i[9]=a()),i[10]||(i[10]=s("strong",null,"添加依赖项",-1)),i[11]||(i[11]=s("br",null,null,-1)),i[12]||(i[12]=s("img",{src:d,width:"20",alt:"第四步"},null,-1)),i[13]||(i[13]=a(" 共享更多逻辑")),i[14]||(i[14]=s("br",null,null,-1)),i[15]||(i[15]=s("img",{src:E,width:"20",alt:"第五步"},null,-1)),i[16]||(i[16]=a(" 完成你的项目")),i[17]||(i[17]=s("br",null,null,-1))])]),_:1}),i[23]||(i[23]=f("",17))])}const N=m(c,[["render",C]]);export{T as __pageData,N as default};
