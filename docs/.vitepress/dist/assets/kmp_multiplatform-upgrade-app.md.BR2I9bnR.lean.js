import{_ as r}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as d}from"./chunks/icon-2-done.e1N9yMQF.js";import{_ as E}from"./chunks/icon-3-done.D86i6ZaO.js";import{_ as o}from"./chunks/icon-4.CODFcxoy.js";import{_ as g}from"./chunks/icon-5-todo.DJgVODZv.js";import{_ as c,a as y}from"./chunks/multiplatform-mobile-upgrade-ios.C-YVNNGz.js";import{_ as F,a as u}from"./chunks/multiplatform-add-package.DxcZA53w.js";import{_ as C,C as e,c as m,o as B,j as i,G as n,ag as p,a,w as l}from"./chunks/framework.Bksy39di.js";const I=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/multiplatform-upgrade-app.md","filePath":"kmp/multiplatform-upgrade-app.md","lastUpdated":1755516278000}'),b={name:"kmp/multiplatform-upgrade-app.md"};function A(v,s,D,f,w,S){const h=e("secondary-label"),t=e("Links"),k=e("tldr");return B(),m("div",null,[s[22]||(s[22]=i("h1",{id:"在-ios-与-android-之间共享更多逻辑",tabindex:"-1"},[a("在 iOS 与 Android 之间共享更多逻辑 "),i("a",{class:"header-anchor",href:"#在-ios-与-android-之间共享更多逻辑","aria-label":'Permalink to "在 iOS 与 Android 之间共享更多逻辑"'},"​")],-1)),n(h,{ref:"IntelliJ IDEA"},null,512),n(h,{ref:"Android Studio"},null,512),n(k,null,{default:l(()=>[s[19]||(s[19]=i("p",null,"本教程使用 IntelliJ IDEA，但你也可以在 Android Studio 中进行——这两个 IDE 共享相同的核心功能和 Kotlin Multiplatform 支持。",-1)),s[20]||(s[20]=i("br",null,null,-1)),s[21]||(s[21]=i("p",null,[a("这是 "),i("strong",null,"创建具有共享逻辑和原生 UI 的 Kotlin Multiplatform 应用"),a(" 教程的第四部分。在继续之前，请确保你已完成前面的步骤。")],-1)),i("p",null,[s[3]||(s[3]=i("img",{src:r,width:"20",alt:"First step"},null,-1)),s[4]||(s[4]=a()),n(t,{href:"/kmp/multiplatform-create-first-app",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the first part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:l(()=>s[0]||(s[0]=[a("创建你的 Kotlin Multiplatform 应用")])),_:1}),s[5]||(s[5]=i("br",null,null,-1)),s[6]||(s[6]=i("img",{src:d,width:"20",alt:"Second step"},null,-1)),s[7]||(s[7]=a()),n(t,{href:"/kmp/multiplatform-update-ui",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the second part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Before proceeding, make sure you've completed previous steps. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:l(()=>s[1]||(s[1]=[a("更新用户界面")])),_:1}),s[8]||(s[8]=i("br",null,null,-1)),s[9]||(s[9]=i("img",{src:E,width:"20",alt:"Third step"},null,-1)),s[10]||(s[10]=a()),n(t,{href:"/kmp/multiplatform-dependencies",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the third part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Before proceeding, make sure you've completed previous steps. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:l(()=>s[2]||(s[2]=[a("添加依赖项")])),_:1}),s[11]||(s[11]=i("br",null,null,-1)),s[12]||(s[12]=i("img",{src:o,width:"20",alt:"Fourth step"},null,-1)),s[13]||(s[13]=a()),s[14]||(s[14]=i("strong",null,"共享更多逻辑",-1)),s[15]||(s[15]=i("br",null,null,-1)),s[16]||(s[16]=i("img",{src:g,width:"20",alt:"Fifth step"},null,-1)),s[17]||(s[17]=a(" 完成你的项目")),s[18]||(s[18]=i("br",null,null,-1))])]),_:1}),s[23]||(s[23]=p("",52)),s[24]||(s[24]=i("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"选项-1-配置-kmp-nativecoroutines",tabindex:"-1"},[a("选项 1. 配置 KMP-NativeCoroutines "),i("a",{class:"header-anchor",href:"#选项-1-配置-kmp-nativecoroutines","aria-label":'Permalink to "选项 1. 配置 KMP-NativeCoroutines {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),s[25]||(s[25]=p("",9)),s[26]||(s[26]=i("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"选项-2-配置-skie",tabindex:"-1"},[a("选项 2. 配置 SKIE "),i("a",{class:"header-anchor",href:"#选项-2-配置-skie","aria-label":'Permalink to "选项 2. 配置 SKIE {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),s[27]||(s[27]=p("",19))])}const L=C(b,[["render",A]]);export{I as __pageData,L as default};
