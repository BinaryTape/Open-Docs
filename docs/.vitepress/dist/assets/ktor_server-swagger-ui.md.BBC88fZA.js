import{_ as u,C as a,c as E,o as y,G as e,ag as o,w as t,j as i,a as n}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/server-swagger-ui.md","filePath":"ktor/server-swagger-ui.md","lastUpdated":1755457140000}'),m={name:"ktor/server-swagger-ui.md"};function v(_,s,w,b,F,I){const p=a("TopicTitle"),k=a("primary-label"),g=a("Links"),h=a("tldr"),d=a("link-summary"),r=a("code-block"),l=a("TabItem"),c=a("Tabs");return y(),E("div",null,[e(p,{labelRef:"server-plugin",title:"Swagger UI"}),e(k,{ref:"server-plugin"},null,512),e(h,null,{default:t(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依赖项"),n(": "),i("code",null,"io.ktor:ktor-server-swagger")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"代码示例"),n(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/json-kotlinx-openapi"}," json-kotlinx-openapi ")],-1)),i("p",null,[i("b",null,[e(g,{href:"/ktor/server-native",summary:"Ktor 支持 Kotlin/Native，允许您在没有额外运行时或虚拟机的情况下运行服务器。"},{default:t(()=>s[0]||(s[0]=[n("原生服务器")])),_:1}),s[1]||(s[1]=n("支持"))]),s[2]||(s[2]=n(": ✖️ "))])]),_:1}),e(d,null,{default:t(()=>s[5]||(s[5]=[n(" Swagger UI 插件允许您为项目生成 Swagger UI。 ")])),_:1}),s[6]||(s[6]=o('<p>Ktor 允许您基于现有 OpenAPI 规范为项目生成并提供 Swagger UI。借助 Swagger UI，您可以可视化 API 资源并与之交互。</p><blockquote><p>以下工具可用于从代码生成 OpenAPI 定义，反之亦然：</p><ul><li>IntelliJ IDEA 的 <a href="https://www.jetbrains.com/help/idea/ktor.html#openapi" target="_blank" rel="noreferrer">Ktor 插件</a> 提供了为服务器端 Ktor 应用程序生成 OpenAPI 文档的能力。</li><li><a href="https://github.com/OpenAPITools/openapi-generator" target="_blank" rel="noreferrer">OpenAPI 生成器</a> 允许您使用 <a href="./https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/kotlin-server">kotlin-server</a> 生成器从 API 定义创建 Ktor 项目。或者，您可以使用 IntelliJ IDEA 的<a href="https://www.jetbrains.com/help/idea/openapi.html#codegen" target="_blank" rel="noreferrer">功能性</a>。</li></ul></blockquote><p id="open-api-note"></p><h2 id="add_dependencies" tabindex="-1">添加依赖项 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;添加依赖项 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>提供 Swagger UI 需要在构建脚本中添加 <code>ktor-server-swagger</code> 构件：</p>',5)),e(c,{group:"languages"},{default:t(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:t(()=>[e(r,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-swagger:$ktor_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:t(()=>[e(r,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-swagger:$ktor_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:t(()=>[e(r,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-swagger-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[7]||(s[7]=o(`<h2 id="configure-swagger" tabindex="-1">配置 Swagger UI <a class="header-anchor" href="#configure-swagger" aria-label="Permalink to &quot;配置 Swagger UI {id=&quot;configure-swagger&quot;}&quot;">​</a></h2><p>要提供 Swagger UI，您需要调用 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-swagger/io.ktor.server.plugins.swagger/swagger-u-i.html" target="_blank" rel="noreferrer">swaggerUI</a> 方法，该方法会在 <code>path</code> 上创建一个 <code>GET</code> 端点，其 Swagger UI 是从位于 <code>swaggerFile</code> 的 OpenAPI 规范渲染而来的：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.swagger.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    swaggerUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;swagger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, swaggerFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;openapi/documentation.yaml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>此方法尝试在应用程序资源中查找 OpenAPI 规范。否则，它会尝试使用 <code>java.io.File</code> 从文件系统读取 OpenAPI 规范。</p><p>（可选）您可以在 <code>swaggerUI</code> 代码块内部定制 Swagger UI。例如，您可以使用另一个 Swagger UI 版本或应用自定义样式。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    swaggerUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;swagger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, swaggerFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;openapi/documentation.yaml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;4.15.5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在，您可以<a href="./server-run">运行</a>应用程序并打开 <code>/swagger</code> 页面，以查看可用的端点并测试它们。</p><h2 id="configure-cors" tabindex="-1">配置 CORS <a class="header-anchor" href="#configure-cors" aria-label="Permalink to &quot;配置 CORS {id=&quot;configure-cors&quot;}&quot;">​</a></h2><p>为了确保您的 API 与 Swagger UI 良好协作，您需要为<a href="./server-cors">跨域资源共享 (CORS)</a> 设置策略。以下示例应用了以下 CORS 配置：</p><ul><li><code>anyHost</code> 启用来自任何主机的跨域请求；</li><li><code>allowHeader</code> 允许在<a href="./server-serialization">内容协商</a>中使用的 <code>Content-Type</code> 客户端标头。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CORS) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    anyHost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    allowHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpHeaders.ContentType)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,11))])}const A=u(m,[["render",v]]);export{C as __pageData,A as default};
