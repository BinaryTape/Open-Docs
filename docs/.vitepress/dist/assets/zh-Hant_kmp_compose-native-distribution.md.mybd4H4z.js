import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"原生發佈","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/compose-native-distribution.md","filePath":"zh-Hant/kmp/compose-native-distribution.md","lastUpdated":1755516278000}'),e={name:"zh-Hant/kmp/compose-native-distribution.md"};function l(p,s,h,k,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="原生發佈" tabindex="-1">原生發佈 <a class="header-anchor" href="#原生發佈" aria-label="Permalink to &quot;原生發佈&quot;">​</a></h1><p>您將在這裡了解原生發佈：如何為所有支援的系統建立安裝程式和套件，以及如何以與發佈相同的設定在本機執行應用程式。</p><p>請繼續閱讀以下主題的詳細資訊：</p><ul><li><a href="#gradle-plugin">什麼是 Compose Multiplatform Gradle plugin</a>？</li><li><a href="#basic-tasks">基本任務的詳細資訊</a>，例如在本機執行應用程式，以及<a href="#minification-and-obfuscation">進階任務</a>，例如縮小化和混淆處理。</li><li><a href="#including-jdk-modules">如何包含 JDK 模組</a>並處理 <code>ClassNotFoundException</code>。</li><li><a href="#specifying-distribution-properties">如何指定發佈屬性</a>：套件版本、JDK 版本、輸出目錄、啟動器屬性和中繼資料。</li><li><a href="#managing-resources">如何管理資源</a>，透過資源庫、JVM 資源載入或將檔案新增至已封裝應用程式。</li><li><a href="#custom-source-sets">如何自訂原始碼集</a>，透過 Gradle 原始碼集、Kotlin JVM 目標或手動方式。</li><li><a href="#application-icon">如何為每個作業系統指定應用程式圖示</a>。</li><li><a href="#platform-specific-options">平台特定選項</a>，例如 Linux 上套件維護者的電子郵件，以及 macOS 上 Apple App Store 的應用程式類別。</li><li><a href="#macos-specific-configuration">macOS 特定配置</a>：簽章、公證和 <code>Info.plist</code>。</li></ul><h2 id="gradle-plugin" tabindex="-1">Gradle plugin <a class="header-anchor" href="#gradle-plugin" aria-label="Permalink to &quot;Gradle plugin&quot;">​</a></h2><p>本指南主要著重於使用 Compose Multiplatform Gradle plugin 封裝 Compose 應用程式。 <code>org.jetbrains.compose</code> plugin 提供基本封裝、混淆處理和 macOS 程式碼簽章的任務。</p><p>此 plugin 簡化了使用 <code>jpackage</code> 將應用程式封裝為原生發佈以及在本機執行應用程式的流程。 可發佈的應用程式是自我包含、可安裝的二進位檔，其中包含所有必要的 Java 執行階段元件，無需在目標系統上安裝 JDK。</p><p>為了最小化套件大小，Gradle plugin 使用 <a href="https://openjdk.org/jeps/282" target="_blank" rel="noreferrer">jlink</a> 工具，該工具確保只將必要的 Java 模組捆綁在可發佈套件中。 但是，您仍然必須配置 Gradle plugin 以指定您需要的模組。 更多資訊請參閱 <a href="#including-jdk-modules">undefined</a> 章節。</p><p>或者，您也可以使用 <a href="https://www.hydraulic.software" target="_blank" rel="noreferrer">Conveyor</a>，這是一個非 JetBrains 開發的外部工具。 Conveyor 支援線上更新、跨平台建置和各種其他功能，但對於非開放原始碼專案需要<a href="https://hydraulic.software/pricing.html" target="_blank" rel="noreferrer">授權</a>。 更多資訊請參考 <a href="https://conveyor.hydraulic.dev/latest/tutorial/hare/jvm" target="_blank" rel="noreferrer">Conveyor 文件</a>。</p><h2 id="基本任務" tabindex="-1">基本任務 <a class="header-anchor" href="#基本任務" aria-label="Permalink to &quot;基本任務&quot;">​</a></h2><p>Compose Multiplatform Gradle plugin 中最基本的配置單元是 <code>application</code> (不要與已棄用的 <a href="https://docs.gradle.org/current/userguide/application_plugin.html" target="_blank" rel="noreferrer">Gradle application</a> plugin 混淆)。</p><p><code>application</code> DSL 方法定義了一組最終二進位檔的共用配置，這表示它允許您將一組檔案連同 JDK 發佈捆綁成各種格式的壓縮二進位安裝程式。</p><p>以下格式適用於支援的作業系統：</p><ul><li><strong>macOS</strong>：<code>.dmg</code> (<code>TargetFormat.Dmg</code>)、<code>.pkg</code> (<code>TargetFormat.Pkg</code>)</li><li><strong>Windows</strong>：<code>.exe</code> (<code>TargetFormat.Exe</code>)、<code>.msi</code> (<code>TargetFormat.Msi</code>)</li><li><strong>Linux</strong>：<code>.deb</code> (<code>TargetFormat.Deb</code>)、<code>.rpm</code> (<code>TargetFormat.Rpm</code>)</li></ul><p>以下是帶有基本桌面配置的 <code>build.gradle.kts</code> 檔案範例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.jetbrains.compose.desktop.application.dsl.TargetFormat</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.compose&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(compose.desktop.currentOs)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mainClass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;example.MainKt&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            targetFormats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Exe)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>當您建置專案時，plugin 會建立以下任務：</p><table><tr><td>Gradle task</td><td>Description</td></tr><tr><td><code>package&lt;FormatName&gt;</code></td><td>將應用程式封裝成對應的 <code>FormatName</code> 二進位檔。目前不支援跨平台編譯， 這表示您只能使用對應的相容作業系統建置特定格式。 例如，要建置 <code>.dmg</code> 二進位檔，您必須在 macOS 上執行 <code>packageDmg</code> 任務。 如果任何任務與目前的作業系統不相容，它們會預設跳過。</td></tr><tr><td><code>packageDistributionForCurrentOS</code></td><td>彙總應用程式的所有封裝任務。它是一個 <a href="https://docs.gradle.org/current/userguide/more_about_tasks.html#sec:task_categories">生命週期任務</a>。</td></tr><tr><td><code>packageUberJarForCurrentOS</code></td><td>建立一個包含所有適用於目前作業系統之依賴項的單一 \`jar\` 檔案。 此任務預期將 <code>compose.desktop.currentOS</code> 用作 <code>compile</code>、<code>implementation</code> 或 <code>runtime</code> 依賴項。</td></tr><tr><td><code>run</code></td><td>從 <code>mainClass</code> 中指定的入口點在本機執行應用程式。<code>run</code> 任務會啟動一個具有完整執行階段的非封裝 JVM 應用程式。 與建立帶有縮小化執行階段的緊湊二進位映像相比，此方法更快且更容易偵錯。 要執行最終二進位映像，請改用 <code>runDistributable</code> 任務。</td></tr><tr><td><code>createDistributable</code></td><td>建立最終應用程式映像而不建立安裝程式。</td></tr><tr><td><code>runDistributable</code></td><td>執行預先封裝的應用程式映像。</td></tr></table><p>所有可用的任務都列在 Gradle 工具視窗中。執行任務後，Gradle 會在 <code>\${project.buildDir}/compose/binaries</code> 目錄中生成輸出二進位檔。</p><h2 id="包含-jdk-模組" tabindex="-1">包含 JDK 模組 <a class="header-anchor" href="#包含-jdk-模組" aria-label="Permalink to &quot;包含 JDK 模組&quot;">​</a></h2><p>為了減少可發佈的大小，Gradle plugin 使用 <a href="https://openjdk.org/jeps/282" target="_blank" rel="noreferrer">jlink</a> 來幫助捆綁只必要的 JDK 模組。</p><p>目前，Gradle plugin 不會自動判斷必要的 JDK 模組。雖然這不會導致編譯問題， 但無法提供必要的模組可能導致執行階段的 <code>ClassNotFoundException</code>。</p><p>如果您在執行已封裝應用程式或 <code>runDistributable</code> 任務時遇到 <code>ClassNotFoundException</code>， 您可以使用 <code>modules</code> DSL 方法包含額外的 JDK 模組：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;java.sql&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Alternatively: includeAllModules = true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以手動指定所需的模組，或執行 <code>suggestModules</code>。<code>suggestModules</code> 任務使用 <a href="https://docs.oracle.com/javase/9/tools/jdeps.htm" target="_blank" rel="noreferrer">jdeps</a> 靜態分析工具來判斷可能遺失的模組。 請注意，此工具的輸出可能不完整或列出不必要的模組。</p><p>如果可發佈的大小不是關鍵因素且可以忽略，您可以選擇透過使用 <code>includeAllModules</code> DSL 屬性來包含所有執行階段模組。</p><h2 id="指定發佈屬性" tabindex="-1">指定發佈屬性 <a class="header-anchor" href="#指定發佈屬性" aria-label="Permalink to &quot;指定發佈屬性&quot;">​</a></h2><h3 id="套件版本" tabindex="-1">套件版本 <a class="header-anchor" href="#套件版本" aria-label="Permalink to &quot;套件版本&quot;">​</a></h3><p>原生發佈套件必須具有特定的套件版本。 要指定套件版本，您可以使用以下 DSL 屬性，從最高優先順序到最低優先順序列出：</p><ul><li><code>nativeDistributions.&lt;os&gt;.&lt;packageFormat&gt;PackageVersion</code> 為單一套件格式指定版本。</li><li><code>nativeDistributions.&lt;os&gt;.packageVersion</code> 為單一目標作業系統指定版本。</li><li><code>nativeDistributions.packageVersion</code> 為所有套件指定版本。</li></ul><p>在 macOS 上，您還可以使用以下 DSL 屬性指定建置版本，同樣從最高優先順序到最低優先順序列出：</p><ul><li><code>nativeDistributions.macOS.&lt;packageFormat&gt;PackageBuildVersion</code> 為單一套件格式指定建置版本。</li><li><code>nativeDistributions.macOS.packageBuildVersion</code> 為所有 macOS 套件指定建置版本。</li></ul><p>如果您未指定建置版本，Gradle 會改用套件版本。更多關於 macOS 上的版本控制資訊，請參閱 <a href="https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring" target="_blank" rel="noreferrer"><code>CFBundleShortVersionString</code></a> 和 <a href="https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleversion" target="_blank" rel="noreferrer"><code>CFBundleVersion</code></a> 文件。</p><p>以下是依優先順序指定套件版本的範本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Version for all packages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            packageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            macOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for all macOS packages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              packageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for the dmg package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              dmgPackageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for the pkg package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              pkgPackageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Build version for all macOS packages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              packageBuildVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Build version for the dmg package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              dmgPackageBuildVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Build version for the pkg package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              pkgPackageBuildVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            windows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for all Windows packages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              packageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for the msi package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              msiPackageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for the exe package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              exePackageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            linux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for all Linux packages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              packageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for the deb package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              debPackageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Version for the rpm package only</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              rpmPackageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>要定義套件版本，請遵循以下規則：</p><table><tr><td>檔案類型</td><td>版本格式</td><td>詳細資訊</td></tr><tr><td><code>dmg</code>, <code>pkg</code></td><td><code>MAJOR[.MINOR][.PATCH]</code></td><td><ul><li><code>MAJOR</code> 是大於 0 的整數</li><li><code>MINOR</code> 是可選的非負整數</li><li><code>PATCH</code> 是可選的非負整數</li></ul></td></tr><tr><td><code>msi</code>, <code>exe</code></td><td><code>MAJOR.MINOR.BUILD</code></td><td><ul><li><code>MAJOR</code> 是最大值為 255 的非負整數</li><li><code>MINOR</code> 是最大值為 255 的非負整數</li><li><code>BUILD</code> 是最大值為 65535 的非負整數</li></ul></td></tr><tr><td><code>deb</code></td><td><code>[EPOCH:]UPSTREAM_VERSION[-DEBIAN_REVISION]</code></td><td><ul><li><code>EPOCH</code> 是可選的非負整數</li><li><code>UPSTREAM_VERSION</code>： <ul><li>只能包含字母數字和 <code>.</code>、<code>+</code>、<code>-</code>、<code>~</code> 字元</li><li>必須以數字開頭</li></ul></li><li><code>DEBIAN_REVISION</code>： <ul><li>可選</li><li>只能包含字母數字和 <code>.</code>、<code>+</code>、<code>~</code> 字元</li></ul></li></ul> 更多詳細資訊請參閱 <a href="https://www.debian.org/doc/debian-policy/ch-controlfields.html#version">Debian 文件</a>。 </td></tr><tr><td><code>rpm</code></td><td>任何格式</td><td>版本不得包含 <code>-</code> (連字號) 字元。</td></tr></table><h3 id="jdk-版本" tabindex="-1">JDK 版本 <a class="header-anchor" href="#jdk-版本" aria-label="Permalink to &quot;JDK 版本&quot;">​</a></h3><p>此 plugin 使用 <code>jpackage</code>，它要求 JDK 版本不低於 <a href="https://openjdk.java.net/projects/jdk/17/" target="_blank" rel="noreferrer">JDK 17</a>。 指定 JDK 版本時，請確保您至少符合以下其中一項要求：</p><ul><li><p><code>JAVA_HOME</code> 環境變數指向相容的 JDK 版本。</p></li><li><p><code>javaHome</code> 屬性透過 DSL 設定：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        javaHome </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JDK_17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="輸出目錄" tabindex="-1">輸出目錄 <a class="header-anchor" href="#輸出目錄" aria-label="Permalink to &quot;輸出目錄&quot;">​</a></h3><p>若要為原生發佈使用自訂輸出目錄，請如下所示配置 <code>outputBaseDir</code> 屬性：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            outputBaseDir.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.layout.buildDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;customOutputDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="啟動器屬性" tabindex="-1">啟動器屬性 <a class="header-anchor" href="#啟動器屬性" aria-label="Permalink to &quot;啟動器屬性&quot;">​</a></h3><p>為自訂應用程式啟動流程，您可以自訂以下屬性：</p><table><tr><td>屬性</td><td>描述</td></tr><tr><td><code>mainClass</code></td><td>包含 <code>main</code> 方法的類別完整名稱。</td></tr><tr><td><code>args</code></td><td>應用程式 <code>main</code> 方法的引數。</td></tr><tr><td><code>jvmArgs</code></td><td>應用程式 JVM 的引數。</td></tr></table><p>以下是一個配置範例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mainClass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MainKt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-customArgument&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        jvmArgs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-Xmx2G&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="中繼資料" tabindex="-1">中繼資料 <a class="header-anchor" href="#中繼資料" aria-label="Permalink to &quot;中繼資料&quot;">​</a></h3><p>在 <code>nativeDistributions</code> DSL 區塊內，您可以配置以下屬性：</p><table><tr><td>屬性</td><td>描述</td><td>預設值</td></tr><tr><td><code>packageName</code></td><td>應用程式的名稱。</td><td>Gradle 專案的 <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html#getName--">名稱</a></td></tr><tr><td><code>packageVersion</code></td><td>應用程式的版本。</td><td>Gradle 專案的 <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html#getVersion--">版本</a></td></tr><tr><td><code>description</code></td><td>應用程式的描述。</td><td>無</td></tr><tr><td><code>copyright</code></td><td>應用程式的著作權資訊。</td><td>無</td></tr><tr><td><code>vendor</code></td><td>應用程式的供應商。</td><td>無</td></tr><tr><td><code>licenseFile</code></td><td>應用程式的授權檔案。</td><td>無</td></tr></table><p>以下是一個配置範例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ExampleApp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            packageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0.1-SNAPSHOT&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            description </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Compose Multiplatform App&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            copyright </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;© 2024 My Name. All rights reserved.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            vendor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Example vendor&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            licenseFile.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LICENSE.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="管理資源" tabindex="-1">管理資源 <a class="header-anchor" href="#管理資源" aria-label="Permalink to &quot;管理資源&quot;">​</a></h2><p>要封裝和載入資源，您可以使用 Compose Multiplatform 資源庫、JVM 資源載入，或將檔案新增至已封裝應用程式。</p><h3 id="資源庫" tabindex="-1">資源庫 <a class="header-anchor" href="#資源庫" aria-label="Permalink to &quot;資源庫&quot;">​</a></h3><p>設定專案資源最直接的方法是使用資源庫。 有了資源庫，您可以在所有支援的平台上透過通用程式碼存取資源。 詳情請參閱 <a href="./compose-multiplatform-resources">多平台資源</a>。</p><h3 id="jvm-資源載入" tabindex="-1">JVM 資源載入 <a class="header-anchor" href="#jvm-資源載入" aria-label="Permalink to &quot;JVM 資源載入&quot;">​</a></h3><p>Compose Multiplatform for desktop 在 JVM 平台上運作，這表示您可以使用 <code>java.lang.Class</code> API 從 <code>.jar</code> 檔案載入資源。您可以透過 <a href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/Class.html#getResource(java.lang.String)" target="_blank" rel="noreferrer"><code>Class::getResource</code></a> 或 <a href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/Class.html#getResourceAsStream(java.lang.String)" target="_blank" rel="noreferrer"><code>Class::getResourceAsStream</code></a> 存取 <code>src/main/resources</code> 目錄中的檔案。</p><h3 id="將檔案新增至已封裝應用程式" tabindex="-1">將檔案新增至已封裝應用程式 <a class="header-anchor" href="#將檔案新增至已封裝應用程式" aria-label="Permalink to &quot;將檔案新增至已封裝應用程式&quot;">​</a></h3><p>在某些情況下，從 <code>.jar</code> 檔案載入資源可能不太實際，例如，當您有特定目標的資產，並且需要只將檔案包含在 macOS 套件中，而不包含在 Windows 套件中。</p><p>在這些情況下，您可以配置 Gradle plugin 以在安裝目錄中包含額外的資源檔案。 如下所示透過 DSL 指定根資源目錄：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mainClass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MainKt&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            targetFormats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            packageVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            appResourcesRootDir.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.layout.projectDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在上述範例中，根資源目錄定義為 <code>&lt;PROJECT_DIR&gt;/resources</code>。</p><p>Gradle plugin 將從資源子目錄中包含檔案，如下所示：</p><ol><li><p><strong>共用資源：</strong> 位於 <code>&lt;RESOURCES_ROOT_DIR&gt;/common</code> 中的檔案將包含在所有套件中，無論目標作業系統或架構為何。</p></li><li><p><strong>作業系統特定資源：</strong> 位於 <code>&lt;RESOURCES_ROOT_DIR&gt;/&lt;OS_NAME&gt;</code> 中的檔案將只包含在為特定作業系統建置的套件中。 <code>&lt;OS_NAME&gt;</code> 的有效值為：<code>windows</code>、<code>macos</code> 和 <code>linux</code>。</p></li><li><p><strong>作業系統和架構特定資源：</strong> 位於 <code>&lt;RESOURCES_ROOT_DIR&gt;/&lt;OS_NAME&gt;-&lt;ARCH_NAME&gt;</code> 中的檔案將只包含在為特定作業系統和 CPU 架構組合建置的套件中。 <code>&lt;ARCH_NAME&gt;</code> 的有效值為：<code>x64</code> 和 <code>arm64</code>。 例如，位於 <code>&lt;RESOURCES_ROOT_DIR&gt;/macos-arm64</code> 中的檔案將只包含在適用於 Apple Silicon Macs 的套件中。</p></li></ol><p>您可以使用 <code>compose.application.resources.dir</code> 系統屬性存取包含的資源：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> java.io.File</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resourcesDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;compose.application.resources.dir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(resourcesDir.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resource.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="自訂原始碼集" tabindex="-1">自訂原始碼集 <a class="header-anchor" href="#自訂原始碼集" aria-label="Permalink to &quot;自訂原始碼集&quot;">​</a></h2><p>如果您使用 <code>org.jetbrains.kotlin.jvm</code> 或 <code>org.jetbrains.kotlin.multiplatform</code> plugins，您可以依賴預設配置：</p><ul><li>使用 <code>org.jetbrains.kotlin.jvm</code> 的配置包含來自 <code>main</code> <a href="https://docs.gradle.org/current/userguide/java_plugin.html#source_sets" target="_blank" rel="noreferrer">原始碼集</a>的內容。</li><li>使用 <code>org.jetbrains.kotlin.multiplatform</code> 的配置包含來自單一 <a href="./multiplatform-dsl-reference#targets">JVM 目標</a>的內容。 如果您定義多個 JVM 目標，預設配置將會停用。在這種情況下，您需要手動配置 plugin， 或指定單一目標 (請參閱下方)。</li></ul><p>如果預設配置模糊不清或不足，您可以透過幾種方式自訂它：</p><p>使用 Gradle <a href="https://docs.gradle.org/current/userguide/java_plugin.html#source_sets" target="_blank" rel="noreferrer">原始碼集</a>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.compose&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customSourceSet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceSets.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;customSourceSet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(customSourceSet)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>使用 Kotlin <a href="./multiplatform-dsl-reference#targets">JVM 目標</a>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;multiplatform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.compose&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    jvm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;customJvmTarget&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(kotlin.targets[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;customJvmTarget&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>手動：</p><ul><li>使用 <code>disableDefaultConfiguration</code> 停用預設設定。</li><li>使用 <code>fromFiles</code> 指定要包含的檔案。</li><li>指定 <code>mainJar</code> 檔案屬性以指向包含 <code>main</code> 類別的 <code>.jar</code> 檔案。</li><li>使用 <code>dependsOn</code> 將任務依賴項新增至所有 plugin 任務。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        disableDefaultConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        fromFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fileTree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/*.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mainJar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        dependsOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mainJarTask&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="應用程式圖示" tabindex="-1">應用程式圖示 <a class="header-anchor" href="#應用程式圖示" aria-label="Permalink to &quot;應用程式圖示&quot;">​</a></h2><p>確保您的應用程式圖示以以下作業系統特定格式提供：</p><ul><li><code>.icns</code> 適用於 macOS</li><li><code>.ico</code> 適用於 Windows</li><li><code>.png</code> 適用於 Linux</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            macOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                iconFile.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;icon.icns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            windows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                iconFile.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;icon.ico&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            linux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                iconFile.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;icon.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="平台特定選項" tabindex="-1">平台特定選項 <a class="header-anchor" href="#平台特定選項" aria-label="Permalink to &quot;平台特定選項&quot;">​</a></h2><p>平台特定設定可以使用對應的 DSL 區塊進行配置：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            macOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // Options for macOS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            windows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // Options for Windows</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            linux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // Options for Linux</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>下表描述了所有支援的平台特定選項。<strong>不建議</strong>使用未經文件記載的屬性。</p><table><tr><td>平台</td><td>選項</td><td width="500">描述</td></tr><tr><td rowspan="3">所有平台</td><td><code>iconFile.set(File(&quot;PATH_TO_ICON&quot;))</code></td><td>指定應用程式的平台特定圖示路徑。詳情請參閱<a href="#application-icon">應用程式圖示</a>章節。</td></tr><tr><td><code>packageVersion = &quot;1.0.0&quot;</code></td><td>設定平台特定套件版本。詳情請參閱<a href="#package-version">套件版本</a>章節。</td></tr><tr><td><code>installationPath = &quot;PATH_TO_INST_DIR&quot;</code></td><td>指定預設安裝目錄的絕對或相對路徑。 在 Windows 上，您還可以使用 <code>dirChooser = true</code> 來啟用在安裝期間自訂路徑。</td></tr><tr><td rowspan="8">Linux</td><td><code>packageName = &quot;custom-package-name&quot;</code></td><td>覆寫預設應用程式名稱。</td></tr><tr><td><code>debMaintainer = &quot;maintainer@example.com&quot;</code></td><td>指定套件維護者的電子郵件。</td></tr><tr><td><code>menuGroup = &quot;my-example-menu-group&quot;</code></td><td>定義應用程式的功能表群組。</td></tr><tr><td><code>appRelease = &quot;1&quot;</code></td><td>設定 rpm 套件的發佈值或 deb 套件的修訂值。</td></tr><tr><td><code>appCategory = &quot;CATEGORY&quot;</code></td><td>為 rpm 套件分配群組值或為 deb 套件分配區段值。</td></tr><tr><td><code>rpmLicenseType = &quot;TYPE_OF_LICENSE&quot;</code></td><td>指示 rpm 套件的授權類型。</td></tr><tr><td><code>debPackageVersion = &quot;DEB_VERSION&quot;</code></td><td>設定 deb 特定套件版本。詳情請參閱<a href="#package-version">套件版本</a>章節。</td></tr><tr><td><code>rpmPackageVersion = &quot;RPM_VERSION&quot;</code></td><td>設定 rpm 特定套件版本。詳情請參閱<a href="#package-version">套件版本</a>章節。</td></tr><tr><td rowspan="15">macOS</td><td><code>bundleID</code></td><td> 指定唯一的應用程式識別碼，其中只能包含字母數字字元 (<code>A-Z</code>、<code>a-z</code>、<code>0-9</code>)、連字號 (<code>-</code>) 和 句點 (<code>.</code>)。建議使用反向 DNS 標記法 (<code>com.mycompany.myapp</code>)。 </td></tr><tr><td><code>packageName</code></td><td>應用程式的名稱。</td></tr><tr><td><code>dockName</code></td><td> 應用程式在選單列、「關於 &lt;App&gt;」選單項目， 以及在 Dock 中顯示的名稱。預設值為 <code>packageName</code>。 </td></tr><tr><td><code>minimumSystemVersion</code></td><td> 執行應用程式所需的最低 macOS 版本。詳情請參閱 <a href="https://developer.apple.com/documentation/bundleresources/information_property_list/lsminimumsystemversion"><code>LSMinimumSystemVersion</code></a>。 </td></tr><tr><td><code>signing</code>、<code>notarization</code>、<code>provisioningProfile</code>、<code>runtimeProvisioningProfile</code></td><td> 請參閱 <a href="https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials/Signing_and_notarization_on_macOS"> 《macOS 發佈的簽章和公證》</a>教學課程。 </td></tr><tr><td><code>appStore = true</code></td><td>指定是否為 Apple App Store 建置和簽署應用程式。至少需要 JDK 17。</td></tr><tr><td><code>appCategory</code></td><td> Apple App Store 的應用程式類別。為 App Store 建置時，預設值為 <code>public.app-category.utilities</code>，否則為 <code>Unknown</code>。 請參閱 <a href="https://developer.apple.com/documentation/bundleresources/information_property_list/lsapplicationcategorytype"><code>LSApplicationCategoryType</code></a> 以取得有效類別列表。 </td></tr><tr><td><code>entitlementsFile.set(File(&quot;PATH_ENT&quot;))</code></td><td> 指定包含簽章時使用的授權檔案路徑。當您提供自訂檔案時， 請務必新增 Java 應用程式所需的授權。請參閱 <a href="https://github.com/openjdk/jdk/blob/master/src/jdk.jpackage/macosx/classes/jdk/jpackage/internal/resources/sandbox.plist"> sandbox.plist</a> 以取得為 App Store 建置時使用的預設檔案。請注意，此預設檔案可能因您的 JDK 版本而異。 如果未指定檔案，plugin 將使用 <code>jpackage</code> 提供的預設授權。詳情請參閱 <a href="https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials/Signing_and_notarization_on_macOS"> 《macOS 發佈的簽章和公證》</a>教學課程。 </td></tr><tr><td><code>runtimeEntitlementsFile.set(File(&quot;PATH_R_ENT&quot;))</code></td><td> 指定包含簽署 JVM 執行階段時使用的授權檔案路徑。當您提供自訂檔案時， 請務必新增 Java 應用程式所需的授權。請參閱 <a href="https://github.com/openjdk/jdk/blob/master/src/jdk.jpackage/macosx/classes/jdk/jpackage/internal/resources/sandbox.plist"> sandbox.plist</a> 以取得為 App Store 建置時使用的預設檔案。請注意，此預設檔案可能因您的 JDK 版本而異。 如果未指定檔案，plugin 將使用 <code>jpackage</code> 提供的預設授權。詳情請參閱 <a href="https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials/Signing_and_notarization_on_macOS"> 《macOS 發佈的簽章和公證》</a>教學課程。 </td></tr><tr><td><code>dmgPackageVersion = &quot;DMG_VERSION&quot;</code></td><td> 設定 DMG 特定套件版本。詳情請參閱<a href="#package-version">套件版本</a>章節。 </td></tr><tr><td><code>pkgPackageVersion = &quot;PKG_VERSION&quot;</code></td><td> 設定 PKG 特定套件版本。詳情請參閱<a href="#package-version">套件版本</a>章節。 </td></tr><tr><td><code>packageBuildVersion = &quot;DMG_VERSION&quot;</code></td><td> 設定套件建置版本。詳情請參閱<a href="#package-version">套件版本</a>章節。 </td></tr><tr><td><code>dmgPackageBuildVersion = &quot;DMG_VERSION&quot;</code></td><td> 設定 DMG 特定套件建置版本。詳情請參閱<a href="#package-version">套件版本</a>章節。 </td></tr><tr><td><code>pkgPackageBuildVersion = &quot;PKG_VERSION&quot;</code></td><td> 設定 PKG 特定套件建置版本。詳情請參閱<a href="#package-version">套件版本</a>章節。 </td></tr><tr><td><code>infoPlist</code></td><td>請參閱<a href="#information-property-list-on-macos"><code>Info.plist</code> on macOS</a>章節。</td></tr><tr><td rowspan="7">Windows</td><td><code>console = true</code></td><td>為應用程式新增控制台啟動器。</td></tr><tr><td><code>dirChooser = true</code></td><td>啟用在安裝期間自訂安裝路徑。</td></tr><tr><td><code>perUserInstall = true</code></td><td>啟用應用程式的按使用者安裝。</td></tr><tr><td><code>menuGroup = &quot;start-menu-group&quot;</code></td><td>將應用程式新增至指定的開始功能表群組。</td></tr><tr><td><code>upgradeUuid = &quot;UUID&quot;</code></td><td>指定一個唯一 ID，當有比已安裝版本更新的版本時， 允許使用者透過安裝程式更新應用程式。該值對於單一應用程式必須保持不變。 詳情請參閱 <a href="https://wixtoolset.org/documentation/manual/v3/howtos/general/generate_guids.html">如何：產生 GUID</a>。</td></tr><tr><td><code>msiPackageVersion = &quot;MSI_VERSION&quot;</code></td><td>設定 MSI 特定套件版本。詳情請參閱<a href="#package-version">套件版本</a>章節。</td></tr><tr><td><code>exePackageVersion = &quot;EXE_VERSION&quot;</code></td><td>設定 EXE 特定套件版本。詳情請參閱<a href="#package-version">套件版本</a>章節。</td></tr></table><h2 id="macos-特定配置" tabindex="-1">macOS 特定配置 <a class="header-anchor" href="#macos-特定配置" aria-label="Permalink to &quot;macOS 特定配置&quot;">​</a></h2><h3 id="macos-上的簽章和公證" tabindex="-1">macOS 上的簽章和公證 <a class="header-anchor" href="#macos-上的簽章和公證" aria-label="Permalink to &quot;macOS 上的簽章和公證&quot;">​</a></h3><p>現代 macOS 版本不允許使用者執行從網際網路下載的未簽章應用程式。如果您嘗試執行此類應用程式，將會遇到 以下錯誤：「YourApp 已損壞，無法開啟。您應退出磁碟映像檔」。</p><p>要了解如何簽章和公證您的應用程式，請參閱我們的<a href="./https://github.com/JetBrains/compose-multiplatform/blob/master/tutorials/Signing_and_notarization_on_macOS/README">教學課程</a>。</p><h3 id="macos-上的資訊屬性清單-info-plist" tabindex="-1">macOS 上的資訊屬性清單 (<code>Info.plist</code>) <a class="header-anchor" href="#macos-上的資訊屬性清單-info-plist" aria-label="Permalink to &quot;macOS 上的資訊屬性清單 (\`Info.plist\`)&quot;">​</a></h3><p>儘管 DSL 支援必要的平台特定自訂，但仍可能存在超出提供功能範圍的案例。 如果您需要指定 DSL 中未表示的 <code>Info.plist</code> 值， 您可以包含一段原始 XML 片段作為解決方案。此 XML 將附加到應用程式的 <code>Info.plist</code>。</p><h4 id="範例-深度連結" tabindex="-1">範例：深度連結 <a class="header-anchor" href="#範例-深度連結" aria-label="Permalink to &quot;範例：深度連結&quot;">​</a></h4><ol><li><p>在 <code>build.gradle.kts</code> 檔案中定義自訂 URL 配置：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mainClass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MainKt&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            targetFormats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TargetFormat.Dmg)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Deep Linking Example App&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            macOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                bundleID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;org.jetbrains.compose.examples.deeplinking&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                infoPlist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    extraKeysRawXml </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> macExtraPlistKeys</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> macExtraPlistKeys: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;key&gt;CFBundleURLTypes&lt;/key&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;array&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &lt;dict&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &lt;key&gt;CFBundleURLName&lt;/key&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &lt;string&gt;Example deep link&lt;/string&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &lt;array&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &lt;string&gt;compose&lt;/string&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &lt;/array&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &lt;/dict&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;/array&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span></code></pre></div></li><li><p>在 <code>src/main/main.kt</code> 檔案中使用 <code>java.awt.Desktop</code> 類別設定 URI 處理程式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> androidx.compose.material.MaterialTheme</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> androidx.compose.material.Text</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> androidx.compose.runtime.getValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> androidx.compose.runtime.mutableStateOf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> androidx.compose.runtime.setValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> androidx.compose.ui.window.singleWindowApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> java.awt.Desktop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Desktop.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDesktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOpenURIHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Open URI: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.uri</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UnsupportedOperationException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;setOpenURIHandler is unsupported&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    singleWindowApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        MaterialTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>執行 <code>runDistributable</code> 任務：<code>./gradlew runDistributable</code>。</p></li></ol><p>結果，像 <code>compose://foo/bar</code> 這樣的連結現在可以從瀏覽器重新導向到您的應用程式。</p><h2 id="縮小化和混淆處理" tabindex="-1">縮小化和混淆處理 <a class="header-anchor" href="#縮小化和混淆處理" aria-label="Permalink to &quot;縮小化和混淆處理&quot;">​</a></h2><p>Compose Multiplatform Gradle plugin 內建支援 <a href="https://www.guardsquare.com/proguard" target="_blank" rel="noreferrer">ProGuard</a>。 ProGuard 是一個用於程式碼縮小化和混淆處理的<a href="https://github.com/Guardsquare/proguard" target="_blank" rel="noreferrer">開放原始碼工具</a>。</p><p>對於每個<em>預設</em>（無 ProGuard）封裝任務，Gradle plugin 都提供一個<em>發佈</em>任務（帶 ProGuard）：</p><table><tr><td width="400">Gradle task</td><td>描述</td></tr><tr><td><p>預設：<code>createDistributable</code></p><p>發佈：<code>createReleaseDistributable</code></p></td><td>建立帶有捆綁 JDK 和資源的應用程式映像。</td></tr><tr><td><p>預設：<code>runDistributable</code></p><p>發佈：<code>runReleaseDistributable</code></p></td><td>執行帶有捆綁 JDK 和資源的應用程式映像。</td></tr><tr><td><p>預設：<code>run</code></p><p>發佈：<code>runRelease</code></p></td><td>使用 Gradle JDK 執行非封裝應用程式 <code>.jar</code>。</td></tr><tr><td><p>預設：<code>package&lt;FORMAT_NAME&gt;</code></p><p>發佈：<code>packageRelease&lt;FORMAT_NAME&gt;</code></p></td><td>將應用程式映像封裝為 <code>&lt;FORMAT_NAME&gt;</code> 檔案。</td></tr><tr><td><p>預設：<code>packageDistributionForCurrentOS</code></p><p>發佈：<code>packageReleaseDistributionForCurrentOS</code></p></td><td>將應用程式映像封裝為與目前作業系統相容的格式。</td></tr><tr><td><p>預設：<code>packageUberJarForCurrentOS</code></p><p>發佈：<code>packageReleaseUberJarForCurrentOS</code></p></td><td>將應用程式映像封裝為一個 uber (fat) <code>.jar</code>。</td></tr><tr><td><p>預設：<code>notarize&lt;FORMAT_NAME&gt;</code></p><p>發佈：<code>notarizeRelease&lt;FORMAT_NAME&gt;</code></p></td><td>上傳 <code>&lt;FORMAT_NAME&gt;</code> 應用程式映像以進行公證 (僅限 macOS)。</td></tr><tr><td><p>預設：<code>checkNotarizationStatus</code></p><p>發佈：<code>checkReleaseNotarizationStatus</code></p></td><td>檢查公證是否成功 (僅限 macOS)。</td></tr></table><p>預設配置啟用了一些預定義的 ProGuard 規則：</p><ul><li>應用程式映像已縮小化，這表示未使用的類別會被移除。</li><li><code>compose.desktop.application.mainClass</code> 用作入口點。</li><li>包含多個 <code>keep</code> 規則，以確保 Compose 執行階段保持正常運作。</li></ul><p>在大多數情況下，您不需要任何額外配置即可獲得縮小化應用程式。 但是，ProGuard 可能無法追蹤位元組碼中的某些用法，例如，當類別透過反射使用時。 如果您遇到僅在 ProGuard 處理後發生的問題，您可能需要新增自訂規則。</p><p>要指定自訂配置檔案，請使用如下所示的 DSL：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        buildTypes.release.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proguard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            configurationFiles.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;compose-desktop.pro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>更多關於 ProGuard 規則和配置選項的資訊，請參考 Guardsquare <a href="https://www.guardsquare.com/manual/configuration/usage" target="_blank" rel="noreferrer">手冊</a>。</p><p>混淆處理預設為停用。要啟用它，請透過 Gradle DSL 設定以下屬性：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        buildTypes.release.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proguard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            obfuscate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>ProGuard 的優化預設為啟用。要停用它們，請透過 Gradle DSL 設定以下屬性：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        buildTypes.release.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proguard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            optimize.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>預設停用產生 uber JAR，ProGuard 會為每個輸入的 <code>.jar</code> 檔案產生一個對應的 <code>.jar</code> 檔案。要啟用它，請透過 Gradle DSL 設定以下屬性：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        buildTypes.release.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proguard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            joinOutputJars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="接下來是什麼" tabindex="-1">接下來是什麼？ <a class="header-anchor" href="#接下來是什麼" aria-label="Permalink to &quot;接下來是什麼？&quot;">​</a></h2><p>探索關於<a href="https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials#desktop" target="_blank" rel="noreferrer">桌面元件</a>的教學課程。</p>`,115)]))}const c=i(e,[["render",l]]);export{E as __pageData,c as default};
