import{_ as e,c as t,o,ag as i}from"./chunks/framework.Bksy39di.js";const m=JSON.parse('{"title":"互換モード","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/compatibility-modes.md","filePath":"ja/kotlin/compatibility-modes.md","lastUpdated":1754307826000}'),l={name:"ja/kotlin/compatibility-modes.md"};function n(r,a,s,c,d,p){return o(),t("div",null,a[0]||(a[0]=[i('<h1 id="互換モード" tabindex="-1">互換モード <a class="header-anchor" href="#互換モード" aria-label="Permalink to &quot;互換モード&quot;">​</a></h1><p>大規模なチームが新しいバージョンに移行する際、一部のデベロッパーがすでにアップデートしている一方で、まだアップデートしていないデベロッパーもいるため、ある時点で「不整合な状態」になる可能性があります。前者が他のデベロッパーがコンパイルできないコードを記述したりコミットしたりするのを防ぐため、以下のコマンドラインスイッチが提供されています（IDEや<a href="/ja/kotlin/gradle-compiler-options">Gradle</a>/<a href="/ja/kotlin/maven#specify-compiler-options">Maven</a>でも利用可能です）。</p><ul><li><code>-language-version X.Y</code> - Kotlin言語バージョンX.Yの互換モードです。それ以降にリリースされたすべての言語機能についてエラーを報告します。</li><li><code>-api-version X.Y</code> - Kotlin APIバージョンX.Yの互換モードです。Kotlin標準ライブラリの新しいAPIを使用するすべてのコード（コンパイラーによって生成されたコードを含む）についてエラーを報告します。</li></ul><p>現在、私たちは最新の安定版に加えて、少なくとも3つ前の言語およびAPIバージョンでの開発をサポートしています。</p>',4)]))}const f=e(l,[["render",n]]);export{m as __pageData,f as default};
