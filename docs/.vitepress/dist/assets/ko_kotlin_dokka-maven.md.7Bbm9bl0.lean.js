import{_ as d,C as p,c as g,o as r,ag as k,G as l,w as n,j as s,a as i}from"./chunks/framework.Bksy39di.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/dokka-maven.md","filePath":"ko/kotlin/dokka-maven.md","lastUpdated":1754307826000}'),y={name:"ko/kotlin/dokka-maven.md"};function o(c,a,u,D,A,f){const t=p("def"),E=p("list"),e=p("anchor"),h=p("deflist");return r(),g("div",null,[a[40]||(a[40]=k("",37)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"skip"},{default:n(()=>a[0]||(a[0]=[s("p",null,"문서 생성 건너뛰기 여부.",-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"moduleName"},{default:n(()=>a[1]||(a[1]=[s("p",null,"프로젝트/모듈을 참조하는 데 사용되는 표시 이름입니다. 목차, 탐색, 로깅 등에 사용됩니다.",-1),s("p",null,[i("기본값: "),s("code",null,"{project.artifactId}")],-1)])),_:1}),l(t,{title:"outputDir"},{default:n(()=>a[2]||(a[2]=[s("p",null,"형식과 관계없이 문서가 생성되는 디렉터리입니다.",-1),s("p",null,[i("기본값: "),s("code",null,"{project.basedir}/target/dokka")],-1)])),_:1}),l(t,{title:"failOnWarning"},{default:n(()=>a[3]||(a[3]=[s("p",null," Dokka가 경고 또는 오류를 내보낸 경우 문서 생성을 실패시킬지 여부. 모든 오류 및 경고가 먼저 내보내질 때까지 프로세스가 기다립니다. ",-1),s("p",null,[i("이 설정은 "),s("code",null,"reportUndocumented"),i("와 잘 작동합니다.")],-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"suppressObviousFunctions"},{default:n(()=>[a[5]||(a[5]=s("p",null,"명백한 함수를 억제할지 여부.",-1)),a[6]||(a[6]=s("p",null," 다음과 같은 경우 함수는 명백한 것으로 간주됩니다:",-1)),l(E,null,{default:n(()=>a[4]||(a[4]=[s("li",null,[s("code",null,"equals"),i(", "),s("code",null,"hashCode"),i(", "),s("code",null,"toString"),i(" 등 "),s("code",null,"kotlin.Any"),i(", "),s("code",null,"Kotlin.Enum"),i(", "),s("code",null,"java.lang.Object"),i(" 또는 "),s("code",null,"java.lang.Enum"),i("에서 상속된 경우. ")],-1),s("li",null,[i(" 컴파일러에 의해 생성된 합성(synthetic) 함수이며, "),s("code",null,"dataClass.componentN"),i(" 또는 "),s("code",null,"dataClass.copy"),i("와 같이 문서가 없는 경우. ")],-1)])),_:1}),a[7]||(a[7]=s("p",null,[i("기본값: "),s("code",null,"true")],-1))]),_:1}),l(t,{title:"suppressInheritedMembers"},{default:n(()=>a[8]||(a[8]=[s("p",null,"주어진 클래스에서 명시적으로 오버라이드되지 않은 상속된 멤버를 억제할지 여부.",-1),s("p",null,[i(" 참고: 이는 "),s("code",null,"equals"),i("/"),s("code",null,"hashCode"),i("/"),s("code",null,"toString"),i("와 같은 함수를 억제할 수 있지만, "),s("code",null,"dataClass.componentN"),i(" 및 "),s("code",null,"dataClass.copy"),i("와 같은 합성 함수는 억제할 수 없습니다. 이를 위해서는 "),s("code",null,"suppressObviousFunctions"),i("를 사용하세요. ")],-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"offlineMode"},{default:n(()=>a[9]||(a[9]=[s("p",null,"네트워크를 통해 원격 파일/링크를 확인할지 여부.",-1),s("p",null," 여기에는 외부 문서 링크 생성을 위해 사용되는 패키지 목록이 포함됩니다. 예를 들어, 표준 라이브러리의 클래스를 클릭 가능하게 만드는 경우입니다. ",-1),s("p",null,[i(" 이 값을 "),s("code",null,"true"),i("로 설정하면 특정 경우에 빌드 시간을 크게 단축할 수 있지만, 문서 품질과 사용자 경험을 저하시킬 수도 있습니다. 예를 들어, 표준 라이브러리를 포함하여 종속성에서 클래스/멤버 링크를 확인하지 않는 경우가 있습니다. ")],-1),s("p",null,[i(" 참고: 가져온 파일을 로컬에 캐시하고 Dokka에 로컬 경로로 제공할 수 있습니다. "),s("code",null,"externalDocumentationLinks"),i(" 섹션을 참조하세요. ")],-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"sourceDirectories"},{default:n(()=>a[10]||(a[10]=[s("p",null,[i(" 분석하고 문서화할 소스 코드 루트입니다. 허용되는 입력은 디렉터리와 개별 "),s("code",null,".kt"),i(" / "),s("code",null,".java"),i(" 파일입니다. ")],-1),s("p",null,[i("기본값: "),s("code",null,"{project.compileSourceRoots}")],-1)])),_:1}),l(t,{title:"documentedVisibilities"},{default:n(()=>a[11]||(a[11]=[s("p",null,"문서화되어야 하는 가시성 한정자(visibility modifiers) 집합입니다.",-1),s("p",null,[i(" 이는 "),s("code",null,"protected"),i("/"),s("code",null,"internal"),i("/"),s("code",null,"private"),i(" 선언을 문서화하거나, "),s("code",null,"public"),i(" 선언을 제외하고 내부 API만 문서화하려는 경우에 사용할 수 있습니다. ")],-1),s("p",null,"패키지별로 구성할 수 있습니다.",-1),s("p",null,[i("기본값: "),s("code",null,"PUBLIC")],-1)])),_:1}),l(t,{title:"reportUndocumented"},{default:n(()=>a[12]||(a[12]=[s("p",null,[s("code",null,"documentedVisibilities"),i(" 및 다른 필터로 필터링된 후 KDoc이 없는 선언, 즉 문서화되지 않은 가시적인 선언에 대해 경고를 발생시킬지 여부입니다. ")],-1),s("p",null,[i("이 설정은 "),s("code",null,"failOnWarning"),i("과 잘 작동합니다.")],-1),s("p",null,"패키지 레벨에서 재정의할 수 있습니다.",-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"skipDeprecated"},{default:n(()=>a[13]||(a[13]=[s("p",null,[s("code",null,"@Deprecated"),i("로 주석된 선언을 문서화할지 여부.")],-1),s("p",null,"패키지 레벨에서 재정의할 수 있습니다.",-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"skipEmptyPackages"},{default:n(()=>a[14]||(a[14]=[s("p",null," 다양한 필터가 적용된 후 가시적인 선언이 없는 패키지를 건너뛸지 여부. ",-1),s("p",null,[i(" 예를 들어, "),s("code",null,"skipDeprecated"),i("가 "),s("code",null,"true"),i("로 설정되어 있고 패키지에 사용 중단된 선언만 포함된 경우, 해당 패키지는 비어 있는 것으로 간주됩니다. ")],-1),s("p",null,[i("기본값: "),s("code",null,"true")],-1)])),_:1}),l(t,{title:"suppressedFiles"},{default:n(()=>a[15]||(a[15]=[s("p",null," 억제되어야 하는 디렉터리 또는 개별 파일(즉, 해당 파일의 선언은 문서화되지 않음). ",-1)])),_:1}),l(t,{title:"jdkVersion"},{default:n(()=>a[16]||(a[16]=[s("p",null,"Java 타입에 대한 외부 문서 링크를 생성할 때 사용할 JDK 버전입니다.",-1),s("p",null,[i(" 예를 들어, 일부 public 선언 시그니처에서 "),s("code",null,"java.util.UUID"),i("를 사용하고 이 옵션이 "),s("code",null,"8"),i("로 설정된 경우, Dokka는 해당 선언에 대해 "),s("a",{href:"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"},"JDK 8 Javadoc"),i("으로 외부 문서 링크를 생성합니다. ")],-1),s("p",null,"기본값: JDK 8",-1)])),_:1}),l(t,{title:"languageVersion"},{default:n(()=>a[17]||(a[17]=[s("p",null,[i(" 분석 및 "),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),i(" 환경 설정에 사용되는 "),s("a",{href:"https://kotlinlang.org/docs/compatibility-modes.html"},"Kotlin 언어 버전"),i("입니다. ")],-1),s("p",null,"기본적으로 Dokka의 임베디드 컴파일러에서 사용 가능한 최신 언어 버전이 사용됩니다.",-1)])),_:1}),l(t,{title:"apiVersion"},{default:n(()=>a[18]||(a[18]=[s("p",null,[i(" 분석 및 "),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),i(" 환경 설정에 사용되는 "),s("a",{href:"https://kotlinlang.org/docs/compatibility-modes.html"},"Kotlin API 버전"),i("입니다. ")],-1),s("p",null,[i("기본적으로 "),s("code",null,"languageVersion"),i("에서 추론됩니다.")],-1)])),_:1}),l(t,{title:"noStdlibLink"},{default:n(()=>a[19]||(a[19]=[s("p",null," Kotlin 표준 라이브러리의 API 참조 문서로 연결되는 외부 문서 링크를 생성할지 여부. ",-1),s("p",null,[i("참고: "),s("code",null,"noStdLibLink"),i("가 "),s("code",null,"false"),i("로 설정된 경우 링크가 "),s("b",null,"생성"),i("됩니다.")],-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"noJdkLink"},{default:n(()=>[l(e,{name:"includes"}),a[20]||(a[20]=s("p",null,"JDK의 Javadoc으로 연결되는 외부 문서 링크를 생성할지 여부.",-1)),a[21]||(a[21]=s("p",null,[i("JDK Javadoc의 버전은 "),s("code",null,"jdkVersion"),i(" 옵션에 의해 결정됩니다.")],-1)),a[22]||(a[22]=s("p",null,[i("참고: "),s("code",null,"noJdkLink"),i("가 "),s("code",null,"false"),i("로 설정된 경우 링크가 "),s("b",null,"생성"),i("됩니다.")],-1)),a[23]||(a[23]=s("p",null,[i("기본값: "),s("code",null,"false")],-1))]),_:1}),l(t,{title:"includes"},{default:n(()=>a[24]||(a[24]=[s("p",null,[s("a",{href:"/ko/kotlin/dokka-module-and-package-docs"},"모듈 및 패키지 문서"),i("를 포함하는 Markdown 파일 목록입니다. ")],-1),s("p",null,"지정된 파일의 내용은 파싱되어 모듈 및 패키지 설명으로 문서에 포함됩니다.",-1)])),_:1}),l(t,{title:"classpath"},{default:n(()=>a[25]||(a[25]=[s("p",null,"분석 및 대화형 샘플을 위한 클래스패스입니다.",-1),s("p",null,[i(" 이는 종속성에서 가져온 일부 타입이 자동으로 해결/인식되지 않는 경우에 유용합니다. 이 옵션은 "),s("code",null,".jar"),i(" 및 "),s("code",null,".klib"),i(" 파일 모두를 허용합니다. ")],-1),s("p",null,[i("기본값: "),s("code",null,"{project.compileClasspathElements}")],-1)])),_:1}),l(t,{title:"samples"},{default:n(()=>a[26]||(a[26]=[s("p",null,[s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample KDoc 태그"),i("를 통해 참조되는 샘플 함수가 포함된 디렉터리 또는 파일 목록입니다. ")],-1)])),_:1})]),_:1}),a[41]||(a[41]=k("",5)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"path"},{default:n(()=>a[27]||(a[27]=[s("p",null," 로컬 소스 디렉터리의 경로입니다. 이 경로는 현재 모듈의 루트에 대한 상대 경로여야 합니다. ",-1),s("p",null," 참고: Unix 기반 경로만 허용되며, Windows 스타일 경로는 오류를 발생시킵니다. ",-1)])),_:1}),l(t,{title:"url"},{default:n(()=>a[28]||(a[28]=[s("p",null," GitHub, GitLab, Bitbucket 등 문서 독자가 접근할 수 있는 소스 코드 호스팅 서비스의 URL입니다. 이 URL은 선언의 소스 코드 링크를 생성하는 데 사용됩니다. ",-1)])),_:1}),l(t,{title:"lineSuffix"},{default:n(()=>[a[30]||(a[30]=s("p",null," URL에 소스 코드 줄 번호를 추가하는 데 사용되는 접미사입니다. 이는 독자들이 파일뿐만 아니라 선언의 특정 줄 번호로 이동하는 데 도움이 됩니다. ",-1)),a[31]||(a[31]=s("p",null,[i(" 숫자 자체는 지정된 접미사에 추가됩니다. 예를 들어, 이 옵션이 "),s("code",null,"#L"),i("로 설정되고 줄 번호가 10이면, 결과 URL 접미사는 "),s("code",null,"#L10"),i("입니다. ")],-1)),a[32]||(a[32]=s("p",null," 인기 서비스에서 사용되는 접미사:",-1)),l(E,null,{default:n(()=>a[29]||(a[29]=[s("li",null,[i("GitHub: "),s("code",null,"#L")],-1),s("li",null,[i("GitLab: "),s("code",null,"#L")],-1),s("li",null,[i("Bitbucket: "),s("code",null,"#lines-")],-1)])),_:1})]),_:1})]),_:1}),a[42]||(a[42]=k("",5)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"url"},{default:n(()=>a[33]||(a[33]=[s("p",null,[i("링크할 문서의 루트 URL입니다. 후행 슬래시(trailing slash)를 "),s("b",null,"포함해야"),i(" 합니다.")],-1),s("p",null,[i(" Dokka는 주어진 URL에 대한 "),s("code",null,"package-list"),i("를 자동으로 찾고, 선언을 함께 연결하기 위해 최선을 다합니다. ")],-1),s("p",null,[i(" 자동 해결이 실패하거나 대신 로컬에 캐시된 파일을 사용하려면 "),s("code",null,"packageListUrl"),i(" 옵션을 설정하는 것을 고려하십시오. ")],-1)])),_:1}),l(t,{title:"packageListUrl"},{default:n(()=>a[34]||(a[34]=[s("p",null,[s("code",null,"package-list"),i("의 정확한 위치입니다. 이는 Dokka가 자동으로 해결하는 것에 의존하는 대안입니다. ")],-1),s("p",null," 패키지 목록에는 모듈 및 패키지 이름과 같은 문서 및 프로젝트 자체에 대한 정보가 포함됩니다. ",-1),s("p",null,"이는 네트워크 호출을 피하기 위해 로컬에 캐시된 파일일 수도 있습니다.",-1)])),_:1})]),_:1}),a[43]||(a[43]=k("",3)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"matchingRegex"},{default:n(()=>a[35]||(a[35]=[s("p",null,"패키지를 일치시키는 데 사용되는 정규식입니다.",-1),s("p",null,[i("기본값: "),s("code",null,".*")],-1)])),_:1}),l(t,{title:"suppress"},{default:n(()=>a[36]||(a[36]=[s("p",null,"이 패키지가 문서 생성 시 건너뛰어져야 하는지 여부.",-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"documentedVisibilities"},{default:n(()=>a[37]||(a[37]=[s("p",null,"문서화되어야 하는 가시성 한정자(visibility modifiers) 집합입니다.",-1),s("p",null,[i(" 이는 이 패키지 내의 "),s("code",null,"protected"),i("/"),s("code",null,"internal"),i("/"),s("code",null,"private"),i(" 선언을 문서화하거나, "),s("code",null,"public"),i(" 선언을 제외하고 내부 API만 문서화하려는 경우에 사용할 수 있습니다. ")],-1),s("p",null,[i("기본값: "),s("code",null,"PUBLIC")],-1)])),_:1}),l(t,{title:"skipDeprecated"},{default:n(()=>a[38]||(a[38]=[s("p",null,[s("code",null,"@Deprecated"),i("로 주석된 선언을 문서화할지 여부.")],-1),s("p",null,"이것은 프로젝트/모듈 수준에서 설정할 수 있습니다.",-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"reportUndocumented"},{default:n(()=>a[39]||(a[39]=[s("p",null,[s("code",null,"documentedVisibilities"),i(" 및 다른 필터로 필터링된 후 KDoc이 없는 선언, 즉 문서화되지 않은 가시적인 선언에 대해 경고를 발생시킬지 여부입니다. ")],-1),s("p",null,[i("이 설정은 "),s("code",null,"failOnWarning"),i("과 잘 작동합니다.")],-1),s("p",null,[i("기본값: "),s("code",null,"false")],-1)])),_:1})]),_:1}),a[44]||(a[44]=k("",3))])}const v=d(y,[["render",o]]);export{m as __pageData,v as default};
