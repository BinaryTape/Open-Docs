import{_ as t}from"./chunks/kotlin-native-and-jvm-binaries.1l992XkT.js";import{_ as o,c as e,o as i,ag as l}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"よくある質問","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/faq.md","filePath":"ja/kmp/faq.md","lastUpdated":1755516278000}'),r={name:"ja/kmp/faq.md"};function p(m,a,n,s,f,d){return i(),e("div",null,a[0]||(a[0]=[l('<h1 id="よくある質問" tabindex="-1">よくある質問 <a class="header-anchor" href="#よくある質問" aria-label="Permalink to &quot;よくある質問&quot;">​</a></h1><h2 id="kotlin-multiplatformについて" tabindex="-1">Kotlin Multiplatformについて <a class="header-anchor" href="#kotlin-multiplatformについて" aria-label="Permalink to &quot;Kotlin Multiplatformについて&quot;">​</a></h2><h3 id="kotlin-multiplatformとは何ですか" tabindex="-1">Kotlin Multiplatformとは何ですか？ <a class="header-anchor" href="#kotlin-multiplatformとは何ですか" aria-label="Permalink to &quot;Kotlin Multiplatformとは何ですか？&quot;">​</a></h3><p><a href="https://www.jetbrains.com/kotlin-multiplatform/" target="_blank" rel="noreferrer">Kotlin Multiplatform</a> (KMP)は、JetBrainsが提供する柔軟なクロスプラットフォーム開発のためのオープンソース技術です。様々なプラットフォーム向けのアプリケーションを作成し、ネイティブプログラミングの利点を維持しながら、コードを効率的に再利用できます。Kotlin Multiplatformを使用すると、Android、iOS、デスクトップ、ウェブ、サーバーサイド、その他のプラットフォーム向けにアプリを開発できます。</p><h3 id="kotlin-multiplatformでuiを共有できますか" tabindex="-1">Kotlin MultiplatformでUIを共有できますか？ <a class="header-anchor" href="#kotlin-multiplatformでuiを共有できますか" aria-label="Permalink to &quot;Kotlin MultiplatformでUIを共有できますか？&quot;">​</a></h3><p>はい、Kotlinと<a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noreferrer">Jetpack Compose</a>をベースにしたJetBrainsの宣言型UIフレームワークである<a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a>を使用してUIを共有できます。このフレームワークを使用すると、iOS、Android、デスクトップ、ウェブなどのプラットフォーム向けに共通のUIコンポーネントを作成でき、様々なデバイスやプラットフォーム間で一貫したユーザーインターフェースを維持するのに役立ちます。</p><p>詳細については、<a href="#compose-multiplatform">Compose Multiplatform</a>セクションを参照してください。</p><h3 id="kotlin-multiplatformはどのプラットフォームをサポートしていますか" tabindex="-1">Kotlin Multiplatformはどのプラットフォームをサポートしていますか？ <a class="header-anchor" href="#kotlin-multiplatformはどのプラットフォームをサポートしていますか" aria-label="Permalink to &quot;Kotlin Multiplatformはどのプラットフォームをサポートしていますか？&quot;">​</a></h3><p>Kotlin Multiplatformは、Android、iOS、デスクトップ、ウェブ、サーバーサイド、その他のプラットフォームをサポートしています。<a href="./supported-platforms">サポートされているプラットフォーム</a>について、さらに詳しく学習してください。</p><h3 id="クロスプラットフォームアプリはどのideで作業すべきですか" tabindex="-1">クロスプラットフォームアプリはどのIDEで作業すべきですか？ <a class="header-anchor" href="#クロスプラットフォームアプリはどのideで作業すべきですか" aria-label="Permalink to &quot;クロスプラットフォームアプリはどのIDEで作業すべきですか？&quot;">​</a></h3><p>Kotlin Multiplatformプロジェクトでの作業には、Android Studio IDEを使用することをお勧めします。<a href="./recommended-ides">推奨IDEおよびコードエディター</a>で利用可能な代替手段について詳しくお読みください。</p><h3 id="新しいkotlin-multiplatformプロジェクトを作成するにはどうすればよいですか" tabindex="-1">新しいKotlin Multiplatformプロジェクトを作成するにはどうすればよいですか？ <a class="header-anchor" href="#新しいkotlin-multiplatformプロジェクトを作成するにはどうすればよいですか" aria-label="Permalink to &quot;新しいKotlin Multiplatformプロジェクトを作成するにはどうすればよいですか？&quot;">​</a></h3><p><a href="./get-started">Kotlin Multiplatformアプリの作成</a>チュートリアルでは、Kotlin Multiplatformプロジェクトを作成するためのステップバイステップの手順を提供しています。ロジックのみを共有するか、ロジックとUIの両方を共有するかを決定できます。</p><h3 id="既存のandroidアプリケーションがあります。kotlin-multiplatformに移行するにはどうすればよいですか" tabindex="-1">既存のAndroidアプリケーションがあります。Kotlin Multiplatformに移行するにはどうすればよいですか？ <a class="header-anchor" href="#既存のandroidアプリケーションがあります。kotlin-multiplatformに移行するにはどうすればよいですか" aria-label="Permalink to &quot;既存のAndroidアプリケーションがあります。Kotlin Multiplatformに移行するにはどうすればよいですか？&quot;">​</a></h3><p><a href="./multiplatform-integrate-in-existing-app">AndroidアプリケーションをiOSで動作させる</a>ステップバイステップチュートリアルでは、ネイティブUIでAndroidアプリケーションをiOSで動作させる方法を説明しています。Compose MultiplatformでUIも共有したい場合は、<a href="#i-have-an-existing-android-application-that-uses-jetpack-compose-what-should-i-do-to-migrate-it-to-other-platforms">対応する回答</a>を参照してください。</p><h3 id="試せる完全な例はどこで入手できますか" tabindex="-1">試せる完全な例はどこで入手できますか？ <a class="header-anchor" href="#試せる完全な例はどこで入手できますか" aria-label="Permalink to &quot;試せる完全な例はどこで入手できますか？&quot;">​</a></h3><p><a href="./multiplatform-samples">実際の例のリスト</a>はこちらです。</p><h3 id="実際のkotlin-multiplatformアプリケーションのリストはどこで見つけられますか-どの企業が本番環境でkmpを使用していますか" tabindex="-1">実際のKotlin Multiplatformアプリケーションのリストはどこで見つけられますか？どの企業が本番環境でKMPを使用していますか？ <a class="header-anchor" href="#実際のkotlin-multiplatformアプリケーションのリストはどこで見つけられますか-どの企業が本番環境でkmpを使用していますか" aria-label="Permalink to &quot;実際のKotlin Multiplatformアプリケーションのリストはどこで見つけられますか？どの企業が本番環境でKMPを使用していますか？&quot;">​</a></h3><p><a href="./case-studies">ケーススタディのリスト</a>を確認して、すでに本番環境でKotlin Multiplatformを採用している他の企業から学びましょう。</p><h3 id="kotlin-multiplatformはどのオペレーティングシステムで動作しますか" tabindex="-1">Kotlin Multiplatformはどのオペレーティングシステムで動作しますか？ <a class="header-anchor" href="#kotlin-multiplatformはどのオペレーティングシステムで動作しますか" aria-label="Permalink to &quot;Kotlin Multiplatformはどのオペレーティングシステムで動作しますか？&quot;">​</a></h3><p>iOSを除き、共有コードまたはプラットフォーム固有のコードで作業する場合は、IDEがサポートする任意のオペレーティングシステムで作業できます。</p><p><a href="./recommended-ides">推奨IDE</a>について、さらに詳しく学習してください。</p><p>iOS固有のコードを記述し、シミュレーターまたは実機でiOSアプリケーションを実行したい場合は、macOS搭載のMacを使用してください。これは、Appleの要件によりiOSシミュレーターがmacOSでのみ実行可能であり、Microsoft WindowsやLinuxなどの他のオペレーティングシステムでは実行できないためです。</p><h3 id="kotlin-multiplatformプロジェクトで並行処理コードを記述するにはどうすればよいですか" tabindex="-1">Kotlin Multiplatformプロジェクトで並行処理コードを記述するにはどうすればよいですか？ <a class="header-anchor" href="#kotlin-multiplatformプロジェクトで並行処理コードを記述するにはどうすればよいですか" aria-label="Permalink to &quot;Kotlin Multiplatformプロジェクトで並行処理コードを記述するにはどうすればよいですか？&quot;">​</a></h3><p>Kotlin Multiplatformプロジェクトでは、コルーチンとフローを使用して非同期コードを記述できます。このコードの呼び出し方法は、どこからコードを呼び出すかによって異なります。Kotlinコードからサスペンド関数とフローを呼び出す方法は、特にAndroid向けに広くドキュメント化されています。<a href="https://kotlinlang.org/docs/native-arc-integration.html#completion-handlers" target="_blank" rel="noreferrer">Swiftコードからそれらを呼び出す</a>には、もう少し作業が必要です。詳細については<a href="https://youtrack.jetbrains.com/issue/KT-47610" target="_blank" rel="noreferrer">KT-47610</a>を参照してください。</p><p>Swiftからサスペンド関数とフローを呼び出すための現在の最善のアプローチは、Swiftの<code>async</code>/<code>await</code>やCombineおよびRxSwiftのようなライブラリと組み合わせて、<a href="https://github.com/rickclephas/KMP-NativeCoroutines" target="_blank" rel="noreferrer">KMP-NativeCoroutines</a>のようなプラグインやライブラリを使用することです。</p><p>それらの使用方法については、<a href="./multiplatform-upgrade-app">iOSとAndroid間でより多くのロジックを共有する</a>を参照してください。</p><h3 id="kotlin-nativeとは何ですか-kotlin-multiplatformとの関係はどうですか" tabindex="-1">Kotlin/Nativeとは何ですか？Kotlin Multiplatformとの関係はどうですか？ <a class="header-anchor" href="#kotlin-nativeとは何ですか-kotlin-multiplatformとの関係はどうですか" aria-label="Permalink to &quot;Kotlin/Nativeとは何ですか？Kotlin Multiplatformとの関係はどうですか？&quot;">​</a></h3><p><a href="https://kotlinlang.org/docs/native-overview.html" target="_blank" rel="noreferrer">Kotlin/Native</a>は、Kotlinコードを仮想マシンなしで実行できるネイティブバイナリにコンパイルするための技術です。これには、Kotlinコンパイラの<a href="https://llvm.org/" target="_blank" rel="noreferrer">LLVMベース</a>のバックエンドと、Kotlin標準ライブラリのネイティブ実装が含まれます。</p><p>Kotlin/Nativeは、主に組み込みデバイスやiOSのように、仮想マシンが望ましくない、または利用できないプラットフォームでのコンパイルを可能にするために設計されています。追加のランタイムや仮想マシンを必要としない自己完結型のプログラムを生成する必要がある場合に特に適しています。</p><p>例えば、モバイルアプリケーションでは、Kotlinで記述された共有コードは、Android向けにはKotlin/JVMでJVMバイトコードにコンパイルされ、iOS向けにはKotlin/Nativeでネイティブバイナリにコンパイルされます。これにより、両方のプラットフォームでKotlin Multiplatformとの統合がシームレスになります。</p><p><img src="'+t+'" alt="Kotlin/Native and Kotlin/JVM binaries" width="350"></p><h3 id="ネイティブプラットフォーム-ios、macos、linux-向けのkotlin-multiplatformモジュールのコンパイルを高速化するにはどうすればよいですか" tabindex="-1">ネイティブプラットフォーム（iOS、macOS、Linux）向けのKotlin Multiplatformモジュールのコンパイルを高速化するにはどうすればよいですか？ <a class="header-anchor" href="#ネイティブプラットフォーム-ios、macos、linux-向けのkotlin-multiplatformモジュールのコンパイルを高速化するにはどうすればよいですか" aria-label="Permalink to &quot;ネイティブプラットフォーム（iOS、macOS、Linux）向けのKotlin Multiplatformモジュールのコンパイルを高速化するにはどうすればよいですか？&quot;">​</a></h3><p><a href="https://kotlinlang.org/docs/native-improving-compilation-time.html" target="_blank" rel="noreferrer">Kotlin/Nativeのコンパイル時間を改善するためのヒント</a>を参照してください。</p><h2 id="compose-multiplatformについて" tabindex="-1">Compose Multiplatformについて <a class="header-anchor" href="#compose-multiplatformについて" aria-label="Permalink to &quot;Compose Multiplatformについて&quot;">​</a></h2><h3 id="compose-multiplatformとは何ですか" tabindex="-1">Compose Multiplatformとは何ですか？ <a class="header-anchor" href="#compose-multiplatformとは何ですか" aria-label="Permalink to &quot;Compose Multiplatformとは何ですか？&quot;">​</a></h3><p><a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a>は、JetBrainsが開発したモダンな宣言型およびリアクティブUIフレームワークであり、少量のKotlinコードでユーザーインターフェースを構築する簡単な方法を提供します。また、UIを一度記述するだけで、サポートされている任意のプラットフォーム（iOS、Android、デスクトップ（Windows、macOS、Linux）、およびウェブ）で実行できます。</p><h3 id="android向けjetpack-composeとどのような関係がありますか" tabindex="-1">Android向けJetpack Composeとどのような関係がありますか？ <a class="header-anchor" href="#android向けjetpack-composeとどのような関係がありますか" aria-label="Permalink to &quot;Android向けJetpack Composeとどのような関係がありますか？&quot;">​</a></h3><p>Compose Multiplatformは、Googleが開発したAndroid UIフレームワークである<a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noreferrer">Jetpack Compose</a>とほとんどのAPIを共有しています。実際、Compose Multiplatformを使用してAndroidをターゲットとする場合、アプリは単純にJetpack Compose上で動作します。Compose Multiplatformがターゲットとする他のプラットフォームは、Android上のJetpack Composeとは異なる内部実装の詳細を持つ場合がありますが、それでも同じAPIを提供します。</p><p>詳細については、<a href="./compose-multiplatform-and-jetpack-compose">フレームワーク間の相互関係の概要</a>を参照してください。</p><h3 id="どのプラットフォーム間でuiを共有できますか" tabindex="-1">どのプラットフォーム間でUIを共有できますか？ <a class="header-anchor" href="#どのプラットフォーム間でuiを共有できますか" aria-label="Permalink to &quot;どのプラットフォーム間でUIを共有できますか？&quot;">​</a></h3><p>Android、iOS、デスクトップ（Linux、macOS、Windows）、ウェブ（Wasmベース）といった人気のプラットフォームの任意の組み合わせ間でUIを共有するオプションを提供したいと考えています。Compose Multiplatformは現時点ではAndroid、iOS、デスクトップでのみStableです。詳細については、<a href="./supported-platforms">サポートされているプラットフォーム</a>を参照してください。</p><h3 id="compose-multiplatformを本番環境で使用できますか" tabindex="-1">Compose Multiplatformを本番環境で使用できますか？ <a class="header-anchor" href="#compose-multiplatformを本番環境で使用できますか" aria-label="Permalink to &quot;Compose Multiplatformを本番環境で使用できますか？&quot;">​</a></h3><p>Compose MultiplatformのAndroid、iOS、デスクトップターゲットはStableです。これらは本番環境で使用できます。</p><p>WebAssemblyをベースとしたWeb版のCompose MultiplatformはAlpha段階であり、活発に開発中であることを意味します。注意して使用し、移行に関する問題が発生する可能性があります。これは、iOS、Android、デスクトップ向けのCompose Multiplatformと同じUIを持っています。</p><h3 id="新しいcompose-multiplatformプロジェクトを作成するにはどうすればよいですか" tabindex="-1">新しいCompose Multiplatformプロジェクトを作成するにはどうすればよいですか？ <a class="header-anchor" href="#新しいcompose-multiplatformプロジェクトを作成するにはどうすればよいですか" aria-label="Permalink to &quot;新しいCompose Multiplatformプロジェクトを作成するにはどうすればよいですか？&quot;">​</a></h3><p><a href="./compose-multiplatform-create-first-app">共通ロジックとUIを持つCompose Multiplatformアプリを作成する</a>チュートリアルでは、Android、iOS、デスクトップ向けのCompose Multiplatformを使用してKotlin Multiplatformプロジェクトを作成するためのステップバイステップの手順を提供します。また、Kotlin Developer AdvocateのSebastian Aignerが作成した<a href="https://www.youtube.com/watch?v=5_W5YKPShZ4" target="_blank" rel="noreferrer">YouTubeのビデオチュートリアル</a>を視聴することもできます。</p><h3 id="compose-multiplatformでアプリを構築するためにどのideを使用すべきですか" tabindex="-1">Compose Multiplatformでアプリを構築するためにどのIDEを使用すべきですか？ <a class="header-anchor" href="#compose-multiplatformでアプリを構築するためにどのideを使用すべきですか" aria-label="Permalink to &quot;Compose Multiplatformでアプリを構築するためにどのIDEを使用すべきですか？&quot;">​</a></h3><p>Android Studio IDEの使用をお勧めします。詳細については、<a href="./recommended-ides">推奨IDEおよびコードエディター</a>を参照してください。</p><h3 id="デモアプリケーションを試すことはできますか-どこで見つけられますか" tabindex="-1">デモアプリケーションを試すことはできますか？どこで見つけられますか？ <a class="header-anchor" href="#デモアプリケーションを試すことはできますか-どこで見つけられますか" aria-label="Permalink to &quot;デモアプリケーションを試すことはできますか？どこで見つけられますか？&quot;">​</a></h3><p><a href="./multiplatform-samples">サンプル</a>を試すことができます。</p><h3 id="compose-multiplatformにはウィジェットが付属していますか" tabindex="-1">Compose Multiplatformにはウィジェットが付属していますか？ <a class="header-anchor" href="#compose-multiplatformにはウィジェットが付属していますか" aria-label="Permalink to &quot;Compose Multiplatformにはウィジェットが付属していますか？&quot;">​</a></h3><p>はい、Compose Multiplatformは<a href="https://m3.material.io/" target="_blank" rel="noreferrer">Material 3</a>ウィジェットを完全にサポートしています。</p><h3 id="materialウィジェットの外観はどの程度カスタマイズできますか" tabindex="-1">Materialウィジェットの外観はどの程度カスタマイズできますか？ <a class="header-anchor" href="#materialウィジェットの外観はどの程度カスタマイズできますか" aria-label="Permalink to &quot;Materialウィジェットの外観はどの程度カスタマイズできますか？&quot;">​</a></h3><p>Materialのテーマ設定機能を使用して、色、フォント、パディングをカスタマイズできます。ユニークなデザインを作成したい場合は、カスタムウィジェットとレイアウトを作成できます。</p><h3 id="既存のkotlin-multiplatformアプリでuiを共有できますか" tabindex="-1">既存のKotlin MultiplatformアプリでUIを共有できますか？ <a class="header-anchor" href="#既存のkotlin-multiplatformアプリでuiを共有できますか" aria-label="Permalink to &quot;既存のKotlin MultiplatformアプリでUIを共有できますか？&quot;">​</a></h3><p>アプリケーションがUIにネイティブAPIを使用している場合（これが最も一般的なケースです）、Compose Multiplatformにはそのための相互運用性があるため、一部を徐々にCompose Multiplatformに書き換えることができます。ネイティブUIを、Composeで記述された共通UIをラップする特別な相互運用ビューに置き換えることができます。</p><h3 id="jetpack-composeを使用する既存のandroidアプリケーションがあります。他のプラットフォームに移行するにはどうすればよいですか" tabindex="-1">Jetpack Composeを使用する既存のAndroidアプリケーションがあります。他のプラットフォームに移行するにはどうすればよいですか？ <a class="header-anchor" href="#jetpack-composeを使用する既存のandroidアプリケーションがあります。他のプラットフォームに移行するにはどうすればよいですか" aria-label="Permalink to &quot;Jetpack Composeを使用する既存のAndroidアプリケーションがあります。他のプラットフォームに移行するにはどうすればよいですか？&quot;">​</a></h3><p>アプリの移行は、UIの移行とロジックの移行の2つの部分で構成されます。移行の複雑さは、アプリケーションの複雑さと使用しているAndroid固有ライブラリの量によって異なります。ほとんどの画面をCompose Multiplatformにそのまま移行できます。すべてのJetpack Composeウィジェットがサポートされています。ただし、一部のAPIはAndroidターゲットでのみ動作します。これらはAndroid固有であるか、他のプラットフォームにまだ移植されていない可能性があります。たとえば、リソース処理はAndroid固有であるため、<a href="./compose-multiplatform-resources">Compose Multiplatformリソースライブラリ</a>に移行するか、コミュニティソリューションを使用する必要があります。Androidの<a href="https://developer.android.com/jetpack/androidx/releases/navigation" target="_blank" rel="noreferrer">Navigationライブラリ</a>もAndroid固有ですが、<a href="./compose-navigation-routing">コミュニティの代替手段</a>が利用可能です。Androidでのみ利用可能なコンポーネントの詳細については、現在の<a href="./compose-android-only-components">Android専用APIのリスト</a>を参照してください。</p><p>ビジネスロジックを<a href="./multiplatform-integrate-in-existing-app">Kotlin Multiplatformに移行する</a>必要があります。コードを共有モジュールに移動しようとすると、Android依存関係を使用している部分がコンパイルされなくなり、それらを書き直す必要があります。</p><ul><li>Android専用の依存関係を使用するコードを、代わりにマルチプラットフォームライブラリを使用するように書き換えることができます。一部のライブラリはすでにKotlin Multiplatformをサポートしているため、変更は不要です。<a href="https://github.com/terrakok/kmp-awesome" target="_blank" rel="noreferrer">KMP-awesome</a>ライブラリリストを確認できます。</li><li>あるいは、共通コードをプラットフォーム固有のロジックから分離し、プラットフォームに応じて異なる実装を持つ<a href="./multiplatform-connect-to-apis">共通インターフェースを提供する</a>ことができます。Androidでは、実装は既存の機能を使用でき、iOSなどの他のプラットフォームでは、共通インターフェースの新しい実装を提供する必要があります。</li></ul><h3 id="既存のiosアプリにcompose画面を統合できますか" tabindex="-1">既存のiOSアプリにCompose画面を統合できますか？ <a class="header-anchor" href="#既存のiosアプリにcompose画面を統合できますか" aria-label="Permalink to &quot;既存のiOSアプリにCompose画面を統合できますか？&quot;">​</a></h3><p>はい。Compose Multiplatformは様々な統合シナリオをサポートしています。iOS UIフレームワークとの統合に関する詳細については、<a href="./compose-swiftui-integration">SwiftUIとの統合</a>および<a href="./compose-uikit-integration">UIKitとの統合</a>を参照してください。</p><h3 id="uikitまたはswiftuiコンポーネントをcompose画面に統合できますか" tabindex="-1">UIKitまたはSwiftUIコンポーネントをCompose画面に統合できますか？ <a class="header-anchor" href="#uikitまたはswiftuiコンポーネントをcompose画面に統合できますか" aria-label="Permalink to &quot;UIKitまたはSwiftUIコンポーネントをCompose画面に統合できますか？&quot;">​</a></h3><p>はい、可能です。<a href="./compose-swiftui-integration">SwiftUIとの統合</a>および<a href="./compose-uikit-integration">UIKitとの統合</a>を参照してください。</p><h3 id="モバイルosがアップデートされ、システムコンポーネントの視覚スタイルや動作が変更された場合、どうなりますか" tabindex="-1">モバイルOSがアップデートされ、システムコンポーネントの視覚スタイルや動作が変更された場合、どうなりますか？ <a class="header-anchor" href="#モバイルosがアップデートされ、システムコンポーネントの視覚スタイルや動作が変更された場合、どうなりますか" aria-label="Permalink to &quot;モバイルOSがアップデートされ、システムコンポーネントの視覚スタイルや動作が変更された場合、どうなりますか？&quot;">​</a></h3><p>すべてのコンポーネントはキャンバス上に描画されるため、OSアップデート後もUIは同じままです。画面にネイティブのiOSコンポーネントを埋め込む場合、アップデートがそれらの外観に影響を与える可能性があります。</p><h2 id="将来の計画" tabindex="-1">将来の計画 <a class="header-anchor" href="#将来の計画" aria-label="Permalink to &quot;将来の計画&quot;">​</a></h2><h3 id="kotlin-multiplatformの進化に関する計画は何ですか" tabindex="-1">Kotlin Multiplatformの進化に関する計画は何ですか？ <a class="header-anchor" href="#kotlin-multiplatformの進化に関する計画は何ですか" aria-label="Permalink to &quot;Kotlin Multiplatformの進化に関する計画は何ですか？&quot;">​</a></h3><p>JetBrainsでは、マルチプラットフォーム開発で最高の体験を提供し、既存のマルチプラットフォームユーザーの悩みを解消するために多大な投資を行っています。コアとなるKotlin Multiplatformテクノロジー、Appleエコシステムとの統合、ツール、およびCompose Multiplatform UIフレームワークの改善計画があります。<a href="https://blog.jetbrains.com/kotlin/2024/10/kotlin-multiplatform-development-roadmap-for-2025/" target="_blank" rel="noreferrer">私たちのロードマップ</a>をご確認ください。</p><h3 id="compose-multiplatformはいつstableになりますか" tabindex="-1">Compose MultiplatformはいつStableになりますか？ <a class="header-anchor" href="#compose-multiplatformはいつstableになりますか" aria-label="Permalink to &quot;Compose MultiplatformはいつStableになりますか？&quot;">​</a></h3><p>Compose MultiplatformはAndroid、iOS、デスクトップではStableですが、ウェブプラットフォームのサポートはAlpha段階です。ウェブプラットフォームの安定版リリースに向けて取り組んでおり、正確な日付は追って発表されます。</p><p>安定性のステータスの詳細については、<a href="./supported-platforms">サポートされているプラットフォーム</a>を参照してください。</p><h3 id="kotlinおよびcompose-multiplatformにおけるウェブターゲットの今後のサポートはどうなりますか" tabindex="-1">KotlinおよびCompose Multiplatformにおけるウェブターゲットの今後のサポートはどうなりますか？ <a class="header-anchor" href="#kotlinおよびcompose-multiplatformにおけるウェブターゲットの今後のサポートはどうなりますか" aria-label="Permalink to &quot;KotlinおよびCompose Multiplatformにおけるウェブターゲットの今後のサポートはどうなりますか？&quot;">​</a></h3><p>現在、大きな可能性を秘めているWebAssembly（Wasm）にリソースを集中しています。新しい<a href="https://kotlinlang.org/docs/wasm-overview.html" target="_blank" rel="noreferrer">Kotlin/Wasmバックエンド</a>と、Wasmを搭載した<a href="https://kotl.in/wasm-compose-example" target="_blank" rel="noreferrer">Compose Multiplatform for Web</a>を試すことができます。</p><p>JSターゲットに関しては、Kotlin/JSバックエンドはすでにStableステータスに達しています。Compose Multiplatformでは、リソースの制約により、JS CanvasからWasmへと焦点を移しました。Wasmの方がより有望であると考えています。</p><p>また、以前はCompose Multiplatform for webとして知られていたCompose HTMLも提供しています。これはKotlin/JSでDOMを操作するために設計された追加ライブラリであり、プラットフォーム間でUIを共有するためのものではありません。</p><h3 id="マルチプラットフォーム開発のツールを改善する計画はありますか" tabindex="-1">マルチプラットフォーム開発のツールを改善する計画はありますか？ <a class="header-anchor" href="#マルチプラットフォーム開発のツールを改善する計画はありますか" aria-label="Permalink to &quot;マルチプラットフォーム開発のツールを改善する計画はありますか？&quot;">​</a></h3><p>はい、マルチプラットフォームツールにおける現在の課題を強く認識しており、いくつかの領域で改善に積極的に取り組んでいます。</p><h3 id="swiftの相互運用性を提供する予定はありますか" tabindex="-1">Swiftの相互運用性を提供する予定はありますか？ <a class="header-anchor" href="#swiftの相互運用性を提供する予定はありますか" aria-label="Permalink to &quot;Swiftの相互運用性を提供する予定はありますか？&quot;">​</a></h3><p>はい。現在、Swiftとの直接的な相互運用性を提供するための様々なアプローチを調査しており、特にKotlinコードをSwiftにエクスポートすることに焦点を当てています。</p>',81)]))}const k=o(r,[["render",p]]);export{c as __pageData,k as default};
