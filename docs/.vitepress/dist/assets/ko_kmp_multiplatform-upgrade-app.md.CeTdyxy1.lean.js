import{_ as E}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as r}from"./chunks/icon-2-done.e1N9yMQF.js";import{_ as d}from"./chunks/icon-3-done.D86i6ZaO.js";import{_ as o}from"./chunks/icon-4.CODFcxoy.js";import{_ as g}from"./chunks/icon-5-todo.DJgVODZv.js";import{_ as c,a as y}from"./chunks/multiplatform-mobile-upgrade-ios.C-YVNNGz.js";import{_ as F,C as h,c as u,o as C,j as i,G as n,ag as p,a,w as l}from"./chunks/framework.Bksy39di.js";const K=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-upgrade-app.md","filePath":"ko/kmp/multiplatform-upgrade-app.md","lastUpdated":1755522191000}'),m={name:"ko/kmp/multiplatform-upgrade-app.md"};function B(A,s,D,b,v,f){const k=h("secondary-label"),t=h("Links"),e=h("tldr");return C(),u("div",null,[s[22]||(s[22]=i("h1",{id:"ios와-android-간-더-많은-로직-공유하기",tabindex:"-1"},[a("iOS와 Android 간 더 많은 로직 공유하기 "),i("a",{class:"header-anchor",href:"#ios와-android-간-더-많은-로직-공유하기","aria-label":'Permalink to "iOS와 Android 간 더 많은 로직 공유하기"'},"​")],-1)),n(k,{ref:"IntelliJ IDEA"},null,512),n(k,{ref:"Android Studio"},null,512),n(e,null,{default:l(()=>[s[19]||(s[19]=i("p",null,"이 튜토리얼은 IntelliJ IDEA를 사용하지만, Android Studio에서도 따라 할 수 있습니다. 두 IDE 모두 동일한 핵심 기능과 Kotlin 멀티플랫폼 지원을 공유합니다.",-1)),s[20]||(s[20]=i("br",null,null,-1)),s[21]||(s[21]=i("p",null,[a("이 튜토리얼은 "),i("strong",null,"공유 로직과 네이티브 UI로 Kotlin 멀티플랫폼 앱 만들기"),a("의 네 번째 파트입니다. 계속 진행하기 전에 이전 단계를 완료했는지 확인하세요.")],-1)),i("p",null,[s[3]||(s[3]=i("img",{src:E,width:"20",alt:"첫 번째 단계"},null,-1)),s[4]||(s[4]=a()),n(t,{href:"/kmp/multiplatform-create-first-app",summary:"이 튜토리얼은 IntelliJ IDEA를 사용하지만, Android Studio에서도 따라 할 수 있습니다. 두 IDE 모두 동일한 핵심 기능과 Kotlin 멀티플랫폼 지원을 공유합니다. 이 튜토리얼은 공유 로직과 네이티브 UI로 Kotlin 멀티플랫폼 앱 만들기의 첫 번째 파트입니다. Kotlin 멀티플랫폼 앱을 만들고, 사용자 인터페이스를 업데이트하고, 의존성을 추가하고, 더 많은 로직을 공유한 다음, 프로젝트를 마무리하는 과정을 다룹니다."},{default:l(()=>s[0]||(s[0]=[a("Kotlin 멀티플랫폼 앱 만들기")])),_:1}),s[5]||(s[5]=i("br",null,null,-1)),s[6]||(s[6]=i("img",{src:r,width:"20",alt:"두 번째 단계"},null,-1)),s[7]||(s[7]=a()),n(t,{href:"/kmp/multiplatform-update-ui",summary:"이 튜토리얼은 IntelliJ IDEA를 사용하지만, Android Studio에서도 따라 할 수 있습니다. 두 IDE 모두 동일한 핵심 기능과 Kotlin 멀티플랫폼 지원을 공유합니다. 이 튜토리얼은 공유 로직과 네이티브 UI로 Kotlin 멀티플랫폼 앱 만들기의 두 번째 파트입니다. 계속 진행하기 전에 이전 단계를 완료했는지 확인하세요."},{default:l(()=>s[1]||(s[1]=[a("사용자 인터페이스 업데이트하기")])),_:1}),s[8]||(s[8]=i("br",null,null,-1)),s[9]||(s[9]=i("img",{src:d,width:"20",alt:"세 번째 단계"},null,-1)),s[10]||(s[10]=a()),n(t,{href:"/kmp/multiplatform-dependencies",summary:"이 튜토리얼은 IntelliJ IDEA를 사용하지만, Android Studio에서도 따라 할 수 있습니다. 두 IDE 모두 동일한 핵심 기능과 Kotlin 멀티플랫폼 지원을 공유합니다. 이 튜토리얼은 공유 로직과 네이티브 UI로 Kotlin 멀티플랫폼 앱 만들기의 세 번째 파트입니다. 계속 진행하기 전에 이전 단계를 완료했는지 확인하세요."},{default:l(()=>s[2]||(s[2]=[a("의존성 추가하기")])),_:1}),s[11]||(s[11]=i("br",null,null,-1)),s[12]||(s[12]=i("img",{src:o,width:"20",alt:"네 번째 단계"},null,-1)),s[13]||(s[13]=a()),s[14]||(s[14]=i("strong",null,"더 많은 로직 공유하기",-1)),s[15]||(s[15]=i("br",null,null,-1)),s[16]||(s[16]=i("img",{src:g,width:"20",alt:"다섯 번째 단계"},null,-1)),s[17]||(s[17]=a(" 프로젝트 마무리하기")),s[18]||(s[18]=i("br",null,null,-1))])]),_:1}),s[23]||(s[23]=p("",53)),s[24]||(s[24]=i("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"옵션-1-kmp-nativecoroutines-구성하기",tabindex:"-1"},[a("옵션 1. KMP-NativeCoroutines 구성하기 "),i("a",{class:"header-anchor",href:"#옵션-1-kmp-nativecoroutines-구성하기","aria-label":'Permalink to "옵션 1. KMP-NativeCoroutines 구성하기 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),s[25]||(s[25]=p("",22))])}const O=F(m,[["render",B]]);export{K as __pageData,O as default};
