import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bksy39di.js";const d=JSON.parse('{"title":"Koin 어노테이션","description":"","frontmatter":{"title":"Koin 어노테이션"},"headers":[],"relativePath":"ko/koin/setup/annotations.md","filePath":"ko/koin/setup/annotations.md","lastUpdated":1748365453000}'),l={name:"ko/koin/setup/annotations.md"};function k(p,s,h,e,E,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="koin-어노테이션" tabindex="-1">Koin 어노테이션 <a class="header-anchor" href="#koin-어노테이션" aria-label="Permalink to &quot;Koin 어노테이션&quot;">​</a></h1><p>프로젝트에 Koin 어노테이션을 설정합니다.</p><h2 id="버전" tabindex="-1">버전 <a class="header-anchor" href="#버전" aria-label="Permalink to &quot;버전&quot;">​</a></h2><p>모든 Koin 패키지는 <a href="https://search.maven.org/search?q=io.insert-koin" target="_blank" rel="noreferrer">Maven Central</a>에서 찾을 수 있습니다.</p><p>현재 사용 가능한 버전은 다음과 같습니다:</p><h2 id="설정-및-현재-버전" tabindex="-1">설정 및 현재 버전 <a class="header-anchor" href="#설정-및-현재-버전" aria-label="Permalink to &quot;설정 및 현재 버전&quot;">​</a></h2><p>현재 사용 가능한 Koin 프로젝트 버전은 다음과 같습니다:</p><table tabindex="0"><thead><tr><th>프로젝트</th><th style="text-align:center;">버전</th></tr></thead><tbody><tr><td>koin-annotations-bom</td><td style="text-align:center;"><a href="https://mvnrepository.com/artifact/io.insert-koin/koin-annotations-bom" target="_blank" rel="noreferrer"><img src="https://img.shields.io/maven-central/v/io.insert-koin/koin-annotations-bom" alt="Maven Central"></a></td></tr><tr><td>koin-annotations</td><td style="text-align:center;"><a href="https://mvnrepository.com/artifact/io.insert-koin/koin-annotations" target="_blank" rel="noreferrer"><img src="https://img.shields.io/maven-central/v/io.insert-koin/koin-annotations" alt="Maven Central"></a></td></tr><tr><td>koin-ksp-compiler</td><td style="text-align:center;"><a href="https://mvnrepository.com/artifact/io.insert-koin/koin-ksp-compiler" target="_blank" rel="noreferrer"><img src="https://img.shields.io/maven-central/v/io.insert-koin/koin-ksp-compiler" alt="Maven Central"></a></td></tr></tbody></table><h2 id="ksp-플러그인" tabindex="-1">KSP 플러그인 <a class="header-anchor" href="#ksp-플러그인" aria-label="Permalink to &quot;KSP 플러그인&quot;">​</a></h2><p>KSP 플러그인이 작동하려면 필요합니다 (<a href="https://github.com/google/ksp" target="_blank" rel="noreferrer">https://github.com/google/ksp</a>). 공식 (KSP 설정 문서)[<a href="https://kotlinlang.org/docs/ksp-quickstart.html" target="_blank" rel="noreferrer">https://kotlinlang.org/docs/ksp-quickstart.html</a>]를 따르세요.</p><p>다음 Gradle 플러그인을 추가하세요:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.google.devtools.ksp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ksp_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>최신 KSP 호환 버전: <code>1.9.24-1.0.20</code></p><h2 id="kotlin-및-멀티플랫폼" tabindex="-1">Kotlin 및 멀티플랫폼 <a class="header-anchor" href="#kotlin-및-멀티플랫폼" aria-label="Permalink to &quot;Kotlin 및 멀티플랫폼&quot;">​</a></h2><p>표준 Kotlin/Kotlin 멀티플랫폼 프로젝트에서는 KSP를 다음과 같이 설정해야 합니다:</p><ul><li>KSP Gradle 플러그인 사용</li><li>koin 어노테이션을 위해 commonMain에 의존성 추가</li><li>commonMain에 대한 sourceSet 설정</li><li>koin 컴파일러와 함께 KSP 의존성 태스크 추가</li><li>컴파일 태스크 의존성을 <code>kspCommonMainKotlinMetadata</code>로 설정</li></ul><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   id(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.google.devtools.ksp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kotlin {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sourceSets {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Add Koin Annotations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        commonMain</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Koin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-core:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Koin Annotations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            api(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-annotations:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_annotations_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // KSP Common sourceSet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sourceSets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">named(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;commonMain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configure {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        kotlin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">srcDir(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/generated/ksp/metadata/commonMain/kotlin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }       </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// KSP Tasks</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kspCommonMainMetadata&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ksp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compiler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kspAndroid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ksp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compiler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kspIosX64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ksp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compiler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kspIosArm64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ksp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compiler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kspIosSimulatorArm64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ksp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compiler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Trigger Common Metadata Generation from Native tasks</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">project</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">withType(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">KotlinCompilationTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">java)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configureEach {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kspCommonMainKotlinMetadata&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dependsOn(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kspCommonMainKotlinMetadata&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="android-앱-설정" tabindex="-1">Android 앱 설정 <a class="header-anchor" href="#android-앱-설정" aria-label="Permalink to &quot;Android 앱 설정&quot;">​</a></h2><ul><li>KSP Gradle 플러그인 사용</li><li>koin 어노테이션 및 koin ksp 컴파일러에 대한 의존성 추가</li><li>sourceSet 설정</li></ul><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   id(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.google.devtools.ksp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">android {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Koin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-android:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Koin Annotations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-annotations:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_annotations_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Koin Annotations KSP Compiler</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ksp(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-ksp-compiler:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_annotations_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Set KSP sourceSet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    applicationVariants</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">all {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        val variantName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sourceSets {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            getByName(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                java</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">srcDir(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build/generated/ksp/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$variantName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/kotlin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,20)]))}const g=i(l,[["render",k]]);export{d as __pageData,g as default};
