import{_ as n}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as l}from"./chunks/icon-2-done.DCMUaFG5.js";import{_ as e}from"./chunks/icon-3.BwKvTetO.js";import{_ as p,a as o,b as k}from"./chunks/kandy-library.BjUNQ4SJ.js";import{_ as h,C as r,c as d,o as c,j as s,G as E,ag as g,a,w as y}from"./chunks/framework.Bksy39di.js";const N=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/kotlin-notebook-add-dependencies.md","filePath":"ja/kotlin/kotlin-notebook-add-dependencies.md","lastUpdated":1754307826000}'),b={name:"ja/kotlin/kotlin-notebook-add-dependencies.md"};function u(m,i,F,f,D,C){const t=r("tldr");return c(),d("div",null,[i[1]||(i[1]=s("h1",{id:"kotlin-notebookに依存関係を追加する",tabindex:"-1"},[a("Kotlin Notebookに依存関係を追加する "),s("a",{class:"header-anchor",href:"#kotlin-notebookに依存関係を追加する","aria-label":'Permalink to "Kotlin Notebookに依存関係を追加する"'},"​")],-1)),E(t,null,{default:y(()=>i[0]||(i[0]=[s("p",null,[a("これは"),s("strong",null,"Kotlin Notebookの利用開始"),a("チュートリアルの3番目のパートです。先に進む前に、前の手順を完了していることを確認してください。")],-1),s("p",null,[s("img",{src:n,width:"20",alt:"First step"}),a(),s("a",{href:"/ja/kotlin/kotlin-notebook-set-up-env"},"環境をセットアップする"),s("br"),s("img",{src:l,width:"20",alt:"Second step"}),a(),s("a",{href:"/ja/kotlin/kotlin-notebook-create"},"Kotlin Notebookを作成する"),s("br"),s("img",{src:e,width:"20",alt:"Third step"}),a(),s("strong",null,"Kotlin Notebookに依存関係を追加する"),s("br")],-1)])),_:1}),i[2]||(i[2]=g(`<p>初めての<a href="/ja/kotlin/kotlin-notebook-overview">Kotlin Notebook</a>を作成しましたね！次に、高度な機能を利用するために必要な、ライブラリへの依存関係を追加する方法を学びましょう。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin標準ライブラリはすぐに使用できるため、インポートする必要はありません。</p></div><p>Mavenリポジトリから任意のライブラリを、任意のコードセルでGradleスタイル構文を使用してその座標を指定することでロードできます。 ただし、Kotlin Notebookには、人気のあるライブラリをロードするための簡略化された方法として、<a href="https://www.jetbrains.com/help/idea/kotlin-notebook.html#import-libraries" target="_blank" rel="noreferrer"><code>%use</code>ステートメント</a>があります。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Replace libraryName with the library dependency you want to add</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use libraryName</span></span></code></pre></div><p>Kotlin Notebookのオートコンプリート機能を使用して、利用可能なライブラリにすばやくアクセスすることもできます。</p><p><img src="`+p+`" alt="Autocompletion feature in Kotlin Notebook" width="700"></p><h2 id="kotlin-dataframeおよびkandyライブラリをkotlin-notebookに追加する" tabindex="-1">Kotlin DataFrameおよびKandyライブラリをKotlin Notebookに追加する <a class="header-anchor" href="#kotlin-dataframeおよびkandyライブラリをkotlin-notebookに追加する" aria-label="Permalink to &quot;Kotlin DataFrameおよびKandyライブラリをKotlin Notebookに追加する&quot;">​</a></h2><p>Kotlin Notebookに、2つの人気のあるKotlinライブラリの依存関係を追加しましょう。</p><ul><li><a href="https://kotlin.github.io/dataframe/gettingstarted.html" target="_blank" rel="noreferrer">Kotlin DataFrameライブラリ</a>は、Kotlinプロジェクトでデータを操作する機能を提供します。 これを使用して、<a href="/ja/kotlin/data-analysis-work-with-api">API</a>、<a href="/ja/kotlin/data-analysis-connect-to-db">SQLデータベース</a>、およびCSVやJSONなどの<a href="/ja/kotlin/data-analysis-work-with-data-sources">さまざまなファイル形式</a>からデータを取得できます。</li><li><a href="https://kotlin.github.io/kandy/welcome.html" target="_blank" rel="noreferrer">Kandyライブラリ</a>は、<a href="/ja/kotlin/data-analysis-visualization">チャートを作成</a>するための強力で柔軟なDSLを提供します。</li></ul><p>これらのライブラリを追加するには：</p><ol><li><p><strong>Add Code Cell</strong>をクリックして、新しいコードセルを作成します。</p></li><li><p>コードセルに次のコードを入力します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Ensures that the latest available library versions are used</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">useLatestDescriptors</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Imports the Kotlin DataFrame library</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use dataframe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Imports the Kotlin Kandy library</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use kandy</span></span></code></pre></div></li><li><p>コードセルを実行します。</p><p><code>%use</code>ステートメントが実行されると、ライブラリの依存関係がダウンロードされ、デフォルトのインポートがノートブックに追加されます。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>ライブラリに依存する他のコードセルを実行する前に、<code>%use libraryName</code>行のあるコードセルを実行するようにしてください。</p></div></li><li><p>Kotlin DataFrameライブラリを使用してCSVファイルからデータをインポートするには、新しいコードセルで<code>.read()</code>関数を使用します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Creates a DataFrame by importing data from the &quot;netflix_titles.csv&quot; file.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rawDf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrame.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;netflix_titles.csv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Displays the raw DataFrame data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rawDf</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>このCSVファイルの例は、<a href="https://github.com/Kotlin/dataframe/blob/master/examples/notebooks/netflix/netflix_titles.csv" target="_blank" rel="noreferrer">Kotlin DataFrame examples GitHubリポジトリ</a>からダウンロードできます。 プロジェクトディレクトリに追加してください。</p></div><p><img src="`+o+`" alt="Using DataFrame to display data" width="700"></p></li><li><p>新しいコードセルで、<code>.plot</code>メソッドを使用して、DataFrame内のテレビ番組と映画の分布を視覚的に表現します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rawDf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Counts the occurrences of each unique value in the column named &quot;type&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">valueCounts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sort </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { type }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Visualizes data in a bar chart specifying the colors</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        bars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            fillColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                scale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> categorical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#00BCD4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Color.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#009688&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Configures the layout of the chart and sets the title</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Count of TV Shows and Movies&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">550</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div></li></ol><p>結果のチャート：</p><p><img src="`+k+'" alt="Visualization using the Kandy library" width="700"></p><p>これらのライブラリを追加し、Kotlin Notebookで活用できたことをお祝いします！ これは、Kotlin Notebookとその<a href="/ja/kotlin/data-analysis-libraries">サポートされているライブラリ</a>で達成できることのほんの一端にすぎません。</p><h2 id="次のステップ" tabindex="-1">次のステップ <a class="header-anchor" href="#次のステップ" aria-label="Permalink to &quot;次のステップ&quot;">​</a></h2><ul><li><a href="/ja/kotlin/kotlin-notebook-share">Kotlin Notebookを共有</a>する方法を学ぶ</li><li><a href="https://www.jetbrains.com/help/idea/kotlin-notebook.html#add-dependencies" target="_blank" rel="noreferrer">Kotlin Notebookへの依存関係の追加</a>に関する詳細を見る</li><li>Kotlin DataFrameライブラリを使用したより広範なガイドについては、「<a href="/ja/kotlin/data-analysis-work-with-data-sources">ファイルからデータを取得する</a>」を参照する</li><li>Kotlinにおけるデータサイエンスと分析に利用可能なツールとリソースの広範な概要については、「<a href="/ja/kotlin/data-analysis-libraries">データ分析のためのKotlinおよびJavaライブラリ</a>」を参照する</li></ul>',16))])}const B=h(b,[["render",u]]);export{N as __pageData,B as default};
