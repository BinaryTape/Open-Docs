import{_ as d,C as h,c as E,o as r,ag as p,j as s,G as n,a,w as l}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/dokka-cli.md","filePath":"zh-Hant/kotlin/dokka-cli.md","lastUpdated":1754307826000}'),u={name:"zh-Hant/kotlin/dokka-cli.md"},g={tabindex:"0"};function F(y,i,c,C,q,B){const o=h("anchor"),t=h("def"),e=h("list"),k=h("deflist");return r(),E("div",null,[i[84]||(i[84]=p("",49)),s("table",g,[i[22]||(i[22]=s("thead",null,[s("tr",null,[s("th",null,"選項"),s("th",null,"說明")])],-1)),s("tbody",null,[i[2]||(i[2]=s("tr",null,[s("td",null,[s("code",null,"sourceSetName")]),s("td",null,"原始碼集的名稱。")],-1)),i[3]||(i[3]=s("tr",null,[s("td",null,[s("code",null,"displayName")]),s("td",null,"原始碼集的顯示名稱，內部和外部皆使用。")],-1)),i[4]||(i[4]=s("tr",null,[s("td",null,[s("code",null,"classpath")]),s("td",null,"用於分析和互動式範例的類別路徑。接受以分號分隔的多個路徑。")],-1)),i[5]||(i[5]=s("tr",null,[s("td",null,[s("code",null,"src")]),s("td",null,"要分析和文件化的原始碼根目錄。接受以分號分隔的多個路徑。")],-1)),i[6]||(i[6]=s("tr",null,[s("td",null,[s("code",null,"dependentSourceSets")]),s("td",null,[a("依賴原始碼集的名稱，格式為 "),s("code",null,"moduleName/sourceSetName"),a("。接受以分號分隔的多個值。")])],-1)),s("tr",null,[i[1]||(i[1]=s("td",null,[s("code",null,"samples")],-1)),s("td",null,[i[0]||(i[0]=a("包含範例函式的目錄或檔案列表。接受以分號分隔的多個路徑。 ")),n(o,{name:"includes-cli"})])]),i[7]||(i[7]=s("tr",null,[s("td",null,[s("code",null,"includes")]),s("td",null,[a("包含"),s("a",{href:"/zh-Hant/kotlin/dokka-module-and-package-docs"},"模組和套件文件"),a("的 Markdown 檔案。接受以分號分隔的多個路徑。")])],-1)),i[8]||(i[8]=s("tr",null,[s("td",null,[s("code",null,"documentedVisibilities")]),s("td",null,[a("要文件化的可見性。接受以分號分隔的多個值。可能的值："),s("code",null,"PUBLIC"),a("、"),s("code",null,"PRIVATE"),a("、"),s("code",null,"PROTECTED"),a("、"),s("code",null,"INTERNAL"),a("、"),s("code",null,"PACKAGE"),a("。")])],-1)),i[9]||(i[9]=s("tr",null,[s("td",null,[s("code",null,"reportUndocumented")]),s("td",null,"是否報告未文件化的宣告。")],-1)),i[10]||(i[10]=s("tr",null,[s("td",null,[s("code",null,"noSkipEmptyPackages")]),s("td",null,"是否為空套件建立頁面。")],-1)),i[11]||(i[11]=s("tr",null,[s("td",null,[s("code",null,"skipDeprecated")]),s("td",null,"是否跳過已棄用的宣告。")],-1)),i[12]||(i[12]=s("tr",null,[s("td",null,[s("code",null,"jdkVersion")]),s("td",null,"用於連結到 JDK Javadoc 的 JDK 版本。")],-1)),i[13]||(i[13]=s("tr",null,[s("td",null,[s("code",null,"languageVersion")]),s("td",null,"用於設定分析和範例的語言版本。")],-1)),i[14]||(i[14]=s("tr",null,[s("td",null,[s("code",null,"apiVersion")]),s("td",null,"用於設定分析和範例的 Kotlin API 版本。")],-1)),i[15]||(i[15]=s("tr",null,[s("td",null,[s("code",null,"noStdlibLink")]),s("td",null,"是否產生連結到 Kotlin 標準函式庫。")],-1)),i[16]||(i[16]=s("tr",null,[s("td",null,[s("code",null,"noJdkLink")]),s("td",null,"是否產生連結到 JDK Javadoc。")],-1)),i[17]||(i[17]=s("tr",null,[s("td",null,[s("code",null,"suppressedFiles")]),s("td",null,"要抑制的檔案路徑。接受以分號分隔的多個路徑。")],-1)),i[18]||(i[18]=s("tr",null,[s("td",null,[s("code",null,"analysisPlatform")]),s("td",null,"用於設定分析的平台。")],-1)),i[19]||(i[19]=s("tr",null,[s("td",null,[s("code",null,"perPackageOptions")]),s("td",null,[a("套件原始碼集設定列表，格式為 "),s("code",null,"matchingRegexp,-deprecated,-privateApi,+warnUndocumented,+suppress;..."),a("。接受以分號分隔的多個值。")])],-1)),i[20]||(i[20]=s("tr",null,[s("td",null,[s("code",null,"externalDocumentationLinks")]),s("td",null,[a("外部文件連結，格式為 "),s("code",null,"{url}^{packageListUrl}"),a("。接受以 "),s("code",null,"^^"),a(" 分隔的多個值。")])],-1)),i[21]||(i[21]=s("tr",null,[s("td",null,[s("code",null,"srcLink")]),s("td",null,"原始碼目錄與用於瀏覽程式碼的 Web 服務之間的映射。接受以分號分隔的多個路徑。")],-1))])]),i[85]||(i[85]=p("",4)),n(k,{collapsible:"true"},{default:l(()=>[n(t,{title:"moduleName"},{default:l(()=>i[23]||(i[23]=[s("p",null,"用於指代模組的顯示名稱。它用於目錄、導覽、日誌記錄等。",-1),s("p",null,[a("預設值："),s("code",null,"root")],-1)])),_:1}),n(t,{title:"moduleVersion"},{default:l(()=>i[24]||(i[24]=[s("p",null,"模組版本。",-1),s("p",null,"預設值：空白",-1)])),_:1}),n(t,{title:"outputDirectory"},{default:l(()=>i[25]||(i[25]=[s("p",null,"文件生成目標目錄，與輸出格式無關。",-1),s("p",null,[a("預設值："),s("code",null,"./dokka")],-1)])),_:1}),n(t,{title:"failOnWarning"},{default:l(()=>i[26]||(i[26]=[s("p",null," 如果 Dokka 發出警告或錯誤，是否中止文件生成。 程序會先等待所有錯誤和警告發出。 ",-1),s("p",null,[a("此設定與 "),s("code",null,"reportUndocumented"),a(" 搭配使用效果良好")],-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"suppressObviousFunctions"},{default:l(()=>[i[28]||(i[28]=s("p",null,"是否抑制明顯的函式。",-1)),i[29]||(i[29]=a(" 函式被視為明顯，如果它： ")),n(e,null,{default:l(()=>i[27]||(i[27]=[s("li",null,[a(" 繼承自 "),s("code",null,"kotlin.Any"),a("、"),s("code",null,"Kotlin.Enum"),a("、"),s("code",null,"java.lang.Object"),a(" 或 "),s("code",null,"java.lang.Enum"),a("，例如 "),s("code",null,"equals"),a("、"),s("code",null,"hashCode"),a("、"),s("code",null,"toString"),a("。 ")],-1),s("li",null,[a(" 合成（由編譯器生成）且沒有任何文件，例如 "),s("code",null,"dataClass.componentN"),a(" 或 "),s("code",null,"dataClass.copy"),a("。 ")],-1)])),_:1}),i[30]||(i[30]=s("p",null,[a("預設值："),s("code",null,"true")],-1))]),_:1}),n(t,{title:"suppressInheritedMembers"},{default:l(()=>i[31]||(i[31]=[s("p",null,"是否抑制在給定類別中未明確覆寫的繼承成員。",-1),s("p",null,[a(" 注意：這可以抑制 "),s("code",null,"equals"),a(" / "),s("code",null,"hashCode"),a(" / "),s("code",null,"toString"),a(" 等函式， 但不能抑制 "),s("code",null,"dataClass.componentN"),a(" 和 "),s("code",null,"dataClass.copy"),a(" 等合成函式。為此請使用 "),s("code",null,"suppressObviousFunctions"),a("。 ")],-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"offlineMode"},{default:l(()=>[n(o,{name:"includes-json"}),i[32]||(i[32]=s("p",null,"是否透過網路解析遠端檔案/連結。",-1)),i[33]||(i[33]=s("p",null," 這包括用於生成外部文件連結的套件列表。 例如，使標準函式庫中的類別可點擊。 ",-1)),i[34]||(i[34]=s("p",null,[a(" 將此設定為 "),s("code",null,"true"),a(" 在某些情況下可以顯著加快建置時間， 但也可能降低文件品質和使用者體驗。例如，不 解析來自您的依賴項（包括標準函式庫）的類別/成員連結。 ")],-1)),i[35]||(i[35]=s("p",null,[a(" 注意：您可以將已獲取的檔案快取到本地並將其作為本地路徑提供給 Dokka。請參閱 "),s("code",null,"externalDocumentationLinks"),a(" 部分。 ")],-1)),i[36]||(i[36]=s("p",null,[a("預設值："),s("code",null,"false")],-1))]),_:1}),n(t,{title:"includes"},{default:l(()=>i[37]||(i[37]=[s("p",null,[a(" 包含 "),s("a",{href:"/zh-Hant/kotlin/dokka-module-and-package-docs"},"模組和套件文件"),a("的 Markdown 檔案列表。 ")],-1),s("p",null,"指定檔案的內容將被解析並嵌入文件中作為模組和套件描述。",-1),s("p",null,"這可以在每個套件的基礎上進行設定。",-1)])),_:1}),n(t,{title:"sourceSets"},{default:l(()=>i[38]||(i[38]=[s("p",null,[a(" Kotlin "),s("a",{href:"https://kotlinlang.org/docs/multiplatform-discover-project.html#source-sets"},"原始碼集"),a("的個別和額外設定。 ")],-1),s("p",null,[a("有關可能選項的列表，請參閱"),s("a",{href:"#source-set-configuration"},"原始碼集設定"),a("。")],-1)])),_:1}),n(t,{title:"sourceLinks"},{default:l(()=>i[39]||(i[39]=[s("p",null,"套用於所有原始碼集的全域原始碼連結設定。",-1),s("p",null,[a("有關可能選項的列表，請參閱"),s("a",{href:"#source-link-configuration"},"原始碼連結設定"),a("。")],-1)])),_:1}),n(t,{title:"perPackageOptions"},{default:l(()=>i[40]||(i[40]=[s("p",null,"與其所在原始碼集無關的匹配套件的全域設定。",-1),s("p",null,[a("有關可能選項的列表，請參閱"),s("a",{href:"#per-package-configuration"},"每個套件設定"),a("。")],-1)])),_:1}),n(t,{title:"externalDocumentationLinks"},{default:l(()=>i[41]||(i[41]=[s("p",null,"與其所在原始碼集無關的全域外部文件連結設定。",-1),s("p",null,[a("有關可能選項的列表，請參閱"),s("a",{href:"#external-documentation-links-configuration"},"外部文件連結設定"),a("。")],-1)])),_:1}),n(t,{title:"pluginsClasspath"},{default:l(()=>i[42]||(i[42]=[s("p",null,"包含 Dokka 外掛程式及其依賴項的 JAR 檔案列表。",-1)])),_:1})]),_:1}),i[86]||(i[86]=p("",3)),n(k,{collapsible:"true"},{default:l(()=>[n(t,{title:"displayName"},{default:l(()=>i[43]||(i[43]=[s("p",null,"用於指代此原始碼集的顯示名稱。",-1),s("p",null,[a(" 該名稱在外部（例如，原始碼集名稱對文件閱讀器可見）和 內部（例如，用於 "),s("code",null,"reportUndocumented"),a(" 的日誌訊息）都使用。 ")],-1),s("p",null,"如果沒有更好的替代方案，可以使用平台名稱。",-1)])),_:1}),n(t,{title:"sourceSetID"},{default:l(()=>i[44]||(i[44]=[s("p",null,"原始碼集的技術 ID",-1)])),_:1}),n(t,{title:"documentedVisibilities"},{default:l(()=>[i[46]||(i[46]=s("p",null,"應文件化的可見性修飾符集合。",-1)),i[47]||(i[47]=s("p",null,[a(" 如果您想文件化 "),s("code",null,"protected"),a("/"),s("code",null,"internal"),a("/"),s("code",null,"private"),a(" 宣告， 以及如果您想排除 "),s("code",null,"public"),a(" 宣告並僅文件化內部 API，可以使用此選項。 ")],-1)),i[48]||(i[48]=s("p",null,"這可以在每個套件的基礎上進行設定。",-1)),i[49]||(i[49]=s("p",null," 可能的值：",-1)),n(e,null,{default:l(()=>i[45]||(i[45]=[s("li",null,[s("code",null,"PUBLIC")],-1),s("li",null,[s("code",null,"PRIVATE")],-1),s("li",null,[s("code",null,"PROTECTED")],-1),s("li",null,[s("code",null,"INTERNAL")],-1),s("li",null,[s("code",null,"PACKAGE")],-1)])),_:1}),i[50]||(i[50]=s("p",null,[a("預設值："),s("code",null,"PUBLIC")],-1))]),_:1}),n(t,{title:"reportUndocumented"},{default:l(()=>i[51]||(i[51]=[s("p",null,[a(" 是否發出關於可見的未文件化宣告的警告，即在被 KDocs "),s("code",null,"documentedVisibilities"),a(" 和其他篩選器過濾後沒有 KDocs 的宣告。 ")],-1),s("p",null,[a("此設定與 "),s("code",null,"failOnWarning"),a(" 搭配使用效果良好。")],-1),s("p",null,"這可以在每個套件的基礎上進行設定。",-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"skipEmptyPackages"},{default:l(()=>i[52]||(i[52]=[s("p",null," 是否跳過在應用各種篩選器後不包含任何可見宣告的套件。 ",-1),s("p",null,[a(" 例如，如果 "),s("code",null,"skipDeprecated"),a(" 設定為 "),s("code",null,"true"),a(" 且您的套件僅包含 已棄用的宣告，則該套件將被視為空。 ")],-1),s("p",null,[a("CLI 執行器的預設值為 "),s("code",null,"false"),a("。")],-1)])),_:1}),n(t,{title:"skipDeprecated"},{default:l(()=>i[53]||(i[53]=[s("p",null,[a("是否文件化使用 "),s("code",null,"@Deprecated"),a(" 註解的宣告。")],-1),s("p",null,"這可以在專案/模組級別設定。",-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"jdkVersion"},{default:l(()=>i[54]||(i[54]=[s("p",null,"生成 Java 類型外部文件連結時使用的 JDK 版本。",-1),s("p",null,[a(" 例如，如果您在某些公共宣告簽章中使用 "),s("code",null,"java.util.UUID"),a("， 並且此選項設定為 "),s("code",null,"8"),a("，Dokka 將為其生成指向 "),s("a",{href:"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"},"JDK 8 Javadoc"),a(" 的外部文件連結。 ")],-1)])),_:1}),n(t,{title:"languageVersion"},{default:l(()=>i[55]||(i[55]=[s("p",null,[a(" 用於設定分析和 "),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),a(" 環境的"),s("a",{href:"https://kotlinlang.org/docs/compatibility-modes.html"},"Kotlin 語言版本"),a("。 ")],-1)])),_:1}),n(t,{title:"apiVersion"},{default:l(()=>i[56]||(i[56]=[s("p",null,[a(" 用於設定分析和 "),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),a(" 環境的"),s("a",{href:"https://kotlinlang.org/docs/compatibility-modes.html"},"Kotlin API 版本"),a("。 ")],-1)])),_:1}),n(t,{title:"noStdlibLink"},{default:l(()=>i[57]||(i[57]=[s("p",null," 是否生成指向 Kotlin 標準函式庫 API 參考文件的外部文件連結。 ",-1),s("p",null,[a("注意：當 "),s("code",null,"noStdLibLink"),a(" 設定為 "),s("code",null,"false"),a(" 時，連結"),s("b",null,"會"),a("生成。")],-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"noJdkLink"},{default:l(()=>i[58]||(i[58]=[s("p",null,"是否生成指向 JDK Javadoc 的外部文件連結。",-1),s("p",null,[a("JDK Javadoc 的版本由 "),s("code",null,"jdkVersion"),a(" 選項決定。")],-1),s("p",null,[a("注意：當 "),s("code",null,"noJdkLink"),a(" 設定為 "),s("code",null,"false"),a(" 時，連結"),s("b",null,"會"),a("生成。")],-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"includes"},{default:l(()=>i[59]||(i[59]=[s("p",null,[a(" 包含"),s("a",{href:"/zh-Hant/kotlin/dokka-module-and-package-docs"},"模組和套件文件"),a("的 Markdown 檔案列表。 ")],-1),s("p",null,"指定檔案的內容將被解析並嵌入文件中作為模組和套件描述。",-1)])),_:1}),n(t,{title:"analysisPlatform"},{default:l(()=>[i[61]||(i[61]=s("p",null,[a(" 用於設定程式碼分析和 "),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),a(" 環境的平台。 ")],-1)),i[62]||(i[62]=s("p",null," 可能的值：",-1)),n(e,null,{default:l(()=>i[60]||(i[60]=[s("li",null,[s("code",null,"jvm")],-1),s("li",null,[s("code",null,"common")],-1),s("li",null,[s("code",null,"js")],-1),s("li",null,[s("code",null,"native")],-1)])),_:1})]),_:1}),n(t,{title:"sourceRoots"},{default:l(()=>i[63]||(i[63]=[s("p",null,[a(" 要分析和文件化的原始碼根目錄。 可接受的輸入是目錄和單個 "),s("code",null,".kt"),a(" / "),s("code",null,".java"),a(" 檔案。 ")],-1)])),_:1}),n(t,{title:"classpath"},{default:l(()=>i[64]||(i[64]=[s("p",null,"用於分析和互動式範例的類別路徑。",-1),s("p",null,"如果某些來自依賴項的類型未自動解析/選取，這會很有用。",-1),s("p",null,[a("此選項接受 "),s("code",null,".jar"),a(" 和 "),s("code",null,".klib"),a(" 檔案。")],-1)])),_:1}),n(t,{title:"samples"},{default:l(()=>i[65]||(i[65]=[s("p",null,[a(" 包含透過 "),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),a(" KDoc 標籤引用的範例函式的目錄或檔案列表。 ")],-1)])),_:1}),n(t,{title:"suppressedFiles"},{default:l(()=>i[66]||(i[66]=[s("p",null,"生成文件時要抑制的檔案。",-1)])),_:1}),n(t,{title:"sourceLinks"},{default:l(()=>i[67]||(i[67]=[s("p",null,"僅適用於此原始碼集的原始碼連結參數集合。",-1),s("p",null,[a("有關可能選項的列表，請參閱"),s("a",{href:"#source-link-configuration"},"原始碼連結設定"),a("。")],-1)])),_:1}),n(t,{title:"perPackageOptions"},{default:l(()=>i[68]||(i[68]=[s("p",null,"此原始碼集內匹配套件特有的參數集合。",-1),s("p",null,[a("有關可能選項的列表，請參閱"),s("a",{href:"#per-package-configuration"},"每個套件設定"),a("。")],-1)])),_:1}),n(t,{title:"externalDocumentationLinks"},{default:l(()=>i[69]||(i[69]=[s("p",null,"僅適用於此原始碼集的外部文件連結參數集合。",-1),s("p",null,[a("有關可能選項的列表，請參閱"),s("a",{href:"#external-documentation-links-configuration"},"外部文件連結設定"),a("。")],-1)])),_:1})]),_:1}),i[87]||(i[87]=p("",6)),n(k,{collapsible:"true"},{default:l(()=>[n(t,{title:"localDirectory"},{default:l(()=>i[70]||(i[70]=[s("p",null,"本地原始碼目錄的路徑。",-1)])),_:1}),n(t,{title:"remoteUrl"},{default:l(()=>i[71]||(i[71]=[s("p",null," 原始碼託管服務的 URL，文件讀者可以存取該服務， 例如 GitHub、GitLab、Bitbucket 等。此 URL 用於生成 宣告的原始碼連結。 ",-1)])),_:1}),n(t,{title:"remoteLineSuffix"},{default:l(()=>[i[73]||(i[73]=s("p",null," 用於將原始碼行號附加到 URL 的後綴。這有助於讀者不僅導航 到檔案，還導航到宣告的特定行號。 ",-1)),i[74]||(i[74]=s("p",null,[a(" 數字本身將附加到指定的後綴。例如， 如果此選項設定為 "),s("code",null,"#L"),a(" 且行號為 10，則產生的 URL 後綴 為 "),s("code",null,"#L10"),a("。 ")],-1)),i[75]||(i[75]=s("p",null," 常用服務使用的後綴：",-1)),n(e,null,{default:l(()=>i[72]||(i[72]=[s("li",null,[a("GitHub："),s("code",null,"#L")],-1),s("li",null,[a("GitLab："),s("code",null,"#L")],-1),s("li",null,[a("Bitbucket："),s("code",null,"#lines-")],-1)])),_:1}),i[76]||(i[76]=s("p",null,"預設值：空白（無後綴）",-1))]),_:1})]),_:1}),i[88]||(i[88]=p("",4)),n(k,{collapsible:"true"},{default:l(()=>[n(t,{title:"matchingRegex"},{default:l(()=>i[77]||(i[77]=[s("p",null,"用於匹配套件的正規表達式。",-1)])),_:1}),n(t,{title:"suppress"},{default:l(()=>i[78]||(i[78]=[s("p",null,"生成文件時是否應跳過此套件。",-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"skipDeprecated"},{default:l(()=>i[79]||(i[79]=[s("p",null,[a("是否文件化使用 "),s("code",null,"@Deprecated"),a(" 註解的宣告。")],-1),s("p",null,"這可以在專案/模組級別設定。",-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"reportUndocumented"},{default:l(()=>i[80]||(i[80]=[s("p",null,[a(" 是否發出關於可見的未文件化宣告的警告，即在被 KDocs "),s("code",null,"documentedVisibilities"),a(" 和其他篩選器過濾後沒有 KDocs 的宣告。 ")],-1),s("p",null,[a("此設定與 "),s("code",null,"failOnWarning"),a(" 搭配使用效果良好。")],-1),s("p",null,"這可以在原始碼集級別設定。",-1),s("p",null,[a("預設值："),s("code",null,"false")],-1)])),_:1}),n(t,{title:"documentedVisibilities"},{default:l(()=>i[81]||(i[81]=[s("p",null,"應文件化的可見性修飾符集合。",-1),s("p",null,[a(" 如果您想文件化此套件內的 "),s("code",null,"protected"),a("/"),s("code",null,"internal"),a("/"),s("code",null,"private"),a(" 宣告， 以及如果您想排除 "),s("code",null,"public"),a(" 宣告並僅文件化內部 API，可以使用此選項。 ")],-1),s("p",null,"可以在原始碼集級別設定。",-1),s("p",null,[a("預設值："),s("code",null,"PUBLIC")],-1)])),_:1})]),_:1}),i[89]||(i[89]=p("",5)),n(k,{collapsible:"true"},{default:l(()=>[n(t,{title:"url"},{default:l(()=>i[82]||(i[82]=[s("p",null,[a("要連結到的文件的根 URL。它"),s("b",null,"必須"),a("包含尾隨斜槓。")],-1),s("p",null,[a(" Dokka 會盡力自動為給定的 URL 找到 "),s("code",null,"package-list"),a("， 並將宣告連結在一起。 ")],-1),s("p",null,[a(" 如果自動解析失敗，或者您想使用本地快取的檔案， 請考慮設定 "),s("code",null,"packageListUrl"),a(" 選項。 ")],-1)])),_:1}),n(t,{title:"packageListUrl"},{default:l(()=>i[83]||(i[83]=[s("p",null,[s("code",null,"package-list"),a(" 的確切位置。這是依賴 Dokka 自動解析的替代方案。 ")],-1),s("p",null," 套件列表包含有關文件和專案本身的信息， 例如模組和套件名稱。 ",-1),s("p",null,"這也可以是本地快取的檔案，以避免網路呼叫。",-1)])),_:1})]),_:1}),i[90]||(i[90]=p("",3))])}const b=d(u,[["render",F]]);export{f as __pageData,b as default};
