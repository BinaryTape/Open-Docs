import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"入門","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/coil/getting_started.md","filePath":"zh-Hant/coil/getting_started.md","lastUpdated":1753369988000}'),l={name:"zh-Hant/coil/getting_started.md"};function o(n,i,p,h,k,d){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="入門" tabindex="-1">入門 <a class="header-anchor" href="#入門" aria-label="Permalink to &quot;入門&quot;">​</a></h1><h2 id="compose-ui" tabindex="-1">Compose UI <a class="header-anchor" href="#compose-ui" aria-label="Permalink to &quot;Compose UI&quot;">​</a></h2><p>一個典型的 Compose UI 專案會想要引入：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.coil-kt.coil3:coil-compose:3.3.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.coil-kt.coil3:coil-network-okhttp:3.3.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>引入這些後，您可以使用 <code>AsyncImage</code> 從網路載入圖像：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AsyncImage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://example.com/image.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contentDescription </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>::: Note 如果您使用 Compose Multiplatform，則需要使用 Ktor 而非 OkHttp。有關如何操作的資訊，請參閱<a href="./network#ktor-network-engines">此處</a>。</p><p>:::</p><h2 id="android-views" tabindex="-1">Android Views <a class="header-anchor" href="#android-views" aria-label="Permalink to &quot;Android Views&quot;">​</a></h2><p>如果您使用 Android Views 而非 Compose UI，請引入：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.coil-kt.coil3:coil:3.3.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.coil-kt.coil3:coil-network-okhttp:3.3.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>引入這些後，您可以使用 <code>ImageView.load</code> 擴充函數從網路載入圖像：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imageView.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/image.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="配置單例-imageloader" tabindex="-1">配置單例 ImageLoader <a class="header-anchor" href="#配置單例-imageloader" aria-label="Permalink to &quot;配置單例 ImageLoader&quot;">​</a></h2><p>預設情況下，Coil 包含一個單例 (singleton) <code>ImageLoader</code>。<code>ImageLoader</code> 透過擷取、解碼、快取並返回結果來執行傳入的 <code>ImageRequest</code>。您不需要配置您的 <code>ImageLoader</code>；如果您不配置，Coil 將以預設配置建立單例 <code>ImageLoader</code>。</p><p>您可以透過多種方式進行配置（<strong>僅選擇其中一種</strong>）：</p><ul><li>在您應用程式的入口點（應用程式的根 <code>@Composable</code>）附近呼叫 <code>setSingletonImageLoaderFactory</code>。<strong>這最適用於 Compose Multiplatform 應用程式。</strong></li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setSingletonImageLoaderFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ImageLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crossfade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>在 Android 中，於您的 <a href="https://developer.android.com/reference/android/app/Application" target="_blank" rel="noreferrer"><code>Application</code></a> 上實作 <code>SingletonImageLoader.Factory</code>。<strong>這最適用於 Android 應用程式。</strong></li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), SingletonImageLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> newImageLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ImageLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ImageLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crossfade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>在您應用程式的入口點（例如，Android 上的 <code>Application.onCreate</code> 中）附近呼叫 <code>SingletonImageLoader.setSafe</code>。這是最靈活的方式。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SingletonImageLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setSafe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ImageLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crossfade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>::: Note 如果您正在編寫依賴於 Coil 的程式庫，則不應取得/設定單例 <code>ImageLoader</code>。相反，您應該依賴 <code>io.coil-kt.coil3:coil-core</code>，建立您自己的 <code>ImageLoader</code>，並手動傳遞它。如果您在程式庫中設定單例 <code>ImageLoader</code>，那麼如果使用您程式庫的應用程式也使用 Coil，您可能會覆寫該應用程式設定的 <code>ImageLoader</code>。</p><p>:::</p><h2 id="構件" tabindex="-1">構件 <a class="header-anchor" href="#構件" aria-label="Permalink to &quot;構件&quot;">​</a></h2><p>以下是 Coil 已發佈到 <code>mavenCentral()</code> 的主要構件 (artifact) 列表：</p><ul><li><code>io.coil-kt.coil3:coil</code>：預設構件，依賴於 <code>io.coil-kt.coil3:coil-core</code>。它包含一個單例 <code>ImageLoader</code> 和相關的擴充函數。</li><li><code>io.coil-kt.coil3:coil-core</code>：<code>io.coil-kt.coil3:coil</code> 的子集，<strong>不</strong>包含單例 <code>ImageLoader</code> 和相關的擴充函數。</li><li><code>io.coil-kt.coil3:coil-compose</code>：預設的 <a href="https://www.jetbrains.com/compose-multiplatform/" target="_blank" rel="noreferrer">Compose UI</a> 構件，依賴於 <code>io.coil-kt.coil3:coil</code> 和 <code>io.coil-kt.coil3:coil-compose-core</code>。它包括使用單例 <code>ImageLoader</code> 的 <code>AsyncImage</code>、<code>rememberAsyncImagePainter</code> 和 <code>SubcomposeAsyncImage</code> 的多載 (overload)。</li><li><code>io.coil-kt.coil3:coil-compose-core</code>：<code>io.coil-kt.coil3:coil-compose</code> 的子集，不包含依賴於單例 <code>ImageLoader</code> 的函數。</li><li><code>io.coil-kt.coil3:coil-network-okhttp</code>：包含使用 <a href="https://github.com/square/okhttp" target="_blank" rel="noreferrer">OkHttp</a> 從網路擷取圖像的支援。</li><li><code>io.coil-kt.coil3:coil-network-ktor2</code>：包含使用 <a href="https://github.com/ktorio/ktor" target="_blank" rel="noreferrer">Ktor 2</a> 從網路擷取圖像的支援。</li><li><code>io.coil-kt.coil3:coil-network-ktor3</code>：包含使用 <a href="https://github.com/ktorio/ktor" target="_blank" rel="noreferrer">Ktor 3</a> 從網路擷取圖像的支援。</li><li><code>io.coil-kt.coil3:coil-network-cache-control</code>：包含在從網路擷取圖像時，支援遵循 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control" target="_blank" rel="noreferrer"><code>Cache-Control</code> 標頭</a> 的功能。</li><li><code>io.coil-kt.coil3:coil-gif</code>：包含兩個 <a href="https://coil-kt.github.io/coil/api/coil-core/coil3.decode/-decoder" target="_blank" rel="noreferrer">解碼器</a> 以支援解碼 GIF。有關更多詳細資訊，請參閱 <a href="./gifs">GIFs</a>。</li><li><code>io.coil-kt.coil3:coil-svg</code>：包含一個 <a href="https://coil-kt.github.io/coil/api/coil-core/coil3.decode/-decoder" target="_blank" rel="noreferrer">解碼器</a> 以支援解碼 SVG。有關更多詳細資訊，請參閱 <a href="./svgs">SVGs</a>。</li><li><code>io.coil-kt.coil3:coil-video</code>：包含一個 <a href="https://coil-kt.github.io/coil/api/coil-core/coil3.decode/-decoder" target="_blank" rel="noreferrer">解碼器</a> 以支援解碼來自 <a href="https://developer.android.com/guide/topics/media/media-formats#video-codecs" target="_blank" rel="noreferrer">任何 Android 支援的影片格式</a> 的影格。有關更多詳細資訊，請參閱 <a href="./videos">影片</a>。</li><li><code>io.coil-kt.coil3:coil-test</code>：包含支援測試的類別。有關更多詳細資訊，請參閱 <a href="./testing">測試</a>。</li><li><code>io.coil-kt.coil3:coil-bom</code>：包含一個 <a href="https://docs.gradle.org/7.2/userguide/platforms.html#sub:bom_import" target="_blank" rel="noreferrer">物料清單 (bill of materials)</a>。引入 <code>coil-bom</code> 允許您依賴其他 Coil 構件而無需指定版本。</li></ul>`,27)]))}const g=s(l,[["render",o]]);export{c as __pageData,g as default};
