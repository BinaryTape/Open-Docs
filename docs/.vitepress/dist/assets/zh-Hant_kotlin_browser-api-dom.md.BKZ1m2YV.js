import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.Bksy39di.js";const r=JSON.parse('{"title":"瀏覽器與 DOM API","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/browser-api-dom.md","filePath":"zh-Hant/kotlin/browser-api-dom.md","lastUpdated":1754307826000}'),n={name:"zh-Hant/kotlin/browser-api-dom.md"};function l(h,s,p,k,d,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="瀏覽器與-dom-api" tabindex="-1">瀏覽器與 DOM API <a class="header-anchor" href="#瀏覽器與-dom-api" aria-label="Permalink to &quot;瀏覽器與 DOM API&quot;">​</a></h1><p>Kotlin/JS 標準函式庫讓您可以使用 <code>kotlinx.browser</code> 軟體包存取瀏覽器特定的功能，該軟體包包含諸如 <code>document</code> 和 <code>window</code> 等典型的頂層物件。標準函式庫盡可能為這些物件公開的功能提供型別安全的包裝器。作為備用方案，<code>dynamic</code> 型別用於提供與無法很好地映射到 Kotlin 型別系統中的函式互動。</p><h2 id="與-dom-互動" tabindex="-1">與 DOM 互動 <a class="header-anchor" href="#與-dom-互動" aria-label="Permalink to &quot;與 DOM 互動&quot;">​</a></h2><p>若要與文件物件模型 (DOM) 互動，您可以使用變數 <code>document</code>。例如，您可以透過此物件設定我們網站的背景顏色：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.bgColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FFAA12&quot;</span></span></code></pre></div><p><code>document</code> 物件也提供了透過 ID、名稱、類別名稱、標籤名稱等方式檢索特定元素的方法。所有回傳的元素型別都是 <code>Element?</code>。若要存取其屬性，您需要將其轉換為其適當的型別。例如，假設您有一個帶有電子郵件 <code>&lt;input&gt;</code> 欄位的 HTML 頁面：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/javascript&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>請注意，您的腳本包含在 <code>&lt;body&gt;</code> 標籤的底部。這確保了 DOM 在腳本載入之前完全可用。</p><p>透過這種設定，您可以存取 DOM 的元素。若要存取 <code>input</code> 欄位的屬性，請呼叫 <code>getElementById</code> 並將其轉換為 <code>HTMLInputElement</code>。您就可以安全地存取其屬性，例如 <code>value</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HTMLInputElement</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">email.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hadi@jetbrains.com&quot;</span></span></code></pre></div><p>就像您參考這個 <code>input</code> 元素一樣，您可以存取頁面上的其他元素，並將它們轉換為適當的型別。</p><p>若要了解如何以簡潔的方式在 DOM 中建立和組織元素，請查閱 <a href="/zh-Hant/kotlin/typesafe-html-dsl">型別安全 HTML DSL</a>。</p>`,12)]))}const c=i(n,[["render",l]]);export{r as __pageData,c as default};
