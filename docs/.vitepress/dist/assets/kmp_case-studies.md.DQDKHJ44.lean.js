import{_ as u,a as s,b as l,c as g,d as w,e as y,f as a,g as f,h as b,i as _,j as M,k,l as K,m as P,n as C,o,p as S,q as v,r as A,s as B,t as O,u as e,v as j,w as I,x,y as m,z as F,A as U,B as W,C as N,D as z,E as D,F as Q,G as V,H as G,I as L,J as T,K as J,L as R,M as E,N as q,O as H,P as X}from"./chunks/meituan-rms.DAOxvLbv.js";import{_ as $,C as d,c as Z,o as Y,G as c,w as h,j as t,a as i}from"./chunks/framework.Bksy39di.js";const dt=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/case-studies.md","filePath":"kmp/case-studies.md","lastUpdated":1755516278000}'),tt={name:"kmp/case-studies.md"};function it(st,r,lt,at,et,ot){const p=d("list"),n=d("topic");return Y(),Z("div",null,[c(n,{"xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance","xsi:noNamespaceSchemaLocation":"https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd",id:"case-studies",title:"案例研究"},{default:h(()=>[r[1]||(r[1]=t("p",null,"了解大型公司如何利用 Kotlin Multiplatform 进行跨平台开发，应用不同的代码共享策略：从集成到现有应用并共享部分应用逻辑，到基于 Kotlin Multiplatform 和 Compose Multiplatform 构建新应用程序。",-1)),c(p,{columns:"2"},{default:h(()=>r[0]||(r[0]=[t("li",{id:"case-study-forbes"},[t("img",{src:u,alt:"Forbes",height:"40"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[i("通过在 iOS 和 Android 之间共享超过 80% 的逻辑，"),t("b",null,"Forbes"),i(" 现在可以在两个平台上同时推出新特性，同时保留根据特定平台自定义特性的灵活性。这使团队能够创新并更快地响应市场需求。")]),t("a",{href:"https://www.forbes.com/sites/forbes-engineering/2023/11/13/forbes-mobile-app-shifts-to-kotlin-multiplatform/"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-netflix"},[t("img",{src:g,alt:"Netflix",height:"40"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Netflix"),i(" 使用 KMP 共享其移动工作室应用的逻辑，减少重复工作，并实现更快、更可靠的开发。这种方法有助于在快节奏的电视和电影制作世界中高效交付高质量特性。")]),t("a",{href:"https://netflixtechblog.com/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-mcdonalds"},[t("img",{src:w,alt:"McDonald's",height:"65"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[i("通过共享应用内支付等复杂代码，"),t("b",null,"McDonald’s"),i(" 在提升性能、减少崩溃和简化测试的同时，保持了流畅的原生体验。KMP 统一了他们的开发团队，并交付了持续一致的结果，支持每月超过 650 万次购买。")]),t("a",{href:"https://medium.com/mcdonalds-technical-blog/mobile-multiplatform-development-at-mcdonalds-3b72c8d44ebc"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-wrike"},[t("img",{src:y,alt:"Wrike",height:"40"}),t("br"),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Wrike"),i(" 使用 KMP 提升生产力而无需扩大团队，利用其灵活性在同一个项目里结合共享代码和原生代码。通过 Compose Multiplatform，团队实现了快速 UI 开发和跨平台一致的设计，从而能够在创纪录的时间内发布复杂特性。 "),t("a",{href:"https://www.youtube.com/watch?v=jhBmom8z3Qg"},"观看完整故事"),i("。")]),t("a",{href:"https://www.youtube.com/watch?v=Qu3jZX8RyFk"},"观看我们的短视频了解证言"),i(". ")],-1),t("li",{id:"case-study-bilibili"},[t("img",{src:f,alt:"BiliBili",height:"53"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"BiliBili"),i("（中国版）已采用 Kotlin Multiplatform 和 Compose Multiplatform 开发即时消息特性。")])],-1),t("li",{id:"case-study-feres"},[t("img",{src:b,alt:"Feres",height:"50"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Feres"),i(" 是一款拥有超过 100 万次下载量的打车应用，它使用 KMP 共享了 100% 的业务逻辑，并且超过 90% 的 UI 通过 Compose Multiplatform 共享。")])],-1),t("li",{id:"case-study-philips"},[t("img",{src:_,alt:"Philips",height:"34"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Philips"),i(" 在其 HealthSuite 数字平台移动 SDK 中利用 KMP。通过 KMP，他们不仅加速了新特性的实现，还促进了 Android 和 iOS 开发者之间更紧密的协作。")]),t("a",{href:"https://www.youtube.com/watch?v=hZPL8QqiLi8"},"观看完整视频"),i(". ")],-1),t("li",{id:"case-study-nine-gag"},[t("img",{src:M,alt:"9GAG",height:"34"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"9GAG"),i(" 在尝试了 Flutter 和 React Native 后，选择了 KMP。他们逐步采用了这项技术，现在能更快地交付特性，同时为用户提供一致的体验。")]),t("a",{href:"https://raymondctc.medium.com/adopting-kotlin-multiplatform-mobile-kmm-on-9gag-app-dfe526d9ce04"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-instabee"},[t("img",{src:k,alt:"Instabee",height:"65"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Instabee"),i(" 将其 Android 应用程序逻辑和 UI 迁移到 KMP 与 Compose Multiplatform。因此，他们能够通过利用 Android 代码库，在短时间内发布其 iOS 应用程序。")]),t("a",{href:"https://www.youtube.com/watch?v=YsQ-2lQYQ8M"},"观看完整视频"),i(". ")],-1),t("li",{id:"case-study-baidu"},[t("img",{src:K,alt:"Baidu",height:"65"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Baidu"),i(" 在其 Wonder 应用中使用了 KMP，以统一 iOS 和 Android 之间的数据层和业务逻辑，实现了一个适用于两个平台的 Kotlin 代码库。这确保了用户体验的一致性，降低了维护成本，并显著提升了生产力。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/baidu/"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-markaz"},[t("img",{src:P,alt:"Markaz",height:"45"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Markaz"),i(" 是巴基斯坦第二大电商平台，拥有超过 500 万次下载和 100 万活跃用户。该应用包含 100 多个屏幕，完全使用 Compose Multiplatform 构建，将共享 UI 与相机、二维码扫描、支付、原生导航和分析功能等原生集成相结合。")])],-1),t("li",{id:"case-study-autodesk"},[t("img",{src:C,alt:"Autodesk",height:"45"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:o,style:{},alt:"desktop",width:"28"}),t("p",null,[t("b",null,"Autodesk"),i(" 使用 KMP 统一 iOS、Android 和 Windows 上的离线同步逻辑和数据模型。这个共享代码库简化了开发，实现了跨平台特性复用并改善了协作。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/autodesk"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-cash-app"},[t("img",{src:S,alt:"Cash App",height:"40"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Cash App"),i(" 于 2018 年逐步从共享 JavaScript 迁移到 KMP。此举简化了 Android 和 iOS 工程团队之间的协作，并成功解决了之前使用 JavaScript 时遇到的代码共享问题。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/cash-app"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-bolt"},[t("img",{src:v,alt:"Bolt",height:"40"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Bolt"),i(" 拥有八个不同的应用程序，经常需要共享通用特性。Bolt 的开发者评估了许多跨平台开发解决方案，尽管 Kotlin Multiplatform 当时仍处于 Beta 阶段，但它看起来是最有前景的选择。")]),t("a",{href:"https://www.youtube.com/watch?v=Qu3jZX8RyFk"},"观看我们的短视频了解证言"),i(". ")],-1),t("li",{id:"case-study-bitkey"},[t("img",{src:A,alt:"Bitkey",height:"50"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Bitkey by Block"),i(" 使用 Kotlin Multiplatform 共享了 95% 的移动代码库，确保其开源比特币钱包的一致性。通过迁移到 Compose Multiplatform，团队统一了 UI 开发，并改善了 Android 和 iOS 之间的特性一致性。 ")]),t("a",{href:"https://engineering.block.xyz/blog/how-bitkey-uses-cross-platform-development"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-wallhub"},[t("img",{src:B,alt:"WallHub",height:"50"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"WallHub"),i("，一款壁纸应用，利用 KMP 跨平台共享业务逻辑、响应模型、路由和分析数据，创建了一个统一的真相来源，最大限度地减少了开发阻力。该应用的 UI 完全由 Compose Multiplatform 构建，在所有支持的平台上提供了统一的设计和用户体验。 ")])],-1),t("li",{id:"case-study-music-work"},[t("img",{src:O,alt:"Music Work",height:"60"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:e,style:{},alt:"web",width:"28"}),t("img",{src:o,style:{},alt:"desktop",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Music Work"),i(" 在所有支持的平台上，其 UI 100% 使用 Compose Multiplatform 构建。其架构也通过 KMP 共享业务逻辑、数据模型和分析数据。此方法将开发和维护成本降低了 30%，同时显著加快了部署周期。 ")])],-1),t("li",{id:"case-study-physics-wallah"},[t("img",{src:j,alt:"Physics Wallah",height:"170"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Physics Wallah"),i(" 移动应用约有 20% 的内容（在 Google Play 上拥有超过 1000 万次下载，包括其最大的特性之一 Pitara）完全使用 KMP 和 Compose Multiplatform 构建。这简化了开发流程，使 Android 和 iOS 工程师能够统一为一个移动团队。")])],-1),t("li",{id:"case-study-fast-and-fit"},[t("img",{src:I,alt:"Fast and Fit",height:"50"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[i("通过 KMP 和 Compose Multiplatform 共享了 "),t("b",null,"Fast&Fit"),i(" 超过 90% 的代码库（包括整个 UI），团队在各个平台同步推出特性，削减了维护开销，并专注于添加创新的健康工具。 ")])],-1),t("li",{id:"case-study-posten-bring"},[t("img",{src:x,alt:"Posten bring",height:"290"}),t("img",{src:m,style:{},alt:"server",width:"28"}),t("img",{src:e,style:{},alt:"web",width:"28"}),t("p",null,[t("b",null,"Posten Bring"),i("，一家拥有 377 年历史的挪威国家邮政服务公司，使用 KMP 统一了数十个前端和后端应用程序中的复杂业务逻辑。通过建立单一真相来源，他们减少了协调时间并最大限度地减少了错误。")]),t("a",{href:"https://2024.javazone.no/program/a1d9aeac-ffc3-4b1d-ba08-a0568f415a02"},"观看完整演讲"),i(". ")],-1),t("li",{id:"case-study-quizlet"},[t("img",{src:F,alt:"Quizlet",height:"55"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:e,style:{},alt:"web",width:"28"}),t("p",null,[i("KMP 驱动着全球学习平台 "),t("b",null,"Quizlet"),i(" 的网页和移动应用，这些应用合计拥有 1 亿活跃安装量。通过将共享代码从 JavaScript 迁移到 Kotlin，他们显著提升了 Android 和 iOS 应用程序的性能。")]),t("a",{href:"https://quizlet.com/blog/shared-code-kotlin-multiplatform"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-kuaishou"},[t("img",{src:U,alt:"Kuaishou",width:"55"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Kuaishou"),i("，中国领先的短视频平台，已使用 KMP 两年，显著降低了开发 Android 和 iOS 应用新特性的成本，以及维护现有特性的成本。")]),t("a",{href:"https://medium.com/@xiang.j9501/case-studies-kuaiying-kotlin-multiplatform-mobile-268e325f8610"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-balary"},[t("img",{src:W,alt:"Balary",height:"70"}),t("img",{src:s,style:{},alt:"android",width:"28"}),i(),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},[t("img",{src:a,style:{},alt:"Compose Multiplatform",height:"15"})]),t("p",null,[t("b",null,"Balary"),i(" 使用 KMP 和 Compose Multiplatform 构建，在 Android 和 iOS 之间共享了大部分 UI。对于 MapLibre 地图和视频播放等平台特有的需求，我们使用 expect/actual 声明来集成原生 Android XML 视图和 iOS UIKit 视图。 ")])],-1),t("li",{id:"case-study-wordline"},[t("img",{src:N,alt:"Worldline",height:"70"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Worldline"),i(" 拥抱 KMP 以改造其 Eroski 应用。从 Java 和 Objective-C 过渡，团队平滑地迁移了所有应用屏幕。他们的努力带来了一款高质量应用，在 80 万活跃用户中，实现了超过 99% 的无崩溃率。")]),t("a",{href:"https://blog.worldline.tech/2022/01/26/kotlin_multiplatform.html"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-meetup"},[t("img",{src:z,alt:"Meetup",height:"45"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Meetup"),i(" 通过利用 KMP 共享应用程序逻辑，实现了新特性的同时发布。现在，iOS 工程师与 Android 工程师一样积极地为共享 Kotlin 代码做出贡献，提升了团队生产力，并加强了团队间的协作。")]),t("a",{href:"https://www.youtube.com/watch?v=GtJBS7B3eyM"},"观看完整视频"),i(". ")],-1),t("li",{id:"case-study-down-dog"},[t("img",{src:D,alt:"Down Dog",height:"200"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:e,style:{},alt:"web",width:"28"}),t("img",{src:m,style:{},alt:"server",width:"28"}),t("p",null,[t("b",null,"Down Dog"),i(" 对其应用程序采用了“最大化共享 Kotlin”策略，为移动设备带来了类似工作室的瑜伽体验。他们在客户端和服务器之间共享各种辅助工具，并使用 KMP 共享了大部分客户端代码。他们的团队通过保留原生专用视图，显著提升了应用的开发速度。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/down-dog/"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-touchlab"},[t("img",{src:Q,alt:"Touchlab",height:"40"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:o,style:{},alt:"desktop",width:"28"}),t("img",{src:e,style:{},alt:"web",width:"28"}),t("p",null,[t("b",null,"Touchlab"),i(" 与采用和扩展 KMP 的组织合作。从初创公司到拥有数千万月活跃用户的跨国公司，Touchlab 的服务加速了 KMP 在生产环境中的实施，并降低了风险。他们也是值得信赖的开源贡献者，构建了广泛用于生产应用的关键工具。")]),t("a",{href:"https://touchlab.co/"},"了解更多关于 Touchlab 的信息"),i(". ")],-1),t("li",{id:"case-study-unflow"},[t("img",{src:V,alt:"Unflow",height:"40"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Unflow"),i(" 允许开发团队无需一行代码即可创建屏幕、流程和特性。使用 KMP 构建其移动 SDK 为团队节省了两个月的开发时间，并使他们能够交付高质量产品，同时不损害性能或原生能力。")]),t("a",{href:"https://www.unflow.com/post/kotlin-multiplatform-mobile"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-vmware"},[t("img",{src:G,alt:"VMware",height:"35"}),t("img",{src:s,alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"VMware"),i(" 在各个模块中使用 KMP，以一致的跨平台方式支持不同用例，贯穿其 Workspace ONE 生产力应用产品组合。")]),t("a",{href:"https://medium.com/vmware-end-user-computing/adopting-a-cross-platform-strategy-for-mobile-apps-59495ffa23b0"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-mirego"},[t("img",{src:L,alt:"Mirego",height:"35"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:o,style:{},alt:"desktop",width:"28"}),t("p",null,[t("b",null,"Mirego"),i(" 使用 KMP 在网页、iOS（iPhone 和 iPad）、tvOS、Android（设备和电视）和 Amazon Fire TV 上运行相同的业务逻辑。Mirego 与客户合作设计和开发新的数字产品。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/mirego/"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-fastwork"},[t("img",{src:T,alt:"Fastwork",height:"35"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Fastwork"),i(" 使用 KMP 用于其领域层和数据层，帮助他们在 iOS 和 Android 平台之间共享业务逻辑和 API 服务。Fastwork 提供一体化业务管理软件，帮助用户随时随地满足业务需求。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/fastwork/"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-careem"},[t("img",{src:J,alt:"careem",height:"35"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"Careem"),i("，一家叫车服务公司，在将其 Android 应用迁移到 Kotlin 的同时采用了 KMP。此举使他们能够在移动平台之间重用业务逻辑，并为他们交付 iOS 应用节省了大量时间。")]),t("a",{href:"https://www.youtube.com/watch?v=DcO9psUh4LI&source_ve_path=MjM4NTE&feature=emb_title"},"观看完整视频"),i(". ")],-1),t("li",{id:"case-study-netvirta"},[t("img",{src:R,alt:"NetVirta",height:"60"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[t("b",null,"NetVirta"),i(" 使用 KMP 在其应用之间共享数据、业务和演示逻辑。他们的应用组合提供了一系列解决方案，包括全身、足部和头部扫描应用，这些应用既可在店内使用，也可在家中由客户使用。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/netvirta/"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-memrise"},[t("img",{src:E,alt:"Memrise",width:"65"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:e,style:{},alt:"web",width:"28"}),t("p",null,[t("b",null,"Memrise"),i("，全球最受欢迎的语言学习应用之一，已将其 iOS、Android 和网页应用的逻辑逐步迁移到 KMP。这使他们能够避免在三种不同编程语言中重复代码，同时仍能提供完整的离线和原生 UI 体验。")]),t("a",{href:"https://engineering.memrise.com/kotlin-multiplatform-memrise-3764b5a4a0db"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-ice-rock"},[t("img",{src:q,alt:"IceRock",height:"35"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:e,style:{},alt:"web",width:"28"}),t("img",{src:o,style:{},alt:"desktop",width:"28"}),t("p",null,[t("b",null,"IceRock"),i(" 是一家外包公司，利用 KMP 为其客户开发应用。他们的应用组合涵盖了各种业务需求，并辅以大量开源 KMP 库，这些库增强了 KMP 开发流程。")]),t("a",{href:"https://medium.com/icerock"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-chalk-com"},[t("img",{src:H,alt:"Chalk.com",height:"35"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("p",null,[i("在 "),t("b",null,"Chalk.com"),i(" 的两款移动应用中，KMP 用于网络、离线缓存和业务逻辑。每款应用的 UI 都是平台特有的，但除此之外，他们应用中的几乎所有其他内容都可以与 KMP 共享。")]),t("a",{href:"https://kotlinlang.org/lp/multiplatform/case-studies/chalk/"},"阅读完整故事"),i(". ")],-1),t("li",{id:"case-study-meituan-rms"},[t("img",{src:X,alt:"Meituan RMS",height:"35"}),t("img",{src:s,style:{},alt:"android",width:"28"}),t("img",{src:l,style:{},alt:"ios",width:"28"}),t("img",{src:o,style:{},alt:"desktop",width:"28"}),t("p",null,[t("b",null,"Meituan"),i(" 自 2020 年以来使用 KMP 为其餐厅管理系统开发客户端应用程序，跨 Android、iOS 和 Windows 平台。此方法实现了数据、领域和演示层的代码共享，提升了新特性的开发效率，并确保了低端设备上的流畅用户交互。")]),t("a",{href:"https://www.bilibili.com/video/BV1es421T71C"},"观看完整视频"),i(". ")],-1)])),_:1})]),_:1})])}const ct=$(tt,[["render",it]]);export{dt as __pageData,ct as default};
