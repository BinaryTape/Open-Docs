import{_ as e}from"./chunks/icon-1.K8qzZaho.js";import{_ as h}from"./chunks/icon-2-todo.CF_tKCD9.js";import{_ as k}from"./chunks/icon-3-todo.Gx4op1du.js";import{_ as r}from"./chunks/icon-4-todo.GaeEmerm.js";import{_ as o}from"./chunks/icon-5-todo.CqROQ9Y8.js";import{_ as d}from"./chunks/icon-6-todo.Bq5TIrqo.js";import{_ as c}from"./chunks/icon-7-todo.D-C90RBD.js";import{_ as g,C as t,c as E,o as y,j as s,G as n,ag as F,a as i,w as u}from"./chunks/framework.Bksy39di.js";const $=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/kotlin-tour-hello-world.md","filePath":"zh-Hant/kotlin/kotlin-tour-hello-world.md","lastUpdated":1754307826000}'),m={name:"zh-Hant/kotlin/kotlin-tour-hello-world.md"};function C(b,a,v,_,A,D){const l=t("no-index"),p=t("tldr");return y(),E("div",null,[a[1]||(a[1]=s("h1",{id:"哈囉世界",tabindex:"-1"},[i("哈囉世界 "),s("a",{class:"header-anchor",href:"#哈囉世界","aria-label":'Permalink to "哈囉世界"'},"​")],-1)),n(l),n(p,null,{default:u(()=>a[0]||(a[0]=[s("p",null,[s("img",{src:e,width:"20",alt:"First step"}),i(),s("strong",null,"哈囉世界"),s("br"),s("img",{src:h,width:"20",alt:"Second step"}),i(),s("a",{href:"/zh-Hant/kotlin/kotlin-tour-basic-types"},"基本型別"),s("br"),s("img",{src:k,width:"20",alt:"Third step"}),i(),s("a",{href:"/zh-Hant/kotlin/kotlin-tour-collections"},"集合"),s("br"),s("img",{src:r,width:"20",alt:"Fourth step"}),i(),s("a",{href:"/zh-Hant/kotlin/kotlin-tour-control-flow"},"控制流程"),s("br"),s("img",{src:o,width:"20",alt:"Fifth step"}),i(),s("a",{href:"/zh-Hant/kotlin/kotlin-tour-functions"},"函式"),s("br"),s("img",{src:d,width:"20",alt:"Sixth step"}),i(),s("a",{href:"/zh-Hant/kotlin/kotlin-tour-classes"},"類別"),s("br"),s("img",{src:c,width:"20",alt:"Final step"}),i(),s("a",{href:"/zh-Hant/kotlin/kotlin-tour-null-safety"},"空值安全")],-1)])),_:1}),a[2]||(a[2]=F(`<p>這是一個簡單的程式，用於列印「Hello, world!」：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 哈囉，世界！</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在 Kotlin 中：</p><ul><li><code>fun</code> 用於宣告函式</li><li><code>main()</code> 函式是程式的起始點</li><li>函式的主體寫在花括號 <code>{}</code> 內</li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/println.html" target="_blank" rel="noreferrer"><code>println()</code></a> 和 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/print.html" target="_blank" rel="noreferrer"><code>print()</code></a> 函式將它們的引數列印到標準輸出</li></ul><p>函式是一組執行特定任務的指令。一旦你建立了一個函式，你就可以在需要執行該任務時隨時使用它，而無需再次編寫所有指令。函式將在接下來的幾個章節中詳細討論。在那之前，所有範例都將使用 <code>main()</code> 函式。</p><h2 id="變數" tabindex="-1">變數 <a class="header-anchor" href="#變數" aria-label="Permalink to &quot;變數&quot;">​</a></h2><p>所有程式都需要能夠儲存資料，而變數正是為此而生。在 Kotlin 中，你可以宣告：</p><ul><li>使用 <code>val</code> 宣告唯讀變數</li><li>使用 <code>var</code> 宣告可變變數</li></ul><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>一旦你為唯讀變數賦值，就不能再更改它。</p></div><p>若要賦值，請使用賦值運算子 <code>=</code>。</p><p>例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> popcorn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 有 5 盒爆米花</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hotdog </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 有 7 個熱狗</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 佇列中有 10 位顧客</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 一些顧客離開了佇列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    customers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(customers)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>變數可以在程式開始時於 <code>main()</code> 函式外部宣告。以這種方式宣告的變數被稱為在<strong>頂層</strong>宣告。</p></div><p>由於 <code>customers</code> 是一個可變變數，它的值在宣告後可以被重新賦值。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>我們建議預設將所有變數宣告為唯讀 (<code>val</code>)。只有在你確實需要時才使用可變變數 (<code>var</code>)。這樣，你就比較不會意外更改不應該更改的內容。</p></div><h2 id="字串範本" tabindex="-1">字串範本 <a class="header-anchor" href="#字串範本" aria-label="Permalink to &quot;字串範本&quot;">​</a></h2><p>了解如何將變數內容列印到標準輸出很有用。你可以使用<strong>字串範本</strong>來實現這點。你可以使用範本表達式來存取儲存在變數和其他物件中的資料，並將它們轉換為字串。字串值是由雙引號 <code>&quot;</code> 中的一系列字元組成。範本表達式總是以前置詞號 <code>$</code> 開頭。</p><p>若要在範本表達式中評估一段程式碼，請將程式碼放在前置詞號 <code>$</code> 後的花括號 <code>{}</code> 內。</p><p>例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;There are </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$customers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> customers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 有 10 位顧客</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;There are \${customers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} customers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 有 11 位顧客</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>欲了解更多資訊，請參閱 <a href="/zh-Hant/kotlin/strings#string-templates">字串範本</a>。</p><p>你會注意到變數沒有宣告任何型別。Kotlin 已經自行推斷出型別：<code>Int</code>。本導覽將在<a href="/zh-Hant/kotlin/kotlin-tour-basic-types">下一章</a>中解釋不同的 Kotlin 基本型別以及如何宣告它們。</p><h2 id="練習" tabindex="-1">練習 <a class="header-anchor" href="#練習" aria-label="Permalink to &quot;練習&quot;">​</a></h2><details class="details custom-block"><summary>練習</summary><p>完成程式碼，使程式將「Mary is 20 years old」列印到標準輸出：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Mary&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 在此編寫你的程式碼</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><details class="details custom-block"><summary>範例解答</summary><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Mary&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$age</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> years old&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details></details>`,24))])}const P=g(m,[["render",C]]);export{$ as __pageData,P as default};
