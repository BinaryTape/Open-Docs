import{_ as a}from"./chunks/compose-1610-ios-magnifier.YMZtwDpq.js";import{_ as o,c as r,o as i,ag as t}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"Compose Multiplatform 1.6.10-rc02 的新功能","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/whats-new-compose-eap.md","filePath":"zh-Hant/kmp/whats-new-compose-eap.md","lastUpdated":1755516278000}'),l={name:"zh-Hant/kmp/whats-new-compose-eap.md"};function s(n,e,p,c,d,h){return i(),r("div",null,e[0]||(e[0]=[t('<h1 id="compose-multiplatform-1-6-10-rc02-的新功能" tabindex="-1">Compose Multiplatform 1.6.10-rc02 的新功能 <a class="header-anchor" href="#compose-multiplatform-1-6-10-rc02-的新功能" aria-label="Permalink to &quot;Compose Multiplatform 1.6.10-rc02 的新功能&quot;">​</a></h1><p>以下是本次 EAP 功能發布的重點：</p><ul><li><a href="#support-for-multimodule-projects-with-compose-multiplatform-resources">支援帶有 Compose Multiplatform 資源的多模組專案</a></li><li><a href="#experimental-navigation-library">實驗性導航庫</a></li><li><a href="#lifecycle-library">帶有實驗性通用 ViewModel 的生命週期庫</a></li><li><a href="#known-issues">已知問題</a></li></ul><p>請參閱本次發布的完整變更列表 <a href="./https://github.com/JetBrains/compose-multiplatform/blob/master/CHANGELOG#1610-beta01-april-2024">在 GitHub 上</a>。</p><h2 id="依賴項" tabindex="-1">依賴項 <a class="header-anchor" href="#依賴項" aria-label="Permalink to &quot;依賴項&quot;">​</a></h2><ul><li>Gradle 外掛程式 <code>org.jetbrains.compose</code>，版本 1.6.10-rc01。基於 Jetpack Compose 庫： <ul><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-compiler#1.5.13" target="_blank" rel="noreferrer">Compiler 1.5.13</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-runtime#1.6.7" target="_blank" rel="noreferrer">Runtime 1.6.7</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-ui#1.6.7" target="_blank" rel="noreferrer">UI 1.6.7</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-foundation#1.6.7" target="_blank" rel="noreferrer">Foundation 1.6.7</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-material#1.6.7" target="_blank" rel="noreferrer">Material 1.6.7</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-material3#1.2.1" target="_blank" rel="noreferrer">Material3 1.2.1</a></li></ul></li><li>Lifecycle 庫 <code>org.jetbrains.androidx.lifecycle:lifecycle-*:2.8.0-rc02</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/lifecycle#2.8.0-rc01" target="_blank" rel="noreferrer">Jetpack Lifecycle 2.8.0-rc01</a>。</li><li>Navigation 庫 <code>org.jetbrains.androidx.navigation:navigation-*:2.7.0-alpha05</code>。基於 <a href="https://developer.android.com/jetpack/androidx/releases/navigation#2.7.7" target="_blank" rel="noreferrer">Jetpack Navigation 2.7.7</a>。</li></ul><h2 id="破壞性變更" tabindex="-1">破壞性變更 <a class="header-anchor" href="#破壞性變更" aria-label="Permalink to &quot;破壞性變更&quot;">​</a></h2><h3 id="kotlin-2-0-0-需要新的-compose-編譯器-gradle-外掛程式" tabindex="-1">Kotlin 2.0.0 需要新的 Compose 編譯器 Gradle 外掛程式 <a class="header-anchor" href="#kotlin-2-0-0-需要新的-compose-編譯器-gradle-外掛程式" aria-label="Permalink to &quot;Kotlin 2.0.0 需要新的 Compose 編譯器 Gradle 外掛程式&quot;">​</a></h3><p>從 Kotlin 2.0.0-RC2 開始，Compose Multiplatform 需要新的 Compose 編譯器 Gradle 外掛程式。 有關詳細資訊，請參閱<a href="./compose-compiler#migrating-a-compose-multiplatform-project">遷移指南</a>。</p><h2 id="跨平台" tabindex="-1">跨平台 <a class="header-anchor" href="#跨平台" aria-label="Permalink to &quot;跨平台&quot;">​</a></h2><h3 id="資源" tabindex="-1">資源 <a class="header-anchor" href="#資源" aria-label="Permalink to &quot;資源&quot;">​</a></h3><h4 id="穩定的資源庫" tabindex="-1">穩定的資源庫 <a class="header-anchor" href="#穩定的資源庫" aria-label="Permalink to &quot;穩定的資源庫&quot;">​</a></h4><p><a href="./compose-multiplatform-resources">資源庫 API</a> 的大部分內容現已視為穩定。</p><h4 id="支援帶有-compose-multiplatform-資源的多模組專案" tabindex="-1">支援帶有 Compose Multiplatform 資源的多模組專案 <a class="header-anchor" href="#支援帶有-compose-multiplatform-資源的多模組專案" aria-label="Permalink to &quot;支援帶有 Compose Multiplatform 資源的多模組專案&quot;">​</a></h4><p>從 Compose Multiplatform 1.6.10-beta01 開始， 您可以將資源儲存在任何 Gradle 模組和任何來源集 (source set) 中，並發布包含資源的專案和庫。</p><p>若要啟用多模組支援，請將您的專案更新至 Kotlin 2.0.0 或更新版本，以及 Gradle 7.6 或更新版本。</p><h4 id="多平台資源的配置-dsl" tabindex="-1">多平台資源的配置 DSL <a class="header-anchor" href="#多平台資源的配置-dsl" aria-label="Permalink to &quot;多平台資源的配置 DSL&quot;">​</a></h4><p>您現在可以微調專案中的 <code>Res</code> 類別生成：更改類別的模態 (modality) 和指定套件， 以及選擇生成條件：始終生成、永不生成或僅在明確依賴資源庫時生成。</p><p>有關詳細資訊，請參閱<a href="./compose-multiplatform-resources#configuration">文件部分</a>。</p><h4 id="用於生成資源-uri-的公開函式" tabindex="-1">用於生成資源 URI 的公開函式 <a class="header-anchor" href="#用於生成資源-uri-的公開函式" aria-label="Permalink to &quot;用於生成資源 URI 的公開函式&quot;">​</a></h4><p>新的 <code>getUri()</code> 函式允許您將資源的平台相關 URI 傳遞給外部庫， 以便它們可以直接存取檔案。 有關詳細資訊，請參閱<a href="./compose-multiplatform-resources#accessing-multiplatform-resources-from-external-libraries">文件</a>。</p><h4 id="字串資源的複數形式" tabindex="-1">字串資源的複數形式 <a class="header-anchor" href="#字串資源的複數形式" aria-label="Permalink to &quot;字串資源的複數形式&quot;">​</a></h4><p>您現在可以定義複數形式 (數量字串) 以及其他多平台字串資源。 有關詳細資訊，請參閱<a href="./compose-multiplatform-resources#plurals">文件</a>。</p><h4 id="支援三字母語系代碼" tabindex="-1">支援三字母語系代碼 <a class="header-anchor" href="#支援三字母語系代碼" aria-label="Permalink to &quot;支援三字母語系代碼&quot;">​</a></h4><p><a href="./compose-multiplatform-resources#language-and-regional-qualifiers">語言限定符</a> 現已支援用於語系代碼的 alpha-3 (ISO 639-2) 代碼。</p><h4 id="圖像和字體的實驗性位元組陣列函式" tabindex="-1">圖像和字體的實驗性位元組陣列函式 <a class="header-anchor" href="#圖像和字體的實驗性位元組陣列函式" aria-label="Permalink to &quot;圖像和字體的實驗性位元組陣列函式&quot;">​</a></h4><p>您可以試用兩個允許將字體和圖像作為位元組陣列獲取的函式： <code>getDrawableResourceBytes</code> 和 <code>getFontResourceBytes</code>。 這些函式旨在協助從第三方庫存取多平台資源。</p><p>有關詳細資訊，請參閱 <a href="https://github.com/JetBrains/compose-multiplatform/pull/4651" target="_blank" rel="noreferrer">pull request</a>。</p><h3 id="實驗性導航庫" tabindex="-1">實驗性導航庫 <a class="header-anchor" href="#實驗性導航庫" aria-label="Permalink to &quot;實驗性導航庫&quot;">​</a></h3><p>基於 Jetpack Compose 的通用導航庫現已可用。 有關詳細資訊，請參閱<a href="./compose-navigation-routing">文件</a>。</p><p>此版本的關鍵限制：</p><ul><li><a href="https://developer.android.com/guide/navigation/design/deep-link" target="_blank" rel="noreferrer">深度連結</a> (處理或追蹤它們) 尚未支援。</li><li><a href="https://developer.android.com/develop/ui/compose/libraries#handling_the_system_back_button" target="_blank" rel="noreferrer">BackHandler</a> 函式 和 <a href="https://developer.android.com/guide/navigation/custom-back/predictive-back-gesture" target="_blank" rel="noreferrer">預測性返回手勢</a> 僅在 Android 上支援。</li></ul><h3 id="生命週期庫" tabindex="-1">生命週期庫 <a class="header-anchor" href="#生命週期庫" aria-label="Permalink to &quot;生命週期庫&quot;">​</a></h3><p>基於 Jetpack lifecycle 的通用生命週期庫現已可用，有關詳細資訊，請參閱<a href="./compose-lifecycle">文件</a>。</p><p>該庫的引入主要是為了支援通用導航功能，但它也提供了實驗性的 跨平台 <code>ViewModel</code> 實作，並包含一個您可以為專案實作的通用 <code>LifecycleOwner</code> 介面。</p><p>Compose Multiplatform 也提供了通用的 <code>ViewModelStoreOwner</code> 實作。</p><h3 id="支援-kotlin-2-0-0" tabindex="-1">支援 Kotlin 2.0.0 <a class="header-anchor" href="#支援-kotlin-2-0-0" aria-label="Permalink to &quot;支援 Kotlin 2.0.0&quot;">​</a></h3><p>Kotlin 2.0.0-RC2 與新的 Compose 編譯器 Gradle 外掛程式一同發布。 若要將 Compose Multiplatform 與最新編譯器版本一起使用，請將外掛程式應用於專案中的模組 (有關詳細資訊，請參閱<a href="./compose-compiler#migrating-a-compose-multiplatform-project">遷移指南</a>)。</p><h2 id="桌面" tabindex="-1">桌面 <a class="header-anchor" href="#桌面" aria-label="Permalink to &quot;桌面&quot;">​</a></h2><h3 id="basictextfield2-的基本支援" tabindex="-1">BasicTextField2 的基本支援 <a class="header-anchor" href="#basictextfield2-的基本支援" aria-label="Permalink to &quot;BasicTextField2 的基本支援&quot;">​</a></h3><p><code>BasicTextField2</code> Compose 元件現在在桌面目標上獲得了基本級別的支援。 如果您的專案絕對需要它，或者想測試它，請使用它，但請記住可能存在未涵蓋的邊緣情況。 例如，<code>BasicTextField2</code> 目前不支援 IME 事件，因此您將無法使用虛擬鍵盤進行中文、日文或韓文輸入。</p><p>該元件的完整支援以及對其他平台的支援計劃在 Compose Multiplatform 1.7.0 版本中實現。</p><h3 id="dialogwindow-的-alwaysontop-旗標" tabindex="-1">DialogWindow 的 alwaysOnTop 旗標 <a class="header-anchor" href="#dialogwindow-的-alwaysontop-旗標" aria-label="Permalink to &quot;DialogWindow 的 alwaysOnTop 旗標&quot;">​</a></h3><p>為了避免您的對話方塊視窗被覆蓋，您現在可以為 <code>DialogWindow</code> 可組合項使用 <code>alwaysOnTop</code> 旗標。</p><p>有關詳細資訊，請參閱 <a href="https://github.com/JetBrains/compose-multiplatform-core/pull/1120" target="_blank" rel="noreferrer">pull request</a>。</p><h2 id="ios" tabindex="-1">iOS <a class="header-anchor" href="#ios" aria-label="Permalink to &quot;iOS&quot;">​</a></h2><h3 id="無障礙支援改進" tabindex="-1">無障礙支援改進 <a class="header-anchor" href="#無障礙支援改進" aria-label="Permalink to &quot;無障礙支援改進&quot;">​</a></h3><p>在此版本中：</p><ul><li>對話方塊和彈出視窗已正確整合無障礙功能，</li><li>使用 <code>UIKitView</code> 和 <code>UIKitViewController</code> 建立的互通視圖現在可透過 Accessibility Services 存取，</li><li>Accessibility API 支援 <code>LiveRegion</code> 語義，</li><li>支援<a href="https://github.com/JetBrains/compose-multiplatform-core/pull/1169" target="_blank" rel="noreferrer">無障礙捲動</a>，</li><li>支援 <code>HapticFeedback</code>。</li></ul><h3 id="適用於-ios-17-及更高版本的選取容器放大鏡" tabindex="-1">適用於 iOS 17 及更高版本的選取容器放大鏡 <a class="header-anchor" href="#適用於-ios-17-及更高版本的選取容器放大鏡" aria-label="Permalink to &quot;適用於 iOS 17 及更高版本的選取容器放大鏡&quot;">​</a></h3><p>Compose Multiplatform 在 iOS 上的選取容器現在可模擬原生放大工具。</p><p><img src="'+a+`" alt="iPhone 聊天應用程式的螢幕截圖，文字放大鏡處於啟用狀態" width="390"></p><h3 id="對話方塊置中的軟體鍵盤內嵌" tabindex="-1">對話方塊置中的軟體鍵盤內嵌 <a class="header-anchor" href="#對話方塊置中的軟體鍵盤內嵌" aria-label="Permalink to &quot;對話方塊置中的軟體鍵盤內嵌&quot;">​</a></h3><p><code>Dialog</code> 可組合項的行為現在與 Android 一致：當軟體鍵盤出現在螢幕上時，對話方塊會考慮應用程式視窗的有效高度進行置中。 可以使用 <code>DialogProperties.useSoftwareKeyboardInset</code> 屬性禁用此功能。</p><h2 id="網頁" tabindex="-1">網頁 <a class="header-anchor" href="#網頁" aria-label="Permalink to &quot;網頁&quot;">​</a></h2><h3 id="基本-ime-鍵盤支援" tabindex="-1">基本 IME 鍵盤支援 <a class="header-anchor" href="#基本-ime-鍵盤支援" aria-label="Permalink to &quot;基本 IME 鍵盤支援&quot;">​</a></h3><p>Compose Multiplatform 的網頁目標現在支援基本虛擬 (IME) 鍵盤。</p><h2 id="gradle-外掛程式" tabindex="-1">Gradle 外掛程式 <a class="header-anchor" href="#gradle-外掛程式" aria-label="Permalink to &quot;Gradle 外掛程式&quot;">​</a></h2><h3 id="修改-macos-最低版本的可能性" tabindex="-1">修改 macOS 最低版本的可能性 <a class="header-anchor" href="#修改-macos-最低版本的可能性" aria-label="Permalink to &quot;修改 macOS 最低版本的可能性&quot;">​</a></h3><p>在以前的版本中，macOS 應用程式無法在不包含 Intel 版本的情況下上傳到 App Store。 您現在可以在平台特定的 Compose Multiplatform 選項中設定應用程式的最低 macOS 版本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">desktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        nativeDistributions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            macOS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                minimumSystemVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;12.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>有關詳細資訊，請參閱 <a href="https://github.com/JetBrains/compose-multiplatform/pull/4271" target="_blank" rel="noreferrer">pull request</a>。</p><h3 id="支援-proguard-的-uber-jar-創建選項" tabindex="-1">支援 Proguard 的 uber JAR 創建選項 <a class="header-anchor" href="#支援-proguard-的-uber-jar-創建選項" aria-label="Permalink to &quot;支援 Proguard 的 uber JAR 創建選項&quot;">​</a></h3><p>您現在可以使用 ProGuard Gradle 任務創建 uber JAR (包含應用程式及其所有依賴項 JAR 的複雜套件)。</p><p>有關詳細資訊，請參閱 <a href="https://github.com/JetBrains/compose-multiplatform/pull/4136" target="_blank" rel="noreferrer">pull request</a>。</p><h2 id="已知問題" tabindex="-1">已知問題 <a class="header-anchor" href="#已知問題" aria-label="Permalink to &quot;已知問題&quot;">​</a></h2><h3 id="missingresourceexception" tabindex="-1">MissingResourceException <a class="header-anchor" href="#missingresourceexception" aria-label="Permalink to &quot;MissingResourceException&quot;">​</a></h3><p>將 Kotlin 版本從 1.9.x 更改為 2.0.0 (或反之) 後，您可能會遇到 <code>org.jetbrains.compose.resources.MissingResourceException: Missing resource with path: ...</code> 錯誤。 若要解決此問題，請刪除專案中的 <code>build</code> 目錄：這包括位於專案根目錄和模組資料夾中的資料夾。</p><h3 id="nativecodegeneratorexception" tabindex="-1">NativeCodeGeneratorException <a class="header-anchor" href="#nativecodegeneratorexception" aria-label="Permalink to &quot;NativeCodeGeneratorException&quot;">​</a></h3><p>某些專案的 iOS 編譯可能會因以下錯誤而失敗：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>org.jetbrains.kotlin.backend.konan.llvm.NativeCodeGeneratorException: Exception during generating code for following declaration: private fun $init_global()</span></span></code></pre></div><p>有關詳細資訊，請關注 <a href="https://github.com/JetBrains/compose-multiplatform/issues/4809" target="_blank" rel="noreferrer">GitHub 問題</a>。</p>`,72)]))}const k=o(l,[["render",s]]);export{f as __pageData,k as default};
