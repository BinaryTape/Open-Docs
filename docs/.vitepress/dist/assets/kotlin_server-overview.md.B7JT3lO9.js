import{_ as e,c as t,o as a,ag as o}from"./chunks/framework.Bksy39di.js";const g=JSON.parse('{"title":"Kotlin 用于服务端","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/server-overview.md","filePath":"kotlin/server-overview.md","lastUpdated":1754307826000}'),l={name:"kotlin/server-overview.md"};function n(i,r,s,p,h,k){return a(),t("div",null,r[0]||(r[0]=[o('<h1 id="kotlin-用于服务端" tabindex="-1">Kotlin 用于服务端 <a class="header-anchor" href="#kotlin-用于服务端" aria-label="Permalink to &quot;Kotlin 用于服务端&quot;">​</a></h1><p>Kotlin 非常适合开发服务端应用程序。它允许您编写简洁且富有表现力的代码，同时与现有的基于 Java 的技术栈完全兼容，所有这些都具有平滑的学习曲线：</p><ul><li><strong>表达能力</strong>：Kotlin 创新的语言特性，例如其对<a href="/kotlin/type-safe-builders">类型安全的构建器</a>和<a href="/kotlin/delegated-properties">委托属性</a>的支持，有助于构建强大且易于使用的抽象。</li><li><strong>可伸缩性</strong>：Kotlin 对<a href="/kotlin/coroutines-overview">协程</a>的支持有助于构建服务端应用程序，使其能够以适度的硬件要求伸缩到大量客户端。</li><li><strong>互操作性</strong>：Kotlin 与所有基于 Java 的框架完全兼容，因此您可以继续使用您熟悉的技术栈，同时获得更现代语言的优势。</li><li><strong>迁移</strong>：Kotlin 支持将大型代码库从 Java 渐进式迁移到 Kotlin。您可以开始用 Kotlin 编写新代码，同时将系统中较旧的部分保留在 Java 中。</li><li><strong>工具</strong>：除了总体的 IDE 支持很棒之外，Kotlin 还为 IntelliJ IDEA Ultimate 插件提供了框架特有的工具（例如，针对 Spring 和 Ktor）。</li><li><strong>学习曲线</strong>：对于 Java 开发者来说，开始使用 Kotlin 非常容易。Kotlin 插件中包含的自动化 Java 到 Kotlin 转换器有助于您的初步尝试。<a href="/kotlin/koans">Kotlin 心印</a>通过一系列交互式练习引导您掌握关键语言特性。像 <a href="https://ktor.io/" target="_blank" rel="noreferrer">Ktor</a> 这样的 Kotlin 特有的框架提供了一种简单、直接的方法，没有大型框架的隐藏复杂性。</li></ul><h2 id="用于-kotlin-服务端开发的框架" tabindex="-1">用于 Kotlin 服务端开发的框架 <a class="header-anchor" href="#用于-kotlin-服务端开发的框架" aria-label="Permalink to &quot;用于 Kotlin 服务端开发的框架&quot;">​</a></h2><p>以下是一些用于 Kotlin 的服务端框架示例：</p><ul><li><p><a href="https://spring.io" target="_blank" rel="noreferrer">Spring</a> 利用 Kotlin 的语言特性提供了<a href="https://spring.io/blog/2017/01/04/introducing-kotlin-support-in-spring-framework-5-0" target="_blank" rel="noreferrer">更简洁的 API</a>，从 5.0 版本开始。通过<a href="https://start.spring.io/#!language=kotlin" target="_blank" rel="noreferrer">在线项目生成器</a>，您可以快速生成一个新的 Kotlin 项目。</p></li><li><p><a href="https://github.com/kotlin/ktor" target="_blank" rel="noreferrer">Ktor</a> 是 JetBrains 构建的、用于使用 Kotlin 创建 Web 应用程序的框架，它利用协程实现高可伸缩性，并提供易于使用且惯用的 API。</p></li><li><p><a href="https://quarkus.io/guides/kotlin" target="_blank" rel="noreferrer">Quarkus</a> 为使用 Kotlin 提供了<a href="https://quarkus.io/guides/kotlin" target="_blank" rel="noreferrer">一流支持</a>。该框架是开源的，由 Red Hat 维护。Quarkus 专为 Kubernetes 从零开始构建，通过利用日益增长的数百个最佳库列表，提供了一个内聚的全栈框架。</p></li><li><p><a href="https://vertx.io" target="_blank" rel="noreferrer">Vert.x</a> 是一个用于在 JVM 上构建反应式 Web 应用程序的框架，为 Kotlin 提供了<a href="https://github.com/vert-x3/vertx-lang-kotlin" target="_blank" rel="noreferrer">专门的支持</a>，包括<a href="https://vertx.io/docs/vertx-core/kotlin/" target="_blank" rel="noreferrer">完整的文档</a>。</p></li><li><p><a href="https://github.com/kotlin/kotlinx.html" target="_blank" rel="noreferrer">kotlinx.html</a> 是一个 DSL，可用于在 Web 应用程序中构建 HTML。它可作为传统模板系统（例如 JSP 和 FreeMarker）的替代品。</p></li><li><p><a href="https://micronaut.io/" target="_blank" rel="noreferrer">Micronaut</a> 是一个现代的、基于 JVM 的全栈框架，用于构建模块化、易于测试的微服务和无服务器应用程序。它附带了许多有用的内置特性。</p></li><li><p><a href="https://http4k.org/" target="_blank" rel="noreferrer">http4k</a> 是一个功能工具包，占用空间小，用于 Kotlin HTTP 应用程序，完全使用纯 Kotlin 编写。该库基于 Twitter 的“您的服务器即函数”论文，将 HTTP 服务器和客户端都建模为可以组合在一起的简单 Kotlin 函数。</p></li><li><p><a href="https://javalin.io" target="_blank" rel="noreferrer">Javalin</a> 是一个非常轻量级的 Kotlin 和 Java Web 框架，支持 WebSockets、HTTP2 和异步请求。</p></li><li><p>持久化的可用选项包括直接 JDBC 访问、JPA，以及通过其 Java 驱动程序使用 NoSQL 数据库。对于 JPA，<a href="/kotlin/no-arg-plugin#jpa-support">kotlin-jpa 编译器插件</a>可使 Kotlin 编译的类适应框架的要求。</p></li></ul><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>您可以在 <a href="https://kotlin.link/resources" target="_blank" rel="noreferrer">https://kotlin.link/</a> 找到更多框架。</p></div><h2 id="部署-kotlin-服务端应用程序" tabindex="-1">部署 Kotlin 服务端应用程序 <a class="header-anchor" href="#部署-kotlin-服务端应用程序" aria-label="Permalink to &quot;部署 Kotlin 服务端应用程序&quot;">​</a></h2><p>Kotlin 应用程序可以部署到任何支持 Java Web 应用程序的主机，包括 Amazon Web Services、Google Cloud Platform 等。</p><p>要在 <a href="https://www.heroku.com" target="_blank" rel="noreferrer">Heroku</a> 上部署 Kotlin 应用程序，您可以按照<a href="https://devcenter.heroku.com/articles/getting-started-with-kotlin" target="_blank" rel="noreferrer">官方 Heroku 教程</a>进行操作。</p><p>AWS Labs 提供了一个<a href="https://github.com/awslabs/serverless-photo-recognition" target="_blank" rel="noreferrer">示例项目</a>，展示了如何使用 Kotlin 编写 <a href="https://aws.amazon.com/lambda/" target="_blank" rel="noreferrer">AWS Lambda</a> 函数。</p><p>Google Cloud Platform 提供了一系列将 Kotlin 应用程序部署到 GCP 的教程，包括针对 <a href="https://cloud.google.com/community/tutorials/kotlin-ktor-app-engine-java8" target="_blank" rel="noreferrer">Ktor 和 App Engine</a> 以及 <a href="https://cloud.google.com/community/tutorials/kotlin-springboot-app-engine-java8" target="_blank" rel="noreferrer">Spring 和 App Engine</a> 的教程。此外，还有一个用于部署 Kotlin Spring 应用程序的<a href="https://codelabs.developers.google.com/codelabs/cloud-spring-cloud-gcp-kotlin" target="_blank" rel="noreferrer">交互式代码实验</a>。</p><h2 id="在服务端使用-kotlin-的产品" tabindex="-1">在服务端使用 Kotlin 的产品 <a class="header-anchor" href="#在服务端使用-kotlin-的产品" aria-label="Permalink to &quot;在服务端使用 Kotlin 的产品&quot;">​</a></h2><p><a href="https://www.corda.net/" target="_blank" rel="noreferrer">Corda</a> 是一个开源分布式账本平台，它得到了主要银行的支持，并完全使用 Kotlin 构建。</p><p><a href="https://account.jetbrains.com/" target="_blank" rel="noreferrer">JetBrains Account</a> 是 JetBrains 负责整个许可证销售和验证过程的系统，它完全使用 Kotlin 编写，自 2015 年以来一直在生产环境中运行，没有出现重大问题。</p><p><a href="https://www.chess.com/" target="_blank" rel="noreferrer">Chess.com</a> 是一个致力于国际象棋和全球数百万热爱该游戏的玩家的网站。Chess.com 使用 Ktor 实现多个 HTTP 客户端的无缝配置。</p><p><a href="https://blog.developer.adobe.com/streamlining-server-side-app-development-with-kotlin-be8cf9d8b61a" target="_blank" rel="noreferrer">Adobe</a> 的工程师使用 Kotlin 进行服务端应用开发，并使用 Ktor 在 Adobe Experience Platform 中进行原型开发，该平台使组织能够在应用数据科学和机器学习之前集中和标准化客户数据。</p><h2 id="后续步骤" tabindex="-1">后续步骤 <a class="header-anchor" href="#后续步骤" aria-label="Permalink to &quot;后续步骤&quot;">​</a></h2><ul><li>要对该语言有更深入的介绍，请查看本站上的 Kotlin 文档和 <a href="/kotlin/koans">Kotlin 心印</a>。</li><li>探索如何<a href="https://ktor.io/docs/server-create-a-new-project.html" target="_blank" rel="noreferrer">使用 Ktor 构建异步服务器应用程序</a>，Ktor 是一个使用 Kotlin 协程的框架。</li><li>观看网络研讨会“<a href="https://micronaut.io/2020/12/03/webinar-micronaut-for-microservices-with-kotlin/" target="_blank" rel="noreferrer">使用 Kotlin 的 Micronaut 微服务</a>”，并查阅一份详细<a href="https://guides.micronaut.io/latest/micronaut-kotlin-extension-fns.html" target="_blank" rel="noreferrer">指南</a>，其中展示了如何在 Micronaut 框架中使用 <a href="/kotlin/extensions#extension-functions">Kotlin 扩展函数</a>。</li><li>http4k 提供了 <a href="https://toolbox.http4k.org" target="_blank" rel="noreferrer">CLI</a> 来生成完整的项目，以及一个<a href="https://start.http4k.org" target="_blank" rel="noreferrer">起始版本库</a>来通过一个 bash 命令使用 GitHub、Travis 和 Heroku 生成完整的 CD 流水线。</li><li>想要从 Java 迁移到 Kotlin？了解如何在 <a href="/kotlin/java-to-kotlin-idioms-strings">Java 和 Kotlin 中处理字符串的典型任务</a>。</li></ul>',19)]))}const c=e(l,[["render",n]]);export{g as __pageData,c as default};
