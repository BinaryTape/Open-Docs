import{_ as o,c as i,o as t,ag as a}from"./chunks/framework.Bksy39di.js";const k=JSON.parse('{"title":"코루틴 가이드","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/coroutines-guide.md","filePath":"ko/kotlin/coroutines-guide.md","lastUpdated":1754307826000}'),l={name:"ko/kotlin/coroutines-guide.md"};function r(n,e,s,c,d,u){return t(),i("div",null,e[0]||(e[0]=[a('<h1 id="코루틴-가이드" tabindex="-1">코루틴 가이드 <a class="header-anchor" href="#코루틴-가이드" aria-label="Permalink to &quot;코루틴 가이드&quot;">​</a></h1><p>Kotlin은 다른 라이브러리가 코루틴을 활용할 수 있도록 표준 라이브러리에 최소한의 저수준(low-level) API만을 제공합니다. 비슷한 기능을 가진 다른 많은 언어들과 달리, Kotlin에서는 <code>async</code>와 <code>await</code>가 키워드가 아니며, 심지어 표준 라이브러리의 일부도 아닙니다. 더 나아가, Kotlin의 <em>정지 함수(suspending function)</em> 개념은 퓨처(futures)와 프로미스(promises)보다 비동기 작업을 위한 더 안전하고 오류 발생 가능성이 적은 추상화를 제공합니다.</p><p><code>kotlinx.coroutines</code>는 JetBrains에서 개발한 코루틴용으로 풍부한 기능을 제공하는 라이브러리입니다. 이 가이드에서 다루는 <code>launch</code>, <code>async</code> 등을 포함하여 코루틴을 활성화하는 여러 고수준 기본 요소(primitives)를 포함하고 있습니다.</p><p>이 가이드는 <code>kotlinx.coroutines</code>의 핵심 기능에 대한 내용을 여러 예제와 함께 다양한 주제로 나누어 설명합니다.</p><p>코루틴을 사용하고 이 가이드의 예제를 따라 하려면, <a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/README.md#using-in-your-projects" target="_blank" rel="noreferrer">프로젝트 README</a>에 설명된 대로 <code>kotlinx-coroutines-core</code> 모듈에 대한 의존성(dependency)을 추가해야 합니다.</p><h2 id="목차" tabindex="-1">목차 <a class="header-anchor" href="#목차" aria-label="Permalink to &quot;목차&quot;">​</a></h2><ul><li><a href="/ko/kotlin/coroutines-basics">코루틴 기초</a></li><li><a href="/ko/kotlin/coroutines-and-channels">튜토리얼: 코루틴 및 채널 소개</a></li><li><a href="/ko/kotlin/cancellation-and-timeouts">취소 및 타임아웃</a></li><li><a href="/ko/kotlin/composing-suspending-functions">정지 함수 조합하기</a></li><li><a href="/ko/kotlin/coroutine-context-and-dispatchers">코루틴 컨텍스트 및 디스패처</a></li><li><a href="/ko/kotlin/flow">비동기 Flow</a></li><li><a href="/ko/kotlin/channels">채널</a></li><li><a href="/ko/kotlin/exception-handling">코루틴 예외 처리</a></li><li><a href="/ko/kotlin/shared-mutable-state-and-concurrency">공유 가변 상태 및 동시성</a></li><li><a href="/ko/kotlin/select-expression">Select 표현식 (실험적)</a></li><li><a href="/ko/kotlin/debug-coroutines-with-idea">튜토리얼: IntelliJ IDEA를 사용하여 코루틴 디버그</a></li><li><a href="/ko/kotlin/debug-flow-with-idea">튜토리얼: IntelliJ IDEA를 사용하여 Kotlin Flow 디버그</a></li></ul><h2 id="추가-자료" tabindex="-1">추가 자료 <a class="header-anchor" href="#추가-자료" aria-label="Permalink to &quot;추가 자료&quot;">​</a></h2><ul><li><a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/ui/coroutines-guide-ui.md" target="_blank" rel="noreferrer">코루틴을 활용한 UI 프로그래밍 가이드</a></li><li><a href="https://github.com/Kotlin/KEEP/blob/master/proposals/coroutines.md" target="_blank" rel="noreferrer">코루틴 설계 문서 (KEEP)</a></li><li><a href="https://kotlinlang.org/api/kotlinx.coroutines/" target="_blank" rel="noreferrer">전체 kotlinx.coroutines API 참조</a></li><li><a href="https://developer.android.com/kotlin/coroutines/coroutines-best-practices" target="_blank" rel="noreferrer">Android에서 코루틴 모범 사례</a></li><li><a href="https://developer.android.com/kotlin/coroutines/additional-resources" target="_blank" rel="noreferrer">Kotlin 코루틴 및 Flow를 위한 추가 Android 자료</a></li></ul>',9)]))}const p=o(l,[["render",r]]);export{k as __pageData,p as default};
