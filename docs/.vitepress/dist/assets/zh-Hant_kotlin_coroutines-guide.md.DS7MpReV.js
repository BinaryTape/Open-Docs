import{_ as t,c as o,o as a,ag as i}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"協程指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/coroutines-guide.md","filePath":"zh-Hant/kotlin/coroutines-guide.md","lastUpdated":1754307826000}'),n={name:"zh-Hant/kotlin/coroutines-guide.md"};function r(l,e,s,c,d,h){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="協程指南" tabindex="-1">協程指南 <a class="header-anchor" href="#協程指南" aria-label="Permalink to &quot;協程指南&quot;">​</a></h1><p>Kotlin 在其標準函式庫中僅提供最低限度的低階 API，以便其他函式庫能夠利用協程。與許多其他具有類似功能的語言不同，<code>async</code> 和 <code>await</code> 並非 Kotlin 的關鍵字，甚至不是其標準函式庫的一部分。此外，Kotlin 的 <em>掛起函數</em> 概念為非同步操作提供了比 futures 和 promises 更安全且不易出錯的抽象。</p><p><code>kotlinx.coroutines</code> 是 JetBrains 開發的一個豐富的協程函式庫。它包含本指南所涵蓋的多種高階協程啟用原語，包括 <code>launch</code>、<code>async</code> 及其他。</p><p>這是一份關於 <code>kotlinx.coroutines</code> 核心功能的指南，其中包含一系列範例，並分為不同的主題。</p><p>為了使用協程並遵循本指南中的範例，您需要新增對 <code>kotlinx-coroutines-core</code> 模組的依賴，如專案 README 中所述：<a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/README.md#using-in-your-projects" target="_blank" rel="noreferrer">使用說明</a>。</p><h2 id="目錄" tabindex="-1">目錄 <a class="header-anchor" href="#目錄" aria-label="Permalink to &quot;目錄&quot;">​</a></h2><ul><li><a href="/zh-Hant/kotlin/coroutines-basics">協程基礎</a></li><li><a href="/zh-Hant/kotlin/coroutines-and-channels">教學：協程與通道入門</a></li><li><a href="/zh-Hant/kotlin/cancellation-and-timeouts">取消與逾時</a></li><li><a href="/zh-Hant/kotlin/composing-suspending-functions">組合掛起函數</a></li><li><a href="/zh-Hant/kotlin/coroutine-context-and-dispatchers">協程上下文與調度器</a></li><li><a href="/zh-Hant/kotlin/flow">非同步 Flow</a></li><li><a href="/zh-Hant/kotlin/channels">通道</a></li><li><a href="/zh-Hant/kotlin/exception-handling">協程異常處理</a></li><li><a href="/zh-Hant/kotlin/shared-mutable-state-and-concurrency">共享可變狀態與並發</a></li><li><a href="/zh-Hant/kotlin/select-expression">Select 表達式 (實驗性功能)</a></li><li><a href="/zh-Hant/kotlin/debug-coroutines-with-idea">教學：使用 IntelliJ IDEA 調試協程</a></li><li><a href="/zh-Hant/kotlin/debug-flow-with-idea">教學：使用 IntelliJ IDEA 調試 Kotlin Flow</a></li></ul><h2 id="參考資料" tabindex="-1">參考資料 <a class="header-anchor" href="#參考資料" aria-label="Permalink to &quot;參考資料&quot;">​</a></h2><ul><li><a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/ui/coroutines-guide-ui.md" target="_blank" rel="noreferrer">使用協程進行 UI 程式設計指南</a></li><li><a href="https://github.com/Kotlin/KEEP/blob/master/proposals/coroutines.md" target="_blank" rel="noreferrer">協程設計文件 (KEEP)</a></li><li><a href="https://kotlinlang.org/api/kotlinx.coroutines/" target="_blank" rel="noreferrer">完整的 kotlinx.coroutines API 參考</a></li><li><a href="https://developer.android.com/kotlin/coroutines/coroutines-best-practices" target="_blank" rel="noreferrer">Android 中協程的最佳實踐</a></li><li><a href="https://developer.android.com/kotlin/coroutines/additional-resources" target="_blank" rel="noreferrer">Kotlin 協程與 Flow 的額外 Android 資源</a></li></ul>',9)]))}const p=t(n,[["render",r]]);export{f as __pageData,p as default};
