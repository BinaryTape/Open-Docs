import{_ as p,C as t,c as o,o as d,j as a,G as e,ag as k,a as i,w as l}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-fatjar.md","filePath":"ja/ktor/server-fatjar.md","lastUpdated":1755457140000}'),h={name:"ja/ktor/server-fatjar.md"};function c(u,s,g,E,b,m){const n=t("tldr"),r=t("link-summary");return d(),o("div",null,[s[2]||(s[2]=a("h1",{id:"ktor-gradleプラグインを使用してファットjarを作成する",tabindex:"-1"},[i("Ktor Gradleプラグインを使用してファットJARを作成する "),a("a",{class:"header-anchor",href:"#ktor-gradleプラグインを使用してファットjarを作成する","aria-label":'Permalink to "Ktor Gradleプラグインを使用してファットJARを作成する"'},"​")],-1)),e(n,null,{default:l(()=>s[0]||(s[0]=[a("p",null,[a("b",null,"コード例"),i(": "),a("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/deployment-ktor-plugin"}," deployment-ktor-plugin ")],-1)])),_:1}),e(r,null,{default:l(()=>s[1]||(s[1]=[i("Ktor Gradleプラグインを使用して実行可能なファットJARを作成し、実行する方法を学ぶ。")])),_:1}),s[3]||(s[3]=k(`<p><a href="https://github.com/ktorio/ktor-build-plugins" target="_blank" rel="noreferrer">Ktor Gradleプラグイン</a>を使用すると、すべてのコード依存関係を含む実行可能なJAR (ファットJAR) を作成して実行できます。</p><h2 id="configure-plugin" tabindex="-1">Ktorプラグインの設定 <a class="header-anchor" href="#configure-plugin" aria-label="Permalink to &quot;Ktorプラグインの設定 {id=&quot;configure-plugin&quot;}&quot;">​</a></h2><p>ファットJARをビルドするには、まずKtorプラグインを設定する必要があります。</p><ol><li><p><code>build.gradle.kts</code>ファイルを開き、<code>plugins</code>ブロックにプラグインを追加します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.ktor.plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.2.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><a href="./server-dependencies#create-entry-point">メインアプリケーションクラス</a>が設定されていることを確認してください。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mainClass.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example.ApplicationKt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>オプションで、<code>ktor.fatJar</code>エクステンションを使用して、生成されるファットJARの名前を設定できます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ktor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    fatJar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        archiveFileName.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fat.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>Ktor GradleプラグインをKotlin Multiplatform Gradleプラグインと一緒に適用すると、ファットJAR作成機能は自動的に無効になります。 それらを一緒に使用できるようにするには: 1. 上記のようにKtor Gradleプラグインが適用されたJVM専用プロジェクトを作成します。 2. そのJVM専用プロジェクトにKotlin Multiplatformプロジェクトを依存関係として追加します。 この回避策で問題が解決しない場合は、<a href="https://youtrack.jetbrains.com/issue/KTOR-8464" target="_blank" rel="noreferrer">KTOR-8464</a>にコメントを残してお知らせください。</p></div><h2 id="build" tabindex="-1">ファットJARのビルドと実行 <a class="header-anchor" href="#build" aria-label="Permalink to &quot;ファットJARのビルドと実行 {id=&quot;build&quot;}&quot;">​</a></h2><p>Ktorプラグインは、ファットJARを作成および実行するための以下のタスクを提供します。</p><ul><li><code>buildFatJar</code>: プロジェクトとランタイム依存関係を組み合わせたJARをビルドします。このビルドが完了すると、<code>build/libs</code>ディレクトリに<code>***-all.jar</code>ファイルが表示されます。</li><li><code>runFatJar</code>: プロジェクトのファットJARをビルドして実行します。</li></ul><blockquote><p>生成されたJARをProGuardを使用して最小化する方法については、<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/proguard" target="_blank" rel="noreferrer">proguard</a>サンプルを参照してください。</p></blockquote>`,9))])}const F=p(h,[["render",c]]);export{f as __pageData,F as default};
