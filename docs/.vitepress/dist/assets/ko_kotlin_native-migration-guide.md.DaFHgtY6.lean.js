import{_ as b,C as l,c as y,o as v,ag as p,G as a,j as e,w as i,a as n}from"./chunks/framework.Bksy39di.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/native-migration-guide.md","filePath":"ko/kotlin/native-migration-guide.md","lastUpdated":1755514048000}'),C={name:"ko/kotlin/native-migration-guide.md"};function x(q,t,E,F,_,T){const c=l("list"),u=l("def"),k=l("deflist"),g=l("show-structure"),o=l("include"),m=l("tldr"),f=l("link-summary"),s=l("tab"),r=l("emphasis"),d=l("snippet"),h=l("tabs");return v(),y("div",null,[t[34]||(t[34]=p("",11)),a(k,{style:{}},{default:i(()=>[a(u,{title:"kotlinx.coroutines"},{default:i(()=>[t[1]||(t[1]=e("p",null,[n("버전 1.6.0 이상으로 업데이트하세요. "),e("code",null,"native-mt"),n(" 접미사가 있는 버전은 사용하지 마세요.")],-1)),t[2]||(t[2]=e("p",null,"새로운 메모리 관리자와 관련된 몇 가지 특이 사항도 염두에 두어야 합니다:",-1)),a(c,null,{default:i(()=>t[0]||(t[0]=[e("li",null,"고정이 필요하지 않으므로 모든 공통 프리미티브(채널, 플로우, 코루틴)는 Worker 경계를 통해 작동합니다.",-1),e("li",null,[e("code",null,"Dispatchers.Default"),n("는 Linux 및 Windows에서는 Worker 풀로 지원되고 Apple 대상에서는 전역 큐로 지원됩니다.")],-1),e("li",null,[n("Worker로 지원되는 코루틴 디스패처를 생성하려면 "),e("code",null,"newSingleThreadContext"),n("를 사용하세요.")],-1),e("li",null,[e("code",null,"N"),n("개의 Worker 풀로 지원되는 코루틴 디스패처를 생성하려면 "),e("code",null,"newFixedThreadPoolContext"),n("를 사용하세요.")],-1),e("li",null,[e("code",null,"Dispatchers.Main"),n("은 Darwin에서는 메인 큐로 지원되고 다른 플랫폼에서는 독립 Worker로 지원됩니다.")],-1)])),_:1})]),_:1}),a(u,{title:"Ktor"},{default:i(()=>t[3]||(t[3]=[n(" 버전 2.0 이상으로 업데이트하세요. ")])),_:1}),a(u,{title:"다른 의존성"},{default:i(()=>t[4]||(t[4]=[e("p",null,"대부분의 라이브러리는 변경 없이 작동해야 하지만, 예외가 있을 수 있습니다.",-1),e("p",null,"의존성을 최신 버전으로 업데이트하고, 레거시 및 새로운 메모리 관리자를 위한 라이브러리 버전 간에 차이가 없는지 확인하세요.",-1)])),_:1})]),_:1}),t[35]||(t[35]=p("",3)),a(g,{for:"chapter",depth:"2"}),a(m,null,{default:i(()=>[a(o,{from:"lib.topic","element-id":"download_example"})]),_:1}),a(f,null,{default:i(()=>t[5]||(t[5]=[n(" Learn how to create your own custom client plugin. ")])),_:1}),t[36]||(t[36]=p("",13)),a(h,null,{default:i(()=>[a(s,{title:"Basic hooks"},{default:i(()=>[e("table",null,[t[6]||(t[6]=e("tr",null,[e("td",null," Handler "),e("td",null," Description ")],-1)),a(o,{from:"client-custom-plugins.md","element-id":"onRequest"}),a(o,{from:"client-custom-plugins.md","element-id":"transformRequestBody"}),a(o,{from:"client-custom-plugins.md","element-id":"onResponse"}),a(o,{from:"client-custom-plugins.md","element-id":"transformResponseBody"}),a(o,{from:"client-custom-plugins.md","element-id":"onClose"})])]),_:1}),a(s,{title:"All hooks"},{default:i(()=>[e("table",null,[t[27]||(t[27]=e("tr",null,[e("td",null," Handler "),e("td",null," Description ")],-1)),t[28]||(t[28]=e("tr",null,[e("td",null,[e("code",null,"on(SetupRequest)")]),e("td",null,[n(" The "),e("code",null,"SetupRequest"),n(" hook is executed first in request processing. ")])],-1)),a(d,{id:"onRequest"},{default:i(()=>[e("tr",null,[t[9]||(t[9]=e("td",null,[e("code",null,"onRequest")],-1)),e("td",null,[t[8]||(t[8]=e("p",null,[n(" This handler is executed for each HTTP "),e("a",{href:"/ko/kotlin/client-requests"},"request"),n(" and allows you to modify it. ")],-1)),e("p",null,[a(r,null,{default:i(()=>t[7]||(t[7]=[n(" Example: "),e("a",{anchor:"example-custom-header"},null,-1)])),_:1})])])])]),_:1}),a(d,{id:"transformRequestBody"},{default:i(()=>[e("tr",null,[t[12]||(t[12]=e("td",null,[e("code",null,"transformRequestBody")],-1)),e("td",null,[t[11]||(t[11]=e("p",null,[n(" Allows you to transform a "),e("a",{href:"/ko/kotlin/client-requests",anchor:"body"},"request body"),n(". In this handler, you need to serialize the body into "),e("a",{href:"https://api.ktor.io/ktor-http/io.ktor.http.content/-outgoing-content/index.html"},"OutgoingContent"),n(" (for example, "),e("code",null,"TextContent"),n(", "),e("code",null,"ByteArrayContent"),n(", or "),e("code",null,"FormDataContent"),n(") or return "),e("code",null,"null"),n(" if your transformation is not applicable. ")],-1)),e("p",null,[a(r,null,{default:i(()=>t[10]||(t[10]=[n(" Example: "),e("a",{anchor:"data-transformation"},null,-1)])),_:1})])])])]),_:1}),e("tr",null,[t[15]||(t[15]=e("td",null,[e("code",null,"on(Send)")],-1)),e("td",null,[t[14]||(t[14]=e("p",null,[n(" The "),e("code",null,"Send"),n(" hook provides the ability to inspect a response and initiate additional requests if needed. This might be useful for handling redirects, retrying requests, authentication, and so on. ")],-1)),e("p",null,[a(r,null,{default:i(()=>t[13]||(t[13]=[n(" Example: "),e("a",{anchor:"authentication"},null,-1)])),_:1})])])]),e("tr",null,[t[19]||(t[19]=e("td",null,[e("code",null,"on(SendingRequest)")],-1)),e("td",null,[t[17]||(t[17]=e("p",null,[n(" The "),e("code",null,"SendingRequest"),n(" hook is executed for every request, even if it's not initiated by a user. For example, if a request results in a redirect, the "),e("code",null,"onRequest"),n(" handler will be executed only for the original request, while "),e("code",null,"on(SendingRequest)"),n(" will be executed for both original and redirected requests. Similarly, if you used "),e("code",null,"on(Send)"),n(" to initiate an additional request, handlers will be ordered as follows: ")],-1)),t[18]||(t[18]=e("div",{class:"language-Console vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"Console"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"--> onRequest")]),n(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"--> on(Send)")]),n(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"--> on(SendingRequest)")]),n(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"<-- onResponse")]),n(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"--> on(SendingRequest)")]),n(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"<-- onResponse")])])])],-1)),e("p",null,[a(r,null,{default:i(()=>t[16]||(t[16]=[n(" Examples: "),e("a",{anchor:"example-log-headers"},null,-1),n(", "),e("a",{anchor:"example-response-time"},null,-1)])),_:1})])])]),a(d,{id:"onResponse"},{default:i(()=>[e("tr",null,[t[22]||(t[22]=e("td",null,[e("code",null,"onResponse")],-1)),e("td",null,[t[21]||(t[21]=e("p",null,[n(" This handler is executed for each incoming HTTP "),e("a",{href:"/ko/kotlin/client-requests"},"response"),n(" and allows you to inspect it in various ways: log a response, save cookies, and so on. ")],-1)),e("p",null,[a(r,null,{default:i(()=>t[20]||(t[20]=[n(" Examples: "),e("a",{anchor:"example-log-headers"},null,-1),n(", "),e("a",{anchor:"example-response-time"},null,-1)])),_:1})])])])]),_:1}),a(d,{id:"transformResponseBody"},{default:i(()=>[e("tr",null,[t[25]||(t[25]=e("td",null,[e("code",null,"transformResponseBody")],-1)),e("td",null,[t[24]||(t[24]=e("p",null,[n(" Allows you to transform a "),e("a",{href:"/ko/kotlin/client-responses",anchor:"body"},"response body"),n(". This handler is invoked for each "),e("code",null,"HttpResponse.body"),n(" call. You need to deserialize the body into an instance of "),e("code",null,"requestedType"),n(" or return "),e("code",null,"null"),n(" if your transformation is not applicable. ")],-1)),e("p",null,[a(r,null,{default:i(()=>t[23]||(t[23]=[n(" Example: "),e("a",{anchor:"data-transformation"},null,-1)])),_:1})])])])]),_:1}),a(d,{id:"onClose"},{default:i(()=>t[26]||(t[26]=[e("tr",null,[e("td",null,[e("code",null,"onClose")]),e("td",null,[n(" Allows you to clean resources allocated by this plugin. This handler is called when the client is "),e("a",{href:"/ko/kotlin/client-create-and-configure",anchor:"close-client"},"closed"),n(". ")])],-1)])),_:1})])]),_:1})]),_:1}),t[37]||(t[37]=p("",20)),a(h,null,{default:i(()=>[a(s,{title:"DataTransformation.kt"},{default:i(()=>t[29]||(t[29]=[e("div",{class:"language-kotlin vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"kotlin"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"})])])],-1)])),_:1}),a(s,{title:"Application.kt"},{default:i(()=>t[30]||(t[30]=[e("div",{class:"language-kotlin vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"kotlin"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"})])])],-1)])),_:1}),a(s,{title:"User.kt"},{default:i(()=>t[31]||(t[31]=[e("div",{class:"language-kotlin vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"kotlin"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"})])])],-1)])),_:1})]),_:1}),t[38]||(t[38]=e("p",null,[n("You can find the full example here: "),e("a",{href:"https://github.com/ktorio/ktor-documentation/tree/%25ktor_version%25/codeSnippets/snippets/client-custom-plugin-data-transformation",target:"_blank",rel:"noreferrer"},"client-custom-plugin-data-transformation"),n(".")],-1)),t[39]||(t[39]=e("h3",{id:"authentication",tabindex:"-1"},[n("Authentication "),e("a",{class:"header-anchor",href:"#authentication","aria-label":'Permalink to "Authentication {id="authentication"}"'},"​")],-1)),t[40]||(t[40]=e("p",null,[n("A sample Ktor project showing how to use the "),e("code",null,"on(Send)"),n(" hook to add a bearer token to the "),e("code",null,"Authorization"),n(" header if an unauthorized response is received from the server:")],-1)),a(h,null,{default:i(()=>[a(s,{title:"Auth.kt"},{default:i(()=>t[32]||(t[32]=[e("div",{class:"language-kotlin vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"kotlin"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"})])])],-1)])),_:1}),a(s,{title:"Application.kt"},{default:i(()=>t[33]||(t[33]=[e("div",{class:"language-kotlin vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"kotlin"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"})])])],-1)])),_:1})]),_:1}),t[41]||(t[41]=p("",3))])}const P=b(C,[["render",x]]);export{A as __pageData,P as default};
