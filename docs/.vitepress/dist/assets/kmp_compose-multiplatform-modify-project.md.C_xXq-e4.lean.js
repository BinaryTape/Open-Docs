import{_ as o}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as d}from"./chunks/icon-2-done.e1N9yMQF.js";import{_ as g}from"./chunks/icon-3.DqpDG4W7.js";import{_ as y}from"./chunks/icon-4-todo.DqbNYzPe.js";import{_ as m}from"./chunks/gradle-sync.fCQp85Nh.js";import{_ as F,a as c,b as u,c as C}from"./chunks/first-compose-project-on-web-2.Af5ifRSk.js";import{_ as f,C as t,c as b,o as B,j as i,G as a,ag as e,a as n,w as l}from"./chunks/framework.Bksy39di.js";const J=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/compose-multiplatform-modify-project.md","filePath":"kmp/compose-multiplatform-modify-project.md","lastUpdated":1755516278000}'),A={name:"kmp/compose-multiplatform-modify-project.md"};function D(v,s,x,_,M,w){const k=t("secondary-label"),h=t("Links"),r=t("tldr"),p=t("TabItem"),E=t("Tabs");return B(),b("div",null,[s[21]||(s[21]=i("h1",{id:"修改项目",tabindex:"-1"},[n("修改项目 "),i("a",{class:"header-anchor",href:"#修改项目","aria-label":'Permalink to "修改项目"'},"​")],-1)),a(k,{ref:"IntelliJ IDEA"},null,512),a(k,{ref:"Android Studio"},null,512),a(r,null,{default:l(()=>[s[15]||(s[15]=i("p",null,"本教程使用 IntelliJ IDEA，但你也可以在 Android Studio 中进行操作 — 这两个 IDE 共享相同的核心功能性以及 Kotlin Multiplatform 支持。",-1)),s[16]||(s[16]=i("br",null,null,-1)),s[17]||(s[17]=i("p",null,[n("这是"),i("strong",null,"使用共享逻辑和 UI 创建 Compose Multiplatform 应用"),n("教程的第三部分。在继续之前，请确保你已完成了之前的步骤。")],-1)),i("p",null,[s[2]||(s[2]=i("img",{src:o,width:"20",alt:"第一步"},null,-1)),s[3]||(s[3]=n()),a(h,{href:"/kmp/compose-multiplatform-create-first-app",summary:"本教程使用 IntelliJ IDEA，但你也可以在 Android Studio 中进行操作 — 这两个 IDE 共享相同的核心功能性以及 Kotlin Multiplatform 支持。这是使用共享逻辑和 UI 创建 Compose Multiplatform 应用教程的第一部分。创建你的 Compose Multiplatform 应用 探索可组合代码 修改项目 创建你自己的应用程序"},{default:l(()=>s[0]||(s[0]=[n("创建你的 Compose Multiplatform 应用")])),_:1}),s[4]||(s[4]=i("br",null,null,-1)),s[5]||(s[5]=i("img",{src:d,width:"20",alt:"第二步"},null,-1)),s[6]||(s[6]=n()),a(h,{href:"/kmp/compose-multiplatform-explore-composables",summary:"本教程使用 IntelliJ IDEA，但你也可以在 Android Studio 中进行操作 — 这两个 IDE 共享相同的核心功能性以及 Kotlin Multiplatform 支持。这是使用共享逻辑和 UI 创建 Compose Multiplatform 应用教程的第二部分。在继续之前，请确保你已完成了之前的步骤。创建你的 Compose Multiplatform 应用 探索可组合代码 修改项目 创建你自己的应用程序"},{default:l(()=>s[1]||(s[1]=[n("探索可组合代码")])),_:1}),s[7]||(s[7]=i("br",null,null,-1)),s[8]||(s[8]=i("img",{src:g,width:"20",alt:"第三步"},null,-1)),s[9]||(s[9]=n()),s[10]||(s[10]=i("strong",null,"修改项目",-1)),s[11]||(s[11]=i("br",null,null,-1)),s[12]||(s[12]=i("img",{src:y,width:"20",alt:"第四步"},null,-1)),s[13]||(s[13]=n(" 创建你自己的应用程序")),s[14]||(s[14]=i("br",null,null,-1))])]),_:1}),s[22]||(s[22]=e("",10)),a(E,null,{default:l(()=>[a(p,{id:"mobile-app",title:"Android 和 iOS"},{default:l(()=>s[18]||(s[18]=[i("img",{src:F,alt:"首个在 Android 和 iOS 上运行的 Compose Multiplatform 应用",width:"500"},null,-1)])),_:1}),a(p,{id:"desktop-app",title:"桌面"},{default:l(()=>s[19]||(s[19]=[i("img",{src:c,alt:"首个在桌面平台运行的 Compose Multiplatform 应用",width:"400"},null,-1)])),_:1}),a(p,{id:"web-app",title:"Web"},{default:l(()=>s[20]||(s[20]=[i("img",{src:u,alt:"首个在 Web 平台运行的 Compose Multiplatform 应用",width:"400"},null,-1)])),_:1})]),_:1}),s[23]||(s[23]=e("",5))])}const K=f(A,[["render",D]]);export{J as __pageData,K as default};
