import{_ as d,C as h,c as g,o as c,j as i,G as t,ag as p,a,w as n}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"用戶端引擎","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/client-engines.md","filePath":"zh-Hant/ktor/client-engines.md","lastUpdated":1755457140000}'),E={name:"zh-Hant/ktor/client-engines.md"};function y(F,s,u,C,v,m){const r=h("show-structure"),o=h("link-summary"),e=h("code-block"),l=h("TabItem"),k=h("Tabs");return c(),g("div",null,[s[28]||(s[28]=i("h1",{id:"用戶端引擎",tabindex:"-1"},[a("用戶端引擎 "),i("a",{class:"header-anchor",href:"#用戶端引擎","aria-label":'Permalink to "用戶端引擎"'},"​")],-1)),t(r,{for:"chapter",depth:"2"}),t(o,null,{default:n(()=>s[0]||(s[0]=[a(" 了解處理網路請求的引擎。 ")])),_:1}),s[29]||(s[29]=p(`<p><a href="./client-create-and-configure">Ktor HTTP 用戶端</a> 可用於不同平台，包括 JVM、<a href="https://kotlinlang.org/docs/android-overview.html" target="_blank" rel="noreferrer">Android</a>、<a href="https://kotlinlang.org/docs/js-overview.html" target="_blank" rel="noreferrer">JavaScript</a> 和 <a href="https://kotlinlang.org/docs/native-overview.html" target="_blank" rel="noreferrer">Native</a>。特定平台可能需要特定的引擎來處理網路請求。 例如，您可以使用 <code>Apache</code> 或 <code>Jetty</code> 用於 JVM 應用程式，<code>OkHttp</code> 或 <code>Android</code> 用於 Android，<code>Curl</code> 用於針對 Kotlin/Native 的桌面應用程式等等。不同的引擎可能具有特定的功能並提供不同的設定選項。</p><h2 id="requirements" tabindex="-1">需求與限制 <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;需求與限制 {id=&quot;requirements&quot;}&quot;">​</a></h2><h3 id="platforms" tabindex="-1">支援的平台 <a class="header-anchor" href="#platforms" aria-label="Permalink to &quot;支援的平台 {id=&quot;platforms&quot;}&quot;">​</a></h3><p>下表列出了每個引擎支援的<a href="./client-supported-platforms">平台</a>：</p><table tabindex="0"><thead><tr><th>Engine</th><th>Platforms</th></tr></thead><tbody><tr><td>Apache</td><td><a href="#jvm">JVM</a></td></tr><tr><td>Java</td><td><a href="#jvm">JVM</a></td></tr><tr><td>Jetty</td><td><a href="#jvm">JVM</a></td></tr><tr><td>Android</td><td><a href="#jvm">JVM</a>, <a href="#jvm-android">Android</a></td></tr><tr><td>OkHttp</td><td><a href="#jvm">JVM</a>, <a href="#jvm-android">Android</a></td></tr><tr><td>Darwin</td><td><a href="#native">Native</a></td></tr><tr><td>WinHttp</td><td><a href="#native">Native</a></td></tr><tr><td>Curl</td><td><a href="#native">Native</a></td></tr><tr><td>CIO</td><td><a href="#jvm">JVM</a>, <a href="#jvm-android">Android</a>, <a href="#native">Native</a></td></tr><tr><td>Js</td><td><a href="#js">JavaScript</a></td></tr></tbody></table><h3 id="minimal-version" tabindex="-1">支援的 Android/Java 版本 <a class="header-anchor" href="#minimal-version" aria-label="Permalink to &quot;支援的 Android/Java 版本 {id=&quot;minimal-version&quot;}&quot;">​</a></h3><p>針對 JVM 或同時針對 JVM 和 Android 的用戶端引擎支援以下 Android/Java 版本：</p><table tabindex="0"><thead><tr><th>Engine</th><th>Android version</th><th>Java version</th></tr></thead><tbody><tr><td>Apache</td><td></td><td>8+</td></tr><tr><td>Java</td><td></td><td>11+</td></tr><tr><td>Jetty</td><td></td><td>11+</td></tr><tr><td>CIO</td><td>7.0+ <sup>*</sup></td><td>8+</td></tr><tr><td>Android</td><td>1.x+</td><td>8+</td></tr><tr><td>OkHttp</td><td>5.0+</td><td>8+</td></tr></tbody></table><p><em>* 若要在較舊的 Android 版本上使用 CIO 引擎，您需要啟用 <a href="https://developer.android.com/studio/write/java8-support" target="_blank" rel="noreferrer">Java 8 API desugaring</a>。</em></p><h3 id="limitations" tabindex="-1">限制 <a class="header-anchor" href="#limitations" aria-label="Permalink to &quot;限制 {id=&quot;limitations&quot;}&quot;">​</a></h3><p>下表顯示特定引擎是否支援 HTTP/2 和 <a href="./client-websockets">WebSockets</a>：</p><table tabindex="0"><thead><tr><th>Engine</th><th>HTTP/2</th><th>WebSockets</th></tr></thead><tbody><tr><td>Apache</td><td>✅️ <em>(for Apache5)</em></td><td>✖️</td></tr><tr><td>Java</td><td>✅</td><td>✅️</td></tr><tr><td>Jetty</td><td>✅</td><td>✖️</td></tr><tr><td>CIO</td><td>✖️</td><td>✅</td></tr><tr><td>Android</td><td>✖️</td><td>✖️</td></tr><tr><td>OkHttp</td><td>✅</td><td>✅</td></tr><tr><td>Js</td><td>✅</td><td>✅</td></tr><tr><td>Darwin</td><td>✅</td><td>✅</td></tr><tr><td>WinHttp</td><td>✅</td><td>✅</td></tr><tr><td>Curl</td><td>✅</td><td>✅</td></tr></tbody></table><p>您還需要考慮以下會影響一般用戶端設定及特定外掛程式使用的限制：</p><ul><li>如果引擎支援 HTTP/2，您可以透過自訂引擎設定來啟用它（請參閱 <a href="#java">Java</a> 引擎的範例）。</li><li>若要在 Ktor 用戶端中設定 <a href="./client-ssl">SSL</a>，您需要自訂所選引擎的設定。</li><li>某些引擎不支援 <a href="./client-proxy#supported_engines">代理</a>。</li><li><a href="./client-logging">Logging</a> 外掛程式為不同平台提供不同類型的記錄器。</li><li><a href="./client-timeout#limitations">HttpTimeout</a> 外掛程式對於特定引擎有一些限制。</li></ul><h2 id="dependencies" tabindex="-1">新增引擎依賴項 <a class="header-anchor" href="#dependencies" aria-label="Permalink to &quot;新增引擎依賴項 {id=&quot;dependencies&quot;}&quot;">​</a></h2><p>除了 <a href="./client-dependencies">ktor-client-core</a> artifact 之外，Ktor 用戶端需要為每個引擎新增特定的依賴項。對於每個支援的平台，您可以在相應的章節中看到可用的引擎和所需的依賴項：</p><ul><li><a href="#jvm">JVM</a></li><li><a href="#jvm-android">JVM 和 Android</a></li><li><a href="#js">JavaScript</a></li><li><a href="#native">Native</a></li></ul><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>對於不同的引擎，Ktor 提供帶有 <code>-jvm</code> 或 <code>-js</code> 等後綴的平台特定 artifact，例如 <code>ktor-client-cio-jvm</code>。Gradle 會為給定平台解析適當的 artifact，而 Maven 不支援此功能。這意味著對於 Maven，您需要手動新增平台特定後綴。</p></div><h2 id="create" tabindex="-1">使用指定引擎建立用戶端 <a class="header-anchor" href="#create" aria-label="Permalink to &quot;使用指定引擎建立用戶端 {id=&quot;create&quot;}&quot;">​</a></h2><p>若要使用特定引擎建立 HTTP 用戶端，請將引擎類別作為參數傳遞給 <a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client/-http-client/index.html" target="_blank" rel="noreferrer">HttpClient</a> 建構函式。例如，您可以如下所示使用 <code>CIO</code> 引擎建立用戶端：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO)</span></span></code></pre></div><h3 id="default" tabindex="-1">預設引擎 <a class="header-anchor" href="#default" aria-label="Permalink to &quot;預設引擎 {id=&quot;default&quot;}&quot;">​</a></h3><p>如果您在沒有引數的情況下呼叫 <code>HttpClient</code> 建構函式，用戶端將根據 <a href="#dependencies">建置腳本中新增的</a> artifact 自動選擇引擎。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>這對於多平台專案很有用。例如，對於同時針對 <a href="./client-create-multiplatform-application">Android 和 iOS</a> 的專案，您可以將 <a href="#jvm-android">Android</a> 依賴項新增到 <code>androidMain</code> 原始碼集，並將 <a href="#darwin">Darwin</a> 依賴項新增到 <code>iosMain</code> 原始碼集。必要的依賴項將在編譯時選取。</p><h2 id="configure" tabindex="-1">設定引擎 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;設定引擎 {id=&quot;configure&quot;}&quot;">​</a></h2><p>您可以使用 <code>engine</code> 方法來設定引擎。所有引擎都共用 <a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.engine/-http-client-engine-config/index.html" target="_blank" rel="noreferrer">HttpClientEngineConfig</a> 公開的多個共同屬性，例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // this: HttpClientEngineConfig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        threadsCount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pipelining </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>若要了解如何設定特定引擎，請參閱下面的相應章節。</p><h2 id="jvm" tabindex="-1">JVM <a class="header-anchor" href="#jvm" aria-label="Permalink to &quot;JVM {id=&quot;jvm&quot;}&quot;">​</a></h2><p>在本節中，我們將介紹適用於 JVM 的引擎。</p><h3 id="apache" tabindex="-1">Apache <a class="header-anchor" href="#apache" aria-label="Permalink to &quot;Apache {id=&quot;apache&quot;}&quot;">​</a></h3><p><code>Apache</code> 引擎支援 HTTP/1.1 並提供多個設定選項。 如果您需要 HTTP/2 支援，也可以使用 <code>Apache5</code> 引擎，其預設啟用 HTTP/2。</p>`,33)),i("ol",null,[i("li",null,[s[1]||(s[1]=i("p",null,[a("新增 "),i("code",null,"ktor-client-apache5"),a(" 或 "),i("code",null,"ktor-client-apache"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-apache5:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-apache5:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-apache5-jvm</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),i("li",null,[s[4]||(s[4]=i("p",null,[a("將 "),i("code",null,"Apache5"),a("/"),i("code",null,"Apache"),a(" 類別作為參數傳遞給 "),i("code",null,"HttpClient"),a(" 建構函式：")],-1)),t(k,{group:"apache_version"},{default:n(()=>[t(l,{title:"Apache5","group-key":"5"},{default:n(()=>s[2]||(s[2]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client.engine.apache5."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," client "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," HttpClient"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(Apache5)")])])])],-1)])),_:1}),t(l,{title:"Apache","group-key":"4"},{default:n(()=>s[3]||(s[3]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client.engine.apache."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," client "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," HttpClient"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(Apache)")])])])],-1)])),_:1})]),_:1})]),i("li",null,[s[7]||(s[7]=i("p",null,[a("若要設定引擎，請將 "),i("code",null,"Apache5EngineConfig"),a("/"),i("code",null,"ApacheEngineConfig"),a(" 公開的設定傳遞給 "),i("code",null,"engine"),a(" 方法：")],-1)),t(k,{group:"apache_version"},{default:n(()=>[t(l,{title:"Apache5","group-key":"5"},{default:n(()=>s[5]||(s[5]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client.engine.apache5."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.apache.hc.core5.http."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," client "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," HttpClient"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(Apache5) {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    engine"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // this: Apache5EngineConfig")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        followRedirects "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        socketTimeout "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 10_000")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        connectTimeout "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 10_000")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        connectionRequestTimeout "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 20_000")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        customizeClient"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"            // this: HttpAsyncClientBuilder")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            setProxy"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"HttpHost"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"127.0.0.1"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"8080"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"            // ...")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        customizeRequest"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"            // this: RequestConfig.Builder")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(l,{title:"Apache","group-key":"4"},{default:n(()=>s[6]||(s[6]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.client.engine.apache."),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.apache.http.HttpHost")]),a(`
`),i("span",{class:"line"}),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," client "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," HttpClient"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(Apache) {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    engine"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // this: ApacheEngineConfig")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        followRedirects "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        socketTimeout "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 10_000")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        connectTimeout "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 10_000")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        connectionRequestTimeout "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 20_000")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        customizeClient"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"            // this: HttpAsyncClientBuilder")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            setProxy"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"HttpHost"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"127.0.0.1"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"8080"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            setMaxConnTotal"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1000"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            setMaxConnPerRoute"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"100"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"            // ...")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        customizeRequest"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"            // this: RequestConfig.Builder")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})])]),s[30]||(s[30]=i("h3",{id:"java",tabindex:"-1"},[a("Java "),i("a",{class:"header-anchor",href:"#java","aria-label":'Permalink to "Java {id="java"}"'},"​")],-1)),s[31]||(s[31]=i("p",null,[i("code",null,"Java"),a(" 引擎使用 Java 11 中引入的 "),i("a",{href:"https://openjdk.java.net/groups/net/httpclient/intro.html",target:"_blank",rel:"noreferrer"},"Java HTTP Client"),a("。若要使用它，請遵循以下步驟：")],-1)),i("ol",null,[i("li",null,[s[8]||(s[8]=i("p",null,[a("新增 "),i("code",null,"ktor-client-java"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-java:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-java:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-java-jvm</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[9]||(s[9]=p(`<li><p>將 <a href="https://api.ktor.io/ktor-client/ktor-client-java/io.ktor.client.engine.java/-java/index.html" target="_blank" rel="noreferrer">Java</a> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.java.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Java)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <a href="https://api.ktor.io/ktor-client/ktor-client-java/io.ktor.client.engine.java/-java-http-config/index.html" target="_blank" rel="noreferrer">JavaHttpConfig</a> 公開的設定傳遞給 <code>engine</code> 方法：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.java.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Java) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // this: JavaHttpConfig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        threadsCount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pipelining </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        proxy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ProxyBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://proxy-server.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        protocolVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.net.http.HttpClient.Version.HTTP_2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li>`,2))]),s[32]||(s[32]=i("h3",{id:"jetty",tabindex:"-1"},[a("Jetty "),i("a",{class:"header-anchor",href:"#jetty","aria-label":'Permalink to "Jetty {id="jetty"}"'},"​")],-1)),s[33]||(s[33]=i("p",null,[i("code",null,"Jetty"),a(" 引擎僅支援 HTTP/2，可以透過以下方式設定：")],-1)),i("ol",null,[i("li",null,[s[10]||(s[10]=i("p",null,[a("新增 "),i("code",null,"ktor-client-jetty-jakarta"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-jetty-jakarta:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-jetty-jakarta:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-jetty-jakarta-jvm</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[11]||(s[11]=p(`<li><p>將 <a href="https://api.ktor.io/ktor-client/ktor-client-jetty-jakarta/io.ktor.client.engine.jetty.jakarta/-jetty/index.html" target="_blank" rel="noreferrer">Jetty</a> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.jetty.jakarta.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Jetty)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <a href="https://api.ktor.io/ktor-client/ktor-client-jetty-jakarta/io.ktor.client.engine.jetty.jakarta/-jetty-engine-config/index.html" target="_blank" rel="noreferrer">JettyEngineConfig</a> 公開的設定傳遞給 <code>engine</code> 方法：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.jetty.jakarta.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.eclipse.jetty.util.ssl.SslContextFactory</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Jetty) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // this: JettyEngineConfig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sslContextFactory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SslContextFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        clientCacheSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li>`,2))]),s[34]||(s[34]=i("h2",{id:"jvm-android",tabindex:"-1"},[a("JVM 和 Android "),i("a",{class:"header-anchor",href:"#jvm-android","aria-label":'Permalink to "JVM 和 Android {id="jvm-android"}"'},"​")],-1)),s[35]||(s[35]=i("p",null,"在本節中，我們將介紹適用於 JVM/Android 的引擎及其設定。",-1)),s[36]||(s[36]=i("h3",{id:"android",tabindex:"-1"},[a("Android "),i("a",{class:"header-anchor",href:"#android","aria-label":'Permalink to "Android {id="android"}"'},"​")],-1)),s[37]||(s[37]=i("p",null,[i("code",null,"Android"),a(" 引擎針對 Android，可以透過以下方式設定：")],-1)),i("ol",null,[i("li",null,[s[12]||(s[12]=i("p",null,[a("新增 "),i("code",null,"ktor-client-android"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-android:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-android:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-android-jvm</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[13]||(s[13]=p(`<li><p>將 <a href="https://api.ktor.io/ktor-client/ktor-client-android/io.ktor.client.engine.android/-android/index.html" target="_blank" rel="noreferrer">Android</a> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.android.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Android)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <a href="https://api.ktor.io/ktor-client/ktor-client-android/io.ktor.client.engine.android/-android-engine-config/index.html" target="_blank" rel="noreferrer">AndroidEngineConfig</a> 公開的設定傳遞給 <code>engine</code> 方法：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.android.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> java.net.Proxy</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> java.net.InetSocketAddress</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Android) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // this: AndroidEngineConfig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        connectTimeout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        socketTimeout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        proxy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Proxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Proxy.Type.HTTP, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InetSocketAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li>`,2))]),s[38]||(s[38]=i("h3",{id:"okhttp",tabindex:"-1"},[a("OkHttp "),i("a",{class:"header-anchor",href:"#okhttp","aria-label":'Permalink to "OkHttp {id="okhttp"}"'},"​")],-1)),s[39]||(s[39]=i("p",null,[i("code",null,"OkHttp"),a(" 引擎基於 OkHttp，可以透過以下方式設定：")],-1)),i("ol",null,[i("li",null,[s[14]||(s[14]=i("p",null,[a("新增 "),i("code",null,"ktor-client-okhttp"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-okhttp:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-okhttp:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-okhttp-jvm</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[15]||(s[15]=p(`<li><p>將 <a href="https://api.ktor.io/ktor-client/ktor-client-okhttp/io.ktor.client.engine.okhttp/-ok-http/index.html" target="_blank" rel="noreferrer">OkHttp</a> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.okhttp.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OkHttp)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <a href="https://api.ktor.io/ktor-client/ktor-client-okhttp/io.ktor.client.engine.okhttp/-ok-http-config/index.html" target="_blank" rel="noreferrer">OkHttpConfig</a> 公開的設定傳遞給 <code>engine</code> 方法：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.okhttp.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OkHttp) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // this: OkHttpConfig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // this: OkHttpClient.Builder</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            followRedirects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        addInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(interceptor)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        addNetworkInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(interceptor)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        preconfigured </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> okHttpClientInstance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li>`,2))]),s[40]||(s[40]=p('<h2 id="native" tabindex="-1">Native <a class="header-anchor" href="#native" aria-label="Permalink to &quot;Native {id=&quot;native&quot;}&quot;">​</a></h2><p>在本節中，我們將介紹如何設定針對 <a href="https://kotlinlang.org/docs/native-overview.html" target="_blank" rel="noreferrer">Kotlin/Native</a> 的引擎。</p><blockquote><p>在 Kotlin/Native 專案中使用 Ktor 需要<a href="https://kotlinlang.org/docs/native-memory-manager.html" target="_blank" rel="noreferrer">新的記憶體管理器</a>，該管理器從 Kotlin 1.7.20 開始預設啟用。</p></blockquote><p id="newmm-note"></p><h3 id="darwin" tabindex="-1">Darwin <a class="header-anchor" href="#darwin" aria-label="Permalink to &quot;Darwin {id=&quot;darwin&quot;}&quot;">​</a></h3><p><code>Darwin</code> 引擎針對基於 <a href="https://en.wikipedia.org/wiki/Darwin_(operating_system)" target="_blank" rel="noreferrer">Darwin</a> 的作業系統（例如 macOS、iOS、tvOS 等），並在底層使用 <a href="https://developer.apple.com/documentation/foundation/nsurlsession" target="_blank" rel="noreferrer">NSURLSession</a>。若要使用 <code>Darwin</code> 引擎，請遵循以下步驟：</p>',6)),i("ol",null,[i("li",null,[s[16]||(s[16]=i("p",null,[a("新增 "),i("code",null,"ktor-client-darwin"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-darwin:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-darwin:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-darwin-macosx64</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[17]||(s[17]=p(`<li><p>將 <code>Darwin</code> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.darwin.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Darwin)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <a href="https://api.ktor.io/ktor-client/ktor-client-darwin/io.ktor.client.engine.darwin/-darwin-client-engine-config/index.html" target="_blank" rel="noreferrer">DarwinClientEngineConfig</a> 公開的設定傳遞給 <code>engine</code> 函數。 例如，您可以使用 <code>configureRequest</code> 函數存取 <code>NSMutableURLRequest</code> 或使用 <code>configureSession</code> 自訂會話設定。下面的程式碼片段展示了如何使用 <code>configureRequest</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Darwin) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        configureRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            setAllowsCellularAccess</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以在這裡找到完整範例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-engine-darwin" target="_blank" rel="noreferrer">client-engine-darwin</a>。</p></li>`,2))]),s[41]||(s[41]=i("h3",{id:"winhttp",tabindex:"-1"},[a("WinHttp "),i("a",{class:"header-anchor",href:"#winhttp","aria-label":'Permalink to "WinHttp {id="winhttp"}"'},"​")],-1)),s[42]||(s[42]=i("p",null,[i("code",null,"WinHttp"),a(" 引擎針對基於 Windows 的作業系統。 若要使用 "),i("code",null,"WinHttp"),a(" 引擎，請遵循以下步驟：")],-1)),i("ol",null,[i("li",null,[s[18]||(s[18]=i("p",null,[a("新增 "),i("code",null,"ktor-client-winhttp"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-winhttp:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-winhttp:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-winhttp-mingwx64</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[19]||(s[19]=p(`<li><p>將 <code>WinHttp</code> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.winhttp.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WinHttp)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <a href="https://api.ktor.io/ktor-client/ktor-client-winhttp/io.ktor.client.engine.winhttp/-winhttp-client-engine-config/index.html" target="_blank" rel="noreferrer">WinHttpClientEngineConfig</a> 公開的設定傳遞給 <code>engine</code> 函數。 例如，您可以使用 <code>protocolVersion</code> 屬性來變更 HTTP 版本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WinHttp) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        protocolVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpProtocolVersion.HTTP_1_1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以在這裡找到完整範例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-engine-winhttp" target="_blank" rel="noreferrer">client-engine-winhttp</a>。</p></li>`,2))]),s[43]||(s[43]=p('<h3 id="curl" tabindex="-1">Curl <a class="header-anchor" href="#curl" aria-label="Permalink to &quot;Curl {id=&quot;curl&quot;}&quot;">​</a></h3><p>對於桌面平台，Ktor 也提供了 <code>Curl</code> 引擎。此引擎支援以下平台：<code>linuxX64</code>、<code>linuxArm64</code>、<code>macosX64</code>、<code>macosArm64</code>、<code>mingwX64</code>。若要使用 <code>Curl</code> 引擎，請遵循以下步驟：</p>',2)),i("ol",null,[s[21]||(s[21]=p('<li><p>安裝 <a href="https://curl.se/libcurl/" target="_blank" rel="noreferrer">libcurl library</a>。</p><blockquote><p>在 Linux 上，您必須安裝 <code>gnutls</code> 版本的 libcurl。 若要在 Ubuntu 上安裝此版本，您可以執行：</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcurl4-gnutls-dev</span></span></code></pre></div><blockquote><p>在 Windows 上，您可能需要考慮 <a href="./FAQ#native-curl">MinGW/MSYS2</a> <code>curl</code> 二進位檔。</p></blockquote></li>',1)),i("li",null,[s[20]||(s[20]=i("p",null,[a("新增 "),i("code",null,"ktor-client-curl"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-curl:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-curl:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-curl-macosx64</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[22]||(s[22]=p(`<li><p>將 <code>Curl</code> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.curl.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Curl)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <code>CurlClientEngineConfig</code> 公開的設定傳遞給 <code>engine</code> 方法。 下面的程式碼片段展示了如何為測試目的停用 SSL 驗證：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Curl) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sslVerify </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以在這裡找到完整範例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-engine-curl" target="_blank" rel="noreferrer">client-engine-curl</a>。</p></li>`,2))]),s[44]||(s[44]=i("h2",{id:"jvm-android-native",tabindex:"-1"},[a("JVM、Android 和 Native "),i("a",{class:"header-anchor",href:"#jvm-android-native","aria-label":'Permalink to "JVM、Android 和 Native {id="jvm-android-native"}"'},"​")],-1)),s[45]||(s[45]=i("h3",{id:"cio",tabindex:"-1"},[a("CIO "),i("a",{class:"header-anchor",href:"#cio","aria-label":'Permalink to "CIO {id="cio"}"'},"​")],-1)),s[46]||(s[46]=i("p",null,"CIO 是一個完全非同步的基於協程的引擎，可用於 JVM、Android 和 Native 平台。目前它僅支援 HTTP/1.x。若要使用它，請遵循以下步驟：",-1)),i("ol",null,[i("li",null,[s[23]||(s[23]=i("p",null,[a("新增 "),i("code",null,"ktor-client-cio"),a(" 依賴項：")],-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-cio:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-cio:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-cio-jvm</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[24]||(s[24]=p(`<li><p>將 <a href="https://api.ktor.io/ktor-client/ktor-client-cio/io.ktor.client.engine.cio/-c-i-o/index.html" target="_blank" rel="noreferrer">CIO</a> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO)</span></span></code></pre></div></li><li><p>若要設定引擎，請將 <a href="https://api.ktor.io/ktor-client/ktor-client-cio/io.ktor.client.engine.cio/-c-i-o-engine-config/index.html" target="_blank" rel="noreferrer">CIOEngineConfig</a> 公開的設定傳遞給 <code>engine</code> 方法：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.network.tls.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // this: CIOEngineConfig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        maxConnectionsCount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        endpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // this: EndpointConfig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            maxConnectionsPerRoute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            pipelineMaxSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            keepAliveTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            connectTimeout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            connectAttempts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // this: TLSConfigBuilder</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            serverName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;api.ktor.io&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            cipherSuites </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CIOCipherSuites.SupportedSuites</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            trustManager </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myCustomTrustManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            random </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mySecureRandom</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            addKeyStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myKeyStore, myKeyStorePassword)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li>`,2))]),s[47]||(s[47]=i("h2",{id:"js",tabindex:"-1"},[a("JavaScript "),i("a",{class:"header-anchor",href:"#js","aria-label":'Permalink to "JavaScript {id="js"}"'},"​")],-1)),s[48]||(s[48]=i("p",null,[i("code",null,"Js"),a(" 引擎可用於 "),i("a",{href:"https://kotlinlang.org/docs/js-overview.html",target:"_blank",rel:"noreferrer"},"JavaScript 專案"),a("。此引擎對於瀏覽器應用程式使用 "),i("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",target:"_blank",rel:"noreferrer"},"fetch API"),a("，對於 Node.js 使用 "),i("code",null,"node-fetch"),a("。若要使用它，請遵循以下步驟：")],-1)),i("ol",null,[i("li",null,[s[25]||(s[25]=i("p",null,[a("新增 "),i("code",null,"ktor-client-js"),a(" 依賴項：")],-1)),s[26]||(s[26]=i("var",{name:"target",value:""},null,-1)),t(k,{group:"languages"},{default:n(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[t(e,{lang:"Kotlin",code:'               implementation("io.ktor:ktor-client-js:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[t(e,{lang:"Groovy",code:'               implementation "io.ktor:ktor-client-js:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:n(()=>[t(e,{lang:"XML",code:`               <dependency>
                   <groupId>io.ktor</groupId>
                   <artifactId>ktor-client-js-macosx64</artifactId>
                   <version>\${ktor_version}</version>
               </dependency>`})]),_:1})]),_:1})]),s[27]||(s[27]=p(`<li><p>將 <code>Js</code> 類別作為參數傳遞給 <code>HttpClient</code> 建構函式：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.js.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Js)</span></span></code></pre></div><p>您也可以呼叫 <code>JsClient</code> 函數來取得 <code>Js</code> 引擎單例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.js.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li>`,1))]),s[49]||(s[49]=p(`<p>您可以在這裡找到完整範例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-engine-js" target="_blank" rel="noreferrer">client-engine-js</a>。</p><h2 id="mpp-config" tabindex="-1">範例：如何在多平台行動專案中設定引擎 <a class="header-anchor" href="#mpp-config" aria-label="Permalink to &quot;範例：如何在多平台行動專案中設定引擎 {id=&quot;mpp-config&quot;}&quot;">​</a></h2><p>若要在多平台行動專案中設定引擎特定選項，您可以使用 <a href="https://kotlinlang.org/docs/multiplatform-mobile-connect-to-platform-specific-apis.html" target="_blank" rel="noreferrer">expect/actual declarations</a>。 讓我們演示如何使用在 <a href="./client-create-multiplatform-application">建立跨平台行動應用程式</a> 教學課程中建立的專案來實現這一點：</p><ol><li><p>開啟 <code>shared/src/commonMain/kotlin/com/example/kmmktor/Platform.kt</code> 檔案並新增頂層 <code>httpClient</code> 函數，該函數接受用戶端設定並返回 <code>HttpClient</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> httpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpClientConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;*&gt;.() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Unit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpClient</span></span></code></pre></div></li><li><p>開啟 <code>shared/src/androidMain/kotlin/com/example/kmmktor/Platform.kt</code> 並為 Android 模組新增 <code>httpClient</code> 函數的實際聲明：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.okhttp.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> java.util.concurrent.TimeUnit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> httpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpClientConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;*&gt;.() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Unit) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OkHttp) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         retryOnConnectionFailure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         connectTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>此範例展示了如何設定 <a href="#okhttp">OkHttp</a> 引擎，但您也可以使用其他 <a href="#jvm-android">Android 支援的</a> 引擎。</p></li><li><p>開啟 <code>shared/src/iosMain/kotlin/com/example/kmmktor/Platform.kt</code> 並為 iOS 模組新增 <code>httpClient</code> 函數的實際聲明：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.darwin.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> httpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpClientConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;*&gt;.() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Unit) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Darwin) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      configureRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         setAllowsCellularAccess</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>最後，開啟 <code>shared/src/commonMain/kotlin/com/example/kmmktor/Greeting.kt</code> 並將 <code>HttpClient()</code> 建構函式替換為 <code>httpClient</code> 函數呼叫：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> httpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li></ol>`,4))])}const b=d(E,[["render",y]]);export{f as __pageData,b as default};
