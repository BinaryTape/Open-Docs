import{_ as o,C as i,c as d,o as c,G as a,ag as E,w as e,j as t,a as n}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/client-request-retry.md","filePath":"ktor/client-request-retry.md","lastUpdated":1755457140000}'),g={name:"ktor/client-request-retry.md"};function y(u,s,F,q,C,m){const l=i("TopicTitle"),p=i("show-structure"),h=i("primary-label"),r=i("tldr"),k=i("link-summary");return c(),d("div",null,[a(l,{labelRef:"client-plugin",title:"重试失败的请求"}),a(p,{for:"chapter",depth:"2"}),a(h,{ref:"client-plugin"},null,512),a(r,null,{default:e(()=>s[0]||(s[0]=[t("p",null,[t("b",null,"代码示例"),n(": "),t("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-retry"}," client-retry ")],-1)])),_:1}),a(k,null,{default:e(()=>s[1]||(s[1]=[n(" HttpRequestRetry 插件允许您配置失败请求的重试策略。 ")])),_:1}),s[2]||(s[2]=E(`<p>默认情况下，Ktor 客户端不会重试由于网络或服务器错误而失败的<a href="./client-requests">请求</a>。您可以使用 <a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.plugins/-http-request-retry" target="_blank" rel="noreferrer">HttpRequestRetry</a> 插件以各种方式配置失败请求的重试策略：指定重试次数、配置重试请求的条件，或在重试前修改请求。</p><h2 id="add_dependencies" tabindex="-1">添加依赖项 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;添加依赖项 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>HttpRequestRetry</code> 只需要 <a href="./client-dependencies">ktor-client-core</a> 构件，不需要任何特定的依赖项。</p><h2 id="install_plugin" tabindex="-1">安装 HttpRequestRetry <a class="header-anchor" href="#install_plugin" aria-label="Permalink to &quot;安装 HttpRequestRetry {id=&quot;install_plugin&quot;}&quot;">​</a></h2><p>要安装 <code>HttpRequestRetry</code>，请将其传递给 <a href="./client-create-and-configure#configure-client">客户端配置块</a> 内部的 <code>install</code> 函数：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpRequestRetry)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configure_retry" tabindex="-1">配置 HttpRequestRetry <a class="header-anchor" href="#configure_retry" aria-label="Permalink to &quot;配置 HttpRequestRetry {id=&quot;configure_retry&quot;}&quot;">​</a></h2><h3 id="basic_config" tabindex="-1">基本重试配置 <a class="header-anchor" href="#basic_config" aria-label="Permalink to &quot;基本重试配置 {id=&quot;basic_config&quot;}&quot;">​</a></h3><p>下方 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-retry" target="_blank" rel="noreferrer">可运行示例</a> 展示了如何配置基本重试策略：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpRequestRetry) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        retryOnServerErrors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(maxRetries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        exponentialDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>retryOnServerErrors</code> 函数会在从服务器收到 <code>5xx</code> 响应时启用请求重试，并指定重试次数。</li><li><code>exponentialDelay</code> 指定了重试之间的指数延迟，该延迟使用指数退避算法计算。</li></ul><p>您可以从 <a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.plugins/-http-request-retry-config" target="_blank" rel="noreferrer">HttpRequestRetryConfig</a> 了解更多支持的配置选项。</p><h3 id="conditions" tabindex="-1">配置重试条件 <a class="header-anchor" href="#conditions" aria-label="Permalink to &quot;配置重试条件 {id=&quot;conditions&quot;}&quot;">​</a></h3><p>还有一些配置设置允许您配置重试请求的条件或指定延迟逻辑：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpRequestRetry) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxRetries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    retryIf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { request, response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response.status.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isSuccess</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    retryOnExceptionIf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { request, cause </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cause </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NetworkError </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    delayMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { retry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        retry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3000L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重试间隔为 3、6、9 等秒</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="modify" tabindex="-1">在重试前修改请求 <a class="header-anchor" href="#modify" aria-label="Permalink to &quot;在重试前修改请求 {id=&quot;modify&quot;}&quot;">​</a></h3><p>如果您需要在重试前修改请求，请使用 <code>modifyRequest</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpRequestRetry) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 重试条件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    modifyRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        request.headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x-retry-count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, retryCount.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,18))])}const b=o(g,[["render",y]]);export{f as __pageData,b as default};
