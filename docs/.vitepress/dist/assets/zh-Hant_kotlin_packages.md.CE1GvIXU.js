import{_ as i,c as s,o as e,ag as t}from"./chunks/framework.Bksy39di.js";const g=JSON.parse('{"title":"套件與匯入","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/packages.md","filePath":"zh-Hant/kotlin/packages.md","lastUpdated":1754307826000}'),l={name:"zh-Hant/kotlin/packages.md"};function n(p,a,r,o,h,k){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="套件與匯入" tabindex="-1">套件與匯入 <a class="header-anchor" href="#套件與匯入" aria-label="Permalink to &quot;套件與匯入&quot;">​</a></h1><p>原始碼檔案可能以套件宣告開頭：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.example</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> printMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*...*/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*...*/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span></code></pre></div><p>原始碼檔案中的所有內容，例如類別和函數，都包含在此套件中。因此，在上述範例中，<code>printMessage()</code> 的完整名稱是 <code>org.example.printMessage</code>，而 <code>Message</code> 的完整名稱是 <code>org.example.Message</code>。</p><p>如果未指定套件，則此類檔案的內容屬於 <em>預設</em>（無名稱）套件。</p><h2 id="預設匯入" tabindex="-1">預設匯入 <a class="header-anchor" href="#預設匯入" aria-label="Permalink to &quot;預設匯入&quot;">​</a></h2><p>每個 Kotlin 檔案都會預設匯入多個套件：</p><ul><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/index.html" target="_blank" rel="noreferrer">kotlin.*</a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.annotation/index.html" target="_blank" rel="noreferrer">kotlin.annotation.*</a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/index.html" target="_blank" rel="noreferrer">kotlin.collections.*</a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.comparisons/index.html" target="_blank" rel="noreferrer">kotlin.comparisons.*</a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/index.html" target="_blank" rel="noreferrer">kotlin.io.*</a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.ranges/index.html" target="_blank" rel="noreferrer">kotlin.ranges.*</a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.sequences/index.html" target="_blank" rel="noreferrer">kotlin.sequences.*</a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/index.html" target="_blank" rel="noreferrer">kotlin.text.*</a></li></ul><p>根據目標平台，還會匯入額外套件：</p><ul><li><p>JVM:</p><ul><li>java.lang.*</li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.jvm/index.html" target="_blank" rel="noreferrer">kotlin.jvm.*</a></li></ul></li><li><p>JS:</p><ul><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.js/index.html" target="_blank" rel="noreferrer">kotlin.js.*</a></li></ul></li></ul><h2 id="匯入" tabindex="-1">匯入 <a class="header-anchor" href="#匯入" aria-label="Permalink to &quot;匯入&quot;">​</a></h2><p>除了預設匯入之外，每個檔案還可以包含自己的 <code>import</code> 指令。</p><p>您可以匯入單一名稱：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.example.Message </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 現在 Message 無需限定即可存取</span></span></code></pre></div><p>或匯入作用域（套件、類別、物件等等）中所有可存取的內容：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.example.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // &#39;org.example&#39; 中的所有內容都變得可存取</span></span></code></pre></div><p>如果存在名稱衝突，您可以使用 <code>as</code> 關鍵字來本地重新命名衝突實體以消除歧義：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.example.Message </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Message 可存取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.test.Message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestMessage </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// TestMessage 代表 &#39;org.test.Message&#39;</span></span></code></pre></div><p><code>import</code> 關鍵字不僅限於匯入類別；您還可以用它來匯入其他宣告：</p><ul><li>頂層函數和屬性</li><li>在 <a href="/zh-Hant/kotlin/object-declarations#object-declarations-overview">物件宣告</a> 中宣告的函數和屬性</li><li><a href="/zh-Hant/kotlin/enum-classes">列舉常數</a></li></ul><h2 id="頂層宣告的可見性" tabindex="-1">頂層宣告的可見性 <a class="header-anchor" href="#頂層宣告的可見性" aria-label="Permalink to &quot;頂層宣告的可見性&quot;">​</a></h2><p>如果頂層宣告標記為 <code>private</code>，則它對於宣告該宣告的檔案是私有的（請參閱 <a href="/zh-Hant/kotlin/visibility-modifiers">可見性修飾符</a>）。</p>`,22)]))}const c=i(l,[["render",n]]);export{g as __pageData,c as default};
