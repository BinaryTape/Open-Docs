import{_ as o,C as n,c as r,o as c,ag as h,G as s,w as t,j as i,a as e}from"./chunks/framework.Bksy39di.js";const m=JSON.parse('{"title":"Lincheck 가이드","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/lincheck-guide.md","filePath":"ko/kotlin/lincheck-guide.md","lastUpdated":1754307826000}'),p={name:"ko/kotlin/lincheck-guide.md"};function d(E,a,g,u,_,y){const l=n("tab"),k=n("tabs");return c(),r("div",null,[a[2]||(a[2]=h('<h1 id="lincheck-가이드" tabindex="-1">Lincheck 가이드 <a class="header-anchor" href="#lincheck-가이드" aria-label="Permalink to &quot;Lincheck 가이드&quot;">​</a></h1><p>Lincheck는 JVM에서 동시성 알고리즘을 테스트하기 위한 실용적이고 사용자 친화적인 프레임워크입니다. 이 프레임워크는 동시성 테스트를 작성하는 간단하고 선언적인 방식을 제공합니다.</p><p>Lincheck 프레임워크를 사용하면 테스트를 수행하는 방법을 설명하는 대신, 검사할 모든 연산과 필요한 정확성 속성을 선언하여 <em>무엇을 테스트할지</em> 지정할 수 있습니다. 그 결과, 일반적인 Lincheck 동시성 테스트는 약 15줄 정도만 포함합니다.</p><p>연산 목록이 주어지면, Lincheck는 자동으로 다음을 수행합니다:</p><ul><li>무작위 동시성 시나리오를 생성합니다.</li><li>스트레스 테스트 또는 경계 모델 검사 중 하나를 사용하여 검사합니다.</li><li>각 호출 결과가 필요한 정확성 속성(기본값은 선형성임)을 만족하는지 확인합니다.</li></ul><h2 id="lincheck를-프로젝트에-추가" tabindex="-1">Lincheck를 프로젝트에 추가 <a class="header-anchor" href="#lincheck를-프로젝트에-추가" aria-label="Permalink to &quot;Lincheck를 프로젝트에 추가&quot;">​</a></h2><p>Lincheck 지원을 활성화하려면 해당 저장소와 의존성을 Gradle 설정에 포함해야 합니다. <code>build.gradle(.kts)</code> 파일에 다음을 추가하세요:</p>',7)),s(k,{group:"build-script"},{default:t(()=>[s(l,{title:"코틀린","group-key":"kotlin"},{default:t(()=>a[0]||(a[0]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"repositories"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    mavenCentral"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependencies"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    testImplementation"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.lincheck:lincheck:3.0"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),s(l,{title:"그루비","group-key":"groovy"},{default:t(()=>a[1]||(a[1]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"repositories {")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    mavenCentral()")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),e(`
`),i("span",{class:"line"}),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"dependencies {")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    testImplementation "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.lincheck:lincheck:3.0"')]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[3]||(a[3]=h('<h2 id="lincheck-살펴보기" tabindex="-1">Lincheck 살펴보기 <a class="header-anchor" href="#lincheck-살펴보기" aria-label="Permalink to &quot;Lincheck 살펴보기&quot;">​</a></h2><p>이 가이드는 프레임워크를 익히고 예제를 통해 가장 유용한 기능을 사용해보는 데 도움이 될 것입니다. Lincheck 기능을 단계별로 학습하세요:</p><ol><li><a href="/ko/kotlin/introduction">Lincheck로 첫 테스트 작성하기</a></li><li><a href="/ko/kotlin/testing-strategies">테스트 전략 선택하기</a></li><li><a href="/ko/kotlin/operation-arguments">연산 인자 구성하기</a></li><li><a href="/ko/kotlin/constraints">인기 있는 알고리즘 제약 조건 고려하기</a></li><li><a href="/ko/kotlin/progress-guarantees">비차단 진행 보장 여부 확인하기</a></li><li><a href="/ko/kotlin/sequential-specification">알고리즘의 순차 사양 정의하기</a></li></ol><h2 id="추가-참고-자료" tabindex="-1">추가 참고 자료 <a class="header-anchor" href="#추가-참고-자료" aria-label="Permalink to &quot;추가 참고 자료&quot;">​</a></h2><ul><li>&quot;코틀린 코루틴에서 동시성 알고리즘을 테스트하는 방법&quot; by Nikita Koval: <a href="https://youtu.be/jZqkWfa11Js" target="_blank" rel="noreferrer">비디오</a>. KotlinConf 2023</li><li>&quot;Lincheck: JVM에서 동시성 테스트&quot; 워크숍 by Maria Sokolova: <a href="https://www.youtube.com/watch?v=YNtUK9GK4pA" target="_blank" rel="noreferrer">파트 1</a>, <a href="https://www.youtube.com/watch?v=EW7mkAOErWw" target="_blank" rel="noreferrer">파트 2</a>. Hydra 2021</li></ul>',5))])}const f=o(p,[["render",d]]);export{m as __pageData,f as default};
