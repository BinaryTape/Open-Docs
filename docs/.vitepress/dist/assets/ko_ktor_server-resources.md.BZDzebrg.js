import{_ as F,C as n,c as C,o as A,G as l,ag as r,j as s,w as t,a as i}from"./chunks/framework.Bksy39di.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-resources.md","filePath":"ko/ktor/server-resources.md","lastUpdated":1755457140000}'),B={name:"ko/ktor/server-resources.md"};function m(v,a,b,f,D,_){const d=n("TopicTitle"),E=n("show-structure"),o=n("primary-label"),k=n("Links"),g=n("tldr"),c=n("link-summary"),e=n("code-block"),h=n("TabItem"),p=n("Tabs"),y=n("list"),u=n("snippet");return A(),C("div",null,[l(d,{labelRef:"server-plugin",title:"타입 안전 라우팅"}),l(E,{for:"chapter",depth:"2"}),l(o,{ref:"server-plugin"},null,512),l(g,null,{default:t(()=>[a[3]||(a[3]=s("p",null,[s("b",null,"필수 의존성"),i(": "),s("code",null,"io.ktor:ktor-server-resources")],-1)),a[4]||(a[4]=s("p",null,[s("b",null,"코드 예시"),i(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/resource-routing"}," resource-routing ")],-1)),s("p",null,[s("b",null,[l(k,{href:"/ktor/server-native",summary:"Ktor는 Kotlin/Native를 지원하며 추가 런타임이나 가상 머신 없이 서버를 실행할 수 있습니다."},{default:t(()=>a[0]||(a[0]=[i("네이티브 서버")])),_:1}),a[1]||(a[1]=i(" 지원"))]),a[2]||(a[2]=i(": ✅ "))])]),_:1}),l(c,null,{default:t(()=>a[5]||(a[5]=[i("Resources 플러그인을 사용하면 타입 안전 라우팅을 구현할 수 있습니다.")])),_:1}),a[19]||(a[19]=r('<p>Ktor는 타입 안전 <a href="./server-routing">라우팅</a>을 구현할 수 있도록 <a href="https://api.ktor.io/ktor-shared/ktor-resources/io.ktor.resources/-resources/index.html" target="_blank" rel="noreferrer">Resources</a> 플러그인을 제공합니다. 이를 위해 타입이 지정된 라우트 역할을 할 클래스를 생성하고, <code>@Resource</code> 키워드를 사용하여 이 클래스에 어노테이션을 달아야 합니다. <code>@Resource</code> 어노테이션은 kotlinx.serialization 라이브러리에서 제공하는 <code>@Serializable</code> 동작을 포함하고 있습니다.</p><blockquote><p>Ktor 클라이언트는 서버에 <a href="./client-resources">타입이 지정된 요청</a>을 수행하는 기능을 제공합니다.</p></blockquote><h2 id="add_dependencies" tabindex="-1">의존성 추가 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;의존성 추가 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><h3 id="add_serialization" tabindex="-1">kotlinx.serialization 추가 <a class="header-anchor" href="#add_serialization" aria-label="Permalink to &quot;kotlinx.serialization 추가 {id=&quot;add_serialization&quot;}&quot;">​</a></h3><p><a href="#resource_classes">리소스 클래스</a>가 <code>@Serializable</code> 동작을 가져야 하므로, <a href="https://github.com/Kotlin/kotlinx.serialization#setup" target="_blank" rel="noreferrer">설정 (Setup)</a> 섹션에 설명된 대로 Kotlin 직렬화 플러그인을 추가해야 합니다.</p><h3 id="add_plugin_dependencies" tabindex="-1">Resources 의존성 추가 <a class="header-anchor" href="#add_plugin_dependencies" aria-label="Permalink to &quot;Resources 의존성 추가 {id=&quot;add_plugin_dependencies&quot;}&quot;">​</a></h3><p><code>Resources</code>을(를) 사용하려면 빌드 스크립트에 <code>ktor-server-resources</code> 아티팩트를 포함해야 합니다. </p>',7)),l(p,{group:"languages"},{default:t(()=>[l(h,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:t(()=>[l(e,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-resources:$ktor_version")'})]),_:1}),l(h,{title:"Gradle (Groovy)","group-key":"groovy"},{default:t(()=>[l(e,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-resources:$ktor_version"'})]),_:1}),l(h,{title:"Maven","group-key":"maven"},{default:t(()=>[l(e,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-resources-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),a[20]||(a[20]=s("h2",{id:"install_plugin",tabindex:"-1"},[i("Resources 설치 "),s("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "Resources 설치 {id="install_plugin"}"'},"​")],-1)),s("p",null,[a[7]||(a[7]=i(" 애플리케이션에 ")),a[8]||(a[8]=s("code",null,"Resources",-1)),a[9]||(a[9]=i(" 플러그인을 ")),a[10]||(a[10]=s("a",{href:"#install"},"설치",-1)),a[11]||(a[11]=i("하려면, 지정된 ")),l(k,{href:"/ktor/server-modules",summary:"모듈을 사용하면 라우트를 그룹화하여 애플리케이션을 구조화할 수 있습니다."},{default:t(()=>a[6]||(a[6]=[i("모듈")])),_:1}),a[12]||(a[12]=i(" 내의 ")),a[13]||(a[13]=s("code",null,"install",-1)),a[14]||(a[14]=i(" 함수에 전달하세요. 다음 코드 스니펫은 ")),a[15]||(a[15]=s("code",null,"Resources",-1)),a[16]||(a[16]=i("을(를) 설치하는 방법을 보여줍니다... "))]),l(y,null,{default:t(()=>a[17]||(a[17]=[s("li",null,[i(" ... "),s("code",null,"embeddedServer"),i(" 함수 호출 내에서. ")],-1),s("li",null,[i(" ... "),s("code",null,"Application"),i(" 클래스의 확장 함수인 명시적으로 정의된 "),s("code",null,"module"),i(" 내에서. ")],-1)])),_:1}),l(p,null,{default:t(()=>[l(h,{title:"embeddedServer"},{default:t(()=>[l(e,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.resources.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(Resources)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),l(h,{title:"module"},{default:t(()=>[l(e,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.resources.*
            // ...
            fun Application.module() {
                install(Resources)
                // ...
            }`})]),_:1})]),_:1}),a[21]||(a[21]=s("h2",{id:"resource_classes",tabindex:"-1"},[i("리소스 클래스 생성 "),s("a",{class:"header-anchor",href:"#resource_classes","aria-label":'Permalink to "리소스 클래스 생성 {id="resource_classes"}"'},"​")],-1)),l(u,{id:"resource_classes_server"},{default:t(()=>a[18]||(a[18]=[s("p",null,[i("각 리소스 클래스는 "),s("code",null,"@Resource"),i(" 어노테이션을 가져야 합니다. 아래에서 단일 경로 세그먼트, 쿼리 및 경로 파라미터 등을 정의하는 몇 가지 리소스 클래스 예시를 살펴보겠습니다.")],-1),s("h3",{id:"resource_url",tabindex:"-1"},[i("리소스 URL "),s("a",{class:"header-anchor",href:"#resource_url","aria-label":'Permalink to "리소스 URL {id="resource_url"}"'},"​")],-1),s("p",null,[i("아래 예시는 "),s("code",null,"/articles"),i(" 경로에 응답하는 리소스를 지정하는 "),s("code",null,"Articles"),i(" 클래스를 정의하는 방법을 보여줍니다.")],-1),s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," io.ktor.resources."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"*")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"@Resource"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/articles"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Articles"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")])])])],-1),s("h3",{id:"resource_query_param",tabindex:"-1"},[i("쿼리 파라미터가 있는 리소스 "),s("a",{class:"header-anchor",href:"#resource_query_param","aria-label":'Permalink to "쿼리 파라미터가 있는 리소스 {id="resource_query_param"}"'},"​")],-1),s("p",null,[i("아래 "),s("code",null,"Articles"),i(" 클래스에는 "),s("a",{href:"./server-requests#query_parameters"},"쿼리 파라미터"),i(" 역할을 하는 "),s("code",null,"sort"),i(" 문자열 프로퍼티가 있으며, 이를 통해 "),s("code",null,"sort"),i(" 쿼리 파라미터가 있는 다음 경로("),s("code",null,"/articles?sort=new"),i(")에 응답하는 리소스를 정의할 수 있습니다.")],-1),s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"@Resource"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/articles"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Articles"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," sort: "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"String"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"? "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "new"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")])])])],-1),s("h3",{id:"resource_nested",tabindex:"-1"},[i("중첩 클래스가 있는 리소스 "),s("a",{class:"header-anchor",href:"#resource_nested","aria-label":'Permalink to "중첩 클래스가 있는 리소스 {id="resource_nested"}"'},"​")],-1),s("p",null,[i("여러 경로 세그먼트를 포함하는 리소스를 생성하기 위해 클래스를 중첩할 수 있습니다. 이 경우 중첩 클래스는 외부 클래스 타입을 가진 프로퍼티를 가져야 한다는 점에 유의하세요. 아래 예시는 "),s("code",null,"/articles/new"),i(" 경로에 응답하는 리소스를 보여줍니다.")],-1),s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"@Resource"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/articles"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Articles"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    @Resource"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"new"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," New"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," parent: "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Articles"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Articles"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1),s("h3",{id:"resource_path_param",tabindex:"-1"},[i("경로 파라미터가 있는 리소스 "),s("a",{class:"header-anchor",href:"#resource_path_param","aria-label":'Permalink to "경로 파라미터가 있는 리소스 {id="resource_path_param"}"'},"​")],-1),s("p",null,[i("아래 예시는 경로 세그먼트와 일치하며 "),s("code",null,"id"),i("라는 이름으로 캡처되는 "),s("a",{href:"#resource_nested"},"중첩된"),i(),s("code",null,"{id}"),i(" 정수 "),s("a",{href:"./server-routing#path_parameter"},"경로 파라미터"),i("를 추가하는 방법을 보여줍니다.")],-1),s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"@Resource"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/articles"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Articles"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    @Resource"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"{id}"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Id"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," parent: "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Articles"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Articles"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(), "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"val"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," id: "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Long"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1),s("p",null,[i("예를 들어, 이 리소스는 "),s("code",null,"/articles/12"),i("에 응답하는 데 사용될 수 있습니다.")],-1)])),_:1}),a[22]||(a[22]=r(`<h3 id="example_crud" tabindex="-1">예시: CRUD 작업을 위한 리소스 <a class="header-anchor" href="#example_crud" aria-label="Permalink to &quot;예시: CRUD 작업을 위한 리소스 {id=&quot;example_crud&quot;}&quot;">​</a></h3><p>위 예시들을 종합하여 CRUD 작업을 위한 <code>Articles</code> 리소스를 생성해 보겠습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/articles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sort: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @Resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> New</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parent: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @Resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{id}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parent: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        @Resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;edit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Edit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parent: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이 리소스는 모든 아티클을 나열하고, 새 아티클을 게시하고, 편집하는 등에 사용될 수 있습니다. 다음 장에서 이 리소스에 대한 <a href="#define_route">라우트 핸들러를 정의하는</a> 방법을 살펴보겠습니다.</p><blockquote><p>전체 예시는 여기에서 확인할 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/resource-routing" target="_blank" rel="noreferrer">resource-routing</a>.</p></blockquote><h2 id="define_route" tabindex="-1">라우트 핸들러 정의 <a class="header-anchor" href="#define_route" aria-label="Permalink to &quot;라우트 핸들러 정의 {id=&quot;define_route&quot;}&quot;">​</a></h2><p>타입이 지정된 리소스에 대한 <a href="./server-routing#define_route">라우트 핸들러</a>를 정의하려면, 리소스 클래스를 동사 함수(<code>get</code>, <code>post</code>, <code>put</code> 등)에 전달해야 합니다. 예를 들어, 아래 라우트 핸들러는 <code>/articles</code> 경로에 응답합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/articles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Resources)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { articles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Get all articles ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;List of articles: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$articles</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>아래 예시는 <a href="#example_crud">예시: CRUD 작업을 위한 리소스</a>에서 생성된 <code>Articles</code> 리소스에 대한 라우트 핸들러를 정의하는 방법을 보여줍니다. 라우트 핸들러 내에서 <code>Article</code>을(를) 파라미터로 접근하고 해당 프로퍼티 값을 얻을 수 있다는 점에 유의하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Resources)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { article </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Get all articles ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;List of articles sorted starting from \${article.sort}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles.New</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Show a page with fields for creating a new article ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Create a new article&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Save an article ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;An article is saved&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpStatusCode.Created)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles.Id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { article </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Show an article with id \${article.id} ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;An article with id \${article.id}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpStatusCode.OK)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Articles.Id.Edit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { article </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Show a page with fields for editing an article ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Edit an article with id \${article.parent.id}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpStatusCode.OK)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; { article </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Update an article ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;An article with id \${article.id} updated&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpStatusCode.OK)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; { article </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Delete an article ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;An article with id \${article.id} deleted&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpStatusCode.OK)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>각 엔드포인트에 대한 요청 처리 팁은 다음과 같습니다:</p><ul><li><p><code>get&lt;Articles&gt;</code></p><p>이 라우트 핸들러는 <code>sort</code> 쿼리 파라미터에 따라 정렬된 모든 아티클을 반환해야 합니다. 예를 들어, 이는 모든 아티클이 포함된 <a href="./server-responses#html">HTML 페이지</a> 또는 <a href="./server-responses#object">JSON 객체</a>일 수 있습니다.</p></li><li><p><code>get&lt;Articles.New&gt;</code></p><p>이 엔드포인트는 새 아티클 생성을 위한 필드가 포함된 <a href="./server-responses#html">웹 폼</a>으로 응답합니다.</p></li><li><p><code>post&lt;Articles&gt;</code></p><p><code>post&lt;Articles&gt;</code> 엔드포인트는 웹 폼을 사용하여 전송된 <a href="./server-requests#form_parameters">파라미터</a>를 수신하도록 되어 있습니다. Ktor는 또한 <code>ContentNegotiation</code> 플러그인을 사용하여 JSON 데이터를 <a href="./server-requests#objects">객체</a>로 수신할 수 있도록 합니다.</p></li><li><p><code>get&lt;Articles.Id&gt;</code></p><p>이 라우트 핸들러는 지정된 식별자를 가진 아티클을 반환해야 합니다. 이는 아티클을 보여주는 <a href="./server-responses#html">HTML 페이지</a>이거나 아티클 데이터가 포함된 <a href="./server-responses#object">JSON 객체</a>일 수 있습니다.</p></li><li><p><code>get&lt;Articles.Id.Edit&gt;</code></p><p>이 엔드포인트는 기존 아티클 편집을 위한 필드가 포함된 <a href="./server-responses#html">웹 폼</a>으로 응답합니다.</p></li><li><p><code>put&lt;Articles.Id&gt;</code></p><p><code>post&lt;Articles&gt;</code> 엔드포인트와 유사하게, <code>put</code> 핸들러는 웹 폼을 사용하여 전송된 <a href="./server-requests#form_parameters">폼 파라미터</a>를 수신합니다.</p></li><li><p><code>delete&lt;Articles.Id&gt;</code></p><p>이 라우트 핸들러는 지정된 식별자를 가진 아티클을 삭제합니다.</p></li></ul><p>전체 예시는 여기에서 확인할 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/resource-routing" target="_blank" rel="noreferrer">resource-routing</a>.</p><h2 id="resource_links" tabindex="-1">리소스로부터 링크 생성 <a class="header-anchor" href="#resource_links" aria-label="Permalink to &quot;리소스로부터 링크 생성 {id=&quot;resource_links&quot;}&quot;">​</a></h2><p>리소스 정의를 라우팅에 사용하는 것 외에도, 링크를 생성하는 데에도 사용될 수 있습니다. 이는 때때로 _역방향 라우팅_이라고 불립니다. 리소스로부터 링크를 생성하는 것은 <a href="./server-html-dsl">HTML DSL</a>로 생성된 HTML 문서에 이러한 링크를 추가해야 하거나, <a href="./server-responses#redirect">리다이렉션 응답</a>을 생성해야 할 때 유용할 수 있습니다.</p><p><code>Resources</code> 플러그인은 <code>Application</code>에 오버로드된 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-resources/io.ktor.server.resources/href.html" target="_blank" rel="noreferrer">href</a> 메서드를 추가하며, 이를 통해 <code>Resource</code>로부터 링크를 생성할 수 있습니다. 예를 들어, 아래 코드 스니펫은 <a href="#example_crud">위에 정의된</a> <code>Edit</code> 리소스에 대한 링크를 생성합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Articles.Id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Edit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Articles.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span></code></pre></div><p>상위 <code>Articles</code> 리소스가 기본값 <code>new</code>를 가진 <code>sort</code> 쿼리 파라미터를 정의하므로, <code>link</code> 변수는 다음을 포함합니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/articles/123/edit?sort=new</span></span></code></pre></div><p>호스트와 프로토콜을 지정하는 URL을 생성하려면 <code>URLBuilder</code>를 <code>href</code> 메서드에 제공할 수 있습니다. 추가 쿼리 파라미터도 <code>URLBuilder</code>를 사용하여 지정할 수 있으며, 이 예시에서 보여줍니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> urlBuilder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(URLProtocol.HTTPS, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ktor.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parametersOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sort </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), urlBuilder)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> urlBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">buildString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><code>link</code> 변수는 다음을 포함합니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://ktor.io/articles?token=123</span></span></code></pre></div><h3 id="example_build_links" tabindex="-1">예시 <a class="header-anchor" href="#example_build_links" aria-label="Permalink to &quot;예시 {id=&quot;example_build_links&quot;}&quot;">​</a></h3><p>아래 예시는 리소스로부터 생성된 링크를 HTML 응답에 추가하는 방법을 보여줍니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondHtml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this@module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Get all articles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Articles.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">New</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Create a new article&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Articles.Id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Edit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Articles.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Edit an exising article&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> urlBuilder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(URLProtocol.HTTPS, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ktor.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parametersOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Articles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sort </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), urlBuilder)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> urlBuilder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">buildString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">link } }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>전체 예시는 여기에서 확인할 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/resource-routing" target="_blank" rel="noreferrer">resource-routing</a>.</p>`,27))])}const R=F(B,[["render",m]]);export{x as __pageData,R as default};
