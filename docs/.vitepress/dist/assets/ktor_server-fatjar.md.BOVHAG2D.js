import{_ as p,C as t,c as o,o as d,j as s,G as e,ag as k,a as i,w as l}from"./chunks/framework.Bksy39di.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/server-fatjar.md","filePath":"ktor/server-fatjar.md","lastUpdated":1755457140000}'),h={name:"ktor/server-fatjar.md"};function c(u,a,g,E,f,b){const n=t("tldr"),r=t("link-summary");return d(),o("div",null,[a[2]||(a[2]=s("h1",{id:"使用-ktor-gradle-插件创建-fat-jars",tabindex:"-1"},[i("使用 Ktor Gradle 插件创建 fat JARs "),s("a",{class:"header-anchor",href:"#使用-ktor-gradle-插件创建-fat-jars","aria-label":'Permalink to "使用 Ktor Gradle 插件创建 fat JARs"'},"​")],-1)),e(n,null,{default:l(()=>a[0]||(a[0]=[s("p",null,[s("b",null,"代码示例"),i(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/deployment-ktor-plugin"}," deployment-ktor-plugin ")],-1)])),_:1}),e(r,null,{default:l(()=>a[1]||(a[1]=[i("了解如何使用 Ktor Gradle 插件创建和运行可执行的 fat JAR。")])),_:1}),a[3]||(a[3]=k(`<p><a href="https://github.com/ktorio/ktor-build-plugins" target="_blank" rel="noreferrer">Ktor Gradle 插件</a>允许你创建并运行一个包含所有代码依赖项（fat JAR）的可执行 JAR。</p><h2 id="configure-plugin" tabindex="-1">配置 Ktor 插件 <a class="header-anchor" href="#configure-plugin" aria-label="Permalink to &quot;配置 Ktor 插件 {id=&quot;configure-plugin&quot;}&quot;">​</a></h2><p>要构建 fat JAR，你需要首先配置 Ktor 插件：</p><ol><li><p>打开 <code>build.gradle.kts</code> 文件并将插件添加到 <code>plugins</code> 代码块中：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.ktor.plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.2.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>确保 <a href="./server-dependencies#create-entry-point">主应用程序类</a> 已配置：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mainClass.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example.ApplicationKt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>可选地，你可以使用 <code>ktor.fatJar</code> 扩展配置要生成的 fat JAR 的名称：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ktor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    fatJar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        archiveFileName.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fat.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>如果你同时应用 Ktor Gradle 插件和 Kotlin 多平台 Gradle 插件，fat JAR 创建特性会自动禁用。 若要能够同时使用它们： 1. 创建一个仅限 JVM 的项目并应用 Ktor Gradle 插件，如上所示。 2. 将 Kotlin 多平台项目作为依赖项添加到该仅限 JVM 的项目中。 如果此变通方法无法解决你的问题，请在 <a href="https://youtrack.jetbrains.com/issue/KTOR-8464" target="_blank" rel="noreferrer">KTOR-8464</a> 中留言告知我们。</p></div><h2 id="build" tabindex="-1">构建并运行 fat JAR <a class="header-anchor" href="#build" aria-label="Permalink to &quot;构建并运行 fat JAR {id=&quot;build&quot;}&quot;">​</a></h2><p>Ktor 插件提供了以下任务用于创建和运行 fat JAR：</p><ul><li><code>buildFatJar</code>：构建一个项目和运行时依赖项的组合 JAR。当此构建完成后，你会在 <code>build/libs</code> 目录下看到 <code>***-all.jar</code> 文件。</li><li><code>runFatJar</code>：构建一个项目的 fat JAR 并运行它。</li></ul><blockquote><p>要了解如何使用 ProGuard 最小化生成的 JAR，请参考 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/proguard" target="_blank" rel="noreferrer">proguard</a> 示例。</p></blockquote>`,9))])}const F=p(h,[["render",c]]);export{y as __pageData,F as default};
