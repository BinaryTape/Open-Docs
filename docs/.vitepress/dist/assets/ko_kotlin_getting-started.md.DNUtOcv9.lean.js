import{_ as p,a as d,b as m,c as f}from"./chunks/reddit.D12ylUj6.js";import{_ as h}from"./chunks/slack.7XnOPcJK.js";import{_ as k}from"./chunks/stackoverflow.DPbD5jBB.js";import{_ as g}from"./chunks/youtube.PhQWcyit.js";import{_,C as a,c as b,o as w,j as t,G as r,ag as i,a as e,w as o}from"./chunks/framework.Bksy39di.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/getting-started.md","filePath":"ko/kotlin/getting-started.md","lastUpdated":1754307826000}'),c={name:"ko/kotlin/getting-started.md"};function K(j,l,v,T,S,y){const s=a("tldr"),n=a("tab"),u=a("tabs");return w(),b("div",null,[l[6]||(l[6]=t("h1",{id:"kotlin-시작하기",tabindex:"-1"},[e("Kotlin 시작하기 "),t("a",{class:"header-anchor",href:"#kotlin-시작하기","aria-label":'Permalink to "Kotlin 시작하기"'},"​")],-1)),r(s,null,{default:o(()=>l[0]||(l[0]=[t("p",null,[e("최신 Kotlin 릴리스:"),t("b",null,[t("a",{href:"/ko/kotlin/whatsnew22"},"2.2.10")])],-1)])),_:1}),l[7]||(l[7]=i("",6)),r(u,null,{default:o(()=>[r(n,{id:"console",title:"콘솔"},{default:o(()=>l[1]||(l[1]=[t("p",null,"여기서는 Kotlin으로 콘솔 애플리케이션을 개발하고 단위 테스트를 생성하는 방법을 배웁니다.",-1),t("ol",null,[t("li",null,[t("p",null,[t("strong",null,[t("a",{href:"/ko/kotlin/jvm-get-started"},"IntelliJ IDEA 프로젝트 마법사로 기본 JVM 애플리케이션 생성"),e(".")])])]),t("li",null,[t("p",null,[t("strong",null,[t("a",{href:"/ko/kotlin/jvm-test-using-junit"},"첫 단위 테스트 작성"),e(".")])])])],-1)])),_:1}),r(n,{id:"backend",title:"백엔드"},{default:o(()=>l[2]||(l[2]=[t("p",null,"여기서는 Kotlin 서버 측으로 백엔드 애플리케이션을 개발하는 방법을 배웁니다.",-1),t("ol",null,[t("li",null,[t("p",null,[t("strong",null,"첫 백엔드 애플리케이션 생성:")]),t("ul",null,[t("li",null,[t("a",{href:"/ko/kotlin/jvm-get-started-spring-boot"},"Spring Boot로 RESTful 웹 서비스 생성")]),t("li",null,[t("a",{href:"https://ktor.io/docs/creating-http-apis.html",target:"_blank",rel:"noreferrer"},"Ktor로 HTTP API 생성")])])]),t("li",null,[t("p",null,[t("strong",null,[t("a",{href:"/ko/kotlin/mixing-java-kotlin-intellij"},"애플리케이션에서 Kotlin과 Java 코드 혼합 방법 학습"),e(".")])])])],-1)])),_:1}),r(n,{id:"cross-platform-mobile",title:"크로스 플랫폼"},{default:o(()=>l[3]||(l[3]=[t("p",null,[e("여기서는 "),t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/get-started.html",target:"_blank",rel:"noreferrer"},"Kotlin Multiplatform"),e("을 사용하여 크로스 플랫폼 애플리케이션을 개발하는 방법을 배웁니다.")],-1),t("ol",null,[t("li",null,[t("p",null,[t("strong",null,[t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/quickstart.html",target:"_blank",rel:"noreferrer"},"크로스 플랫폼 개발을 위한 환경 설정"),e(".")])])]),t("li",null,[t("p",null,[t("strong",null,"iOS 및 Android용 첫 애플리케이션 생성:")]),t("ul",null,[t("li",null,[e("크로스 플랫폼 애플리케이션을 처음부터 생성하고 다음을 수행합니다. "),t("ul",null,[t("li",null,[t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-create-first-app.html",target:"_blank",rel:"noreferrer"},"UI를 네이티브로 유지하면서 비즈니스 로직 공유")]),t("li",null,[t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-multiplatform-create-first-app.html",target:"_blank",rel:"noreferrer"},"비즈니스 로직 및 UI 공유")])])]),t("li",null,[t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-integrate-in-existing-app.html",target:"_blank",rel:"noreferrer"},"기존 Android 애플리케이션이 iOS에서 작동하도록 만들기")]),t("li",null,[t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-ktor-sqldelight.html",target:"_blank",rel:"noreferrer"},"Ktor 및 SQLdelight를 사용하여 크로스 플랫폼 애플리케이션 생성")])])]),t("li",null,[t("p",null,[t("strong",null,[t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-samples.html",target:"_blank",rel:"noreferrer"},"샘플 프로젝트"),e(" 살펴보기")]),e(".")])])],-1)])),_:1}),r(n,{id:"android",title:"Android"},{default:o(()=>l[4]||(l[4]=[t("p",null,[e("Android 개발에 Kotlin을 사용하기 시작하려면 "),t("a",{href:"https://developer.android.com/kotlin/get-started",target:"_blank",rel:"noreferrer"},"Android에서 Kotlin 시작에 대한 Google의 권장 사항"),e("을 읽어보세요.")],-1)])),_:1}),r(n,{id:"data-analysis",title:"데이터 분석"},{default:o(()=>l[5]||(l[5]=[t("p",null,"데이터 파이프라인 구축부터 머신러닝 모델 프로덕션화에 이르기까지, Kotlin은 데이터를 다루고 최대한 활용하는 데 탁월한 선택입니다.",-1),t("ol",null,[t("li",null,[t("p",null,[t("strong",null,"IDE 내에서 원활하게 노트북 생성 및 편집:")]),t("ul",null,[t("li",null,[t("a",{href:"/ko/kotlin/get-started-with-kotlin-notebooks"},"Kotlin Notebook 시작하기")])])]),t("li",null,[t("p",null,[t("strong",null,"데이터 탐색 및 실험:")]),t("ul",null,[t("li",null,[t("a",{href:"https://kotlin.github.io/dataframe/overview.html",target:"_blank",rel:"noreferrer"},"DataFrame"),e(" – 데이터 분석 및 조작을 위한 라이브러리.")]),t("li",null,[t("a",{href:"https://kotlin.github.io/kandy/welcome.html",target:"_blank",rel:"noreferrer"},"Kandy"),e(" – 데이터 시각화를 위한 플로팅 도구.")])])]),t("li",null,[t("p",null,[t("strong",null,"Twitter에서 Kotlin For Data Analysis 팔로우:"),e(),t("a",{href:"http://twitter.com/KotlinForData",target:"_blank",rel:"noreferrer"},"KotlinForData"),e(".")])])],-1)])),_:1})]),_:1}),l[8]||(l[8]=i("",6))])}const E=_(c,[["render",K]]);export{D as __pageData,E as default};
