import{_ as d,C as p,c as g,o as r,ag as k,G as l,w as n,j as s,a as i}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/dokka-maven.md","filePath":"ja/kotlin/dokka-maven.md","lastUpdated":1754307826000}'),y={name:"ja/kotlin/dokka-maven.md"};function o(c,a,u,D,A,f){const t=p("def"),E=p("list"),e=p("anchor"),h=p("deflist");return r(),g("div",null,[a[40]||(a[40]=k("",37)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"skip"},{default:n(()=>a[0]||(a[0]=[s("p",null,"ドキュメントの生成をスキップするかどうか。",-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"moduleName"},{default:n(()=>a[1]||(a[1]=[s("p",null,"プロジェクト/モジュールを参照するために使用される表示名。目次、ナビゲーション、ログなどに使用されます。",-1),s("p",null,[i("デフォルト: "),s("code",null,"{project.artifactId}")],-1)])),_:1}),l(t,{title:"outputDir"},{default:n(()=>a[2]||(a[2]=[s("p",null,"フォーマットに関わらず、ドキュメントが生成されるディレクトリ。",-1),s("p",null,[i("デフォルト: "),s("code",null,"{project.basedir}/target/dokka")],-1)])),_:1}),l(t,{title:"failOnWarning"},{default:n(()=>a[3]||(a[3]=[s("p",null," Dokkaが警告またはエラーを出力した場合に、ドキュメントの生成を失敗させるかどうか。 プロセスは、すべてのエラーと警告が出力されるまで待機します。 ",-1),s("p",null,[i("この設定は"),s("code",null,"reportUndocumented"),i("と組み合わせるとうまく機能します。")],-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"suppressObviousFunctions"},{default:n(()=>[a[5]||(a[5]=s("p",null,"自明な関数を抑制するかどうか。",-1)),a[6]||(a[6]=s("p",null," 以下の関数は自明であるとみなされます。",-1)),l(E,null,{default:n(()=>a[4]||(a[4]=[s("li",null,[s("code",null,"equals"),i("、"),s("code",null,"hashCode"),i("、"),s("code",null,"toString"),i("のように、 "),s("code",null,"kotlin.Any"),i("、"),s("code",null,"Kotlin.Enum"),i("、"),s("code",null,"java.lang.Object"),i("、 または"),s("code",null,"java.lang.Enum"),i("から継承された関数。 ")],-1),s("li",null,[s("code",null,"dataClass.componentN"),i("や"),s("code",null,"dataClass.copy"),i("のように、 コンパイラによって生成され（合成された）、ドキュメントがない関数。 ")],-1)])),_:1}),a[7]||(a[7]=s("p",null,[i("デフォルト: "),s("code",null,"true")],-1))]),_:1}),l(t,{title:"suppressInheritedMembers"},{default:n(()=>a[8]||(a[8]=[s("p",null,"特定のクラスで明示的にオーバーライドされていない継承メンバーを抑制するかどうか。",-1),s("p",null,[i(" 注意: これにより"),s("code",null,"equals"),i("/"),s("code",null,"hashCode"),i("/"),s("code",null,"toString"),i("のような関数を抑制できますが、 "),s("code",null,"dataClass.componentN"),i("や"),s("code",null,"dataClass.copy"),i("のような合成関数は抑制できません。 それには"),s("code",null,"suppressObviousFunctions"),i("を使用してください。 ")],-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"offlineMode"},{default:n(()=>a[9]||(a[9]=[s("p",null,"ネットワーク経由でリモートファイル/リンクを解決するかどうか。",-1),s("p",null," これには、外部ドキュメントリンク生成に使用されるパッケージリストが含まれます。 例えば、標準ライブラリのクラスをクリック可能にするためなどです。 ",-1),s("p",null,[i(" これを"),s("code",null,"true"),i("に設定すると、特定のケースではビルド時間を大幅に短縮できますが、 ドキュメントの品質やユーザーエクスペリエンスを低下させる可能性もあります。例えば、 標準ライブラリを含む依存関係からのクラス/メンバーリンクを解決しないことなどです。 ")],-1),s("p",null,[i(" 注意: フェッチしたファイルをローカルにキャッシュし、それらをローカルパスとしてDokkaに提供できます。 "),s("code",null,"externalDocumentationLinks"),i("セクションを参照してください。 ")],-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"sourceDirectories"},{default:n(()=>a[10]||(a[10]=[s("p",null,[i(" 分析およびドキュメント化されるソースコードルート。 受け入れられる入力は、ディレクトリおよび個々の"),s("code",null,".kt"),i(" / "),s("code",null,".java"),i("ファイルです。 ")],-1),s("p",null,[i("デフォルト: "),s("code",null,"{project.compileSourceRoots}")],-1)])),_:1}),l(t,{title:"documentedVisibilities"},{default:n(()=>a[11]||(a[11]=[s("p",null,"ドキュメント化すべき可視性修飾子のセット。",-1),s("p",null,[i(" これは、"),s("code",null,"protected"),i("/"),s("code",null,"internal"),i("/"),s("code",null,"private"),i("宣言をドキュメント化したい場合や、 "),s("code",null,"public"),i("宣言を除外して内部APIのみをドキュメント化したい場合に使用できます。 ")],-1),s("p",null,"パッケージごとに設定可能です。",-1),s("p",null,[i("デフォルト: "),s("code",null,"PUBLIC")],-1)])),_:1}),l(t,{title:"reportUndocumented"},{default:n(()=>a[12]||(a[12]=[s("p",null,[s("code",null,"documentedVisibilities"),i("やその他のフィルターによってフィルターされた後、 表示可能なドキュメント化されていない宣言（KDocsがない宣言）について警告を発するかどうか。 ")],-1),s("p",null,[i("この設定は"),s("code",null,"failOnWarning"),i("と組み合わせるとうまく機能します。")],-1),s("p",null,"これはパッケージレベルで上書きできます。",-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"skipDeprecated"},{default:n(()=>a[13]||(a[13]=[s("p",null,[s("code",null,"@Deprecated"),i("で注釈付けされた宣言をドキュメント化するかどうか。")],-1),s("p",null,"これはパッケージレベルで上書きできます。",-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"skipEmptyPackages"},{default:n(()=>a[14]||(a[14]=[s("p",null," 様々なフィルターが適用された後、表示可能な宣言を含まないパッケージをスキップするかどうか。 ",-1),s("p",null,[i(" 例えば、"),s("code",null,"skipDeprecated"),i("が"),s("code",null,"true"),i("に設定されており、 パッケージに非推奨の宣言のみが含まれている場合、そのパッケージは空であるとみなされます。 ")],-1),s("p",null,[i("デフォルト: "),s("code",null,"true")],-1)])),_:1}),l(t,{title:"suppressedFiles"},{default:n(()=>a[15]||(a[15]=[s("p",null," 抑制すべきディレクトリまたは個々のファイル。つまり、そこからの宣言はドキュメント化されません。 ",-1)])),_:1}),l(t,{title:"jdkVersion"},{default:n(()=>a[16]||(a[16]=[s("p",null,"Java型用の外部ドキュメントリンクを生成する際に使用するJDKバージョン。",-1),s("p",null,[i(" 例えば、何らかのpublic宣言のシグネチャで"),s("code",null,"java.util.UUID"),i("を使用しており、 このオプションが"),s("code",null,"8"),i("に設定されている場合、Dokkaはそれに対する "),s("a",{href:"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"},"JDK 8 Javadoc"),i("への外部ドキュメントリンクを生成します。 ")],-1),s("p",null,"デフォルト: JDK 8",-1)])),_:1}),l(t,{title:"languageVersion"},{default:n(()=>a[17]||(a[17]=[s("p",null,[i(" 分析および"),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),i(" 環境を設定するために使用される"),s("a",{href:"https://kotlinlang.org/docs/compatibility-modes.html"},"Kotlin言語バージョン"),i("。 ")],-1),s("p",null,"デフォルトでは、Dokkaに組み込まれているコンパイラで利用可能な最新の言語バージョンが使用されます。",-1)])),_:1}),l(t,{title:"apiVersion"},{default:n(()=>a[18]||(a[18]=[s("p",null,[i(" 分析および"),s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample"),i(" 環境を設定するために使用される"),s("a",{href:"https://kotlinlang.org/docs/compatibility-modes.html"},"Kotlin APIバージョン"),i("。 ")],-1),s("p",null,[i("デフォルトでは、"),s("code",null,"languageVersion"),i("から推測されます。")],-1)])),_:1}),l(t,{title:"noStdlibLink"},{default:n(()=>a[19]||(a[19]=[s("p",null," Kotlinの標準ライブラリのAPIリファレンスドキュメントに繋がる外部ドキュメントリンクを生成するかどうか。 ",-1),s("p",null,[i("注意: "),s("code",null,"noStdLibLink"),i("が"),s("code",null,"false"),i("に設定されている場合、リンクは"),s("strong",null,"生成されます"),i("。")],-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"noJdkLink"},{default:n(()=>[l(e,{name:"includes"}),a[20]||(a[20]=s("p",null,"JDKのJavadocへの外部ドキュメントリンクを生成するかどうか。",-1)),a[21]||(a[21]=s("p",null,[i("JDK Javadocのバージョンは"),s("code",null,"jdkVersion"),i("オプションによって決定されます。")],-1)),a[22]||(a[22]=s("p",null,[i("注意: "),s("code",null,"noJdkLink"),i("が"),s("code",null,"false"),i("に設定されている場合、リンクは"),s("strong",null,"生成されます"),i("。")],-1)),a[23]||(a[23]=s("p",null,[i("デフォルト: "),s("code",null,"false")],-1))]),_:1}),l(t,{title:"includes"},{default:n(()=>a[24]||(a[24]=[s("p",null,[s("a",{href:"/ja/kotlin/dokka-module-and-package-docs"},"モジュールおよびパッケージのドキュメント"),i("を 含むMarkdownファイルの一覧。 ")],-1),s("p",null,"指定されたファイルの内容は解析され、モジュールおよびパッケージの説明としてドキュメントに埋め込まれます。",-1)])),_:1}),l(t,{title:"classpath"},{default:n(()=>a[25]||(a[25]=[s("p",null,"分析およびインタラクティブなサンプル用のクラスパス。",-1),s("p",null,[i(" これは、依存関係から来るいくつかの型が自動的に解決/認識されない場合に役立ちます。 このオプションは、"),s("code",null,".jar"),i("および"),s("code",null,".klib"),i("ファイルの両方を受け入れます。 ")],-1),s("p",null,[i("デフォルト: "),s("code",null,"{project.compileClasspathElements}")],-1)])),_:1}),l(t,{title:"samples"},{default:n(()=>a[26]||(a[26]=[s("p",null,[s("a",{href:"https://kotlinlang.org/docs/kotlin-doc.html#sample-identifier"},"@sample KDocタグ"),i("を介して参照される サンプル関数を含むディレクトリまたはファイルの一覧。 ")],-1)])),_:1})]),_:1}),a[41]||(a[41]=k("",5)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"path"},{default:n(()=>a[27]||(a[27]=[s("p",null," ローカルのソースディレクトリへのパス。パスは現在のモジュールのルートからの相対パスでなければなりません。 ",-1),s("p",null," 注意: Unixベースのパスのみが許可されており、Windows形式のパスはエラーをスローします。 ",-1)])),_:1}),l(t,{title:"url"},{default:n(()=>a[28]||(a[28]=[s("p",null," GitHub、GitLab、Bitbucketなど、ドキュメント読者がアクセスできるソースコードホスティングサービスのURL。 このURLは宣言のソースコードリンクを生成するために使用されます。 ",-1)])),_:1}),l(t,{title:"lineSuffix"},{default:n(()=>[a[30]||(a[30]=s("p",null," ソースコードの行番号をURLに追加するために使用されるサフィックス。 これにより、読者はファイルだけでなく、宣言の特定の行番号にもナビゲートできます。 ",-1)),a[31]||(a[31]=s("p",null,[i(" 番号自体は指定されたサフィックスに追加されます。例えば、このオプションが"),s("code",null,"#L"),i("に設定され、 行番号が10の場合、結果のURLサフィックスは"),s("code",null,"#L10"),i("になります。 ")],-1)),a[32]||(a[32]=s("p",null," 一般的なサービスで使用されるサフィックス:",-1)),l(E,null,{default:n(()=>a[29]||(a[29]=[s("li",null,[i("GitHub: "),s("code",null,"#L")],-1),s("li",null,[i("GitLab: "),s("code",null,"#L")],-1),s("li",null,[i("Bitbucket: "),s("code",null,"#lines-")],-1)])),_:1})]),_:1})]),_:1}),a[42]||(a[42]=k("",5)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"url"},{default:n(()=>a[33]||(a[33]=[s("p",null,[i("リンク先のドキュメントのルートURL。末尾のスラッシュを"),s("strong",null,"含める必要があります"),i("。")],-1),s("p",null,[i(" Dokkaは、与えられたURLの"),s("code",null,"package-list"),i("を自動的に見つけ出し、 宣言を相互にリンクするために最善を尽くします。 ")],-1),s("p",null,[i(" 自動解決が失敗した場合、または代わりにローカルキャッシュファイルを使用したい場合は、 "),s("code",null,"packageListUrl"),i("オプションの設定を検討してください。 ")],-1)])),_:1}),l(t,{title:"packageListUrl"},{default:n(()=>a[34]||(a[34]=[s("p",null,[s("code",null,"package-list"),i("の正確な場所。これはDokkaが自動的に解決することに依存する代替手段です。 ")],-1),s("p",null," パッケージリストには、モジュール名やパッケージ名など、ドキュメントおよびプロジェクト自体に関する情報が含まれています。 ",-1),s("p",null,"これはネットワーク呼び出しを避けるために、ローカルにキャッシュされたファイルでも構いません。",-1)])),_:1})]),_:1}),a[43]||(a[43]=k("",3)),l(h,{collapsible:"true"},{default:n(()=>[l(t,{title:"matchingRegex"},{default:n(()=>a[35]||(a[35]=[s("p",null,"パッケージを照合するために使用される正規表現。",-1),s("p",null,[i("デフォルト: "),s("code",null,".*")],-1)])),_:1}),l(t,{title:"suppress"},{default:n(()=>a[36]||(a[36]=[s("p",null,"このパッケージをドキュメント生成時にスキップすべきかどうか。",-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"documentedVisibilities"},{default:n(()=>a[37]||(a[37]=[s("p",null,"ドキュメント化すべき可視性修飾子のセット。",-1),s("p",null,[i(" これは、このパッケージ内の"),s("code",null,"protected"),i("/"),s("code",null,"internal"),i("/"),s("code",null,"private"),i("宣言をドキュメント化したい場合や、 "),s("code",null,"public"),i("宣言を除外して内部APIのみをドキュメント化したい場合に使用できます。 ")],-1),s("p",null,[i("デフォルト: "),s("code",null,"PUBLIC")],-1)])),_:1}),l(t,{title:"skipDeprecated"},{default:n(()=>a[38]||(a[38]=[s("p",null,[s("code",null,"@Deprecated"),i("で注釈付けされた宣言をドキュメント化するかどうか。")],-1),s("p",null,"これはプロジェクト/モジュールレベルで設定できます。",-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1}),l(t,{title:"reportUndocumented"},{default:n(()=>a[39]||(a[39]=[s("p",null,[s("code",null,"documentedVisibilities"),i("やその他のフィルターによってフィルターされた後、 表示可能なドキュメント化されていない宣言（KDocsがない宣言）について警告を発するかどうか。 ")],-1),s("p",null,[i("この設定は"),s("code",null,"failOnWarning"),i("と組み合わせるとうまく機能します。")],-1),s("p",null,[i("デフォルト: "),s("code",null,"false")],-1)])),_:1})]),_:1}),a[44]||(a[44]=k("",3))])}const v=d(y,[["render",o]]);export{b as __pageData,v as default};
