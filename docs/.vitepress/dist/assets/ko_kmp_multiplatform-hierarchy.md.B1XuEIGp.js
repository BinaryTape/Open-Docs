import{_ as p,a as d,b as o}from"./chunks/manual-hierarchical-structure.BFgQV1II.js";import{_ as r,C as k,c as E,o as c,ag as t,G as l,j as i,w as n,a as s}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"계층형 프로젝트 구조","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-hierarchy.md","filePath":"ko/kmp/multiplatform-hierarchy.md","lastUpdated":1755516278000}'),g={name:"ko/kmp/multiplatform-hierarchy.md"};function y(u,a,m,F,v,A){const e=k("TabItem"),h=k("Tabs");return c(),E("div",null,[a[12]||(a[12]=t('<h1 id="계층형-프로젝트-구조" tabindex="-1">계층형 프로젝트 구조 <a class="header-anchor" href="#계층형-프로젝트-구조" aria-label="Permalink to &quot;계층형 프로젝트 구조&quot;">​</a></h1><p>Kotlin Multiplatform 프로젝트는 계층형 소스 세트 구조를 지원합니다. 이는 일부, 하지만 전부는 아닌, <a href="./multiplatform-dsl-reference#targets">지원되는 타겟</a> 간에 공통 코드를 공유하기 위해 중간 소스 세트의 계층을 구성할 수 있음을 의미합니다. 중간 소스 세트를 사용하면 다음을 수행하는 데 도움이 됩니다.</p><ul><li>일부 타겟에 특정 API를 제공합니다. 예를 들어, 라이브러리는 Kotlin/Native 타겟을 위한 중간 소스 세트에 네이티브(native) 특정 API를 추가할 수 있지만, Kotlin/JVM 타겟에는 추가할 수 없습니다.</li><li>일부 타겟에 특정 API를 사용합니다. 예를 들어, Kotlin Multiplatform 라이브러리가 중간 소스 세트를 구성하는 일부 타겟에 대해 제공하는 풍부한 API의 이점을 누릴 수 있습니다.</li><li>프로젝트에서 플랫폼 의존적인 라이브러리를 사용합니다. 예를 들어, 중간 iOS 소스 세트에서 iOS 특정 의존성(dependency)에 접근할 수 있습니다.</li></ul><p>Kotlin 툴체인(toolchain)은 각 소스 세트가 해당 소스 세트가 컴파일되는 모든 타겟에 사용 가능한 API에만 접근할 수 있도록 보장합니다. 이는 Windows 특정 API를 사용한 다음 macOS로 컴파일하여 링키지(linkage) 오류 또는 런타임(runtime) 시 정의되지 않은 동작을 초래하는 경우를 방지합니다.</p><p>소스 세트 계층을 설정하는 권장 방법은 <a href="#default-hierarchy-template">기본 계층 템플릿</a>을 사용하는 것입니다. 이 템플릿은 가장 일반적인 경우를 다룹니다. 더 고급 프로젝트를 가지고 있다면 <a href="#manual-configuration">수동으로 구성</a>할 수 있습니다. 이는 더 낮은 수준의 접근 방식이며, 더 유연하지만 더 많은 노력과 지식이 필요합니다.</p><h2 id="기본-계층-템플릿" tabindex="-1">기본 계층 템플릿 <a class="header-anchor" href="#기본-계층-템플릿" aria-label="Permalink to &quot;기본 계층 템플릿&quot;">​</a></h2><p>Kotlin Gradle 플러그인에는 내장된 기본 <a href="#see-the-full-hierarchy-template">계층 템플릿</a>이 있습니다. 여기에는 일부 일반적인 사용 사례를 위한 미리 정의된 중간 소스 세트가 포함되어 있습니다. 플러그인은 프로젝트에 지정된 타겟을 기반으로 해당 소스 세트를 자동으로 설정합니다.</p><p>공유 코드를 포함하는 프로젝트 모듈의 <code>build.gradle(.kts)</code> 파일을 살펴보세요:</p>',8)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[0]||(a[0]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    androidTarget"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosSimulatorArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[1]||(a[1]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    androidTarget()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosSimulatorArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[13]||(a[13]=t('<p>코드에서 <code>androidTarget</code>, <code>iosArm64</code>, <code>iosSimulatorArm64</code> 타겟을 선언하면 Kotlin Gradle 플러그인은 템플릿에서 적합한 공유 소스 세트를 찾아 생성해 줍니다. 결과 계층은 다음과 같습니다:</p><p><img src="'+p+'" alt="An example of using the default hierarchy template"></p><p>색상이 있는 소스 세트는 실제로 프로젝트에 생성되어 존재하며, 기본 템플릿의 회색 소스 세트는 무시됩니다. 예를 들어, 프로젝트에 watchOS 타겟이 없기 때문에 Kotlin Gradle 플러그인은 <code>watchos</code> 소스 세트를 생성하지 않았습니다.</p><p><code>watchosArm64</code>와 같은 watchOS 타겟을 추가하면 <code>watchos</code> 소스 세트가 생성되고, <code>apple</code>, <code>native</code>, <code>common</code> 소스 세트의 코드가 <code>watchosArm64</code>로도 컴파일됩니다.</p><p>Kotlin Gradle 플러그인은 기본 계층 템플릿의 모든 소스 세트에 대해 타입-세이프(type-safe) 및 정적 접근자(static accessor)를 모두 제공하므로, <a href="#manual-configuration">수동 구성</a>과 비교하여 <code>by getting</code> 또는 <code>by creating</code> 구성 없이 참조할 수 있습니다.</p><p>공유 모듈의 <code>build.gradle(.kts)</code> 파일에서 해당 타겟을 먼저 선언하지 않고 소스 세트에 접근하려고 하면 경고가 표시됩니다:</p>',6)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[2]||(a[2]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    androidTarget"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosSimulatorArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    sourceSets"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        iosMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependencies"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            implementation"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Warning: accessing source set without declaring the target")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        linuxX64Main"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[3]||(a[3]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    androidTarget()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosSimulatorArm64()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sourceSets {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        iosMain {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependencies {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                implementation "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Warning: accessing source set without declaring the target")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        linuxX64Main { }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[14]||(a[14]=t(`<div class="note custom-block"><p class="custom-block-title">NOTE</p><p>이 예시에서 <code>apple</code> 및 <code>native</code> 소스 세트는 <code>iosArm64</code> 및 <code>iosSimulatorArm64</code> 타겟으로만 컴파일됩니다. 이름과는 달리 이들은 전체 iOS API에 접근할 수 있습니다. 이는 <code>native</code>와 같은 소스 세트의 경우 직관적이지 않을 수 있습니다. 모든 네이티브 타겟에서 사용 가능한 API만 이 소스 세트에서 접근 가능할 것이라고 예상할 수 있기 때문입니다. 이 동작은 향후 변경될 수 있습니다.</p></div><h3 id="추가-구성" tabindex="-1">추가 구성 <a class="header-anchor" href="#추가-구성" aria-label="Permalink to &quot;추가 구성&quot;">​</a></h3><p>기본 계층 템플릿을 조정해야 할 수도 있습니다. 이전에 <code>dependsOn</code> 호출을 사용하여 <a href="#manual-configuration">수동으로</a> 중간 소스를 도입했다면, 기본 계층 템플릿 사용이 취소되고 다음 경고가 발생합니다:</p><div class="language-none vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">none</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>The Default Kotlin Hierarchy Template was not applied to &#39;&lt;project-name&gt;&#39;:</span></span>
<span class="line"><span>Explicit .dependsOn() edges were configured for the following source sets:</span></span>
<span class="line"><span>[&lt;... names of the source sets with manually configured dependsOn-edges...&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Consider removing dependsOn-calls or disabling the default template by adding</span></span>
<span class="line"><span>    &#39;kotlin.mpp.applyDefaultHierarchyTemplate=false&#39;</span></span>
<span class="line"><span>to your gradle.properties</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Learn more about hierarchy templates: https://kotl.in/hierarchy-template</span></span></code></pre></div><p>이 문제를 해결하려면 다음 중 하나를 수행하여 프로젝트를 구성하세요.</p><ul><li><a href="#replacing-a-manual-configuration">수동 구성을 기본 계층 템플릿으로 교체</a></li><li><a href="#creating-additional-source-sets">기본 계층 템플릿에 추가 소스 세트 생성</a></li><li><a href="#modifying-source-sets">기본 계층 템플릿으로 생성된 소스 세트 수정</a></li></ul><h4 id="수동-구성을-기본-계층-템플릿으로-교체" tabindex="-1">수동 구성을 기본 계층 템플릿으로 교체 <a class="header-anchor" href="#수동-구성을-기본-계층-템플릿으로-교체" aria-label="Permalink to &quot;수동 구성을 기본 계층 템플릿으로 교체&quot;">​</a></h4><p><strong>경우</strong>. 모든 중간 소스 세트가 현재 기본 계층 템플릿으로 다뤄지고 있는 경우.</p><p><strong>해결책</strong>. 공유 모듈의 <code>build.gradle(.kts)</code> 파일에서 모든 수동 <code>dependsOn()</code> 호출과 <code>by creating</code> 구성으로 된 소스 세트를 제거하세요. 모든 기본 소스 세트 목록을 확인하려면 <a href="#see-the-full-hierarchy-template">전체 계층 템플릿</a>을 참조하세요.</p><h4 id="추가-소스-세트-생성" tabindex="-1">추가 소스 세트 생성 <a class="header-anchor" href="#추가-소스-세트-생성" aria-label="Permalink to &quot;추가 소스 세트 생성&quot;">​</a></h4><p><strong>경우</strong>. 기본 계층 템플릿이 아직 제공하지 않는 소스 세트를 추가하고 싶은 경우, 예를 들어 macOS와 JVM 타겟 사이에 하나를 추가하는 경우.</p><p><strong>해결책</strong>:</p>`,12)),i("ol",null,[a[7]||(a[7]=i("li",null,[i("p",null,[s("공유 모듈의 "),i("code",null,"build.gradle(.kts)"),s(" 파일에서 "),i("code",null,"applyDefaultHierarchyTemplate()"),s("을 명시적으로 호출하여 템플릿을 다시 적용합니다.")])],-1)),i("li",null,[a[6]||(a[6]=i("p",null,[i("code",null,"dependsOn()"),s("을 사용하여 추가 소스 세트를 "),i("a",{href:"#manual-configuration"},"수동으로 구성"),s("합니다.")],-1)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[4]||(a[4]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    jvm"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    macosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosSimulatorArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Apply the default hierarchy again. It'll create, for example, the iosMain source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    applyDefaultHierarchyTemplate"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    sourceSets"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Create an additional jvmAndMacos source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," jvmAndMacos "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"by"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," creating"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(commonMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosArm64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(jvmAndMacos)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        jvmMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(jvmAndMacos)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[5]||(a[5]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    jvm()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    macosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosSimulatorArm64()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Apply the default hierarchy again. It'll create, for example, the iosMain source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    applyDefaultHierarchyTemplate()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sourceSets {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Create an additional jvmAndMacos source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        jvmAndMacos {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(commonMain"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosArm64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(jvmAndMacos"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        jvmMain {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(jvmAndMacos"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    } ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})])]),a[15]||(a[15]=t('<h4 id="소스-세트-수정" tabindex="-1">소스 세트 수정 <a class="header-anchor" href="#소스-세트-수정" aria-label="Permalink to &quot;소스 세트 수정&quot;">​</a></h4><p><strong>경우</strong>. 템플릿에 의해 생성된 것과 정확히 동일한 이름을 가진 소스 세트가 이미 있지만, 프로젝트 내에서 다른 타겟 세트들 간에 공유되는 경우. 예를 들어, <code>nativeMain</code> 소스 세트가 데스크톱 특정 타겟인 <code>linuxX64</code>, <code>mingwX64</code>, <code>macosX64</code> 간에만 공유되는 경우.</p><p><strong>해결책</strong>. 현재 템플릿의 소스 세트 간에 기본 <code>dependsOn</code> 관계를 수정할 방법은 없습니다. 또한 <code>nativeMain</code>과 같은 소스 세트의 구현과 의미가 모든 프로젝트에서 동일해야 한다는 점도 중요합니다.</p><p>하지만 다음 중 하나를 수행할 수 있습니다.</p><ul><li>기본 계층 템플릿 또는 수동으로 생성된 소스 세트 중에서 목적에 맞는 다른 소스 세트를 찾습니다.</li><li><code>gradle.properties</code> 파일에 <code>kotlin.mpp.applyDefaultHierarchyTemplate=false</code>를 추가하여 템플릿 사용을 완전히 해제하고 모든 소스 세트를 수동으로 구성합니다.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>현재 자체 계층 템플릿을 생성할 수 있는 API를 개발 중입니다. 이는 계층 구성이 기본 템플릿과 크게 다른 프로젝트에 유용할 것입니다. 이 API는 아직 준비되지 않았지만, 사용해보고 싶다면 <code>applyHierarchyTemplate {}</code> 블록과 <code>KotlinHierarchyTemplate.default</code> 선언을 예시로 살펴보세요. 이 API는 아직 개발 중이라는 점을 명심하세요. 테스트되지 않았을 수 있으며 향후 릴리스에서 변경될 수 있습니다.</p></div>',6)),a[16]||(a[16]=i("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"전체-계층-템플릿-보기",tabindex:"-1"},[s("전체 계층 템플릿 보기 "),i("a",{class:"header-anchor",href:"#전체-계층-템플릿-보기","aria-label":'Permalink to "전체 계층 템플릿 보기 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),a[17]||(a[17]=t('<p>프로젝트가 컴파일될 타겟을 선언하면, 플러그인은 템플릿에서 지정된 타겟을 기반으로 공유 소스 세트를 선택하고 프로젝트에 생성합니다.</p><p><img src="'+d+'" alt="Default hierarchy template"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>이 예시는 <code>Main</code> 접미사를 생략하고 프로젝트의 프로덕션(production) 부분만 보여줍니다(예: <code>commonMain</code> 대신 <code>common</code> 사용). 하지만 <code>*Test</code> 소스에서도 모든 것이 동일합니다.</p></div><h2 id="수동-구성" tabindex="-1">수동 구성 <a class="header-anchor" href="#수동-구성" aria-label="Permalink to &quot;수동 구성&quot;">​</a></h2><p>소스 세트 구조에 중간 소스를 수동으로 도입할 수 있습니다. 이는 여러 타겟을 위한 공유 코드를 포함합니다.</p><p>예를 들어, 네이티브 Linux, Windows, macOS 타겟(<code>linuxX64</code>, <code>mingwX64</code>, <code>macosX64</code>) 간에 코드를 공유하고 싶다면 다음과 같이 하세요.</p>',6)),i("ol",null,[a[11]||(a[11]=i("li",null,[i("p",null,[s("공유 모듈의 "),i("code",null,"build.gradle(.kts)"),s(" 파일에 이 타겟들을 위한 공유 로직을 포함하는 중간 소스 세트인 "),i("code",null,"desktopMain"),s("을 추가합니다.")])],-1)),i("li",null,[a[10]||(a[10]=i("p",null,[i("code",null,"dependsOn"),s(" 관계를 사용하여 소스 세트 계층을 설정합니다. "),i("code",null,"commonMain"),s("을 "),i("code",null,"desktopMain"),s("에 연결하고, 그 다음 "),i("code",null,"desktopMain"),s("을 각 타겟 소스 세트에 연결합니다.")],-1)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[8]||(a[8]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    linuxX64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    mingwX64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    macosX64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    sourceSets"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," desktopMain "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"by"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," creating"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(commonMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        linuxX64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        mingwX64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosX64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[9]||(a[9]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    linuxX64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    mingwX64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    macosX64()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sourceSets {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        desktopMain {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(commonMain"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        linuxX64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        mingwX64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosX64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})])]),a[18]||(a[18]=t('<p>결과 계층 구조는 다음과 같습니다.</p><p><img src="'+o+'" alt="Manually configured hierarchical structure"></p><p>다음 타겟 조합에 대해 공유 소스 세트를 가질 수 있습니다.</p><ul><li>JVM 또는 Android + JS + Native</li><li>JVM 또는 Android + Native</li><li>JS + Native</li><li>JVM 또는 Android + JS</li><li>Native</li></ul><p>Kotlin은 현재 다음 조합에 대한 소스 세트 공유를 지원하지 않습니다.</p><ul><li>여러 JVM 타겟</li><li>JVM + Android 타겟</li><li>여러 JS 타겟</li></ul><p>공유 네이티브 소스 세트에서 플랫폼별 API에 접근해야 하는 경우, IntelliJ IDEA가 공유 네이티브 코드에서 사용할 수 있는 공통 선언을 탐지하는 데 도움을 줄 것입니다. 다른 경우에는 Kotlin의 <a href="./multiplatform-expect-actual">expected 및 actual 선언</a> 메커니즘을 사용하세요.</p>',7))])}const _=r(g,[["render",y]]);export{C as __pageData,_ as default};
