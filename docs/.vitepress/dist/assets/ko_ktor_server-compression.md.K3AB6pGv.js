import{_ as u,C as t,c as m,o as y,G as e,ag as d,j as i,w as a,a as n}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-compression.md","filePath":"ko/ktor/server-compression.md","lastUpdated":1755457140000}'),v={name:"ko/ktor/server-compression.md"};function b(f,s,C,_,F,q){const k=t("TopicTitle"),h=t("show-structure"),c=t("primary-label"),p=t("Links"),E=t("tldr"),l=t("code-block"),o=t("TabItem"),r=t("Tabs"),g=t("list");return y(),m("div",null,[e(k,{labelRef:"server-plugin",title:"압축"}),e(h,{for:"chapter",depth:"2"}),e(c,{ref:"server-plugin"},null,512),e(E,null,{default:a(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"필수 의존성"),n(": "),i("code",null,"io.ktor:ktor-server-compression")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"코드 예시"),n(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/compression"}," compression ")],-1)),i("p",null,[i("b",null,[e(p,{href:"/ktor/server-native",summary:"Ktor는 Kotlin/Native를 지원하며 추가 런타임이나 가상 머신 없이 서버를 실행할 수 있게 합니다."},{default:a(()=>s[0]||(s[0]=[n("네이티브 서버")])),_:1}),s[1]||(s[1]=n(" 지원"))]),s[2]||(s[2]=n(": ✖️ "))])]),_:1}),s[17]||(s[17]=d('<p>Ktor는 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-compression/io.ktor.server.plugins.compression/-compression.html" target="_blank" rel="noreferrer">Compression</a> 플러그인을 사용하여 응답 본문을 압축하고 요청 본문을 압축 해제하는 기능을 제공합니다. <code>gzip</code> 및 <code>deflate</code>를 포함한 다양한 압축 알고리즘을 사용할 수 있으며, 데이터 압축에 필요한 조건(예: 콘텐츠 유형 또는 응답 크기)을 지정하거나, 특정 요청 매개변수에 따라 데이터를 압축할 수도 있습니다.</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p><code>Compression</code> 플러그인은 현재 <code>SSE</code> 응답을 지원하지 않습니다.</p></div><blockquote><p>Ktor에서 미리 압축된 정적 파일을 제공하는 방법을 알아보려면 <a href="./server-static-content#precompressed">미리 압축된 파일</a>을 참조하세요.</p></blockquote><h2 id="add_dependencies" tabindex="-1">의존성 추가 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;의존성 추가 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>Compression</code>을 사용하려면 빌드 스크립트에 <code>ktor-server-compression</code> 아티팩트를 포함해야 합니다: </p>',5)),e(r,{group:"languages"},{default:a(()=>[e(o,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-compression:$ktor_version")'})]),_:1}),e(o,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-compression:$ktor_version"'})]),_:1}),e(o,{title:"Maven","group-key":"maven"},{default:a(()=>[e(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-compression-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[18]||(s[18]=i("h2",{id:"install_plugin",tabindex:"-1"},[n("Compression 설치 "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "Compression 설치 {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=n(" 애플리케이션에 ")),s[7]||(s[7]=i("code",null,"Compression",-1)),s[8]||(s[8]=n(" 플러그인을 ")),s[9]||(s[9]=i("a",{href:"#install"},"설치",-1)),s[10]||(s[10]=n("하려면, 지정된 ")),e(p,{href:"/ktor/server-modules",summary:"모듈을 사용하면 경로를 그룹화하여 애플리케이션을 구조화할 수 있습니다."},{default:a(()=>s[5]||(s[5]=[n("모듈")])),_:1}),s[11]||(s[11]=n("의 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=n(" 함수에 전달하세요. 아래 코드 스니펫은 ")),s[14]||(s[14]=i("code",null,"Compression",-1)),s[15]||(s[15]=n("을 설치하는 방법을 보여줍니다... "))]),e(g,null,{default:a(()=>s[16]||(s[16]=[i("li",null,[n(" ... "),i("code",null,"embeddedServer"),n(" 함수 호출 내에서. ")],-1),i("li",null,[n(" ... "),i("code",null,"Application"),n(" 클래스의 확장 함수인 명시적으로 정의된 "),i("code",null,"module"),n(" 내에서. ")],-1)])),_:1}),e(r,null,{default:a(()=>[e(o,{title:"embeddedServer"},{default:a(()=>[e(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.compression.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(Compression)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),e(o,{title:"module"},{default:a(()=>[e(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.compression.*
            // ...
            fun Application.module() {
                install(Compression)
                // ...
            }`})]),_:1})]),_:1}),s[19]||(s[19]=d(`<p>이렇게 하면 서버에서 <code>gzip</code>, <code>deflate</code>, <code>identity</code> 인코더가 활성화됩니다. 다음 장에서는 특정 인코더만 활성화하고 데이터 압축 조건을 구성하는 방법을 살펴보겠습니다. 추가된 모든 인코더는 필요한 경우 요청 본문을 압축 해제하는 데 사용됩니다.</p><h2 id="configure" tabindex="-1">압축 설정 구성 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;압축 설정 구성 {id=&quot;configure&quot;}&quot;">​</a></h2><p>압축은 여러 가지 방법으로 구성할 수 있습니다: 특정 인코더만 활성화하거나, 우선순위를 지정하거나, 특정 콘텐츠 유형만 압축하는 등.</p><h3 id="add_specific_encoders" tabindex="-1">특정 인코더 추가 <a class="header-anchor" href="#add_specific_encoders" aria-label="Permalink to &quot;특정 인코더 추가 {id=&quot;add_specific_encoders&quot;}&quot;">​</a></h3><p>특정 인코더만 활성화하려면 해당 확장 함수를 호출합니다. 예를 들어:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>각 압축 알고리즘의 우선순위는 <code>priority</code> 속성을 설정하여 지정할 수 있습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>위 예시에서는 <code>deflate</code>가 더 높은 우선순위 값을 가지며 <code>gzip</code>보다 우선합니다. 서버는 먼저 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding" target="_blank" rel="noreferrer">Accept-Encoding</a> 헤더 내의 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Quality_Values" target="_blank" rel="noreferrer">품질 값</a>을 확인한 다음 지정된 우선순위를 고려합니다.</p><h3 id="configure_content_type" tabindex="-1">콘텐츠 유형 구성 <a class="header-anchor" href="#configure_content_type" aria-label="Permalink to &quot;콘텐츠 유형 구성 {id=&quot;configure_content_type&quot;}&quot;">​</a></h3><p>기본적으로 Ktor는 <code>audio</code>, <code>video</code>, <code>image</code>, <code>text/event-stream</code>과 같은 특정 콘텐츠 유형을 압축하지 않습니다. <code>matchContentType</code>을 호출하여 압축할 콘텐츠 유형을 선택하거나, <code>excludeContentType</code>을 사용하여 원하는 미디어 유형을 압축에서 제외할 수 있습니다. 아래 코드 스니펫은 <code>gzip</code>을 사용하여 JavaScript 코드를 압축하고 <code>deflate</code>를 사용하여 모든 텍스트 하위 유형을 압축하는 방법을 보여줍니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        matchContentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ContentType.Application.JavaScript</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        matchContentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ContentType.Text.Any</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>전체 예시는 다음에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/compression" target="_blank" rel="noreferrer">compression</a>.</p><h3 id="configure_response_size" tabindex="-1">응답 크기 구성 <a class="header-anchor" href="#configure_response_size" aria-label="Permalink to &quot;응답 크기 구성 {id=&quot;configure_response_size&quot;}&quot;">​</a></h3><p><code>Compression</code> 플러그인을 사용하면 지정된 값을 초과하지 않는 응답에 대한 압축을 비활성화할 수 있습니다. 이렇게 하려면 <code>minimumSize</code> 함수에 원하는 값(바이트 단위)을 전달합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            minimumSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><h3 id="specify_custom_conditions" tabindex="-1">사용자 정의 조건 지정 <a class="header-anchor" href="#specify_custom_conditions" aria-label="Permalink to &quot;사용자 정의 조건 지정 {id=&quot;specify_custom_conditions&quot;}&quot;">​</a></h3><p>필요한 경우 <code>condition</code> 함수를 사용하여 사용자 정의 조건을 제공하고 특정 요청 매개변수에 따라 데이터를 압축할 수 있습니다. 아래 코드 스니펫은 지정된 URI에 대한 요청을 압축하는 방법을 보여줍니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.uri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/orders&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="security" tabindex="-1">HTTPS 보안 <a class="header-anchor" href="#security" aria-label="Permalink to &quot;HTTPS 보안 {id=&quot;security&quot;}&quot;">​</a></h2><p>압축이 활성화된 HTTPS는 <a href="https://en.wikipedia.org/wiki/BREACH" target="_blank" rel="noreferrer">BREACH</a> 공격에 취약합니다. 이 공격을 완화하기 위해 다양한 방법을 사용할 수 있습니다. 예를 들어, 리퍼러 헤더가 교차 사이트 요청을 나타낼 때마다 압축을 비활성화할 수 있습니다. Ktor에서는 리퍼러 헤더 값을 확인하여 이를 수행할 수 있습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.headers[HttpHeaders.Referrer]?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://my.domain/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="custom_encoder" tabindex="-1">사용자 정의 인코더 구현 <a class="header-anchor" href="#custom_encoder" aria-label="Permalink to &quot;사용자 정의 인코더 구현 {id=&quot;custom_encoder&quot;}&quot;">​</a></h2><p>필요한 경우 <a href="https://api.ktor.io/ktor-utils/io.ktor.util/-content-encoder/index.html" target="_blank" rel="noreferrer">ContentEncoder</a> 인터페이스를 구현하여 사용자 고유의 인코더를 제공할 수 있습니다. 구현 예시는 <a href="https://github.com/ktorio/ktor/blob/b5b59ca3ae61601e6175f334e6a1252609638e61/ktor-server/ktor-server-plugins/ktor-server-compression/jvm/src/io/ktor/server/plugins/compression/Encoders.kt#L41" target="_blank" rel="noreferrer">GzipEncoder</a>를 참조하세요.</p>`,24))])}const x=u(v,[["render",b]]);export{B as __pageData,x as default};
