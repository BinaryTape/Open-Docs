import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bksy39di.js";const o=JSON.parse('{"title":"외래 키","description":"","frontmatter":{},"headers":[],"relativePath":"ko/sqldelight/native_sqlite/foreign_keys.md","filePath":"ko/sqldelight/native_sqlite/foreign_keys.md","lastUpdated":1748435462000}'),e={name:"ko/sqldelight/native_sqlite/foreign_keys.md"};function l(h,s,p,k,r,E){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="외래-키" tabindex="-1">외래 키 <a class="header-anchor" href="#외래-키" aria-label="Permalink to &quot;외래 키&quot;">​</a></h1><p>데이터베이스 구성에서 외래 키 제약 조건을 활성화하여 네이티브 SQLite 드라이버에 대해 외래 키 제약 조건을 사용할 수 있습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeSqliteDriver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  schema </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Database.Schema,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  onConfiguration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { config: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DatabaseConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      extendedConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DatabaseConfiguration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Extended</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foreignKeyConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,3)]))}const g=i(e,[["render",l]]);export{o as __pageData,g as default};
