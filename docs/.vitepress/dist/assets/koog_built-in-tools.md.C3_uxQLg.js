import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"内置工具","description":"","frontmatter":{},"headers":[],"relativePath":"koog/built-in-tools.md","filePath":"koog/built-in-tools.md","lastUpdated":1755146406000}'),l={name:"koog/built-in-tools.md"};function e(h,s,p,k,o,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="内置工具" tabindex="-1">内置工具 <a class="header-anchor" href="#内置工具" aria-label="Permalink to &quot;内置工具&quot;">​</a></h1><p>Koog 框架提供内置工具，用于处理代理与用户交互的常见场景。</p><p>以下是可用的内置工具：</p><table tabindex="0"><thead><tr><th>工具</th><th><div style="width:115px;">名称</div></th><th>描述</th></tr></thead><tbody><tr><td>SayToUser</td><td><code>__say_to_user__</code></td><td>允许代理向用户发送消息。它会将代理消息打印到控制台，并带有 <code>Agent says: </code> 前缀。</td></tr><tr><td>AskUser</td><td><code>__ask_user__</code></td><td>允许代理向用户请求输入。它会将代理消息打印到控制台并等待用户响应。</td></tr><tr><td>ExitTool</td><td><code>__exit__</code></td><td>允许代理结束对话并终止会话。</td></tr></tbody></table><h2 id="注册内置工具" tabindex="-1">注册内置工具 <a class="header-anchor" href="#注册内置工具" aria-label="Permalink to &quot;注册内置工具&quot;">​</a></h2><p>与任何其他工具一样，内置工具必须添加到工具注册表才能供代理使用。下面是一个示例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create a tool registry with all built-in tools</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> toolRegistry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ToolRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SayToUser)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AskUser)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExitTool)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Pass the registry when creating an agent</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AIAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    executor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> simpleOpenAIExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(apiToken),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    systemPrompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;You are a helpful assistant.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    llmModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OpenAIModels.Chat.GPT4o,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    toolRegistry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> toolRegistry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>通过在同一个注册表中结合内置工具和自定义工具，你可以为你的代理创建一套全面的能力。 要了解有关自定义工具的更多信息，请参见<a href="./annotation-based-tools">基于注解的工具</a>和<a href="./class-based-tools">基于类的工具</a>。</p>`,8)]))}const g=i(l,[["render",e]]);export{E as __pageData,g as default};
