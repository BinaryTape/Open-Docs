import{_ as r,C as e,c as s,o as m,j as l,G as t,ag as p,a as o,w as i}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"Kotlin Multiplatform のサンプル","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/multiplatform-samples.md","filePath":"ja/kmp/multiplatform-samples.md","lastUpdated":1755516278000}'),a={name:"ja/kmp/multiplatform-samples.md"};function f(k,n,g,b,S,M){const d=e("show-structure"),u=e("list");return m(),s("div",null,[n[88]||(n[88]=l("h1",{id:"kotlin-multiplatform-のサンプル",tabindex:"-1"},[o("Kotlin Multiplatform のサンプル "),l("a",{class:"header-anchor",href:"#kotlin-multiplatform-のサンプル","aria-label":'Permalink to "Kotlin Multiplatform のサンプル"'},"​")],-1)),t(d,{for:"none"}),n[89]||(n[89]=p("",5)),l("table",null,[n[20]||(n[20]=l("tr",null,[l("td",null,"名前"),l("td",null,"説明"),l("td",null,"共有されているもの"),l("td",null,"主なライブラリ"),l("td",null,"ユーザーインターフェース")],-1)),l("tr",null,[n[3]||(n[3]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/JetBrains/compose-multiplatform/tree/master/examples/imageviewer"},"Image Viewer")])],-1)),n[4]||(n[4]=l("td",null,[o("画像のキャプチャ、表示、保存を行うアプリケーションです。マップのサポートを含みます。UI に Compose Multiplatform を使用しています。"),l("a",{href:"https://www.youtube.com/watch?v=FWVi4aV36d8"},"KotlinConf 2023"),o(" で紹介されました。 ")],-1)),l("td",null,[t(u,null,{default:i(()=>n[0]||(n[0]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"アニメーション",-1),l("li",null,"データストレージ",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[1]||(n[1]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"play-services-maps")],-1),l("li",null,[l("code",null,"play-services-locations")],-1),l("li",null,[l("code",null,"android-maps-compose")],-1),l("li",null,[l("code",null,"accompanist-permissions")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[2]||(n[2]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[7]||(n[7]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/JetBrains/compose-multiplatform/tree/master/examples/chat"},"Chat")])],-1)),n[8]||(n[8]=l("td",null,"Compose Multiplatform コンポーネントを SwiftUI インターフェース内に埋め込む方法を示すデモンストレーションです。ユースケースはオンラインメッセージングです。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[5]||(n[5]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1)])),_:1})]),n[9]||(n[9]=l("td",null,null,-1)),l("td",null,[t(u,null,{default:i(()=>n[6]||(n[6]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1),l("li",null,"iOS 上の SwiftUI",-1)])),_:1})])]),l("tr",null,[n[13]||(n[13]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/Kotlin/kmm-production-sample"},"KMM RSS Reader")])],-1)),n[14]||(n[14]=l("td",null,[o("Kotlin Multiplatform をプロダクションでどのように使用できるかを示すために設計された、RSS フィードを消費するサンプルアプリケーションです。UI はネイティブで実装されていますが、Compose Multiplatform を iOS およびデスクトップで使用できる実験的なブランチがあります。ネットワーキングは "),l("a",{href:"https://ktor.io/docs/create-client.html"},"Ktor HTTP クライアント"),o("を使用して行われ、XML パースはネイティブで実装されています。UI ステートの共有には Redux アーキテクチャが使用されています。 ")],-1)),l("td",null,[t(u,null,{default:i(()=>n[10]||(n[10]=[l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"UI ステート",-1),l("li",null,"データストレージ",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[11]||(n[11]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"voyager")],-1),l("li",null,[l("code",null,"coil")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"napier")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[12]||(n[12]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS およびデスクトップ上の Compose Multiplatform (実験的なブランチで)",-1),l("li",null,"iOS 上の SwiftUI",-1)])),_:1})])]),l("tr",null,[n[16]||(n[16]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/Kotlin/kmm-basic-sample"},"Kotlin Multiplatform Sample")])],-1)),n[17]||(n[17]=l("td",null,"シンプルな計算機アプリケーションです。expected および actual 宣言を使用して Kotlin とネイティブコードを統合する方法を示します。 ",-1)),n[18]||(n[18]=l("td",null,[l("p",null,"アルゴリズム")],-1)),n[19]||(n[19]=l("td",null,null,-1)),l("td",null,[t(u,null,{default:i(()=>n[15]||(n[15]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"SwiftUI",-1)])),_:1})])])]),n[90]||(n[90]=l("h3",{id:"推奨サンプル",tabindex:"-1"},[o("推奨サンプル "),l("a",{class:"header-anchor",href:"#推奨サンプル","aria-label":'Permalink to "推奨サンプル"'},"​")],-1)),l("table",null,[n[41]||(n[41]=l("tr",null,[l("td",null,"名前"),l("td",null,"説明"),l("td",null,"共有されているもの"),l("td",null,"主なライブラリ"),l("td",null,"ユーザーインターフェース")],-1)),l("tr",null,[n[24]||(n[24]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/joreilly/Confetti"},"Confetti")])],-1)),n[25]||(n[25]=l("td",null,[o("Kotlin Multiplatform と Compose Multiplatform の様々な側面を示すショーケースです。ユースケースは、会議のスケジュールに関する情報を取得および表示するアプリケーションです。Wear および Auto プラットフォームのサポートを含みます。クライアント-サーバー通信には GraphQL を使用しています。アーキテクチャについては、"),l("a",{href:"https://www.youtube.com/watch?v=uATlWUBSx8Q"},"KotlinConf 2023"),o(" で詳しく議論されました。 ")],-1)),l("td",null,[t(u,null,{default:i(()=>n[21]||(n[21]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"データストレージ",-1),l("li",null,"ナビゲーション",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[22]||(n[22]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"decompose")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"jsonpathkt-kotlinx")],-1),l("li",null,[l("code",null,"horologist")],-1),l("li",null,[l("code",null,"google-cloud")],-1),l("li",null,[l("code",null,"firebase")],-1),l("li",null,[l("code",null,"bare-graphql")],-1),l("li",null,[l("code",null,"apollo")],-1),l("li",null,[l("code",null,"accompanist")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[23]||(n[23]=[l("li",null,"Android、Auto、Wear 上の Jetpack Compose",-1),l("li",null,"iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[29]||(n[29]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/joreilly/PeopleInSpace"},"People In Space")])],-1)),n[30]||(n[30]=l("td",null,"Kotlin Multiplatform が実行できる多くの異なるプラットフォームのショーケースです。ユースケースは、現在宇宙にいる人数と国際宇宙ステーションの位置を表示することです。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[26]||(n[26]=[l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"データストレージ",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[27]||(n[27]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[28]||(n[28]=[l("li",null,"Android および Wear OS 上の Jetpack Compose",-1),l("li",null,"iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1),l("li",null,"iOS および macOS 上の SwiftUI",-1)])),_:1})])]),l("tr",null,[n[34]||(n[34]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/touchlab/DroidconKotlin"},"Sessionize / Droidcon")])],-1)),n[35]||(n[35]=l("td",null,"Sessionize API を使用して Droidcon イベントの議題を表示するアプリケーションです。Sessionize にトークを保存する任意のイベントに合わせてカスタマイズできます。Firebase と統合されており、実行には Firebase アカウントが必要です。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[31]||(n[31]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"データストレージ",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[32]||(n[32]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"firebase")],-1),l("li",null,[l("code",null,"kermit")],-1),l("li",null,[l("code",null,"accompanist")],-1),l("li",null,[l("code",null,"hyperdrive-multiplatformx")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[33]||(n[33]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS 上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[39]||(n[39]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/touchlab/KaMPKit"},"KaMPKit")])],-1)),n[40]||(n[40]=l("td",null,[o("Kotlin Multiplatform 開発のためのコードとツールのコレクションです。Kotlin Multiplatform アプリケーションを構築する際のライブラリ、アーキテクチャの選択、ベストプラクティスを紹介するために設計されています。ユースケースは、犬の品種に関する情報をダウンロードして表示することです。"),l("a",{href:"https://www.youtube.com/watch?v=EJVq_QWaWXE"},"このビデオチュートリアル"),o("で紹介されました。 ")],-1)),l("td",null,[t(u,null,{default:i(()=>n[36]||(n[36]=[l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"ViewModel",-1),l("li",null,"データストレージ",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[37]||(n[37]=[l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"kermit")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[38]||(n[38]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS 上の SwiftUI",-1)])),_:1})])])]),n[91]||(n[91]=l("h3",{id:"その他のコミュニティサンプル",tabindex:"-1"},[o("その他のコミュニティサンプル "),l("a",{class:"header-anchor",href:"#その他のコミュニティサンプル","aria-label":'Permalink to "その他のコミュニティサンプル"'},"​")],-1)),l("table",null,[n[87]||(n[87]=l("tr",null,[l("td",null,"名前"),l("td",null,"説明"),l("td",null,"共有されているもの"),l("td",null,"主なライブラリ"),l("td",null,"ユーザーインターフェース")],-1)),l("tr",null,[n[45]||(n[45]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/xxfast/NYTimes-KMP"},"NYTimes KMP")])],-1)),n[46]||(n[46]=l("td",null,[o("New York Times アプリケーションの Compose Multiplatform ベースのバージョンです。ユーザーが記事を閲覧・購読できます。アプリケーションをビルドして実行するには、"),l("a",{href:"https://developer.nytimes.com/"},"New York Times からの API キー"),o("が必要であることに注意してください。 ")],-1)),l("td",null,[t(u,null,{default:i(()=>n[42]||(n[42]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[43]||(n[43]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"molecule")],-1),l("li",null,[l("code",null,"decompose")],-1),l("li",null,[l("code",null,"horologist")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[44]||(n[44]=[l("li",null,"Android および Wear 上の Jetpack Compose",-1),l("li",null,"iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[50]||(n[50]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/JoelKanyi/FocusBloom"},"Focus Bloom")])],-1)),n[51]||(n[51]=l("td",null,"生産性および時間管理アプリケーションです。ユーザーがタスクをスケジュールし、達成度に関するフィードバックを提供できます。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[47]||(n[47]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"アニメーション",-1),l("li",null,"データストレージ",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[48]||(n[48]=[l("li",null,[l("code",null,"kotlinx.serialization")],-1),l("li",null,[l("code",null,"kotlinx.coroutines")],-1),l("li",null,[l("code",null,"kotlinx.datetime")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"navigation-compose")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[49]||(n[49]=[l("li",null,"Android、iOS、デスクトップ上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[54]||(n[54]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/SEAbdulbasit/recipe-app"},"Recipe App")])],-1)),n[55]||(n[55]=l("td",null,"レシピを表示するためのデモンストレーションアプリケーションです。アニメーションの使用法を紹介します。",-1)),l("td",null,[t(u,null,{default:i(()=>n[52]||(n[52]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"データストレージ",-1)])),_:1})]),n[56]||(n[56]=l("td",null,[l("p",null,[l("code",null,"kotlinx-coroutines")])],-1)),l("td",null,[t(u,null,{default:i(()=>n[53]||(n[53]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[60]||(n[60]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/dbaroncelli/D-KMP-sample"},"D-KMP-sample")])],-1)),n[61]||(n[61]=l("td",null,[l("a",{href:"https://danielebaroncelli.medium.com/d-kmp-sample-now-leverages-ios-16-navigation-cebbb81ba2e7"},"Declarative UIs with Kotlin MultiPlatform architecture"),o(" のサンプルアプリケーションです。ユースケースは、異なる国のワクチン接種統計を取得・表示することです。 ")],-1)),l("td",null,[t(u,null,{default:i(()=>n[57]||(n[57]=[l("li",null,"ネットワーキング",-1),l("li",null,"データストレージ",-1),l("li",null,"ViewModel",-1),l("li",null,"ナビゲーション",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[58]||(n[58]=[l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[59]||(n[59]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS 上の SwiftUI",-1)])),_:1})])]),l("tr",null,[n[65]||(n[65]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/VictorKabata/Notflix"},"Notflix")])],-1)),n[66]||(n[66]=l("td",null,[l("a",{href:"https://www.themoviedb.org/"},"The Movie Database"),o(" からデータを取得し、現在のトレンド、今後公開される、人気の映画やテレビ番組を表示するアプリケーションです。The Movie Database で API キーを作成する必要があります。 ")],-1)),l("td",null,[t(u,null,{default:i(()=>n[62]||(n[62]=[l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"キャッシュ",-1),l("li",null,"ViewModel",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[63]||(n[63]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"napier")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[64]||(n[64]=[l("li",null,"Android 上の Jetpack Compose",-1),l("li",null,"iOS 上の SwiftUI",-1)])),_:1})])]),l("tr",null,[n[70]||(n[70]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/msasikanth/twine"},"Twine - RSS Reader")])],-1)),n[71]||(n[71]=l("td",null,"Twine は Kotlin と Compose Multiplatform を使用して構築されたマルチプラットフォーム RSS リーダーアプリです。フィードを閲覧するための優れたユーザーインターフェースとエクスペリエンスを備え、Material 3 のコンテンツベースの動的テーマをサポートしています。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[67]||(n[67]=[l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"データストレージ",-1),l("li",null,"UI",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[68]||(n[68]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"napier")],-1),l("li",null,[l("code",null,"decompose")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[69]||(n[69]=[l("li",null,"Android および iOS 上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[75]||(n[75]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/razaghimahdi/Shopping-By-KMP"},"Shopping By KMP")])],-1)),n[76]||(n[76]=l("td",null,"Kotlin を使用して複数のプラットフォーム間で UI を共有するための宣言型フレームワークである Jetpack Compose Multiplatform を使用して構築されたクロスプラットフォームアプリケーションです。このアプリケーションにより、ユーザーは Android、iOS、ウェブ、デスクトップ、Android Automotive、Android TV でショッピングカタログから商品を閲覧、検索、購入できます。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[72]||(n[72]=[l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"データストレージ",-1),l("li",null,"UI",-1),l("li",null,"ViewModel",-1),l("li",null,"アニメーション",-1),l("li",null,"ナビゲーション",-1),l("li",null,"UI ステート",-1),l("li",null,"ユースケース",-1),l("li",null,"ユニットテスト",-1),l("li",null,"UI テスト",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[73]||(n[73]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"datastore")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"google-map")],-1),l("li",null,[l("code",null,"navigation-compose")],-1),l("li",null,[l("code",null,"coil")],-1),l("li",null,[l("code",null,"kotest")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[74]||(n[74]=[l("li",null,"Android、iOS、ウェブ、デスクトップ、automotive、Android TV 上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[80]||(n[80]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/SEAbdulbasit/MusicApp-KMP"},"Music App KMP")])],-1)),n[81]||(n[81]=l("td",null,"MediaPlayer のようなネイティブ API と、異なるプラットフォームでどのようにやり取りするかを示すアプリケーションです。Spotify API を使用してデータをフェッチします。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[77]||(n[77]=[l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"UI",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[78]||(n[78]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"decompose")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[79]||(n[79]=[l("li",null,"Android、iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1)])),_:1})])]),l("tr",null,[n[85]||(n[85]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/fethij/Rijksmuseum"},"Rijksmuseum")])],-1)),n[86]||(n[86]=l("td",null,"Rijksmuseum は、Kotlin と Compose Multiplatform を使用したマルチモジュラーアプリで、アムステルダムにある有名な国立博物館の美術品コレクションを没入型で探索できる方法を提供します。Rijksmuseum API を利用して、画像や説明を含む様々な美術品の詳細情報を取得・表示します。 ",-1)),l("td",null,[t(u,null,{default:i(()=>n[82]||(n[82]=[l("li",null,"UI",-1),l("li",null,"モデル",-1),l("li",null,"ネットワーキング",-1),l("li",null,"ナビゲーション",-1),l("li",null,"ViewModel",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[83]||(n[83]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"navigation-compose")],-1),l("li",null,[l("code",null,"Coil")],-1),l("li",null,[l("code",null,"Jetpack ViewModel")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[84]||(n[84]=[l("li",null,"Android、iOS、デスクトップ、ウェブ上の Compose Multiplatform",-1)])),_:1})])])])])}const w=r(a,[["render",f]]);export{C as __pageData,w as default};
