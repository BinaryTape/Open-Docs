import{_ as u,C as t,c as m,o as y,G as e,ag as d,j as i,w as a,a as n}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/server-compression.md","filePath":"ktor/server-compression.md","lastUpdated":1755457140000}'),v={name:"ktor/server-compression.md"};function b(f,s,C,_,F,q){const k=t("TopicTitle"),h=t("show-structure"),c=t("primary-label"),p=t("Links"),E=t("tldr"),l=t("code-block"),o=t("TabItem"),r=t("Tabs"),g=t("list");return y(),m("div",null,[e(k,{labelRef:"server-plugin",title:"压缩"}),e(h,{for:"chapter",depth:"2"}),e(c,{ref:"server-plugin"},null,512),e(E,null,{default:a(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依赖项"),n(": "),i("code",null,"io.ktor:ktor-server-compression")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"代码示例"),n(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/compression"}," compression ")],-1)),i("p",null,[i("b",null,[e(p,{href:"/ktor/server-native",summary:"Ktor 支持 Kotlin/Native，允许您无需额外运行时或虚拟机即可运行服务器。"},{default:a(()=>s[0]||(s[0]=[n("原生服务器")])),_:1}),s[1]||(s[1]=n("支持"))]),s[2]||(s[2]=n(": ✖️ "))])]),_:1}),s[17]||(s[17]=d('<p>Ktor 提供了通过使用 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-compression/io.ktor.server.plugins.compression/-compression.html" target="_blank" rel="noreferrer">Compression</a> plugin 来压缩响应体和解压缩请求体的能力。 您可以使用不同的压缩算法，包括 <code>gzip</code> 和 <code>deflate</code>，指定压缩数据所需的条件（例如内容类型或响应大小），甚至可以根据特定的请求参数来压缩数据。</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>请注意，Compression plugin 当前不支持 SSE 响应。</p></div><blockquote><p>关于如何在 Ktor 中提供预压缩的静态文件，请参见 <a href="./server-static-content#precompressed">预压缩文件</a>。</p></blockquote><h2 id="add_dependencies" tabindex="-1">添加依赖项 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;添加依赖项 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p> 要使用 <code>Compression</code>，您需要在构建脚本中包含 <code>ktor-server-compression</code> 构件： </p>',5)),e(r,{group:"languages"},{default:a(()=>[e(o,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-compression:$ktor_version")'})]),_:1}),e(o,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-compression:$ktor_version"'})]),_:1}),e(o,{title:"Maven","group-key":"maven"},{default:a(()=>[e(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-compression-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[18]||(s[18]=i("h2",{id:"install_plugin",tabindex:"-1"},[n("安装 Compression "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安装 Compression {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=n(" 要将 ")),s[7]||(s[7]=i("code",null,"Compression",-1)),s[8]||(s[8]=n(" plugin ")),s[9]||(s[9]=i("a",{href:"#install"},"安装",-1)),s[10]||(s[10]=n("到应用程序， 请将其传递给指定 ")),e(p,{href:"/ktor/server-modules",summary:"模块允许您通过分组路由来组织应用程序。"},{default:a(()=>s[5]||(s[5]=[n("模块")])),_:1}),s[11]||(s[11]=n(" 中的 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=n(" 函数。 以下代码片段展示了如何安装 ")),s[14]||(s[14]=i("code",null,"Compression",-1)),s[15]||(s[15]=n(" ... "))]),e(g,null,{default:a(()=>s[16]||(s[16]=[i("li",null,[n(" ... 在 "),i("code",null,"embeddedServer"),n(" 函数调用内部。 ")],-1),i("li",null,[n(" ... 在显式定义的 "),i("code",null,"module"),n(" 内部，它是 "),i("code",null,"Application"),n(" 类的扩展函数。 ")],-1)])),_:1}),e(r,null,{default:a(()=>[e(o,{title:"embeddedServer"},{default:a(()=>[e(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.compression.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(Compression)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),e(o,{title:"module"},{default:a(()=>[e(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.compression.*
            // ...
            fun Application.module() {
                install(Compression)
                // ...
            }`})]),_:1})]),_:1}),s[19]||(s[19]=d(`<p>这会在服务器上启用 <code>gzip</code>、<code>deflate</code> 和 <code>identity</code> 编码器。 在下一章中，我们将了解如何仅启用特定的编码器并配置压缩数据的条件。 请注意，每个添加的编码器都将在需要时用于解压缩请求体。</p><h2 id="configure" tabindex="-1">配置压缩设置 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置压缩设置 {id=&quot;configure&quot;}&quot;">​</a></h2><p>您可以通过多种方式配置压缩：仅启用特定的编码器、指定它们的优先级、仅压缩特定的内容类型等等。</p><h3 id="add_specific_encoders" tabindex="-1">添加特定编码器 <a class="header-anchor" href="#add_specific_encoders" aria-label="Permalink to &quot;添加特定编码器 {id=&quot;add_specific_encoders&quot;}&quot;">​</a></h3><p>要仅启用特定的编码器，请调用相应的扩展函数，例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以通过设置 <code>priority</code> 属性来指定每个压缩算法的优先级：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在上面的示例中，<code>deflate</code> 具有更高的优先级值并优先于 <code>gzip</code>。请注意，服务器首先查看 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding" target="_blank" rel="noreferrer">Accept-Encoding</a> header 中 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Quality_Values" target="_blank" rel="noreferrer">质量值</a> ，然后考虑指定的优先级。</p><h3 id="configure_content_type" tabindex="-1">配置内容类型 <a class="header-anchor" href="#configure_content_type" aria-label="Permalink to &quot;配置内容类型 {id=&quot;configure_content_type&quot;}&quot;">​</a></h3><p>默认情况下，Ktor 不会压缩特定的内容类型，例如 <code>audio</code>、<code>video</code>、<code>image</code> 和 <code>text/event-stream</code>。 您可以通过调用 <code>matchContentType</code> 来选择要压缩的内容类型，或者使用 <code>excludeContentType</code> 从压缩中排除所需的媒体类型。以下代码片段展示了如何使用 <code>gzip</code> 压缩 JavaScript 代码以及使用 <code>deflate</code> 压缩所有文本子类型：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        matchContentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ContentType.Application.JavaScript</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        matchContentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ContentType.Text.Any</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以在此处找到完整示例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/compression" target="_blank" rel="noreferrer">compression</a>。</p><h3 id="configure_response_size" tabindex="-1">配置响应大小 <a class="header-anchor" href="#configure_response_size" aria-label="Permalink to &quot;配置响应大小 {id=&quot;configure_response_size&quot;}&quot;">​</a></h3><p>Compression plugin 允许您对大小不超过指定值的响应禁用压缩。为此，请将所需值（以字节为单位）传递给 <code>minimumSize</code> 函数：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            minimumSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><h3 id="specify_custom_conditions" tabindex="-1">指定自定义条件 <a class="header-anchor" href="#specify_custom_conditions" aria-label="Permalink to &quot;指定自定义条件 {id=&quot;specify_custom_conditions&quot;}&quot;">​</a></h3><p>如有必要，您可以使用 <code>condition</code> 函数提供自定义条件，并根据特定的请求参数压缩数据。以下代码片段展示了如何压缩指定 URI 的请求：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.uri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/orders&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="security" tabindex="-1">HTTPS 安全 <a class="header-anchor" href="#security" aria-label="Permalink to &quot;HTTPS 安全 {id=&quot;security&quot;}&quot;">​</a></h2><p>启用了压缩的 HTTPS 容易受到 <a href="https://en.wikipedia.org/wiki/BREACH" target="_blank" rel="noreferrer">BREACH</a> 攻击。您可以使用各种方法来缓解此攻击。例如，当 referrer header 指示跨站请求时，您可以禁用压缩。在 Ktor 中，这可以通过检测 referrer header 值来完成：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.headers[HttpHeaders.Referrer]?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://my.domain/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="custom_encoder" tabindex="-1">实现自定义编码器 <a class="header-anchor" href="#custom_encoder" aria-label="Permalink to &quot;实现自定义编码器 {id=&quot;custom_encoder&quot;}&quot;">​</a></h2><p>如有必要，您可以通过实现 <a href="https://api.ktor.io/ktor-utils/io.ktor.util/-content-encoder/index.html" target="_blank" rel="noreferrer">ContentEncoder</a> interface 来提供自己的编码器。 有关实现的示例，请参见 <a href="https://github.com/ktorio/ktor/blob/b5b59ca3ae61601e6175f334e6a1252609638e61/ktor-server/ktor-server-plugins/ktor-server-compression/jvm/src/io/ktor/server/plugins/compression/Encoders.kt#L41" target="_blank" rel="noreferrer">GzipEncoder</a>。</p>`,24))])}const x=u(v,[["render",b]]);export{B as __pageData,x as default};
