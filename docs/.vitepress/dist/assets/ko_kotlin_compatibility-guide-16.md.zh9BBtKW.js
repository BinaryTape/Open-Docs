import{_ as e,c as t,o as r,ag as l}from"./chunks/framework.Bksy39di.js";const g=JSON.parse('{"title":"Kotlin 1.6 호환성 가이드","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/compatibility-guide-16.md","filePath":"ko/kotlin/compatibility-guide-16.md","lastUpdated":1754307826000}'),n={name:"ko/kotlin/compatibility-guide-16.md"};function a(i,o,s,c,p,d){return r(),t("div",null,o[0]||(o[0]=[l('<h1 id="kotlin-1-6-호환성-가이드" tabindex="-1">Kotlin 1.6 호환성 가이드 <a class="header-anchor" href="#kotlin-1-6-호환성-가이드" aria-label="Permalink to &quot;Kotlin 1.6 호환성 가이드&quot;">​</a></h1><p><em><a href="/ko/kotlin/kotlin-evolution-principles">언어 현대화 유지 (Keeping the Language Modern)</a></em> 및 _<a href="/ko/kotlin/kotlin-evolution-principles">편리한 업데이트 (Comfortable Updates)</a>_는 Kotlin 언어 설계의 근본적인 원칙 중 하나입니다. 전자는 언어 발전을 방해하는 구성 요소는 제거되어야 한다고 말하며, 후자는 이러한 제거가 코드 마이그레이션을 최대한 원활하게 하기 위해 사전에 충분히 공지되어야 한다고 말합니다.</p><p>대부분의 언어 변경 사항은 업데이트 변경 로그 또는 컴파일러 경고와 같은 다른 채널을 통해 이미 발표되었지만, 이 문서는 Kotlin 1.5에서 Kotlin 1.6으로 마이그레이션하기 위한 완전한 참조를 제공하며 모든 변경 사항을 요약합니다.</p><h2 id="기본-용어" tabindex="-1">기본 용어 <a class="header-anchor" href="#기본-용어" aria-label="Permalink to &quot;기본 용어&quot;">​</a></h2><p>이 문서에서는 몇 가지 호환성 유형을 소개합니다:</p><ul><li><em>소스 (source)</em>: 소스 비호환성 변경은 이전에 오류나 경고 없이 문제 없이 컴파일되던 코드가 더 이상 컴파일되지 않도록 합니다.</li><li><em>바이너리 (binary)</em>: 두 바이너리 아티팩트는 상호 교환 시 로딩 또는 링크 오류가 발생하지 않으면 바이너리 호환된다고 합니다.</li><li><em>동작 (behavioral)</em>: 변경이 적용되기 전과 후에 동일한 프로그램이 다른 동작을 보인다면 해당 변경은 동작 비호환성이라고 합니다.</li></ul><p>이러한 정의는 순수 Kotlin에 대해서만 주어진 것임을 기억하십시오. 다른 언어 관점(예: Java)에서의 Kotlin 코드 호환성은 이 문서의 범위를 벗어납니다.</p><h2 id="언어" tabindex="-1">언어 <a class="header-anchor" href="#언어" aria-label="Permalink to &quot;언어&quot;">​</a></h2><h3 id="enum-sealed-boolean-서브젝트를-사용하는-when-문을-기본적으로-완전하게-만들기" tabindex="-1">enum, sealed, Boolean 서브젝트를 사용하는 when 문을 기본적으로 완전하게 만들기 <a class="header-anchor" href="#enum-sealed-boolean-서브젝트를-사용하는-when-문을-기본적으로-완전하게-만들기" aria-label="Permalink to &quot;enum, sealed, Boolean 서브젝트를 사용하는 when 문을 기본적으로 완전하게 만들기&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-47709" target="_blank" rel="noreferrer">KT-47709</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 <code>enum</code>, <code>sealed</code>, <code>Boolean</code> 서브젝트를 사용하는 <code>when</code> 문이 불완전한 경우 경고를 표시합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.0: <code>enum</code>, <code>sealed</code>, <code>Boolean</code> 서브젝트를 사용하는 <code>when</code> 문이 불완전한 경우 경고를 도입합니다 (점진적 모드에서는 오류).</li><li>1.7.0: 이 경고를 오류로 격상합니다.</li></ul></blockquote><h3 id="when-with-subject에서-혼란스러운-문법-사용-중단" tabindex="-1">when-with-subject에서 혼란스러운 문법 사용 중단 <a class="header-anchor" href="#when-with-subject에서-혼란스러운-문법-사용-중단" aria-label="Permalink to &quot;when-with-subject에서 혼란스러운 문법 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48385" target="_blank" rel="noreferrer">KT-48385</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 <code>when</code> 조건식에서 몇 가지 혼란스러운 문법 구성을 사용 중단합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.20: 영향을 받는 표현식에 지원 중단 경고를 도입합니다.</li><li>1.8.0: 이 경고를 오류로 격상합니다.</li><li><blockquote><p>= 1.8: 일부 사용 중단된 구성 요소를 새 언어 기능으로 용도 변경합니다.</p></blockquote></li></ul></blockquote><h3 id="컴패니언-및-중첩-객체의-상위-생성자-호출에서-클래스-멤버에-대한-접근-금지" tabindex="-1">컴패니언 및 중첩 객체의 상위 생성자 호출에서 클래스 멤버에 대한 접근 금지 <a class="header-anchor" href="#컴패니언-및-중첩-객체의-상위-생성자-호출에서-클래스-멤버에-대한-접근-금지" aria-label="Permalink to &quot;컴패니언 및 중첩 객체의 상위 생성자 호출에서 클래스 멤버에 대한 접근 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.com/issue/KT-25289" target="_blank" rel="noreferrer">KT-25289</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 컴패니언 및 일반 객체의 상위 생성자 호출 인수가 포함하는 선언을 참조하는 경우 오류를 보고합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.20: 문제성 인수에 경고를 도입합니다.</li><li>1.6.0: 이 경고를 오류로 격상합니다. <code>-XXLanguage:-ProhibitSelfCallsInNestedObjects</code>를 사용하여 일시적으로 1.6 이전 동작으로 되돌릴 수 있습니다.</li></ul></blockquote><h3 id="타입-널-가능성-개선-사항" tabindex="-1">타입 널 가능성 개선 사항 <a class="header-anchor" href="#타입-널-가능성-개선-사항" aria-label="Permalink to &quot;타입 널 가능성 개선 사항&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48623" target="_blank" rel="noreferrer">KT-48623</a></p><p><strong>구성 요소</strong>: Kotlin/JVM</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.7에서는 Java 코드의 타입 널 가능성 어노테이션을 로드하고 해석하는 방식이 변경됩니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.4.30: 더 정밀한 타입 널 가능성이 오류로 이어질 수 있는 경우에 경고를 도입합니다.</li><li>1.7.0: Java 타입의 널 가능성을 더 정밀하게 추론합니다. <code>-XXLanguage:-TypeEnhancementImprovementsInStrictMode</code>를 사용하여 일시적으로 1.7 이전 동작으로 되돌릴 수 있습니다.</li></ul></blockquote><h3 id="서로-다른-숫자-타입-간의-암묵적-강제-변환-금지" tabindex="-1">서로 다른 숫자 타입 간의 암묵적 강제 변환 금지 <a class="header-anchor" href="#서로-다른-숫자-타입-간의-암묵적-강제-변환-금지" aria-label="Permalink to &quot;서로 다른 숫자 타입 간의 암묵적 강제 변환 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48645" target="_blank" rel="noreferrer">KT-48645</a></p><p><strong>구성 요소</strong>: Kotlin/JVM</p><p><strong>비호환성 변경 유형</strong>: 동작 (behavioral)</p><p><strong>요약</strong>: Kotlin은 의미상 다운캐스트만 필요한 기본 숫자 타입으로 숫자 값을 자동으로 변환하는 것을 피할 것입니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>&lt; 1.5.30: 모든 영향을 받는 경우에서 이전 동작.</li><li>1.5.30: 생성된 프로퍼티 델리게이트 접근자에서 다운캐스트 동작을 수정합니다. <code>-Xuse-old-backend</code>를 사용하여 일시적으로 1.5.30 수정 이전 동작으로 되돌릴 수 있습니다.</li><li><blockquote><p>= 1.6.20: 기타 영향을 받는 경우에서 다운캐스트 동작을 수정합니다.</p></blockquote></li></ul></blockquote><h3 id="컨테이너-어노테이션이-jls를-위반하는-반복-가능-어노테이션-클래스-선언-금지" tabindex="-1">컨테이너 어노테이션이 JLS를 위반하는 반복 가능 어노테이션 클래스 선언 금지 <a class="header-anchor" href="#컨테이너-어노테이션이-jls를-위반하는-반복-가능-어노테이션-클래스-선언-금지" aria-label="Permalink to &quot;컨테이너 어노테이션이 JLS를 위반하는 반복 가능 어노테이션 클래스 선언 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-47928" target="_blank" rel="noreferrer">KT-47928</a></p><p><strong>구성 요소</strong>: Kotlin/JVM</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 반복 가능 어노테이션의 컨테이너 어노테이션이 <a href="https://docs.oracle.com/javase/specs/jls/se16/html/jls-9.html#jls-9.6.3" target="_blank" rel="noreferrer">JLS 9.6.3</a>과 동일한 요구 사항(배열 타입 값 메서드, 리텐션, 타겟)을 충족하는지 확인합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.30: JLS 요구 사항을 위반하는 반복 가능 컨테이너 어노테이션 선언에 경고를 도입합니다 (점진적 모드에서는 오류).</li><li>1.6.0: 이 경고를 오류로 격상합니다. <code>-XXLanguage:-RepeatableAnnotationContainerConstraints</code>를 사용하여 일시적으로 오류 보고를 비활성화할 수 있습니다.</li></ul></blockquote><h3 id="반복-가능-어노테이션-클래스-내에-container라는-이름의-중첩-클래스-선언-금지" tabindex="-1">반복 가능 어노테이션 클래스 내에 Container라는 이름의 중첩 클래스 선언 금지 <a class="header-anchor" href="#반복-가능-어노테이션-클래스-내에-container라는-이름의-중첩-클래스-선언-금지" aria-label="Permalink to &quot;반복 가능 어노테이션 클래스 내에 Container라는 이름의 중첩 클래스 선언 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-47971" target="_blank" rel="noreferrer">KT-47971</a></p><p><strong>구성 요소</strong>: Kotlin/JVM</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 Kotlin에서 선언된 반복 가능 어노테이션에 미리 정의된 이름 <code>Container</code>를 가진 중첩 클래스가 없는지 확인합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.30: Kotlin 반복 가능 어노테이션 클래스 내에 <code>Container</code>라는 이름의 중첩 클래스에 경고를 도입합니다 (점진적 모드에서는 오류).</li><li>1.6.0: 이 경고를 오류로 격상합니다. <code>-XXLanguage:-RepeatableAnnotationContainerConstraints</code>를 사용하여 일시적으로 오류 보고를 비활성화할 수 있습니다.</li></ul></blockquote><h3 id="인터페이스-프로퍼티를-오버라이드하는-주-생성자-내-프로퍼티에-jvmfield-사용-금지" tabindex="-1">인터페이스 프로퍼티를 오버라이드하는 주 생성자 내 프로퍼티에 @JvmField 사용 금지 <a class="header-anchor" href="#인터페이스-프로퍼티를-오버라이드하는-주-생성자-내-프로퍼티에-jvmfield-사용-금지" aria-label="Permalink to &quot;인터페이스 프로퍼티를 오버라이드하는 주 생성자 내 프로퍼티에 @JvmField 사용 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-32753" target="_blank" rel="noreferrer">KT-32753</a></p><p><strong>구성 요소</strong>: Kotlin/JVM</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 인터페이스 프로퍼티를 오버라이드하는 주 생성자 내에 선언된 프로퍼티에 <code>@JvmField</code> 어노테이션을 사용하는 것을 금지합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.20: 주 생성자 내 해당 프로퍼티에 <code>@JvmField</code> 어노테이션 사용 시 경고를 도입합니다.</li><li>1.6.0: 이 경고를 오류로 격상합니다. <code>-XXLanguage:-ProhibitJvmFieldOnOverrideFromInterfaceInPrimaryConstructor</code>를 사용하여 일시적으로 오류 보고를 비활성화할 수 있습니다.</li></ul></blockquote><h3 id="컴파일러-옵션-xjvm-default의-enable-및-compatibility-모드-사용-중단" tabindex="-1">컴파일러 옵션 -Xjvm-default의 enable 및 compatibility 모드 사용 중단 <a class="header-anchor" href="#컴파일러-옵션-xjvm-default의-enable-및-compatibility-모드-사용-중단" aria-label="Permalink to &quot;컴파일러 옵션 -Xjvm-default의 enable 및 compatibility 모드 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-46329" target="_blank" rel="noreferrer">KT-46329</a></p><p><strong>구성 요소</strong>: Kotlin/JVM</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6.20에서는 <code>-Xjvm-default</code> 컴파일러 옵션의 <code>enable</code> 및 <code>compatibility</code> 모드 사용에 대해 경고를 표시합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.20: <code>-Xjvm-default</code> 컴파일러 옵션의 <code>enable</code> 및 <code>compatibility</code> 모드에 경고를 도입합니다.</li><li><blockquote><p>= 1.8.0: 이 경고를 오류로 격상합니다.</p></blockquote></li></ul></blockquote><h3 id="public-abi-인라인-함수에서의-super-호출-금지" tabindex="-1">public-abi 인라인 함수에서의 super 호출 금지 <a class="header-anchor" href="#public-abi-인라인-함수에서의-super-호출-금지" aria-label="Permalink to &quot;public-abi 인라인 함수에서의 super 호출 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-45379" target="_blank" rel="noreferrer">KT-45379</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 <code>public</code> 또는 <code>protected</code> 인라인 함수 및 프로퍼티에서 <code>super</code> 한정자를 가진 함수를 호출하는 것을 금지합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.0: <code>public</code> 또는 <code>protected</code> 인라인 함수 또는 프로퍼티 접근자에서 <code>super</code> 호출 시 경고를 도입합니다.</li><li>1.6.0: 이 경고를 오류로 격상합니다. <code>-XXLanguage:-ProhibitSuperCallsFromPublicInline</code>을 사용하여 일시적으로 오류 보고를 비활성화할 수 있습니다.</li></ul></blockquote><h3 id="public-인라인-함수에서의-protected-생성자-호출-금지" tabindex="-1">public 인라인 함수에서의 protected 생성자 호출 금지 <a class="header-anchor" href="#public-인라인-함수에서의-protected-생성자-호출-금지" aria-label="Permalink to &quot;public 인라인 함수에서의 protected 생성자 호출 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48860" target="_blank" rel="noreferrer">KT-48860</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 <code>public</code> 또는 <code>protected</code> 인라인 함수 및 프로퍼티에서 <code>protected</code> 생성자를 호출하는 것을 금지합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.4.30: <code>public</code> 또는 <code>protected</code> 인라인 함수 또는 프로퍼티 접근자에서 <code>protected</code> 생성자 호출 시 경고를 도입합니다.</li><li>1.6.0: 이 경고를 오류로 격상합니다. <code>-XXLanguage:-ProhibitProtectedConstructorCallFromPublicInline</code>을 사용하여 일시적으로 오류 보고를 비활성화할 수 있습니다.</li></ul></blockquote><h3 id="파일-내-private-타입에서-private-중첩-타입-노출-금지" tabindex="-1">파일 내 private 타입에서 private 중첩 타입 노출 금지 <a class="header-anchor" href="#파일-내-private-타입에서-private-중첩-타입-노출-금지" aria-label="Permalink to &quot;파일 내 private 타입에서 private 중첩 타입 노출 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-20094" target="_blank" rel="noreferrer">KT-20094</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 파일 내 <code>private</code> 타입에서 <code>private</code> 중첩 타입 및 내부 클래스를 노출하는 것을 금지합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.0: 파일 내 <code>private</code> 타입에서 노출되는 <code>private</code> 타입에 경고를 도입합니다.</li><li>1.6.0: 이 경고를 오류로 격상합니다. <code>-XXLanguage:-PrivateInFileEffectiveVisibility</code>를 사용하여 일시적으로 오류 보고를 비활성화할 수 있습니다.</li></ul></blockquote><h3 id="타입에-대한-어노테이션의-경우-일부-사례에서-어노테이션-타겟이-분석되지-않음" tabindex="-1">타입에 대한 어노테이션의 경우, 일부 사례에서 어노테이션 타겟이 분석되지 않음 <a class="header-anchor" href="#타입에-대한-어노테이션의-경우-일부-사례에서-어노테이션-타겟이-분석되지-않음" aria-label="Permalink to &quot;타입에 대한 어노테이션의 경우, 일부 사례에서 어노테이션 타겟이 분석되지 않음&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-28449" target="_blank" rel="noreferrer">KT-28449</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 타입에 적용되어서는 안 되는 어노테이션이 타입에 사용되는 것을 더 이상 허용하지 않습니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.20: 점진적 모드에서 오류를 도입합니다.</li><li>1.6.0: 오류를 도입합니다. <code>-XXLanguage:-ProperCheckAnnotationsTargetInTypeUsePositions</code>를 사용하여 일시적으로 오류 보고를 비활성화할 수 있습니다.</li></ul></blockquote><h3 id="후행-람다와-함께-suspend라는-이름의-함수-호출-금지" tabindex="-1">후행 람다와 함께 suspend라는 이름의 함수 호출 금지 <a class="header-anchor" href="#후행-람다와-함께-suspend라는-이름의-함수-호출-금지" aria-label="Permalink to &quot;후행 람다와 함께 suspend라는 이름의 함수 호출 금지&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-22562" target="_blank" rel="noreferrer">KT-22562</a></p><p><strong>구성 요소</strong>: 코어 언어</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.6에서는 함수형 타입의 단일 인수를 후행 람다로 전달하는 <code>suspend</code>라는 이름의 함수를 호출하는 것을 더 이상 허용하지 않습니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.3.0: 해당 함수 호출에 경고를 도입합니다.</li><li>1.6.0: 이 경고를 오류로 격상합니다.</li><li><blockquote><p>= 1.7.0: 언어 문법에 변경 사항을 도입하여 <code>{</code> 앞에 오는 <code>suspend</code>가 키워드로 파싱되도록 합니다.</p></blockquote></li></ul></blockquote><h2 id="표준-라이브러리" tabindex="-1">표준 라이브러리 <a class="header-anchor" href="#표준-라이브러리" aria-label="Permalink to &quot;표준 라이브러리&quot;">​</a></h2><h3 id="minus-removeall-retainall에서-취약한-contains-최적화-제거" tabindex="-1">minus/removeAll/retainAll에서 취약한 contains 최적화 제거 <a class="header-anchor" href="#minus-removeall-retainall에서-취약한-contains-최적화-제거" aria-label="Permalink to &quot;minus/removeAll/retainAll에서 취약한 contains 최적화 제거&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.com/issue/KT-45438" target="_blank" rel="noreferrer">KT-45438</a></p><p><strong>구성 요소</strong>: kotlin-stdlib</p><p><strong>비호환성 변경 유형</strong>: 동작 (behavioral)</p><p><strong>요약</strong>: Kotlin 1.6에서는 컬렉션/이터러블/배열/시퀀스에서 여러 요소를 제거하는 함수 및 연산자의 인수에 대해 <code>Set</code>으로의 변환을 더 이상 수행하지 않습니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>&lt; 1.6: 이전 동작: 일부 경우에 인수가 <code>Set</code>으로 변환됨.</li><li>1.6.0: 함수 인수가 컬렉션인 경우, 더 이상 <code>Set</code>으로 변환되지 않습니다. 컬렉션이 아닌 경우, 대신 <code>List</code>로 변환될 수 있습니다. JVM에서 <code>kotlin.collections.convert_arg_to_set_in_removeAll=true</code> 시스템 프로퍼티를 설정하여 이전 동작을 일시적으로 다시 켤 수 있습니다.</li><li><blockquote><p>= 1.7: 위 시스템 프로퍼티는 더 이상 영향을 미치지 않습니다.</p></blockquote></li></ul></blockquote><h3 id="random-nextlong의-값-생성-알고리즘-변경" tabindex="-1">Random.nextLong의 값 생성 알고리즘 변경 <a class="header-anchor" href="#random-nextlong의-값-생성-알고리즘-변경" aria-label="Permalink to &quot;Random.nextLong의 값 생성 알고리즘 변경&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-47304" target="_blank" rel="noreferrer">KT-47304</a></p><p><strong>구성 요소</strong>: kotlin-stdlib</p><p><strong>비호환성 변경 유형</strong>: 동작 (behavioral)</p><p><strong>요약</strong>: Kotlin 1.6에서는 <code>Random.nextLong</code> 함수의 값 생성 알고리즘을 변경하여 지정된 범위 밖의 값이 생성되는 것을 방지합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.0: 동작이 즉시 수정됩니다.</li></ul></blockquote><h3 id="컬렉션-min-및-max-함수의-반환-타입을-점진적으로-non-nullable로-변경" tabindex="-1">컬렉션 min 및 max 함수의 반환 타입을 점진적으로 Non-nullable로 변경 <a class="header-anchor" href="#컬렉션-min-및-max-함수의-반환-타입을-점진적으로-non-nullable로-변경" aria-label="Permalink to &quot;컬렉션 min 및 max 함수의 반환 타입을 점진적으로 Non-nullable로 변경&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-38854" target="_blank" rel="noreferrer">KT-38854</a></p><p><strong>구성 요소</strong>: kotlin-stdlib</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin 1.7에서 컬렉션 <code>min</code> 및 <code>max</code> 함수의 반환 타입이 Non-nullable로 변경됩니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.4.0: <code>...OrNull</code> 함수를 동의어로 도입하고 영향을 받는 API를 사용 중단합니다 (자세한 내용은 문제 참조).</li><li>1.5.0: 영향을 받는 API의 지원 중단 수준을 오류로 격상합니다.</li><li>1.6.0: 사용 중단된 함수를 <code>public</code> API에서 숨깁니다.</li><li><blockquote><p>= 1.7: 영향을 받는 API를 Non-nullable 반환 타입으로 재도입합니다.</p></blockquote></li></ul></blockquote><h3 id="부동-소수점-배열-함수-contains-indexof-lastindexof-사용-중단" tabindex="-1">부동 소수점 배열 함수: contains, indexOf, lastIndexOf 사용 중단 <a class="header-anchor" href="#부동-소수점-배열-함수-contains-indexof-lastindexof-사용-중단" aria-label="Permalink to &quot;부동 소수점 배열 함수: contains, indexOf, lastIndexOf 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-28753" target="_blank" rel="noreferrer">KT-28753</a></p><p><strong>구성 요소</strong>: kotlin-stdlib</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin은 전체 순서 대신 IEEE-754 순서를 사용하여 값을 비교하는 부동 소수점 배열 함수 <code>contains</code>, <code>indexOf</code>, <code>lastIndexOf</code>를 사용 중단합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.4.0: 영향을 받는 함수에 경고와 함께 사용 중단을 도입합니다.</li><li>1.6.0: 지원 중단 수준을 오류로 격상합니다.</li><li><blockquote><p>= 1.7: 사용 중단된 함수를 <code>public</code> API에서 숨깁니다.</p></blockquote></li></ul></blockquote><h3 id="kotlin-dom-및-kotlin-browser-패키지의-선언을-kotlinx-로-마이그레이션" tabindex="-1">kotlin.dom 및 kotlin.browser 패키지의 선언을 kotlinx.*로 마이그레이션 <a class="header-anchor" href="#kotlin-dom-및-kotlin-browser-패키지의-선언을-kotlinx-로-마이그레이션" aria-label="Permalink to &quot;kotlin.dom 및 kotlin.browser 패키지의 선언을 kotlinx.*로 마이그레이션&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-39330" target="_blank" rel="noreferrer">KT-39330</a></p><p><strong>구성 요소</strong>: kotlin-stdlib (JS)</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: <code>kotlin.dom</code> 및 <code>kotlin.browser</code> 패키지의 선언이 <code>stdlib</code>에서 추출할 준비를 위해 해당 <code>kotlinx.*</code> 패키지로 이동됩니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.4.0: <code>kotlinx.dom</code> 및 <code>kotlinx.browser</code> 패키지에 대체 API를 도입합니다.</li><li>1.4.0: <code>kotlin.dom</code> 및 <code>kotlin.browser</code> 패키지의 API를 사용 중단하고 위의 새 API를 대체용으로 제안합니다.</li><li>1.6.0: 지원 중단 수준을 오류로 격상합니다.</li><li><blockquote><p>= 1.7: <code>stdlib</code>에서 사용 중단된 함수를 제거합니다.</p></blockquote></li><li><blockquote><p>= 1.7: <code>kotlinx.*</code> 패키지의 API를 별도 라이브러리로 이동합니다.</p></blockquote></li></ul></blockquote><h3 id="kotlin-js에서-regex-replace-함수를-인라인이-아닌-함수로-만들기" tabindex="-1">Kotlin/JS에서 Regex.replace 함수를 인라인이 아닌 함수로 만들기 <a class="header-anchor" href="#kotlin-js에서-regex-replace-함수를-인라인이-아닌-함수로-만들기" aria-label="Permalink to &quot;Kotlin/JS에서 Regex.replace 함수를 인라인이 아닌 함수로 만들기&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-27738" target="_blank" rel="noreferrer">KT-27738</a></p><p><strong>구성 요소</strong>: kotlin-stdlib (JS)</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Kotlin/JS에서 함수형 <code>transform</code> 파라미터를 가진 <code>Regex.replace</code> 함수는 더 이상 인라인이 아닙니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.0: 영향을 받는 함수에서 <code>inline</code> 한정자를 제거합니다.</li></ul></blockquote><h3 id="대체-문자열에-그룹-참조가-포함된-경우-jvm과-js에서-regex-replace-함수의-동작-차이" tabindex="-1">대체 문자열에 그룹 참조가 포함된 경우 JVM과 JS에서 Regex.replace 함수의 동작 차이 <a class="header-anchor" href="#대체-문자열에-그룹-참조가-포함된-경우-jvm과-js에서-regex-replace-함수의-동작-차이" aria-label="Permalink to &quot;대체 문자열에 그룹 참조가 포함된 경우 JVM과 JS에서 Regex.replace 함수의 동작 차이&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-28378" target="_blank" rel="noreferrer">KT-28378</a></p><p><strong>구성 요소</strong>: kotlin-stdlib (JS)</p><p><strong>비호환성 변경 유형</strong>: 동작 (behavioral)</p><p><strong>요약</strong>: Kotlin/JS의 <code>Regex.replace</code> 함수에서 대체 패턴 문자열은 Kotlin/JVM과 동일한 패턴 문법을 따릅니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.0: Kotlin/JS <code>stdlib</code>의 <code>Regex.replace</code>에서 대체 패턴 처리를 변경합니다.</li></ul></blockquote><h3 id="js-regex에서-유니코드-대소문자-폴딩-사용" tabindex="-1">JS Regex에서 유니코드 대소문자 폴딩 사용 <a class="header-anchor" href="#js-regex에서-유니코드-대소문자-폴딩-사용" aria-label="Permalink to &quot;JS Regex에서 유니코드 대소문자 폴딩 사용&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-45928" target="_blank" rel="noreferrer">KT-45928</a></p><p><strong>구성 요소</strong>: kotlin-stdlib (JS)</p><p><strong>비호환성 변경 유형</strong>: 동작 (behavioral)</p><p><strong>요약</strong>: Kotlin/JS의 <code>Regex</code> 클래스는 기본 JS 정규 표현식 엔진을 호출할 때 유니코드 규칙에 따라 문자를 검색하고 비교하기 위해 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode" target="_blank" rel="noreferrer"><code>unicode</code></a> 플래그를 사용합니다. 이는 JS 환경에 특정 버전 요구 사항을 가져오고 정규식 패턴 문자열에서 불필요한 이스케이프에 대한 더 엄격한 유효성 검사를 야기합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.0: JS <code>Regex</code> 클래스의 대부분 함수에서 유니코드 대소문자 폴딩을 활성화합니다.</li><li>1.6.0: <code>Regex.replaceFirst</code> 함수에서 유니코드 대소문자 폴딩을 활성화합니다.</li></ul></blockquote><h3 id="일부-js-전용-api-사용-중단" tabindex="-1">일부 JS 전용 API 사용 중단 <a class="header-anchor" href="#일부-js-전용-api-사용-중단" aria-label="Permalink to &quot;일부 JS 전용 API 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48587" target="_blank" rel="noreferrer">KT-48587</a></p><p><strong>구성 요소</strong>: kotlin-stdlib (JS)</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: <code>stdlib</code>의 여러 JS 전용 함수가 제거를 위해 사용 중단됩니다. 여기에는 <code>String.concat(String)</code>, <code>String.match(regex: String)</code>, <code>String.matches(regex: String)</code> 및 비교 함수를 인수로 받는 배열의 <code>sort</code> 함수(예: <code>Array&lt;out T&gt;.sort(comparison: (a: T, b: T) -&gt; Int)</code>)가 포함됩니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.0: 영향을 받는 함수에 경고와 함께 사용 중단을 도입합니다.</li><li>1.7.0: 지원 중단 수준을 오류로 격상합니다.</li><li>1.8.0: <code>public</code> API에서 사용 중단된 함수를 제거합니다.</li></ul></blockquote><h3 id="kotlin-js-클래스의-public-api에서-구현-및-상호-운용성-관련-함수-숨기기" tabindex="-1">Kotlin/JS 클래스의 public API에서 구현 및 상호 운용성 관련 함수 숨기기 <a class="header-anchor" href="#kotlin-js-클래스의-public-api에서-구현-및-상호-운용성-관련-함수-숨기기" aria-label="Permalink to &quot;Kotlin/JS 클래스의 public API에서 구현 및 상호 운용성 관련 함수 숨기기&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48587" target="_blank" rel="noreferrer">KT-48587</a></p><p><strong>구성 요소</strong>: kotlin-stdlib (JS)</p><p><strong>비호환성 변경 유형</strong>: 소스 (source), 바이너리 (binary)</p><p><strong>요약</strong>: <code>HashMap.createEntrySet</code> 및 <code>AbstactMutableCollection.toJSON</code> 함수의 가시성이 <code>internal</code>로 변경됩니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.0: 함수를 <code>internal</code>로 만들어 <code>public</code> API에서 제거합니다.</li></ul></blockquote><h2 id="도구" tabindex="-1">도구 <a class="header-anchor" href="#도구" aria-label="Permalink to &quot;도구&quot;">​</a></h2><h3 id="kotlingradlesubplugin-클래스-사용-중단" tabindex="-1">KotlinGradleSubplugin 클래스 사용 중단 <a class="header-anchor" href="#kotlingradlesubplugin-클래스-사용-중단" aria-label="Permalink to &quot;KotlinGradleSubplugin 클래스 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48830" target="_blank" rel="noreferrer">KT-48830</a></p><p><strong>구성 요소</strong>: Gradle</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: <code>KotlinGradleSubplugin</code> 클래스는 <code>KotlinCompilerPluginSupportPlugin</code>을 선호하여 사용 중단됩니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.0: 지원 중단 수준을 오류로 격상합니다.</li><li><blockquote><p>= 1.7.0: 사용 중단된 클래스를 제거합니다.</p></blockquote></li></ul></blockquote><h3 id="kotlin-usefallbackcompilersearch-빌드-옵션-제거" tabindex="-1">kotlin.useFallbackCompilerSearch 빌드 옵션 제거 <a class="header-anchor" href="#kotlin-usefallbackcompilersearch-빌드-옵션-제거" aria-label="Permalink to &quot;kotlin.useFallbackCompilerSearch 빌드 옵션 제거&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-46719" target="_blank" rel="noreferrer">KT-46719</a></p><p><strong>구성 요소</strong>: Gradle</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: 사용 중단된 <code>kotlin.useFallbackCompilerSearch</code> 빌드 옵션을 제거합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.0: 지원 중단 수준을 경고로 격상합니다.</li><li>1.6.0: 사용 중단된 옵션을 제거합니다.</li></ul></blockquote><h3 id="여러-컴파일러-옵션-제거" tabindex="-1">여러 컴파일러 옵션 제거 <a class="header-anchor" href="#여러-컴파일러-옵션-제거" aria-label="Permalink to &quot;여러 컴파일러 옵션 제거&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48847" target="_blank" rel="noreferrer">KT-48847</a></p><p><strong>구성 요소</strong>: Gradle</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: 사용 중단된 <code>noReflect</code> 및 <code>includeRuntime</code> 컴파일러 옵션을 제거합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.0: 지원 중단 수준을 오류로 격상합니다.</li><li>1.6.0: 사용 중단된 옵션을 제거합니다.</li></ul></blockquote><h3 id="useir-컴파일러-옵션-사용-중단" tabindex="-1">useIR 컴파일러 옵션 사용 중단 <a class="header-anchor" href="#useir-컴파일러-옵션-사용-중단" aria-label="Permalink to &quot;useIR 컴파일러 옵션 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48847" target="_blank" rel="noreferrer">KT-48847</a></p><p><strong>구성 요소</strong>: Gradle</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: 사용 중단된 <code>useIR</code> 컴파일러 옵션을 숨깁니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.0: 지원 중단 수준을 경고로 격상합니다.</li><li>1.6.0: 옵션을 숨깁니다.</li><li><blockquote><p>= 1.7.0: 사용 중단된 옵션을 제거합니다.</p></blockquote></li></ul></blockquote><h3 id="kapt-use-worker-api-gradle-프로퍼티-사용-중단" tabindex="-1">kapt.use.worker.api Gradle 프로퍼티 사용 중단 <a class="header-anchor" href="#kapt-use-worker-api-gradle-프로퍼티-사용-중단" aria-label="Permalink to &quot;kapt.use.worker.api Gradle 프로퍼티 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-48826" target="_blank" rel="noreferrer">KT-48826</a></p><p><strong>구성 요소</strong>: Gradle</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: Gradle Workers API를 통해 kapt를 실행할 수 있었던 <code>kapt.use.worker.api</code> 프로퍼티(기본값: true)를 사용 중단합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.20: 지원 중단 수준을 경고로 격상합니다.</li><li><blockquote><p>= 1.8.0: 이 프로퍼티를 제거합니다.</p></blockquote></li></ul></blockquote><h3 id="kotlin-parallel-tasks-in-project-gradle-프로퍼티-제거" tabindex="-1">kotlin.parallel.tasks.in.project Gradle 프로퍼티 제거 <a class="header-anchor" href="#kotlin-parallel-tasks-in-project-gradle-프로퍼티-제거" aria-label="Permalink to &quot;kotlin.parallel.tasks.in.project Gradle 프로퍼티 제거&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-46406" target="_blank" rel="noreferrer">KT-46406</a></p><p><strong>구성 요소</strong>: Gradle</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: <code>kotlin.parallel.tasks.in.project</code> 프로퍼티를 제거합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.5.20: 지원 중단 수준을 경고로 격상합니다.</li><li>1.6.20: 이 프로퍼티를 제거합니다.</li></ul></blockquote><h3 id="kotlin-experimental-coroutines-gradle-dsl-옵션-및-kotlin-coroutines-gradle-프로퍼티-사용-중단" tabindex="-1">kotlin.experimental.coroutines Gradle DSL 옵션 및 kotlin.coroutines Gradle 프로퍼티 사용 중단 <a class="header-anchor" href="#kotlin-experimental-coroutines-gradle-dsl-옵션-및-kotlin-coroutines-gradle-프로퍼티-사용-중단" aria-label="Permalink to &quot;kotlin.experimental.coroutines Gradle DSL 옵션 및 kotlin.coroutines Gradle 프로퍼티 사용 중단&quot;">​</a></h3><blockquote><p><strong>문제</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-50369" target="_blank" rel="noreferrer">KT-50369</a></p><p><strong>구성 요소</strong>: Gradle</p><p><strong>비호환성 변경 유형</strong>: 소스 (source)</p><p><strong>요약</strong>: <code>kotlin.experimental.coroutines</code> Gradle DSL 옵션 및 <code>kotlin.coroutines</code> 프로퍼티를 사용 중단합니다.</p><p><strong>지원 중단 주기</strong>:</p><ul><li>1.6.20: 지원 중단 수준을 경고로 격상합니다.</li><li><blockquote><p>= 1.7.0: DSL 옵션 및 프로퍼티를 제거합니다.</p></blockquote></li></ul></blockquote>',72)]))}const b=e(n,[["render",a]]);export{g as __pageData,b as default};
