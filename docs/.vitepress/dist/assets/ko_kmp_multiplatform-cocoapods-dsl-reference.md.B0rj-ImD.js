import{_ as h,C as t,c as k,o as r,j as s,G as n,ag as l,a,w as e}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"CocoaPods Gradle 플러그인 DSL 참조","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-cocoapods-dsl-reference.md","filePath":"ko/kmp/multiplatform-cocoapods-dsl-reference.md","lastUpdated":1755516278000}'),c={name:"ko/kmp/multiplatform-cocoapods-dsl-reference.md"},E={tabindex:"0"};function g(u,i,y,F,m,C){const o=t("tldr"),d=t("list"),p=t("code-block");return r(),k("div",null,[i[12]||(i[12]=s("h1",{id:"cocoapods-gradle-플러그인-dsl-참조",tabindex:"-1"},[a("CocoaPods Gradle 플러그인 DSL 참조 "),s("a",{class:"header-anchor",href:"#cocoapods-gradle-플러그인-dsl-참조","aria-label":'Permalink to "CocoaPods Gradle 플러그인 DSL 참조"'},"​")],-1)),n(o,null,{default:e(()=>i[0]||(i[0]=[s("ul",null,[s("li",null,[a("Pod 의존성을 추가하기 전에, "),s("a",{href:"./multiplatform-cocoapods-overview#set-up-an-environment-to-work-with-cocoapods"},"초기 구성을 완료하세요"),a(".")]),s("li",null,[s("a",{href:"https://github.com/Kotlin/kmp-with-cocoapods-multitarget-xcode-sample",target:"_blank",rel:"noreferrer"},"Kotlin 프로젝트에서 다양한 Pod 의존성이 설정된 샘플 프로젝트"),a("를 참조하세요.")]),s("li",null,[s("a",{href:"https://github.com/Kotlin/kmp-with-cocoapods-multitarget-xcode-sample",target:"_blank",rel:"noreferrer"},"여러 타겟을 가진 Xcode 프로젝트가 Kotlin 라이브러리에 의존하는 샘플 프로젝트"),a("를 확인하세요.")])],-1)])),_:1}),i[13]||(i[13]=l(`<p>Kotlin CocoaPods Gradle 플러그인은 Podspec 파일을 생성하기 위한 도구입니다. 이 파일은 Kotlin 프로젝트를 <a href="https://cocoapods.org/" target="_blank" rel="noreferrer">CocoaPods 의존성 관리자</a>와 통합하는 데 필수적입니다.</p><p>이 DSL 참조는 CocoaPods 통합을 설정할 때 사용할 수 있는 Kotlin CocoaPods Gradle 플러그인의 주요 블록, 함수 및 속성을 나열합니다.</p><h2 id="플러그인-활성화" tabindex="-1">플러그인 활성화 <a class="header-anchor" href="#플러그인-활성화" aria-label="Permalink to &quot;플러그인 활성화&quot;">​</a></h2><p>CocoaPods 플러그인을 적용하려면 <code>build.gradle(.kts)</code> 파일에 다음 줄을 추가하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;multiplatform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;native.cocoapods&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>플러그인 버전은 <a href="https://kotlinlang.org/docs/releases.html" target="_blank" rel="noreferrer">Kotlin 릴리스 버전</a>과 일치합니다. 최신 안정 버전은 2.2.0입니다.</p><h2 id="cocoapods-블록" tabindex="-1"><code>cocoapods {}</code> 블록 <a class="header-anchor" href="#cocoapods-블록" aria-label="Permalink to &quot;\`cocoapods {}\` 블록&quot;">​</a></h2><p><code>cocoapods {}</code> 블록은 CocoaPods 구성의 최상위 블록입니다. 이 블록은 Pod 버전, 요약, 홈페이지와 같은 필수 정보뿐만 아니라 선택적 기능을 포함하여 Pod에 대한 일반 정보를 담고 있습니다.</p><p>이 블록 내에서 다음 블록, 함수 및 속성을 사용할 수 있습니다.</p><table tabindex="0"><thead><tr><th><strong>이름</strong></th><th><strong>설명</strong></th></tr></thead><tbody><tr><td><code>version</code></td><td>Pod의 버전입니다. 지정되지 않으면 Gradle 프로젝트 버전이 사용됩니다. 이 속성 중 어느 것도 구성되지 않으면 오류가 발생합니다.</td></tr><tr><td><code>summary</code></td><td>이 프로젝트에서 빌드된 Pod에 대한 필수 설명입니다.</td></tr><tr><td><code>homepage</code></td><td>이 프로젝트에서 빌드된 Pod의 홈페이지 링크입니다.</td></tr><tr><td><code>authors</code></td><td>이 프로젝트에서 빌드된 Pod의 작성자를 지정합니다.</td></tr><tr><td><code>podfile</code></td><td>기존 Podfile을 구성합니다.</td></tr><tr><td><code>noPodspec()</code></td><td><code>cocoapods</code> 섹션에 대한 Podspec 파일을 생성하지 않도록 플러그인을 설정합니다.</td></tr><tr><td><code>name</code></td><td>이 프로젝트에서 빌드된 Pod의 이름입니다. 제공되지 않으면 프로젝트 이름이 사용됩니다.</td></tr><tr><td><code>license</code></td><td>이 프로젝트에서 빌드된 Pod의 라이선스, 유형 및 텍스트입니다.</td></tr><tr><td><code>framework</code></td><td>프레임워크 블록은 플러그인에 의해 생성된 프레임워크를 구성합니다.</td></tr><tr><td><code>source</code></td><td>이 프로젝트에서 빌드된 Pod의 위치입니다.</td></tr><tr><td><code>extraSpecAttributes</code></td><td><code>libraries</code> 또는 <code>vendored_frameworks</code>와 같은 다른 Podspec 속성을 구성합니다.</td></tr><tr><td><code>xcodeConfigurationToNativeBuildType</code></td><td>사용자 지정 Xcode 구성을 NativeBuildType에 매핑합니다: &quot;Debug&quot;를 <code>NativeBuildType.DEBUG</code>로, &quot;Release&quot;를 <code>NativeBuildType.RELEASE</code>로 매핑합니다.</td></tr><tr><td><code>publishDir</code></td><td>Pod 발행을 위한 출력 디렉토리를 구성합니다.</td></tr><tr><td><code>pods</code></td><td>Pod 의존성 목록을 반환합니다.</td></tr><tr><td><code>pod()</code></td><td>이 프로젝트에서 빌드된 Pod에 CocoaPods 의존성을 추가합니다.</td></tr><tr><td><code>specRepos</code></td><td><code>url()</code>을 사용하여 사양 리포지토리를 추가합니다. 이는 개인 Pod가 의존성으로 사용될 때 필요합니다. 자세한 내용은 <a href="https://guides.cocoapods.org/making/private-cocoapods.html" target="_blank" rel="noreferrer">CocoaPods 문서</a>를 참조하십시오.</td></tr></tbody></table><h3 id="타겟" tabindex="-1">타겟 <a class="header-anchor" href="#타겟" aria-label="Permalink to &quot;타겟&quot;">​</a></h3><table tabindex="0"><thead><tr><th>iOS</th><th>macOS</th><th>tvOS</th><th>watchOS</th></tr></thead><tbody><tr><td><code>iosArm64</code></td><td><code>macosArm64</code></td><td><code>tvosArm64</code></td><td><code>watchosArm64</code></td></tr><tr><td><code>iosX64</code></td><td><code>macosX64</code></td><td><code>tvosX64</code></td><td><code>watchosX64</code></td></tr><tr><td><code>iosSimulatorArm64</code></td><td></td><td><code>tvosSimulatorArm64</code></td><td><code>watchosSimulatorArm64</code></td></tr><tr><td></td><td></td><td></td><td><code>watchosArm32</code></td></tr><tr><td></td><td></td><td></td><td><code>watchosDeviceArm64</code></td></tr></tbody></table><p>각 타겟에 대해 <code>deploymentTarget</code> 속성을 사용하여 Pod 라이브러리의 최소 타겟 버전을 지정하세요.</p><p>적용되면 CocoaPods는 모든 타겟의 출력 바이너리로 <code>debug</code> 및 <code>release</code> 프레임워크를 모두 추가합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MyCocoaPod&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        extraSpecAttributes[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vendored_frameworks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;CustomFramework.xcframework&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        license </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{ :type =&gt; &#39;MIT&#39;, :text =&gt; &#39;License text&#39;}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{ :git =&gt; &#39;git@github.com:vkormushkin/kmmpodlibrary.git&#39;, :tag =&gt; &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; }&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        authors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Kotlin Dev&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        specRepos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/Kotlin/kotlin-cocoapods-spec.git&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        xcodeConfigurationToNativeBuildType[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CUSTOM_RELEASE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NativeBuildType.RELEASE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="framework-블록" tabindex="-1"><code>framework {}</code> 블록 <a class="header-anchor" href="#framework-블록" aria-label="Permalink to &quot;\`framework {}\` 블록&quot;">​</a></h3><p><code>framework {}</code> 블록은 <code>cocoapods</code> 내에 중첩되어 있으며 프로젝트에서 빌드된 Pod의 프레임워크 속성을 구성합니다.</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p><code>baseName</code>은 필수 필드입니다.</p></div><table tabindex="0"><thead><tr><th><strong>이름</strong></th><th><strong>설명</strong></th></tr></thead><tbody><tr><td><code>baseName</code></td><td>필수 프레임워크 이름입니다. 이 속성을 더 이상 사용되지 않는 <code>frameworkName</code> 대신 사용하세요.</td></tr><tr><td><code>isStatic</code></td><td>프레임워크 연결 유형을 정의합니다. 기본적으로 동적입니다.</td></tr><tr><td><code>transitiveExport</code></td><td>의존성 내보내기를 활성화합니다.</td></tr></tbody></table><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        framework</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            baseName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MyFramework&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            isStatic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">project</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:anotherKMMModule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            transitiveExport </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="pod-함수" tabindex="-1"><code>pod()</code> 함수 <a class="header-anchor" href="#pod-함수" aria-label="Permalink to &quot;\`pod()\` 함수&quot;">​</a></h2><p><code>pod()</code> 함수 호출은 이 프로젝트에서 빌드된 Pod에 CocoaPods 의존성을 추가합니다. 각 의존성에는 별도의 함수 호출이 필요합니다.</p><p>함수 매개변수에 Pod 라이브러리의 이름을 지정하고, 구성 블록에 라이브러리의 <code>version</code> 및 <code>source</code>와 같은 추가 매개변수 값을 지정할 수 있습니다.</p>`,23)),s("table",E,[i[11]||(i[11]=s("thead",null,[s("tr",null,[s("th",null,[s("strong",null,"이름")]),s("th",null,[s("strong",null,"설명")])])],-1)),s("tbody",null,[i[6]||(i[6]=s("tr",null,[s("td",null,[s("code",null,"version")]),s("td",null,"라이브러리 버전입니다. 라이브러리의 최신 버전을 사용하려면 매개변수를 생략합니다.")],-1)),s("tr",null,[i[3]||(i[3]=s("td",null,[s("code",null,"source")],-1)),s("td",null,[i[2]||(i[2]=a("다음에서 Pod를 구성합니다: ")),n(d,null,{default:e(()=>i[1]||(i[1]=[s("li",null,[s("code",null,"git()"),a("을 사용하는 Git 리포지토리. "),s("code",null,"git()"),a(" 뒤의 블록에서 특정 커밋을 사용하려면 "),s("code",null,"commit"),a("을, 특정 태그를 사용하려면 "),s("code",null,"tag"),a("를, 리포지토리의 특정 브랜치를 사용하려면 "),s("code",null,"branch"),a("를 지정할 수 있습니다.")],-1),s("li",null,[s("code",null,"path()"),a("를 사용하는 로컬 리포지토리")],-1)])),_:1})])]),i[7]||(i[7]=s("tr",null,[s("td",null,[s("code",null,"packageName")]),s("td",null,"패키지 이름을 지정합니다.")],-1)),s("tr",null,[i[5]||(i[5]=s("td",null,[s("code",null,"extraOpts")],-1)),s("td",null,[i[4]||(i[4]=a("Pod 라이브러리에 대한 옵션 목록을 지정합니다. 예를 들어, 특정 플래그: ")),n(p,{lang:"Kotlin",code:'extraOpts = listOf("-compiler-option")'})])]),i[8]||(i[8]=s("tr",null,[s("td",null,[s("code",null,"linkOnly")]),s("td",null,"CocoaPods 플러그인에 cinterop 바인딩을 생성하지 않고 동적 프레임워크와 함께 Pod 의존성을 사용하도록 지시합니다. 정적 프레임워크와 함께 사용하면 이 옵션은 Pod 의존성을 완전히 제거합니다.")],-1)),i[9]||(i[9]=s("tr",null,[s("td",null,[s("code",null,"interopBindingDependencies")]),s("td",null,"다른 Pod에 대한 의존성 목록을 포함합니다. 이 목록은 새 Pod에 대한 Kotlin 바인딩을 빌드할 때 사용됩니다.")],-1)),i[10]||(i[10]=s("tr",null,[s("td",null,[s("code",null,"useInteropBindingFrom()")]),s("td",null,"의존성으로 사용되는 기존 Pod의 이름을 지정합니다. 이 Pod는 함수 실행 전에 선언되어야 합니다. 이 함수는 CocoaPods 플러그인에 새 Pod에 대한 바인딩을 빌드할 때 기존 Pod의 Kotlin 바인딩을 사용하도록 지시합니다.")],-1))])]),i[14]||(i[14]=l(`<div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ios.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pod_dependency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            extraOpts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-compiler-option&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            linkOnly </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../pod_dependency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="다음-단계" tabindex="-1">다음 단계 <a class="header-anchor" href="#다음-단계" aria-label="Permalink to &quot;다음 단계&quot;">​</a></h2><ul><li><a href="https://github.com/JetBrains/kotlin/blob/master/libraries/tools/kotlin-gradle-plugin/src/common/kotlin/org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsExtension.kt" target="_blank" rel="noreferrer">Kotlin Gradle 플러그인 리포지토리에서 Kotlin DSL의 전체 구문 보기</a></li><li><a href="./multiplatform-cocoapods-libraries">Kotlin 프로젝트에 Pod 라이브러리 의존성 추가</a></li><li><a href="./multiplatform-cocoapods-xcode">Kotlin 프로젝트와 Xcode 프로젝트 간의 의존성 설정</a></li></ul>`,3))])}const B=h(c,[["render",g]]);export{q as __pageData,B as default};
