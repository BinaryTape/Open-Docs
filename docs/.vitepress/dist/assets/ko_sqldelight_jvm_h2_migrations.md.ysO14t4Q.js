import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"마이그레이션","description":"","frontmatter":{},"headers":[],"relativePath":"ko/sqldelight/jvm_h2/migrations.md","filePath":"ko/sqldelight/jvm_h2/migrations.md","lastUpdated":1748435462000}'),e={name:"ko/sqldelight/jvm_h2/migrations.md"};function l(p,s,h,k,o,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="마이그레이션" tabindex="-1">마이그레이션 <a class="header-anchor" href="#마이그레이션" aria-label="Permalink to &quot;마이그레이션&quot;">​</a></h1><h2 id="유효한-sql-마이그레이션" tabindex="-1">유효한 SQL 마이그레이션 <a class="header-anchor" href="#유효한-sql-마이그레이션" aria-label="Permalink to &quot;유효한 SQL 마이그레이션&quot;">​</a></h2><p>마이그레이션 파일에서 커스텀 Kotlin 타입을 사용하면 해당 파일들은 더 이상 유효한 SQL이 아닙니다. 다른 서비스가 읽을 수 있도록 마이그레이션 파일을 유효한 SQL로 출력하도록 Gradle 태스크를 선택적으로 구성할 수 있습니다.</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      migrationOutputDirectory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">buildDirectory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dir(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources/main/migrations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      migrationOutputFileFormat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.sql&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Defaults to .sql</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이렇게 하면 <code>generateMainDatabaseMigrations</code>라는 새로운 태스크가 생성되며, 이 태스크는 <code>.sqm</code> 파일을 지정된 출력 디렉터리에 설정된 출력 형식으로 유효한 SQL로 출력합니다. Flyway와 같은 서비스가 클래스패스에서 해당 파일을 사용할 수 있도록 <code>compileKotlin</code> 태스크에서 의존성을 생성하십시오.</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compileKotlin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configure {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dependsOn </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;generateMainDatabaseMigrations&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,6)]))}const g=i(e,[["render",l]]);export{E as __pageData,g as default};
