import{_ as a,c as e,o as l,ag as i}from"./chunks/framework.Bksy39di.js";const k=JSON.parse('{"title":"基本型","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/basic-types.md","filePath":"ja/kotlin/basic-types.md","lastUpdated":1754307826000}'),o={name:"ja/kotlin/basic-types.md"};function n(r,t,s,c,p,d){return l(),e("div",null,t[0]||(t[0]=[i('<h1 id="基本型" tabindex="-1">基本型 <a class="header-anchor" href="#基本型" aria-label="Permalink to &quot;基本型&quot;">​</a></h1><p>Kotlinでは、あらゆる変数に対してメンバー関数やプロパティを呼び出せるという意味で、すべてがオブジェクトです。特定の型（数値、文字、真偽値など）は、実行時にはプリミティブ値として最適化された内部表現を持ちますが、それらは通常のクラスのように見え、振る舞います。</p><p>このセクションでは、Kotlinで使用される基本型について説明します。</p><ul><li><a href="/ja/kotlin/numbers">数値</a>およびそれらの<a href="/ja/kotlin/unsigned-integer-types">符号なし型</a></li><li><a href="/ja/kotlin/booleans">真偽値</a></li><li><a href="/ja/kotlin/characters">文字</a></li><li><a href="/ja/kotlin/strings">文字列</a></li><li><a href="/ja/kotlin/arrays">配列</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="/ja/kotlin/typecasts">Kotlinで型チェックとキャストを実行する方法</a>を学びましょう。</p></div><p><code>Nothing</code>、<code>Any</code>、<code>Unit</code>などの他のKotlin型について学ぶには、Kotlin APIリファレンスを参照してください。</p><ul><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/" target="_blank" rel="noreferrer"><code>Any</code></a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-nothing.html" target="_blank" rel="noreferrer"><code>Nothing</code></a></li><li><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/" target="_blank" rel="noreferrer"><code>Unit</code></a></li></ul>',7)]))}const _=a(o,[["render",n]]);export{k as __pageData,_ as default};
