import{_ as d}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as g}from"./chunks/icon-2-done.e1N9yMQF.js";import{_ as y}from"./chunks/icon-3-done.D86i6ZaO.js";import{_ as F}from"./chunks/icon-4.CODFcxoy.js";import{_ as m,a as u,b as c,c as C,d as f,e as A,f as B,g as b,h as D,i as T,j as q,k as v,l as _,m as S,n as w}from"./chunks/first-compose-project-on-desktop-9.CUZzMCrD.js";import{_ as x}from"./chunks/compose-hot-reload-gutter-run.m_A5v9gh.js";import{_ as M,a as I,b as P,c as L}from"./chunks/youtube.DH2NfHCv.js";import{_ as O,C as k,c as R,o as z,j as i,G as a,ag as p,a as n,w as l}from"./chunks/framework.Bksy39di.js";const ns=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/compose-multiplatform-new-project.md","filePath":"ja/kmp/compose-multiplatform-new-project.md","lastUpdated":1755522191000}'),j={name:"ja/kmp/compose-multiplatform-new-project.md"},N={start:"4"},V={class:"tip custom-block"};function $(Z,s,J,H,K,U){const E=k("secondary-label"),e=k("Links"),o=k("tldr"),r=k("shortcut"),t=k("TabItem"),h=k("Tabs");return z(),R("div",null,[s[48]||(s[48]=i("h1",{id:"独自のアプリケーションを作成する",tabindex:"-1"},[n("独自のアプリケーションを作成する "),i("a",{class:"header-anchor",href:"#独自のアプリケーションを作成する","aria-label":'Permalink to "独自のアプリケーションを作成する"'},"​")],-1)),a(E,{ref:"IntelliJ IDEA"},null,512),a(E,{ref:"Android Studio"},null,512),a(o,null,{default:l(()=>[s[16]||(s[16]=i("p",null,"このチュートリアルではIntelliJ IDEAを使用していますが、Android Studioでも同様に進めることができます。どちらのIDEもコア機能とKotlin Multiplatformサポートは共通しています。",-1)),s[17]||(s[17]=i("br",null,null,-1)),s[18]||(s[18]=i("p",null,[n("これは「"),i("strong",null,"共有ロジックとUIを持つCompose Multiplatformアプリを作成する"),n("」チュートリアルの最終パートです。先に進む前に、前の手順を完了していることを確認してください。")],-1)),i("p",null,[s[3]||(s[3]=i("img",{src:d,width:"20",alt:"最初のステップ"},null,-1)),s[4]||(s[4]=n()),a(e,{href:"/kmp/compose-multiplatform-create-first-app",summary:"このチュートリアルではIntelliJ IDEAを使用していますが、Android Studioでも同様に進めることができます。どちらのIDEもコア機能とKotlin Multiplatformサポートは共通しています。これは共有ロジックとUIを持つCompose Multiplatformアプリを作成するチュートリアルの最初のパートです。Compose Multiplatformアプリを作成する コンポーザブルコードを探る プロジェクトを修正する 独自のアプリケーションを作成する"},{default:l(()=>s[0]||(s[0]=[n("Compose Multiplatformアプリを作成する")])),_:1}),s[5]||(s[5]=i("br",null,null,-1)),s[6]||(s[6]=i("img",{src:g,width:"20",alt:"2番目のステップ"},null,-1)),s[7]||(s[7]=n()),a(e,{href:"/kmp/compose-multiplatform-explore-composables",summary:"このチュートリアルではIntelliJ IDEAを使用していますが、Android Studioでも同様に進めることができます。どちらのIDEもコア機能とKotlin Multiplatformサポートは共通しています。これは共有ロジックとUIを持つCompose Multiplatformアプリを作成するチュートリアルの2番目のパートです。先に進む前に、前の手順を完了していることを確認してください。Compose Multiplatformアプリを作成する コンポーザブルコードを探る プロジェクトを修正する 独自のアプリケーションを作成する"},{default:l(()=>s[1]||(s[1]=[n("コンポーザブルコードを探る")])),_:1}),s[8]||(s[8]=i("br",null,null,-1)),s[9]||(s[9]=i("img",{src:y,width:"20",alt:"3番目のステップ"},null,-1)),s[10]||(s[10]=n()),a(e,{href:"/kmp/compose-multiplatform-modify-project",summary:"このチュートリアルではIntelliJ IDEAを使用していますが、Android Studioでも同様に進めることができます。どちらのIDEもコア機能とKotlin Multiplatformサポートは共通しています。これは共有ロジックとUIを持つCompose Multiplatformアプリを作成するチュートリアルの3番目のパートです。先に進む前に、前の手順を完了していることを確認してください。Compose Multiplatformアプリを作成する コンポーザブルコードを探る プロジェクトを修正する 独自のアプリケーションを作成する"},{default:l(()=>s[2]||(s[2]=[n("プロジェクトを修正する")])),_:1}),s[11]||(s[11]=i("br",null,null,-1)),s[12]||(s[12]=i("img",{src:F,width:"20",alt:"4番目のステップ"},null,-1)),s[13]||(s[13]=n()),s[14]||(s[14]=i("strong",null,"独自のアプリケーションを作成する",-1)),s[15]||(s[15]=i("br",null,null,-1))])]),_:1}),s[49]||(s[49]=p(`<p>ウィザードで作成されたサンプルプロジェクトを探求し、強化したところで、あなたはすでに知っている概念を使い、新しい概念を導入しながら、ゼロから独自のアプリケーションを作成することができます。</p><p>ユーザーが国と都市を入力し、アプリがその国の首都の時刻を表示する「ローカル時刻表示アプリケーション」を作成します。Compose Multiplatformアプリのすべての機能は、マルチプラットフォームライブラリを使用して共通コードで実装されます。ドロップダウンメニュー内に画像をロードして表示し、イベント、スタイル、テーマ、モディファイア、レイアウトを使用します。</p><p>各ステージで、アプリケーションを3つのプラットフォーム（iOS、Android、デスクトップ）すべてで実行することも、ニーズに最適な特定のプラットフォームに集中することもできます。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>プロジェクトの最終状態は、<a href="https://github.com/kotlin-hands-on/get-started-with-cm/" target="_blank" rel="noreferrer">GitHubリポジトリ</a>で確認できます。</p></div><h2 id="基礎を構築する" tabindex="-1">基礎を構築する <a class="header-anchor" href="#基礎を構築する" aria-label="Permalink to &quot;基礎を構築する&quot;">​</a></h2><p>まず、新しい<code>App</code>コンポーザブルを実装します。</p><ol><li><p><code>composeApp/src/commonMain/kotlin</code>にある<code>App.kt</code>ファイルを開き、コードを次の<code>App</code>コンポーザブルに置き換えます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Preview</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MaterialTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;No location selected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">safeContentPadding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(timeAtLocation)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;13:30&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Show Time At Location&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><ul><li>このレイアウトは、2つのコンポーザブルを含むColumnです。1つ目は<code>Text</code>コンポーザブル、2つ目は<code>Button</code>です。</li><li>これら2つのコンポーザブルは、<code>timeAtLocation</code>プロパティという単一の共有状態によってリンクされています。<code>Text</code>コンポーザブルはこの状態のオブザーバーです。</li><li><code>Button</code>コンポーザブルは、<code>onClick</code>イベントハンドラーを使用して状態を変更します。</li></ul><ol start="2"><li>AndroidとiOSでアプリケーションを実行します。</li></ol><p><img src="`+v+'" alt="AndroidとiOSでの新しいCompose Multiplatformアプリ" width="500"></p><p>アプリケーションを実行し、ボタンをクリックすると、ハードコードされた時刻が表示されます。</p><ol start="3"><li>デスクトップでアプリケーションを実行します。動作しますが、UIに対してウィンドウが明らかに大きすぎます。</li></ol><p><img src="'+_+'" alt="デスクトップでの新しいCompose Multiplatformアプリ" width="400"></p>',13)),i("ol",N,[i("li",null,[s[35]||(s[35]=p(`<p>これを修正するには、<code>composeApp/src/desktopMain/kotlin</code>にある<code>main.kt</code>ファイルを次のように更新します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rememberWindowState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DpSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WindowPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   )</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   Window</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Local Time App&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       onCloseRequest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exitApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       alwaysOnTop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>ここでは、ウィンドウのタイトルを設定し、<code>WindowState</code>型を使用してウィンドウの初期サイズと画面上の位置を設定しています。</p>`,3)),i("div",V,[s[34]||(s[34]=i("p",{class:"custom-block-title"},"TIP",-1)),i("p",null,[s[21]||(s[21]=n("デスクトップアプリでリアルタイムに変更を見るには、")),s[22]||(s[22]=i("a",{href:"./compose-hot-reload"},"Compose Hot Reload",-1)),s[23]||(s[23]=n("を使用します。 1. ")),s[24]||(s[24]=i("code",null,"main.kt",-1)),s[25]||(s[25]=n("ファイルで、ガターにある")),s[26]||(s[26]=i("strong",null,"Run",-1)),s[27]||(s[27]=n("アイコンをクリックします。 2. **Run 'main [desktop]' with Compose Hot Reload (Alpha)**を選択します。 ")),s[28]||(s[28]=i("img",{src:x,alt:"ガターからCompose Hot Reloadを実行する",width:"350"},null,-1)),s[29]||(s[29]=n(" アプリが自動的に更新されるのを見るには、変更されたファイルを保存します（")),a(r,null,{default:l(()=>s[19]||(s[19]=[n("⌘ S")])),_:1}),s[30]||(s[30]=n(" / ")),a(r,null,{default:l(()=>s[20]||(s[20]=[n("Ctrl+S")])),_:1}),s[31]||(s[31]=n("）。 Compose Hot Reloadは現在")),s[32]||(s[32]=i("a",{href:"https://kotlinlang.org/components-stability.html#stability-levels-explained",target:"_blank",rel:"noreferrer"},"アルファ版",-1)),s[33]||(s[33]=n("であり、その機能は変更される可能性があります。"))])])]),s[36]||(s[36]=i("li",null,[i("p",null,"IDEの指示に従って、不足している依存関係をインポートします。")],-1)),s[37]||(s[37]=i("li",null,[i("p",null,"デスクトップアプリケーションを再度実行します。見た目が改善されているはずです。")],-1))]),s[50]||(s[50]=i("p",null,[i("img",{src:m,alt:"デスクトップ上のCompose Multiplatformアプリの改善された外観",width:"350"})],-1)),s[51]||(s[51]=i("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"compose-hot-reloadのデモ",tabindex:"-1"},[n("Compose Hot Reloadのデモ "),i("a",{class:"header-anchor",href:"#compose-hot-reloadのデモ","aria-label":'Permalink to "Compose Hot Reloadのデモ {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),s[52]||(s[52]=p('<p><img src="'+S+`" alt="Compose Hot Reload"></p><h2 id="ユーザー入力をサポートする" tabindex="-1">ユーザー入力をサポートする <a class="header-anchor" href="#ユーザー入力をサポートする" aria-label="Permalink to &quot;ユーザー入力をサポートする&quot;">​</a></h2><p>次に、ユーザーが都市名を入力してその場所の時刻を確認できるようにします。これを実現する最も簡単な方法は、<code>TextField</code>コンポーザブルを追加することです。</p><ol><li><p>現在の<code>App</code>の実装を以下に置き換えます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Preview</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MaterialTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Europe/Paris&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;No location selected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">safeContentPadding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(timeAtLocation)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            TextField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> location, onValueChange </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it })</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;13:30&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Show Time At Location&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>新しいコードは、<code>TextField</code>と<code>location</code>プロパティの両方を追加します。ユーザーがテキストフィールドに入力すると、<code>onValueChange</code>イベントハンドラーを使用してプロパティの値が段階的に更新されます。</p></li><li><p>IDEの指示に従って、不足している依存関係をインポートします。</p></li><li><p>ターゲットとする各プラットフォームでアプリケーションを実行します。</p></li></ol>`,4)),a(h,null,{default:l(()=>[a(t,{id:"mobile-user-input",title:"AndroidとiOS"},{default:l(()=>s[38]||(s[38]=[i("img",{src:u,alt:"AndroidとiOSにおけるCompose Multiplatformアプリのユーザー入力",width:"500"},null,-1)])),_:1}),a(t,{id:"desktop-user-input",title:"デスクトップ"},{default:l(()=>s[39]||(s[39]=[i("img",{src:c,alt:"デスクトップにおけるCompose Multiplatformアプリのユーザー入力",width:"350"},null,-1)])),_:1})]),_:1}),s[53]||(s[53]=p(`<h2 id="時刻を計算する" tabindex="-1">時刻を計算する <a class="header-anchor" href="#時刻を計算する" aria-label="Permalink to &quot;時刻を計算する&quot;">​</a></h2><p>次のステップは、与えられた入力を使用して時刻を計算することです。これを行うには、<code>currentTimeAt()</code>関数を作成します。</p><ol><li><p><code>App.kt</code>ファイルに戻り、以下の関数を追加します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> currentTimeAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LocalTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$hour</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$minute</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$second</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Clock.System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zone </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TimeZone.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toLocalDateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(zone).time</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;The time in </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is \${localTime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ex: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IllegalTimeZoneException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>この関数は、以前に作成した（そしてもはや不要な）<code>todaysDate()</code>に似ています。</p></li><li><p>IDEの指示に従って、不足している依存関係をインポートします。</p></li><li><p><code>App</code>コンポーザブルを調整して<code>currentTimeAt()</code>を呼び出します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Preview</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MaterialTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Europe/Paris&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;No location selected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">safeContentPadding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">           Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(timeAtLocation)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">           TextField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> location, onValueChange </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it })</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">           Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> currentTimeAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location) ?: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Invalid Location&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">               Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Show Time At Location&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><code>wasmJsMain/kotlin/main.kt</code>ファイルで、Web用のタイムゾーンサポートを初期化するために、<code>main()</code>関数の前に以下のコードを追加します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@JsModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@js-joda/timezone&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">external</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsJodaTimeZoneModule</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsJodaTz </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JsJodaTimeZoneModule</span></span></code></pre></div></li><li><p>アプリケーションを再度実行し、有効なタイムゾーンを入力します。</p></li><li><p>ボタンをクリックします。正しい時刻が表示されるはずです。</p></li></ol>`,3)),a(h,null,{default:l(()=>[a(t,{id:"mobile-time-display",title:"AndroidとiOS"},{default:l(()=>s[40]||(s[40]=[i("img",{src:C,alt:"AndroidとiOSにおけるCompose Multiplatformアプリの時刻表示",width:"500"},null,-1)])),_:1}),a(t,{id:"desktop-time-display",title:"デスクトップ"},{default:l(()=>s[41]||(s[41]=[i("img",{src:f,alt:"デスクトップにおけるCompose Multiplatformアプリの時刻表示",width:"350"},null,-1)])),_:1})]),_:1}),s[54]||(s[54]=p(`<h2 id="スタイルを改善する" tabindex="-1">スタイルを改善する <a class="header-anchor" href="#スタイルを改善する" aria-label="Permalink to &quot;スタイルを改善する&quot;">​</a></h2><p>アプリケーションは動作していますが、見た目に問題があります。コンポーザブルの間隔を適切にし、時刻メッセージをより目立つように表示できます。</p><ol><li><p>これらの問題を解決するには、以下のバージョンの<code>App</code>コンポーザブルを使用します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Preview</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MaterialTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Europe/Paris&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;No location selected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">safeContentPadding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                timeAtLocation,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.sp),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                textAlign </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TextAlign.Center,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Alignment.CenterHorizontally)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            TextField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> location,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                onValueChange </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(top </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> currentTimeAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location) ?: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Invalid Location&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(top </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Show Time&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>modifier</code>パラメーターは、<code>Column</code>の周囲全体、および<code>Button</code>と<code>TextField</code>の上部にパディングを追加します。</li><li><code>Text</code>コンポーザブルは利用可能な水平方向のスペースを埋め、そのコンテンツを中央に配置します。</li><li><code>style</code>パラメーターは、<code>Text</code>の見た目をカスタマイズします。</li></ul></li><li><p>IDEの指示に従って、不足している依存関係をインポートします。 <code>Alignment</code>には<code>androidx.compose.ui</code>バージョンを使用してください。</p></li><li><p>アプリケーションを実行して、見た目がどのように改善されたかを確認します。</p></li></ol>`,3)),a(h,null,{default:l(()=>[a(t,{id:"mobile-improved-style",title:"AndroidとiOS"},{default:l(()=>s[42]||(s[42]=[i("img",{src:A,alt:"AndroidとiOSにおけるCompose Multiplatformアプリの改善されたスタイル",width:"500"},null,-1)])),_:1}),a(t,{id:"desktop-improved-style",title:"デスクトップ"},{default:l(()=>s[43]||(s[43]=[i("img",{src:B,alt:"デスクトップにおけるCompose Multiplatformアプリの改善されたスタイル",width:"350"},null,-1)])),_:1})]),_:1}),s[55]||(s[55]=p(`<h2 id="デザインをリファクタリングする" tabindex="-1">デザインをリファクタリングする <a class="header-anchor" href="#デザインをリファクタリングする" aria-label="Permalink to &quot;デザインをリファクタリングする&quot;">​</a></h2><p>アプリケーションは動作していますが、スペルミスが起こりやすいです。たとえば、ユーザーが「France」の代わりに「Franse」と入力した場合、アプリはその入力を処理できません。ユーザーに定義済みリストから国を選択してもらう方が望ましいでしょう。</p><ol><li><p>これを実現するには、<code>App</code>コンポーザブルのデザインを変更します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zone: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeZone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> currentTimeAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, zone: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeZone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LocalTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$hour</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$minute</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$second</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Clock.System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toLocalDateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(zone).time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;The time in </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is \${localTime.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> countries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Japan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, TimeZone.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Asia/Tokyo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;France&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, TimeZone.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Europe/Paris&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Mexico&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, TimeZone.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;America/Mexico_City&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Indonesia&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, TimeZone.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Asia/Jakarta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Egypt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, TimeZone.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Africa/Cairo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Preview</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(countries: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> countries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MaterialTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> showCountries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;No location selected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">safeContentPadding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                timeAtLocation,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.sp),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                textAlign </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TextAlign.Center,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Alignment.CenterHorizontally)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp, top </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                DropdownMenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    expanded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> showCountries,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    onDismissRequest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { showCountries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    countries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { (name, zone) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        DropdownMenuItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {   </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name)},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                timeAtLocation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> currentTimeAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, zone)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                showCountries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp, top </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dp),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { showCountries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">showCountries }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Select Location&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><ul><li>名前とタイムゾーンからなる<code>Country</code>型があります。</li><li><code>currentTimeAt()</code>関数は、2番目のパラメーターとして<code>TimeZone</code>を取ります。</li><li><code>App</code>は、パラメーターとして国のリストを必要とするようになりました。<code>countries()</code>関数がリストを提供します。</li><li><code>TextField</code>が<code>DropdownMenu</code>に置き換えられました。<code>showCountries</code>プロパティの値が<code>DropdownMenu</code>の表示を決定します。各国には<code>DropdownMenuItem</code>があります。</li></ul><ol start="2"><li>IDEの指示に従って、不足している依存関係をインポートします。</li><li>アプリケーションを実行して、再設計されたバージョンを確認します。</li></ol>`,5)),a(h,null,{default:l(()=>[a(t,{id:"mobile-country-list",title:"AndroidとiOS"},{default:l(()=>s[44]||(s[44]=[i("img",{src:b,alt:"AndroidとiOSにおけるCompose Multiplatformアプリの国リスト",width:"500"},null,-1)])),_:1}),a(t,{id:"desktop-country-list",title:"デスクトップ"},{default:l(()=>s[45]||(s[45]=[i("img",{src:D,alt:"デスクトップにおけるCompose Multiplatformアプリの国リスト",width:"350"},null,-1)])),_:1})]),_:1}),s[56]||(s[56]=p('<div class="note custom-block"><p class="custom-block-title">NOTE</p><p><a href="https://insert-koin.io/" target="_blank" rel="noreferrer">Koin</a>のような依存性注入フレームワークを使用して、場所のテーブルを構築および注入することで、デザインをさらに改善できます。データが外部に保存されている場合は、<a href="https://ktor.io/docs/create-client.html" target="_blank" rel="noreferrer">Ktor</a>ライブラリを使用してネットワーク経由でフェッチするか、<a href="https://github.com/cashapp/sqldelight" target="_blank" rel="noreferrer">SQLDelight</a>ライブラリを使用してデータベースからフェッチできます。</p></div><h2 id="画像を導入する" tabindex="-1">画像を導入する <a class="header-anchor" href="#画像を導入する" aria-label="Permalink to &quot;画像を導入する&quot;">​</a></h2><p>国のリストは動作しますが、視覚的に魅力的ではありません。国名を国旗の画像に置き換えることで改善できます。</p><p>Compose Multiplatformは、すべてのプラットフォームで共通コードを通じてリソースにアクセスするためのライブラリを提供しています。Kotlin Multiplatformウィザードは、このライブラリをすでに加えて設定しているため、ビルドファイルを変更することなくリソースのロードを開始できます。</p><p>プロジェクトで画像をサポートするには、画像ファイルをダウンロードし、適切なディレクトリに保存し、それらをロードして表示するコードを追加する必要があります。</p><ol><li><p><a href="https://flagcdn.com/" target="_blank" rel="noreferrer">Flag CDN</a>などの外部リソースを使用して、すでに作成した国のリストに一致する国旗をダウンロードします。この場合、これらは<a href="/kmp/https:/flagcdn.com/w320/jp.png">日本</a>、<a href="/kmp/https:/flagcdn.com/w320/fr.png">フランス</a>、<a href="/kmp/https:/flagcdn.com/w320/mx.png">メキシコ</a>、<a href="/kmp/https:/flagcdn.com/w320/id.png">インドネシア</a>、<a href="/kmp/https:/flagcdn.com/w320/eg.png">エジプト</a>です。</p></li><li><p>画像を<code>composeApp/src/commonMain/composeResources/drawable</code>ディレクトリに移動して、すべてのプラットフォームで同じ国旗が利用できるようにします。</p></li></ol><p><img src="'+w+`" alt="Compose Multiplatformリソースのプロジェクト構造" width="300"></p><ol start="3"><li><p>アプリケーションをビルドまたは実行して、追加されたリソースへのアクセサーを含む<code>Res</code>クラスを生成します。</p></li><li><p>画像をサポートするために、<code>commonMain/kotlin/.../App.kt</code>ファイル内のコードを更新します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> compose.project.demo.generated.resources.eg</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> compose.project.demo.generated.resources.fr</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> compose.project.demo.generated.resources.id</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> compose.project.demo.generated.resources.jp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> compose.project.demo.generated.resources.mx</span></span></code></pre></div></li></ol><p>data class Country(val name: String, val zone: TimeZone, val image: DrawableResource)</p><pre><code>fun currentTimeAt(location: String, zone: TimeZone): String {
    fun LocalTime.formatted() = &quot;$hour:$minute:$second&quot;

    val time = Clock.System.now()
    val localTime = time.toLocalDateTime(zone).time

    return &quot;The time in $location is \${localTime.formatted()}&quot;
}

val defaultCountries = listOf(
    Country(&quot;Japan&quot;, TimeZone.of(&quot;Asia/Tokyo&quot;), Res.drawable.jp),
    Country(&quot;France&quot;, TimeZone.of(&quot;Europe/Paris&quot;), Res.drawable.fr),
    Country(&quot;Mexico&quot;, TimeZone.of(&quot;America/Mexico_City&quot;), Res.drawable.mx),
    Country(&quot;Indonesia&quot;, TimeZone.of(&quot;Asia/Jakarta&quot;), Res.drawable.id),
    Country(&quot;Egypt&quot;, TimeZone.of(&quot;Africa/Cairo&quot;), Res.drawable.eg)
)

@Composable
@Preview
fun App(countries: List&lt;Country&gt; = defaultCountries) {
    MaterialTheme {
        var showCountries by remember { mutableStateOf(false) }
        var timeAtLocation by remember { mutableStateOf(&quot;No location selected&quot;) }

        Column(
            modifier = Modifier
                .padding(20.dp)
                .safeContentPadding()
                .fillMaxSize(),
        ) {
            Text(
                timeAtLocation,
                style = TextStyle(fontSize = 20.sp),
                textAlign = TextAlign.Center,
                modifier = Modifier.fillMaxWidth().align(Alignment.CenterHorizontally)
            )
            Row(modifier = Modifier.padding(start = 20.dp, top = 10.dp)) {
                DropdownMenu(
                    expanded = showCountries,
                    onDismissRequest = { showCountries = false }
                ) {
                    countries.forEach { (name, zone, image) -&gt;
                        DropdownMenuItem(
                            text = { Row(verticalAlignment = Alignment.CenterVertically) {
                                Image(
                                    painterResource(image),
                                    modifier = Modifier.size(50.dp).padding(end = 10.dp),
                                    contentDescription = &quot;$name flag&quot;
                                )
                                Text(name)
                            } },
                            onClick = {
                                timeAtLocation = currentTimeAt(name, zone)
                                showCountries = false
                            }
                        )
                    }
                }
            }

            Button(modifier = Modifier.padding(start = 20.dp, top = 10.dp),
                onClick = { showCountries = !showCountries }) {
                Text(&quot;Select Location&quot;)
            }
        }
    }
}
\`\`\`


*   \`Country\`型は、関連する画像へのパスを格納します。
*   \`App\`に渡される国のリストにはこれらのパスが含まれます。
*   \`App\`は、各\`DropdownMenuItem\`に\`Image\`を表示し、その後に国名の\`Text\`コンポーザブルを表示します。
*   各\`Image\`はデータをフェッチするために\`Painter\`オブジェクトを必要とします。
</code></pre><ol start="5"><li>IDEの指示に従って、不足している依存関係をインポートします。</li><li>アプリケーションを実行して、新しい動作を確認します。</li></ol>`,11)),a(h,null,{default:l(()=>[a(t,{id:"mobile-flags",title:"AndroidとiOS"},{default:l(()=>s[46]||(s[46]=[i("img",{src:T,alt:"AndroidとiOSにおけるCompose Multiplatformアプリの国旗",width:"500"},null,-1)])),_:1}),a(t,{id:"desktop-flags",title:"デスクトップ"},{default:l(()=>s[47]||(s[47]=[i("img",{src:q,alt:"デスクトップにおけるCompose Multiplatformアプリの国旗",width:"350"},null,-1)])),_:1})]),_:1}),s[57]||(s[57]=p('<div class="note custom-block"><p class="custom-block-title">NOTE</p><p>プロジェクトの最終状態は、<a href="https://github.com/kotlin-hands-on/get-started-with-cm/" target="_blank" rel="noreferrer">GitHubリポジトリ</a>で確認できます。</p></div><h2 id="次のステップ" tabindex="-1">次のステップ <a class="header-anchor" href="#次のステップ" aria-label="Permalink to &quot;次のステップ&quot;">​</a></h2><p>マルチプラットフォーム開発をさらに探求し、より多くのプロジェクトを試すことをお勧めします。</p><ul><li><a href="./multiplatform-integrate-in-existing-app">Androidアプリをクロスプラットフォーム化する</a></li><li><a href="./multiplatform-ktor-sqldelight">KtorとSQLDelightを使用したマルチプラットフォームアプリを作成する</a></li><li><a href="./multiplatform-create-first-app">UIをネイティブに保ちながらiOSとAndroid間でビジネスロジックを共有する</a></li><li><a href="https://kotlinlang.org/docs/wasm-get-started.html" target="_blank" rel="noreferrer">Kotlin/WasmでCompose Multiplatformアプリを作成する</a></li><li><a href="./multiplatform-samples">サンプルプロジェクトの厳選されたリストを見る</a></li></ul><p>コミュニティに参加しましょう:</p><ul><li><img src="'+M+'" alt="GitHub" width="25" type="joined"> <strong>Compose Multiplatform GitHub</strong>: <a href="https://github.com/JetBrains/compose-multiplatform" target="_blank" rel="noreferrer">リポジトリ</a>をスターして貢献しましょう</li><li><img src="'+I+'" alt="Slack" width="25" type="joined"> <strong>Kotlin Slack</strong>: <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">招待</a>を受け取り、<a href="https://kotlinlang.slack.com/archives/C3PQML5NU" target="_blank" rel="noreferrer">#multiplatform</a>チャンネルに参加しましょう</li><li><img src="'+P+'" alt="Stack Overflow" width="25" type="joined"> <strong>Stack Overflow</strong>: <a href="https://stackoverflow.com/questions/tagged/kotlin-multiplatform" target="_blank" rel="noreferrer">&quot;kotlin-multiplatform&quot;タグ</a>を購読しましょう</li><li><img src="'+L+'" alt="YouTube" width="25" type="joined"> <strong>Kotlin YouTubeチャンネル</strong>: <a href="https://www.youtube.com/playlist?list=PLlFc5cFwUnmy_oVc9YQzjasSNoAk4hk_C" target="_blank" rel="noreferrer">Kotlin Multiplatform</a>に関するビデオを購読して視聴しましょう</li></ul>',6))])}const ls=O(j,[["render",$]]);export{ns as __pageData,ls as default};
