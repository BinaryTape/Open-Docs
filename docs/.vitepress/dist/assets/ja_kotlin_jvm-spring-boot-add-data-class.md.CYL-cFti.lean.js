import{_ as g}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as E}from"./chunks/icon-2.DCnUydpf.js";import{_ as u}from"./chunks/icon-3-todo.Gx4op1du.js";import{_ as c}from"./chunks/icon-4-todo.GaeEmerm.js";import{_ as y}from"./chunks/messages-in-json-format.6v4MkOOj.js";import{_ as F,C as t,c as m,o as C,j as s,G as n,ag as e,a as i,w as l}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/jvm-spring-boot-add-data-class.md","filePath":"ja/kotlin/jvm-spring-boot-add-data-class.md","lastUpdated":1754307826000}'),b={name:"ja/kotlin/jvm-spring-boot-add-data-class.md"};function B(f,a,A,v,D,M){const r=t("web-summary"),d=t("tldr"),p=t("def"),k=t("list"),h=t("code-block"),o=t("deflist");return C(),m("div",null,[a[20]||(a[20]=s("h1",{id:"spring-bootプロジェクトにデータクラスを追加する",tabindex:"-1"},[i("Spring Bootプロジェクトにデータクラスを追加する "),s("a",{class:"header-anchor",href:"#spring-bootプロジェクトにデータクラスを追加する","aria-label":'Permalink to "Spring Bootプロジェクトにデータクラスを追加する"'},"​")],-1)),n(r,null,{default:l(()=>a[0]||(a[0]=[i("Spring BootプロジェクトにKotlinデータクラスを追加します。")])),_:1}),n(d,null,{default:l(()=>a[1]||(a[1]=[s("p",null,[i("これは「"),s("strong",null,"Spring BootとKotlinを始める"),i("」チュートリアルの第2部です。続行する前に、以前のステップが完了していることを確認してください:")],-1),s("br",null,null,-1),s("p",null,[s("img",{src:g,width:"20",alt:"最初のステップ"}),i(),s("a",{href:"/ja/kotlin/jvm-create-project-with-spring-boot"},"KotlinでSpring Bootプロジェクトを作成する"),s("br"),s("img",{src:E,width:"20",alt:"2番目のステップ"}),i(),s("strong",null,"Spring Bootプロジェクトにデータクラスを追加する"),s("br"),s("img",{src:u,width:"20",alt:"3番目のステップ"}),i(" Spring Bootプロジェクトにデータベースサポートを追加する"),s("br"),s("img",{src:c,width:"20",alt:"4番目のステップ"}),i(" データベースアクセスにSpring Data CrudRepositoryを使用する")],-1)])),_:1}),a[21]||(a[21]=s("p",null,[i("このチュートリアルのこのパートでは、アプリケーションに機能を追加し、データクラスなどのKotlin言語のさらなる機能について学びます。 これには、"),s("code",null,"MessageController"),i("クラスを変更して、シリアライズされたオブジェクトのコレクションを含むJSONドキュメントで応答させる必要があります。")],-1)),a[22]||(a[22]=s("h2",{id:"アプリケーションを更新する",tabindex:"-1"},[i("アプリケーションを更新する "),s("a",{class:"header-anchor",href:"#アプリケーションを更新する","aria-label":'Permalink to "アプリケーションを更新する"'},"​")],-1)),s("ol",null,[a[19]||(a[19]=s("li",null,[s("p",null,[i("同じパッケージ内の"),s("code",null,"DemoApplication.kt"),i("ファイルの隣に、"),s("code",null,"Message.kt"),i("ファイルを作成します。")])],-1)),s("li",null,[a[9]||(a[9]=e("",3)),n(o,{collapsible:"true"},{default:l(()=>[n(p,{title:"データクラス – データクラス Message"},{default:l(()=>a[2]||(a[2]=[s("p",null,[i("Kotlinの"),s("a",{href:"/ja/kotlin/data-classes"},"データクラス"),i("の主な目的はデータを保持することです。このようなクラスは"),s("code",null,"data"),i("キーワードでマークされ、いくつかの標準的な機能やユーティリティ関数は、クラス構造から機械的に導出されることがよくあります。")],-1),s("p",null,[i("この例では、"),s("code",null,"Message"),i("クラスの主な目的がデータを保存することであるため、データクラスとして宣言しました。")],-1)])),_:1}),n(p,{title:"valとvarプロパティ"},{default:l(()=>[a[4]||(a[4]=s("p",null,[i("Kotlinクラスの"),s("a",{href:"/ja/kotlin/properties"},"プロパティ"),i("は、以下のいずれかの方法で宣言できます:")],-1)),n(k,null,{default:l(()=>a[3]||(a[3]=[s("li",null,[s("i",null,"可変"),i("（"),s("code",null,"var"),i("キーワードを使用）")],-1),s("li",null,[s("i",null,"読み取り専用"),i("（"),s("code",null,"val"),i("キーワードを使用）")],-1)])),_:1}),a[5]||(a[5]=s("p",null,[s("code",null,"Message"),i("クラスは、"),s("code",null,"val"),i("キーワードを使用して、"),s("code",null,"id"),i("と"),s("code",null,"text"),i("の2つのプロパティを宣言しています。 コンパイラはこれら両方のプロパティに対してゲッターを自動的に生成します。 "),s("code",null,"Message"),i("クラスのインスタンスが作成された後、これらのプロパティの値を再代入することはできません。 ")],-1))]),_:1}),n(p,{title:"Null許容型 – String?"},{default:l(()=>[a[7]||(a[7]=s("p",null,[i("Kotlinは"),s("a",{href:"/ja/kotlin/null-safety#nullable-types-and-non-nullable-types"},"null許容型の組み込みサポート"),i("を提供します。Kotlinでは、型システムが"),s("code",null,"null"),i("を保持できる参照（"),s("i",null,"null許容参照"),i("）と、保持できない参照（"),s("i",null,"非null許容参照"),i("）を区別します。"),s("br"),i(" 例えば、通常の"),s("code",null,"String"),i("型の変数は"),s("code",null,"null"),i("を保持できません。nullを許可するには、"),s("code",null,"String?"),i("と記述して変数をnull許容文字列として宣言できます。 ")],-1)),a[8]||(a[8]=s("p",null,[s("code",null,"Message"),i("クラスの"),s("code",null,"id"),i("プロパティは、今回はnull許容型として宣言されています。 したがって、"),s("code",null,"id"),i("の値として"),s("code",null,"null"),i("を渡して"),s("code",null,"Message"),i("クラスのインスタンスを作成することが可能です: ")],-1)),n(h,{lang:"kotlin"},{default:l(()=>a[6]||(a[6]=[i(' Message(null, "Hello!") ')])),_:1})]),_:1})]),_:1})]),s("li",null,[a[18]||(a[18]=e("",2)),n(o,{collapsible:"true"},{default:l(()=>[n(p,{title:"コレクション – listOf()"},{default:l(()=>[a[11]||(a[11]=s("p",null,[i("Kotlin標準ライブラリは、基本的なコレクション型（セット、リスト、マップ）の実装を提供します。"),s("br"),i(" 各コレクション型は、"),s("i",null,"読み取り専用"),i("または"),s("i",null,"可変"),i("のいずれかです:")],-1)),n(k,null,{default:l(()=>a[10]||(a[10]=[s("li",null,[s("i",null,"読み取り専用"),i("コレクションは、コレクション要素にアクセスするための操作を備えています。")],-1),s("li",null,[s("i",null,"可変"),i("コレクションは、要素の追加、削除、更新のための書き込み操作も備えています。")],-1)])),_:1}),a[12]||(a[12]=s("p",null,"対応するファクトリ関数も、Kotlin標準ライブラリによって提供され、そのようなコレクションのインスタンスを作成します。 ",-1)),a[13]||(a[13]=s("p",null,[i("このチュートリアルでは、"),s("a",{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/list-of.html"},[s("code",null,"listOf()")]),i("関数を使用して、"),s("code",null,"Message"),i("オブジェクトのリストを作成します。 これはオブジェクトの"),s("i",null,"読み取り専用"),i("リストを作成するためのファクトリ関数です。リストから要素を追加したり削除したりすることはできません。"),s("br"),i(" リストに対する書き込み操作を実行する必要がある場合は、"),s("a",{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/mutable-list-of.html"},[s("code",null,"mutableListOf()")]),i("関数を呼び出して可変リストインスタンスを作成します。 ")],-1))]),_:1}),n(p,{title:"末尾のカンマ"},{default:l(()=>[a[15]||(a[15]=s("p",null,[s("a",{href:"/ja/kotlin/coding-conventions#trailing-commas"},"末尾のカンマ"),i("は、一連の要素の"),s("b",null,"最後の項目"),i("の後ろに付くカンマ記号です:")],-1)),n(h,{lang:"kotlin"},{default:l(()=>a[14]||(a[14]=[i(' Message("3", "Privet!"), ')])),_:1}),a[16]||(a[16]=s("p",null,"これはKotlinの構文の便利な機能であり、完全にオプションです。これらがなくてもコードは動作します。 ",-1)),a[17]||(a[17]=s("p",null,[i("上記の例では、"),s("code",null,"Message"),i("オブジェクトのリストを作成する際に、最後の"),s("code",null,"listOf()"),i("関数の引数の後に末尾のカンマが含まれています。")],-1))]),_:1})]),_:1})])]),a[23]||(a[23]=e("",12))])}const N=F(b,[["render",B]]);export{T as __pageData,N as default};
