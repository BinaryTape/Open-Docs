import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"coil/faq.md","filePath":"coil/faq.md","lastUpdated":1753369988000}'),t={name:"coil/faq.md"};function l(p,s,h,k,r,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><p>有问题不在常见问题解答中？请在 <a href="https://stackoverflow.com/questions/tagged/coil" target="_blank" rel="noreferrer">StackOverflow</a> 上搜索 <code>#coil</code> 标签，或在 <a href="https://github.com/coil-kt/coil/discussions" target="_blank" rel="noreferrer">Github discussion</a> 中查找。</p><h2 id="coil-可以用于-java-项目或-kotlin-java-混合项目吗" tabindex="-1">Coil 可以用于 Java 项目或 Kotlin/Java 混合项目吗？ <a class="header-anchor" href="#coil-可以用于-java-项目或-kotlin-java-混合项目吗" aria-label="Permalink to &quot;Coil 可以用于 Java 项目或 Kotlin/Java 混合项目吗？&quot;">​</a></h2><p>可以！<a href="./java_compatibility">在此阅读</a>。</p><h2 id="如何预加载图像" tabindex="-1">如何预加载图像？ <a class="header-anchor" href="#如何预加载图像" aria-label="Permalink to &quot;如何预加载图像？&quot;">​</a></h2><p>启动一个没有目标的图像请求：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ImageRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/image.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imageLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enqueue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request)</span></span></code></pre></div><p>这将预加载图像并将其保存到磁盘缓存和内存缓存中。</p><p>如果您只想预加载到磁盘缓存，可以跳过解码和保存到内存缓存的步骤，如下所示：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ImageRequest.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/image.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 禁用写入内存缓存。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memoryCachePolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CachePolicy.DISABLED)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 跳过解码步骤，避免将图像解码到内存中浪费时间/内存。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decoderFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(BlackholeDecoder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imageLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enqueue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request)</span></span></code></pre></div><h2 id="如何启用日志记录" tabindex="-1">如何启用日志记录？ <a class="header-anchor" href="#如何启用日志记录" aria-label="Permalink to &quot;如何启用日志记录？&quot;">​</a></h2><p>在<a href="./getting_started#configuring-the-singleton-imageloader">构建 <code>ImageLoader</code></a> 时设置 <code>logger(DebugLogger())</code>。</p><p>!!! 注意 <code>DebugLogger</code> 仅应在调试构建中使用。</p><h2 id="如何面向-java-8-或-java-11" tabindex="-1">如何面向 Java 8 或 Java 11？ <a class="header-anchor" href="#如何面向-java-8-或-java-11" aria-label="Permalink to &quot;如何面向 Java 8 或 Java 11？&quot;">​</a></h2><p>Coil 需要 <a href="https://developer.android.com/studio/write/java8-support" target="_blank" rel="noreferrer">Java 8 字节码</a>。Android Gradle Plugin <code>4.2.0</code> 及更高版本和 Kotlin Gradle Plugin <code>1.5.0</code> 及更高版本默认启用此功能。如果您使用这些插件的旧版本，请将以下内容添加到您的 Gradle 构建脚本中：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    compileOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sourceCompatibility </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JavaVersion.VERSION_1_8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        targetCompatibility </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JavaVersion.VERSION_1_8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlinOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        jvmTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.8&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>从 Coil <code>3.2.0</code> 开始，<code>coil-compose</code> 和 <code>coil-compose-core</code> 需要 Java 11 字节码：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    compileOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sourceCompatibility </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JavaVersion.VERSION_11</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        targetCompatibility </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JavaVersion.VERSION_11</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlinOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        jvmTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;11&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="如何获取开发快照版本" tabindex="-1">如何获取开发快照版本？ <a class="header-anchor" href="#如何获取开发快照版本" aria-label="Permalink to &quot;如何获取开发快照版本？&quot;">​</a></h2><p>将快照仓库添加到您的仓库列表中：</p><p>Gradle (<code>.gradle</code>)：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">allprojects {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    repositories {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        maven { url </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://oss.sonatype.org/content/repositories/snapshots&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Gradle Kotlin DSL (<code>.gradle.kts</code>)：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allprojects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        maven</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://oss.sonatype.org/content/repositories/snapshots&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>然后依赖于带有<a href="https://github.com/coil-kt/coil/blob/main/gradle.properties#L34" target="_blank" rel="noreferrer">最新快照版本</a>的相同构件。</p><p>!!! 注意 每次通过 CI 的 <code>main</code> 分支新提交都会部署快照版本。它们可能包含破坏性更改或不稳定。请自行承担风险使用。</p><h2 id="如何在-coil-中使用-proguard" tabindex="-1">如何在 Coil 中使用 Proguard？ <a class="header-anchor" href="#如何在-coil-中使用-proguard" aria-label="Permalink to &quot;如何在 Coil 中使用 Proguard？&quot;">​</a></h2><p>要在 Coil 中使用 Proguard，请将以下规则添加到您的配置中：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-keep class * extends coil3.util.DecoderServiceLoaderTarget { *; }</span></span>
<span class="line"><span>-keep class * extends coil3.util.FetcherServiceLoaderTarget { *; }</span></span></code></pre></div><p>您可能还需要为 Ktor、OkHttp 和 Coroutines 添加自定义规则。</p><p>!!! 注意 <strong>如果您使用 R8，则无需为 Coil 添加任何自定义规则</strong>，R8 是 Android 上默认的代码缩减器。这些规则是自动添加的。</p>`,31)]))}const c=i(t,[["render",l]]);export{E as __pageData,c as default};
