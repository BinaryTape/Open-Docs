import{_ as d,C as r,c as p,o as g,j as t,G as o,ag as h,a as e,w as l}from"./chunks/framework.Bksy39di.js";const G=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/graalvm.md","filePath":"zh-Hant/ktor/graalvm.md","lastUpdated":1755457140000}'),u={name:"zh-Hant/ktor/graalvm.md"};function f(c,a,v,b,k,_){const n=r("control"),i=r("tldr"),s=r("web-summary"),m=r("link-summary");return g(),p("div",null,[a[5]||(a[5]=t("h1",{id:"graalvm",tabindex:"-1"},[e("GraalVM "),t("a",{class:"header-anchor",href:"#graalvm","aria-label":'Permalink to "GraalVM"'},"​")],-1)),o(i,null,{default:l(()=>[t("p",null,[o(n,null,{default:l(()=>a[0]||(a[0]=[e("範例專案")])),_:1}),a[1]||(a[1]=e(": ")),a[2]||(a[2]=t("a",{href:"https://github.com/ktorio/ktor-samples/tree/main/graalvm"},"graalvm",-1))])]),_:1}),o(s,null,{default:l(()=>a[3]||(a[3]=[e(" Ktor Server 應用程式可以利用 GraalVM 以為不同平台產生原生映像。 ")])),_:1}),o(m,null,{default:l(()=>a[4]||(a[4]=[e(" 了解如何使用 GraalVM 為不同平台建立原生映像。 ")])),_:1}),a[6]||(a[6]=h('<p>Ktor Server 應用程式可以利用 <a href="https://graalvm.org" target="_blank" rel="noreferrer">GraalVM</a> 以為不同平台產生原生映像，當然，也能利用 GraalVM 提供的更快的啟動時間及其他優點。</p><p>目前，想利用 GraalVM 的 Ktor Server 應用程式必須使用 CIO 作為其<a href="./server-engines">應用程式引擎</a>。</p><h2 id="為-graalvm-做準備" tabindex="-1">為 GraalVM 做準備 <a class="header-anchor" href="#為-graalvm-做準備" aria-label="Permalink to &quot;為 GraalVM 做準備&quot;">​</a></h2><p>除了安裝 GraalVM 並將其安裝目錄加入系統路徑外，您需要準備您的應用程式，使所有依賴項都被打包，亦即您需要建立一個 fat jar。</p><h3 id="反射組態" tabindex="-1">反射組態 <a class="header-anchor" href="#反射組態" aria-label="Permalink to &quot;反射組態&quot;">​</a></h3><p>GraalVM 對於使用反射的應用程式有一些<a href="https://www.graalvm.org/22.1/reference-manual/native-image/Reflection/" target="_blank" rel="noreferrer">要求</a>，Ktor 即是如此。它要求您提供一個<a href="https://github.com/ktorio/ktor-samples/blob/main/graalvm/src/main/resources/META-INF/native-image/reflect-config.json" target="_blank" rel="noreferrer">JSON 檔案</a>，其中包含特定的型別資訊。此組態檔隨後將作為引數傳遞給 <code>native-image</code> 工具。</p><h2 id="執行-native-image-工具" tabindex="-1">執行 <code>native-image</code> 工具 <a class="header-anchor" href="#執行-native-image-工具" aria-label="Permalink to &quot;執行 `native-image` 工具&quot;">​</a></h2><p>一旦 fat jar 準備好，唯一需要的步驟就是使用 <code>native-image</code> 命令列工具建立原生映像。這也可以透過 <a href="https://graalvm.github.io/native-build-tools/0.9.8/gradle-plugin.html" target="_blank" rel="noreferrer">Gradle 外掛程式</a>來完成。您可以在<a href="https://github.com/ktorio/ktor-samples/blob/main/graalvm/build.gradle.kts" target="_blank" rel="noreferrer">此處</a>查看 <code>build.gradle.kts</code> 檔案的範例。然而，請注意，某些選項可能因所使用的依賴項、專案的套件名稱等而異。</p><h2 id="執行產生的二進位檔" tabindex="-1">執行產生的二進位檔 <a class="header-anchor" href="#執行產生的二進位檔" aria-label="Permalink to &quot;執行產生的二進位檔&quot;">​</a></h2><p>如果 shell 腳本執行時沒有任何錯誤，您應該會獲得一個原生應用程式，在範例中它被稱為 <code>graal-server</code>。執行它將啟動 Ktor Server，並在 <code>https://0.0.0.0:8080</code> 上回應。</p><p><a href="#" title="title: GraalVM">//</a>: # (<p><b>Code example</b>: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/deployment-ktor-plugin"> deployment-ktor-plugin </a></p></p>) ',12))])}const M=d(u,[["render",f]]);export{G as __pageData,M as default};
