import{_ as u,C as a,c as E,o as y,G as e,ag as o,w as t,j as i,a as n}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-swagger-ui.md","filePath":"zh-Hant/ktor/server-swagger-ui.md","lastUpdated":1755457140000}'),m={name:"zh-Hant/ktor/server-swagger-ui.md"};function v(_,s,w,b,f,F){const p=a("TopicTitle"),k=a("primary-label"),g=a("Links"),h=a("tldr"),d=a("link-summary"),r=a("code-block"),l=a("TabItem"),c=a("Tabs");return y(),E("div",null,[e(p,{labelRef:"server-plugin",title:"Swagger UI"}),e(k,{ref:"server-plugin"},null,512),e(h,null,{default:t(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依賴"),n("："),i("code",null,"io.ktor:ktor-server-swagger")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"程式碼範例"),n("： "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/json-kotlinx-openapi"}," json-kotlinx-openapi ")],-1)),i("p",null,[i("b",null,[e(g,{href:"/ktor/server-native",summary:"Ktor supports Kotlin/Native and allows you to run a server without an additional runtime or virtual machine."},{default:t(()=>s[0]||(s[0]=[n("原生伺服器")])),_:1}),s[1]||(s[1]=n(" 支援"))]),s[2]||(s[2]=n(": ✖️ "))])]),_:1}),e(d,null,{default:t(()=>s[5]||(s[5]=[n(" Swagger UI 外掛程式可讓您為專案產生 Swagger UI。 ")])),_:1}),s[6]||(s[6]=o('<p>Ktor 可讓您基於現有的 OpenAPI 規格，為您的專案產生並提供 Swagger UI。 透過 Swagger UI，您可以視覺化並與 API 資源互動。</p><blockquote><p>提供以下工具，用於從程式碼產生 OpenAPI 定義，反之亦然：</p><ul><li>適用於 IntelliJ IDEA 的 <a href="https://www.jetbrains.com/help/idea/ktor.html#openapi" target="_blank" rel="noreferrer">Ktor 外掛程式</a> 提供了為伺服器端 Ktor 應用程式產生 OpenAPI 文件的能力。</li><li><a href="https://github.com/OpenAPITools/openapi-generator" target="_blank" rel="noreferrer">OpenAPI 產生器</a> 允許您透過使用 <a href="./https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/kotlin-server">kotlin-server</a> 產生器，從您的 API 定義建立 Ktor 專案。或者，您可以使用 IntelliJ IDEA 的 <a href="https://www.jetbrains.com/help/idea/openapi.html#codegen" target="_blank" rel="noreferrer">功能</a>。</li></ul></blockquote><p id="open-api-note"></p><h2 id="add_dependencies" tabindex="-1">新增依賴 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;新增依賴 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>提供 Swagger UI 服務需要在建置腳本中新增 <code>ktor-server-swagger</code> artifact：</p>',5)),e(c,{group:"languages"},{default:t(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:t(()=>[e(r,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-swagger:$ktor_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:t(()=>[e(r,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-swagger:$ktor_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:t(()=>[e(r,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-swagger-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[7]||(s[7]=o(`<h2 id="configure-swagger" tabindex="-1">設定 Swagger UI <a class="header-anchor" href="#configure-swagger" aria-label="Permalink to &quot;設定 Swagger UI {id=&quot;configure-swagger&quot;}&quot;">​</a></h2><p>若要提供 Swagger UI 服務，您需要呼叫 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-swagger/io.ktor.server.plugins.swagger/swagger-u-i.html" target="_blank" rel="noreferrer">swaggerUI</a> 方法，該方法會建立一個帶有 Swagger UI 的 <code>GET</code> 端點，位於從 <code>swaggerFile</code> 中的 OpenAPI 規格所呈現的 <code>path</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.plugins.swagger.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    swaggerUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;swagger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, swaggerFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;openapi/documentation.yaml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>此方法會嘗試在應用程式資源中尋找 OpenAPI 規格。 否則，它會嘗試使用 <code>java.io.File</code> 從檔案系統讀取 OpenAPI 規格。</p><p>您可以選擇在 <code>swaggerUI</code> 區塊內客製化 Swagger UI。 例如，您可以使用另一個 Swagger UI 版本或套用自訂樣式。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    swaggerUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;swagger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, swaggerFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;openapi/documentation.yaml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;4.15.5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您現在可以 <a href="./server-run">執行</a> 應用程式並打開 <code>/swagger</code> 頁面，以查看可用的端點並進行測試。</p><h2 id="configure-cors" tabindex="-1">設定 CORS <a class="header-anchor" href="#configure-cors" aria-label="Permalink to &quot;設定 CORS {id=&quot;configure-cors&quot;}&quot;">​</a></h2><p>為了確保您的 API 能與 Swagger UI 良好運作，您需要為 <a href="./server-cors">跨來源資源共享 (CORS)</a> 設定一個策略。 下方的範例套用了以下 CORS 設定：</p><ul><li><code>anyHost</code> 啟用來自任何主機的跨來源請求；</li><li><code>allowHeader</code> 允許 <a href="./server-serialization">內容協商</a> 中使用的 <code>Content-Type</code> 用戶端標頭。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CORS) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    anyHost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    allowHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpHeaders.ContentType)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,11))])}const A=u(m,[["render",v]]);export{C as __pageData,A as default};
