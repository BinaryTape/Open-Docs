import{_ as d}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as g}from"./chunks/icon-2-done.DCMUaFG5.js";import{_ as o}from"./chunks/icon-3-done.ByaVtpX2.js";import{_ as E}from"./chunks/icon-4.BcArDRXk.js";import{_ as y}from"./chunks/get-kotlin-language-map.DPRZQM3H.js";import{_ as F,C as p,c,o as u,j as s,G as n,ag as t,a as i,w as l}from"./chunks/framework.Bksy39di.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/jvm-spring-boot-using-crudrepository.md","filePath":"kotlin/jvm-spring-boot-using-crudrepository.md","lastUpdated":1754307826000}'),C={name:"kotlin/jvm-spring-boot-using-crudrepository.md"};function m(B,a,A,D,v,b){const k=p("web-summary"),e=p("tldr"),h=p("def"),r=p("deflist");return u(),c("div",null,[a[7]||(a[7]=s("h1",{id:"使用-spring-data-crudrepository-进行数据库访问",tabindex:"-1"},[i("使用 Spring Data CrudRepository 进行数据库访问 "),s("a",{class:"header-anchor",href:"#使用-spring-data-crudrepository-进行数据库访问","aria-label":'Permalink to "使用 Spring Data CrudRepository 进行数据库访问"'},"​")],-1)),n(k,null,{default:l(()=>a[0]||(a[0]=[i("在用 Kotlin 编写的 Spring Boot 项目中使用 Spring Data 接口。")])),_:1}),n(e,null,{default:l(()=>a[1]||(a[1]=[s("p",null,[i("这是"),s("strong",null,"Spring Boot 和 Kotlin 入门"),i("教程的最后一部分。在继续之前，请确保已完成以下步骤：")],-1),s("br",null,null,-1),s("p",null,[s("img",{src:d,width:"20",alt:"第一步"}),i(),s("a",{href:"/kotlin/jvm-create-project-with-spring-boot"},"用 Kotlin 创建 Spring Boot 项目"),s("br"),s("img",{src:g,width:"20",alt:"第二步"}),i(),s("a",{href:"/kotlin/jvm-spring-boot-add-data-class"},"向 Spring Boot 项目添加数据类"),s("br"),s("img",{src:o,width:"20",alt:"第三步"}),i(),s("a",{href:"/kotlin/jvm-spring-boot-add-db-support"},"为 Spring Boot 项目添加数据库支持"),s("br"),s("img",{src:E,width:"20",alt:"第四步"}),i(),s("strong",null,"使用 Spring Data CrudRepository 进行数据库访问")],-1)])),_:1}),a[8]||(a[8]=t("",3)),s("ol",null,[a[5]||(a[5]=t("",2)),s("li",null,[a[4]||(a[4]=t("",2)),n(r,{collapsible:"true"},{default:l(()=>[n(h,{title:"扩展函数"},{default:l(()=>a[2]||(a[2]=[s("p",null,[s("code",null,"findByIdOrNull()"),i(" 函数是 Spring Data JDBC 中 "),s("code",null,"CrudRepository"),i(" 接口的"),s("a",{href:"/kotlin/extensions#extension-functions"},"扩展函数"),i("。")],-1)])),_:1}),n(h,{title:"CrudRepository 的 save() 函数"},{default:l(()=>a[3]||(a[3]=[s("p",null,[s("a",{href:"https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/#jdbc.entity-persistence"},"此函数基于以下假设工作"),i("：新对象在数据库中没有 id。因此，id 在插入时"),s("b",null,"必须为 null"),i("。")],-1),s("p",null,[i(" 如果 id 不是 "),s("i",null,"null"),i("，则 "),s("code",null,"CrudRepository"),i(" 假定对象已存在于数据库中，这是一项"),s("i",null,"更新"),i("操作，而不是"),s("i",null,"插入"),i("操作。插入操作后，"),s("code",null,"id"),i(" 将由数据存储生成并重新赋值给 "),s("code",null,"Message"),i(" 实例。这就是为什么 "),s("code",null,"id"),i(" 属性应该使用 "),s("code",null,"var"),i(" 关键字声明。")],-1),s("p",null,null,-1)])),_:1})]),_:1})]),a[6]||(a[6]=t("",2))]),a[9]||(a[9]=t("",13))])}const x=F(C,[["render",m]]);export{w as __pageData,x as default};
