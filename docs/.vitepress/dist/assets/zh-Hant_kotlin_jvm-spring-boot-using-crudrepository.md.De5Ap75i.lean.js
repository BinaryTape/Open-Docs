import{_ as d}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as g}from"./chunks/icon-2-done.DCMUaFG5.js";import{_ as o}from"./chunks/icon-3-done.ByaVtpX2.js";import{_ as E}from"./chunks/icon-4.BcArDRXk.js";import{_ as y}from"./chunks/get-kotlin-language-map.DPRZQM3H.js";import{_ as F,C as p,c,o as u,j as s,G as n,ag as t,a as i,w as l}from"./chunks/framework.Bksy39di.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/jvm-spring-boot-using-crudrepository.md","filePath":"zh-Hant/kotlin/jvm-spring-boot-using-crudrepository.md","lastUpdated":1754307826000}'),C={name:"zh-Hant/kotlin/jvm-spring-boot-using-crudrepository.md"};function m(B,a,A,D,v,b){const e=p("web-summary"),k=p("tldr"),h=p("def"),r=p("deflist");return u(),c("div",null,[a[7]||(a[7]=s("h1",{id:"使用-spring-data-crudrepository-存取資料庫",tabindex:"-1"},[i("使用 Spring Data CrudRepository 存取資料庫 "),s("a",{class:"header-anchor",href:"#使用-spring-data-crudrepository-存取資料庫","aria-label":'Permalink to "使用 Spring Data CrudRepository 存取資料庫"'},"​")],-1)),n(e,null,{default:l(()=>a[0]||(a[0]=[i("在以 Kotlin 撰寫的 Spring Boot 專案中使用 Spring Data 介面。")])),_:1}),n(k,null,{default:l(()=>a[1]||(a[1]=[s("p",null,[i("這是 "),s("strong",null,"Getting started with Spring Boot and Kotlin"),i(" 教學的最後一部分。在繼續之前，請確保您已完成先前的步驟：")],-1),s("br",null,null,-1),s("p",null,[s("img",{src:d,width:"20",alt:"First step"}),i(),s("a",{href:"/zh-Hant/kotlin/jvm-create-project-with-spring-boot"},"使用 Kotlin 建立 Spring Boot 專案"),s("br"),s("img",{src:g,width:"20",alt:"Second step"}),i(),s("a",{href:"/zh-Hant/kotlin/jvm-spring-boot-add-data-class"},"向 Spring Boot 專案新增資料類別"),s("br"),s("img",{src:o,width:"20",alt:"Third step"}),i(),s("a",{href:"/zh-Hant/kotlin/jvm-spring-boot-add-db-support"},"為 Spring Boot 專案新增資料庫支援"),s("br"),s("img",{src:E,width:"20",alt:"Fourth step"}),i(),s("strong",null,"使用 Spring Data CrudRepository 存取資料庫")],-1)])),_:1}),a[8]||(a[8]=t("",3)),s("ol",null,[a[5]||(a[5]=t("",2)),s("li",null,[a[4]||(a[4]=t("",2)),n(r,{collapsible:"true"},{default:l(()=>[n(h,{title:"擴展函數"},{default:l(()=>a[2]||(a[2]=[s("p",null,[s("code",null,"findByIdOrNull()"),i(" 函數是 Spring Data JDBC 中 "),s("code",null,"CrudRepository"),i(" 介面的"),s("a",{href:"/zh-Hant/kotlin/extensions#extension-functions"},"擴展函數"),i("。")],-1)])),_:1}),n(h,{title:"CrudRepository save() 函數"},{default:l(()=>a[3]||(a[3]=[s("p",null,[s("a",{href:"https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/#jdbc.entity-persistence"},"此函數的作用"),i("基於一個假設，即新物件在資料庫中沒有 ID。因此，對於插入操作，ID "),s("b",null,"應該為 null"),i("。")],-1),s("p",null,[i(" 如果 ID 不為 "),s("i",null,"null"),i("，"),s("code",null,"CrudRepository"),i(" 會假定物件已存在於資料庫中，並且這是一個 "),s("i",null,"更新"),i(" 操作，而不是 "),s("i",null,"插入"),i(" 操作。在插入操作之後，"),s("code",null,"id"),i(" 將由資料儲存區生成並分配回 "),s("code",null,"Message"),i(" 實例。這就是為什麼 "),s("code",null,"id"),i(" 屬性應該使用 "),s("code",null,"var"),i(" 關鍵字來宣告的原因。")],-1),s("p",null,null,-1)])),_:1})]),_:1})]),a[6]||(a[6]=t("",2))]),a[9]||(a[9]=t("",14))])}const x=F(C,[["render",m]]);export{w as __pageData,x as default};
