import{_ as h,a as d,b as k,c,d as g,e as u}from"./chunks/ios-new-configuration.DNF7jnri.js";import{_ as m}from"./chunks/icon-3-todo.aEuKIG4W.js";import{_ as E}from"./chunks/icon-4-todo.DqbNYzPe.js";import{_ as b,a as f,b as y,c as _,d as C,e as A,f as F,g as I,h as v}from"./chunks/first-compose-project-on-web.B8aVrJBG.js";import{_ as S,C as t,c as D,o as w,j as i,G as a,ag as n,a as s,w as e}from"./chunks/framework.Bksy39di.js";const V=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/compose-multiplatform-create-first-app.md","filePath":"zh-Hant/kmp/compose-multiplatform-create-first-app.md","lastUpdated":1755516278000}'),P={name:"zh-Hant/kmp/compose-multiplatform-create-first-app.md"};function T(x,l,M,B,K,O){const o=t("secondary-label"),r=t("tldr"),p=t("snippet");return w(),D("div",null,[l[3]||(l[3]=i("h1",{id:"建立您的-compose-多平台應用程式",tabindex:"-1"},[s("建立您的 Compose 多平台應用程式 "),i("a",{class:"header-anchor",href:"#建立您的-compose-多平台應用程式","aria-label":'Permalink to "建立您的 Compose 多平台應用程式"'},"​")],-1)),a(o,{ref:"IntelliJ IDEA"},null,512),a(o,{ref:"Android Studio"},null,512),a(r,null,{default:e(()=>l[0]||(l[0]=[i("p",null,"本教學課程使用 IntelliJ IDEA，但您也可以在 Android Studio 中進行操作 – 這兩個 IDE 共享相同的核心功能和 Kotlin 多平台支援。",-1),i("br",null,null,-1),i("p",null,[s("這是"),i("strong",null,"建立具有共享邏輯和 UI 的 Compose 多平台應用程式"),s("教學課程的第一部分。")],-1),i("p",null,[i("img",{src:h,width:"20",alt:"First step"}),s(),i("strong",null,"建立您的 Compose 多平台應用程式"),i("br"),i("img",{src:d,width:"20",alt:"Second step"}),s(" 探索可組合程式碼 "),i("br"),i("img",{src:m,width:"20",alt:"Third step"}),s(" 修改專案 "),i("br"),i("br"),i("img",{src:E,width:"20",alt:"Fourth step"}),s(" 建立您自己的應用程式 "),i("br")],-1)])),_:1}),l[4]||(l[4]=n('<p>在此，您將學習如何使用 IntelliJ IDEA 建立並執行您的第一個 Compose 多平台應用程式。</p><p>藉助 <a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a> UI 框架，您可以將 Kotlin 多平台的程式碼共享能力推向應用程式邏輯之外。您可以實作一次使用者介面，然後將其用於 Compose 多平台支援的所有平台。</p><p>在本教學課程中，您將建置一個可在 Android、iOS、桌面和網路執行的範例應用程式。為了建立使用者介面，您將使用 Compose 多平台框架並了解其基礎知識：可組合函式、主題、佈局、事件和修飾符。</p><p>本教學課程注意事項：</p><ul><li>無需 Compose 多平台、Android 或 iOS 的先前經驗。我們建議您在開始之前熟悉 <a href="https://kotlinlang.org/docs/getting-started.html" target="_blank" rel="noreferrer">Kotlin 基礎知識</a>。</li><li>要完成本教學課程，您只需要 IntelliJ IDEA。它允許您在 Android 和桌面版上嘗試多平台開發。對於 iOS，您需要一台安裝了 Xcode 的 macOS 電腦。這是 iOS 開發的一般限制。</li><li>如果您願意，可以將您的選擇限制在您感興趣的特定平台，並省略其他平台。</li></ul><h2 id="建立專案" tabindex="-1">建立專案 <a class="header-anchor" href="#建立專案" aria-label="Permalink to &quot;建立專案&quot;">​</a></h2><ol><li><p>在<a href="./quickstart">快速入門</a>中，完成<a href="./quickstart#set-up-the-environment">設定 Kotlin 多平台開發環境</a>的說明。</p></li><li><p>在 IntelliJ IDEA 中，選擇 <strong>File</strong> | <strong>New</strong> | <strong>Project</strong>。</p></li><li><p>在左側面板中，選擇 <strong>Kotlin Multiplatform</strong>。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>如果您沒有使用 Kotlin Multiplatform IDE 外掛程式，您可以使用 <a href="https://kmp.jetbrains.com/?android=true&amp;ios=true&amp;iosui=compose&amp;desktop=true&amp;web=true&amp;includeTests=true" target="_blank" rel="noreferrer">KMP 網頁精靈</a>生成相同的專案。</p></div></li><li><p>在 <strong>New Project</strong> 視窗中指定以下欄位：</p><ul><li><strong>Name</strong>：ComposeDemo</li><li><strong>Group</strong>：compose.project</li><li><strong>Artifact</strong>：demo</li></ul><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>如果使用網頁精靈，請將「ComposeDemo」指定為 <strong>Project Name</strong>，將「compose.project.demo」指定為 <strong>Project ID</strong>。</p></div></li><li><p>選擇 <strong>Android</strong>、<strong>iOS</strong>、<strong>Desktop</strong> 和 <strong>Web</strong> 目標平台。 確保已選取 iOS 的 <strong>Share UI</strong> 選項。</p></li><li><p>指定所有欄位和目標平台後，點擊 <strong>Create</strong>（在網頁精靈中為 <strong>Download</strong>）。</p><p><img src="'+b+'" alt="Create Compose Multiplatform project" width="800"></p></li></ol><h2 id="檢查專案結構" tabindex="-1">檢查專案結構 <a class="header-anchor" href="#檢查專案結構" aria-label="Permalink to &quot;檢查專案結構&quot;">​</a></h2><p>在 IntelliJ IDEA 中，導覽至「ComposeDemo」資料夾。 如果您在精靈中沒有選擇 iOS，您將不會有以「ios」或「apple」開頭的資料夾。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>IntelliJ IDEA 可能會自動建議將專案中的 Android Gradle plugin 升級到最新版本。 我們不建議升級，因為 Kotlin 多平台與最新的 AGP 版本不相容 （請參閱<a href="https://kotlinlang.org/docs/multiplatform-compatibility-guide.html#version-compatibility" target="_blank" rel="noreferrer">相容性表格</a>）。</p></div><p>專案包含兩個模組：</p><ul><li><p><em>composeApp</em> 是一個 Kotlin 模組，其中包含 Android、桌面、iOS 和網路應用程式之間共享的邏輯 — 您用於所有平台的程式碼。它使用 <a href="https://kotlinlang.org/docs/gradle.html" target="_blank" rel="noreferrer">Gradle</a> 作為建置系統，可幫助您自動化建置過程。</p></li><li><p><em>iosApp</em> 是一個 Xcode 專案，可建置為一個 iOS 應用程式。它依賴並使用共享模組作為一個 iOS 框架。</p><p><img src="'+f+'" alt="Compose Multiplatform project structure" width="350"></p></li></ul><p><strong>composeApp</strong> 模組由以下原始碼集組成：<code>androidMain</code>、<code>commonMain</code>、<code>desktopMain</code>、<code>iosMain</code> 和 <code>wasmJsMain</code>。 <em>原始碼集</em> 是 Gradle 中將多個檔案邏輯分組在一起的概念，其中每個組都有自己的相依性。在 Kotlin 多平台中，不同的原始碼集可以目標不同的平台。</p><p><code>commonMain</code> 原始碼集使用通用 Kotlin 程式碼，而平台原始碼集則使用各目標平台特定的 Kotlin 程式碼。Kotlin/JVM 用於 <code>androidMain</code> 和 <code>desktopMain</code>。Kotlin/Native 用於 <code>iosMain</code>。另一方面，Kotlin/Wasm 用於 <code>wasmJsMain</code>。</p><p>當共享模組建置成 Android 函式庫時，通用 Kotlin 程式碼被視為 Kotlin/JVM。當它建置成 iOS 框架時，通用 Kotlin 程式碼被視為 Kotlin/Native。當共享模組建置成網路應用程式時，通用 Kotlin 程式碼被視為 Kotlin/Wasm。</p><p><img src="'+y+`" alt="Common Kotlin, Kotlin/JVM, and Kotlin/Native" width="700"></p><p>通常，盡可能將您的實作寫成通用程式碼，而不是在平台特定原始碼集中重複功能。</p><p>在 <code>composeApp/src/commonMain/kotlin</code> 目錄中，開啟 <code>App.kt</code> 檔案。它包含 <code>App()</code> 函式，該函式實作一個簡約但完整的 Compose 多平台 UI：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Preview</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MaterialTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> showContent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            modifier </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Modifier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">safeContentPadding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            horizontalAlignment </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Alignment.CenterHorizontally,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { showContent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">showContent }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Click me!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            AnimatedVisibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(showContent) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> greeting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Greeting</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">greet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Modifier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillMaxWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), horizontalAlignment </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Alignment.CenterHorizontally) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">painterResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Res.drawable.compose_multiplatform), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Compose: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$greeting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>讓我們在所有支援的平台上執行應用程式。</p><h2 id="執行您的應用程式" tabindex="-1">執行您的應用程式 <a class="header-anchor" href="#執行您的應用程式" aria-label="Permalink to &quot;執行您的應用程式&quot;">​</a></h2><p>您可以在 Android、iOS、桌面和網路應用程式上執行。您不必以任何特定順序執行應用程式，因此從您最熟悉的平台開始。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>您不需要使用 Gradle 建置任務。在多平台應用程式中，這將建置所有支援目標的偵錯版和發佈版。根據多平台精靈中選擇的平台，這可能需要一些時間。 使用執行設定要快得多；在這種情況下，只建置選定的目標。</p></div><h3 id="在-android-上執行您的應用程式" tabindex="-1">在 Android 上執行您的應用程式 <a class="header-anchor" href="#在-android-上執行您的應用程式" aria-label="Permalink to &quot;在 Android 上執行您的應用程式&quot;">​</a></h3><ol><li>在執行設定清單中，選擇 <strong>composeApp</strong>。</li><li>選擇您的 Android 虛擬裝置，然後點擊 <strong>Run</strong>：您的 IDE 會啟動選定的虛擬裝置（如果它已關閉電源），並執行應用程式。</li></ol><p><img src="`+g+'" alt="Run the Compose Multiplatform app on Android" width="350"></p><p><img src="'+_+'" alt="First Compose Multiplatform app on Android" width="300"></p>',27)),a(p,{id:"run_android_other_devices"},{default:e(()=>l[1]||(l[1]=[i("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"在不同的-android-模擬裝置上執行",tabindex:"-1"},[s("在不同的 Android 模擬裝置上執行 "),i("a",{class:"header-anchor",href:"#在不同的-android-模擬裝置上執行","aria-label":'Permalink to "在不同的 Android 模擬裝置上執行 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1),i("p",null,[s("了解如何"),i("a",{href:"https://developer.android.com/studio/run/emulator#runningapp",target:"_blank",rel:"noreferrer"},"設定 Android 模擬器並在不同的模擬裝置上執行您的應用程式"),s("。")],-1),i("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"在真實-android-裝置上執行",tabindex:"-1"},[s("在真實 Android 裝置上執行 "),i("a",{class:"header-anchor",href:"#在真實-android-裝置上執行","aria-label":'Permalink to "在真實 Android 裝置上執行 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1),i("p",null,[s("了解如何"),i("a",{href:"https://developer.android.com/studio/run/device",target:"_blank",rel:"noreferrer"},"設定和連接硬體裝置並在其上執行您的應用程式"),s("。")],-1)])),_:1}),l[5]||(l[5]=n('<h3 id="在-ios-上執行您的應用程式" tabindex="-1">在 iOS 上執行您的應用程式 <a class="header-anchor" href="#在-ios-上執行您的應用程式" aria-label="Permalink to &quot;在 iOS 上執行您的應用程式&quot;">​</a></h3><p>如果您尚未啟動 Xcode 作為初始設定的一部分，請在執行 iOS 應用程式之前執行此操作。</p><p>在 IntelliJ IDEA 中，在執行設定清單中選擇 <strong>iosApp</strong>，選擇執行設定旁邊的模擬裝置，然後點擊 <strong>Run</strong>。 如果清單中沒有可用的 iOS 設定，請新增一個<a href="#run-on-a-new-ios-simulated-device">新的執行設定</a>。</p><p><img src="'+u+'" alt="Run the Compose Multiplatform app on iOS" width="350"></p><p><img src="'+C+'" alt="First Compose Multiplatform app on iOS" width="300"></p>',5)),a(p,{id:"run_ios_other_devices"},{default:e(()=>l[2]||(l[2]=[i("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"在新的-ios-模擬裝置上執行",tabindex:"-1"},[s("在新的 iOS 模擬裝置上執行 "),i("a",{class:"header-anchor",href:"#在新的-ios-模擬裝置上執行","aria-label":'Permalink to "在新的 iOS 模擬裝置上執行 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1),i("p",null,"如果您想在模擬裝置上執行應用程式，可以新增一個新的執行設定。",-1),i("ol",null,[i("li",null,[i("p",null,[s("在執行設定清單中，點擊 "),i("strong",null,"Edit Configurations"),s("。")]),i("p",null,[i("img",{src:k,alt:"Edit run configurations",width:"450"})])]),i("li",null,[i("p",null,[s("點擊設定清單上方的 "),i("strong",null,"+"),s(" 按鈕，然後選擇 "),i("strong",null,"Xcode Application"),s("。")]),i("p",null,[i("img",{src:c,alt:"New run configuration for iOS application"})])]),i("li",null,[i("p",null,"為您的設定命名。")]),i("li",null,[i("p",null,[s("選擇 "),i("strong",null,"Working directory"),s("。為此，導覽至您的專案，例如 "),i("strong",null,"KotlinMultiplatformSandbox"),s("，在 "),i("code",null,"iosApp"),s(" 資料夾中。")])]),i("li",null,[i("p",null,[s("點擊 "),i("strong",null,"Run"),s(" 以在新模擬裝置上執行您的應用程式。")])])],-1),i("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"在真實-ios-裝置上執行",tabindex:"-1"},[s("在真實 iOS 裝置上執行 "),i("a",{class:"header-anchor",href:"#在真實-ios-裝置上執行","aria-label":'Permalink to "在真實 iOS 裝置上執行 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1),i("p",null,[s("您可以在真實 iOS 裝置上執行您的多平台應用程式。在開始之前， 您需要設定與您的 "),i("a",{href:"https://support.apple.com/en-us/HT204316",target:"_blank",rel:"noreferrer"},"Apple ID"),s(" 相關聯的 Team ID。")],-1),i("h5",{id:"設定您的-team-id",tabindex:"-1"},[s("設定您的 Team ID "),i("a",{class:"header-anchor",href:"#設定您的-team-id","aria-label":'Permalink to "設定您的 Team ID"'},"​")],-1),i("p",null,"要在專案中設定 Team ID，您可以使用 IntelliJ IDEA 中的 KDoctor 工具或在 Xcode 中選擇您的團隊。",-1),i("p",null,"對於 KDoctor：",-1),i("ol",null,[i("li",null,[i("p",null,"在 IntelliJ IDEA 中，在終端機中執行以下命令："),i("div",{class:"language-none vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"none"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",null,"kdoctor --team-ids")])])])]),i("p",null,"KDoctor 將列出目前系統上配置的所有 Team ID，例如："),i("div",{class:"language-text vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"text"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",null,"3ABC246XYZ (Max Sample)")]),s(`
`),i("span",{class:"line"},[i("span",null,"ZABCW6SXYZ (SampleTech Inc.)")])])])])]),i("li",null,[i("p",null,[s("在 IntelliJ IDEA 中，開啟 "),i("code",null,"iosApp/Configuration/Config.xcconfig"),s(" 並指定您的 Team ID。")])])],-1),i("p",null,"或者，在 Xcode 中選擇團隊：",-1),i("ol",null,[i("li",null,[i("p",null,[s("進入 Xcode 並選擇 "),i("strong",null,"Open a project or file"),s("。")])]),i("li",null,[i("p",null,[s("導覽至您專案的 "),i("code",null,"iosApp/iosApp.xcworkspace"),s(" 檔案。")])]),i("li",null,[i("p",null,[s("在左側選單中，選擇 "),i("code",null,"iosApp"),s("。")])]),i("li",null,[i("p",null,[s("導覽至 "),i("strong",null,"Signing & Capabilities"),s("。")])]),i("li",null,[i("p",null,[s("在 "),i("strong",null,"Team"),s(" 清單中，選擇您的團隊。")]),i("p",null,[s("如果您尚未設定您的團隊，請使用 "),i("strong",null,"Team"),s(" 清單中的 "),i("strong",null,"Add an Account"),s(" 選項並按照 Xcode 指示操作。")])]),i("li",null,[i("p",null,"確保 Bundle Identifier 是唯一的，並且 Signing Certificate 已成功指派。")])],-1),i("h5",{id:"執行應用程式",tabindex:"-1"},[s("執行應用程式 "),i("a",{class:"header-anchor",href:"#執行應用程式","aria-label":'Permalink to "執行應用程式"'},"​")],-1),i("p",null,[s("用傳輸線連接您的 iPhone。如果您已在 Xcode 中註冊該裝置，IntelliJ IDEA 應在執行設定清單中顯示它。執行對應的 "),i("code",null,"iosApp"),s(" 設定。")],-1),i("p",null,[s("如果您尚未在 Xcode 中註冊您的 iPhone，請遵循 "),i("a",{href:"https://developer.apple.com/documentation/xcode/running-your-app-in-simulator-or-on-a-device/",target:"_blank",rel:"noreferrer"},"Apple 建議"),s("。 簡而言之，您應該：")],-1),i("ol",null,[i("li",null,"用傳輸線連接您的 iPhone。"),i("li",null,[s("在您的 iPhone 上，在 "),i("strong",null,"Settings"),s(" | "),i("strong",null,"Privacy & Security"),s(" 中啟用開發者模式。")]),i("li",null,[s("在 Xcode 中，前往頂部選單並選擇 "),i("strong",null,"Window"),s(" | "),i("strong",null,"Devices and Simulators"),s("。")]),i("li",null,[s("點擊加號。選擇您連接的 iPhone 並點擊 "),i("strong",null,"Add"),s("。")]),i("li",null,"使用您的 Apple ID 登入以啟用裝置上的開發功能。"),i("li",null,"按照螢幕上的指示完成配對過程。")],-1),i("p",null,[s("在 Xcode 中註冊您的 iPhone 後，在 IntelliJ IDEA 中"),i("a",{href:"#run-on-a-new-ios-simulated-device"},"建立一個新的執行設定"),s("，並在 "),i("strong",null,"Execution target"),s(" 清單中選擇您的裝置。執行對應的 "),i("code",null,"iosApp"),s(" 設定。")],-1)])),_:1}),l[6]||(l[6]=n('<h3 id="在桌面執行您的應用程式" tabindex="-1">在桌面執行您的應用程式 <a class="header-anchor" href="#在桌面執行您的應用程式" aria-label="Permalink to &quot;在桌面執行您的應用程式&quot;">​</a></h3><p>在執行設定清單中選擇 <strong>composeApp [desktop]</strong> 並點擊 <strong>Run</strong>。預設情況下，執行設定會在自己的作業系統視窗中啟動桌面應用程式：</p><p><img src="'+A+'" alt="Run the Compose Multiplatform app on desktop" width="350"></p><p><img src="'+F+'" alt="First Compose Multiplatform app on desktop" width="500"></p><h3 id="執行您的網路應用程式" tabindex="-1">執行您的網路應用程式 <a class="header-anchor" href="#執行您的網路應用程式" aria-label="Permalink to &quot;執行您的網路應用程式&quot;">​</a></h3><p>在執行設定清單中選擇 <strong>composeApp [wasmJs]</strong> 並點擊 <strong>Run</strong>。</p><p><img src="'+I+'" alt="Run the Compose Multiplatform app on web" width="350"></p><p>網路應用程式將在您的瀏覽器中自動開啟。或者，當執行完成時，您可以在瀏覽器中輸入以下網址：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   http://localhost:8080/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>埠號可能會有所不同，因為 8080 埠可能不可用。 您可以在 Gradle 建置控制台中找到實際的埠號。</p></div><p><img src="'+v+'" alt="Compose web application" width="550"></p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><p>在本教學課程的下一部分，您將學習如何實作可組合函式並在每個平台上啟動您的應用程式。</p><p><strong><a href="./compose-multiplatform-explore-composables">繼續前往下一部分</a></strong></p><h2 id="取得幫助" tabindex="-1">取得幫助 <a class="header-anchor" href="#取得幫助" aria-label="Permalink to &quot;取得幫助&quot;">​</a></h2><ul><li><strong>Kotlin Slack</strong>。取得<a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">邀請</a>並加入 <a href="https://kotlinlang.slack.com/archives/C3PQML5NU" target="_blank" rel="noreferrer">#multiplatform</a> 頻道。</li><li><strong>Kotlin 問題追蹤器</strong>。<a href="https://youtrack.jetbrains.com/newIssue?project=KT" target="_blank" rel="noreferrer">報告新問題</a>。</li></ul>',16))])}const X=S(P,[["render",T]]);export{V as __pageData,X as default};
