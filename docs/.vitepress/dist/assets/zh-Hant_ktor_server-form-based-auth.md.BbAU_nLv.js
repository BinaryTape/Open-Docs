import{_ as E,C as t,c,o as u,j as i,G as a,ag as h,a as e,w as n}from"./chunks/framework.Bksy39di.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-form-based-auth.md","filePath":"zh-Hant/ktor/server-form-based-auth.md","lastUpdated":1755457140000}'),g={name:"zh-Hant/ktor/server-form-based-auth.md"};function y(m,s,F,v,f,b){const p=t("show-structure"),o=t("Links"),k=t("tldr"),l=t("code-block"),r=t("TabItem"),d=t("Tabs");return u(),c("div",null,[s[5]||(s[5]=i("h1",{id:"ktor-伺服器中的表單式身份驗證",tabindex:"-1"},[e("Ktor 伺服器中的表單式身份驗證 "),i("a",{class:"header-anchor",href:"#ktor-伺服器中的表單式身份驗證","aria-label":'Permalink to "Ktor 伺服器中的表單式身份驗證"'},"​")],-1)),a(p,{for:"chapter",depth:"2"}),a(k,null,{default:n(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依賴項"),e(": "),i("code",null,"io.ktor:ktor-server-auth")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"程式碼範例"),e(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-form-html-dsl"},"auth-form-html-dsl"),e(", "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-form-session"},"auth-form-session")],-1)),i("p",null,[i("b",null,[a(o,{href:"/ktor/server-native",summary:"Ktor 支援 Kotlin/Native，並且允許您在沒有額外運行時或虛擬機器的情況下運行伺服器。"},{default:n(()=>s[0]||(s[0]=[e("原生伺服器")])),_:1}),s[1]||(s[1]=e(" 支援"))]),s[2]||(s[2]=e(": ✅ "))])]),_:1}),s[6]||(s[6]=h('<p>表單式身份驗證使用<a href="https://developer.mozilla.org/en-US/docs/Learn/Forms" target="_blank" rel="noreferrer">網頁表單</a>來收集憑證資訊並驗證使用者。要在 Ktor 中建立網頁表單，您可以使用 <a href="./server-html-dsl#html_response">HTML DSL</a> 或選擇 JVM <a href="./server-templating">模板引擎</a>，例如 FreeMarker、Velocity 等。</p><blockquote><p>考慮到使用表單式身份驗證時，使用者名稱和密碼是以明文形式傳遞的，您需要使用 <a href="./server-ssl">HTTPS/TLS</a> 來保護敏感資訊。</p></blockquote><h2 id="add_dependencies" tabindex="-1">新增依賴項 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;新增依賴項 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>要啟用 <code>form</code> 身份驗證，您需要在建構腳本中包含 <code>ktor-server-auth</code> artifact：</p>',4)),a(d,{group:"languages"},{default:n(()=>[a(r,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[a(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-auth:$ktor_version")'})]),_:1}),a(r,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[a(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-auth:$ktor_version"'})]),_:1}),a(r,{title:"Maven","group-key":"maven"},{default:n(()=>[a(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-auth-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[7]||(s[7]=h(`<h2 id="flow" tabindex="-1">表單式身份驗證流程 <a class="header-anchor" href="#flow" aria-label="Permalink to &quot;表單式身份驗證流程 {id=&quot;flow&quot;}&quot;">​</a></h2><p>表單式身份驗證流程可能如下所示：</p><ol><li><p>未經身份驗證的客戶端向伺服器應用程式中的特定 <a href="./server-routing">路由</a> 發出請求。</p></li><li><p>伺服器返回一個 HTML 頁面，該頁面至少包含一個基於 HTML 的網頁表單，提示使用者輸入使用者名稱和密碼。</p><blockquote><p>Ktor 允許您使用 <a href="./server-html-dsl">Kotlin DSL</a> 建立表單，或者您可以選擇各種 JVM 模板引擎，例如 FreeMarker、Velocity 等。</p></blockquote></li><li><p>當使用者提交使用者名稱和密碼時，客戶端會向伺服器發出一個包含網頁表單資料 (其中包括使用者名稱和密碼) 的請求。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">POST http:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//localhost:8080/login</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Type: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">application</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">www</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">form</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">urlencoded</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jetbrains&amp;password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">foobar</span></span></code></pre></div><p>在 Ktor 中，您需要 <a href="#configure-provider">指定參數名稱</a> 以用於獲取使用者名稱和密碼。</p></li><li><p>伺服器 <a href="#configure-provider">驗證</a> 客戶端發送的憑證，並回應所請求的內容。</p></li></ol><h2 id="install" tabindex="-1">安裝表單身份驗證 <a class="header-anchor" href="#install" aria-label="Permalink to &quot;安裝表單身份驗證 {id=&quot;install&quot;}&quot;">​</a></h2><p>要安裝 <code>form</code> 身份驗證提供者，請在 <code>install</code> 區塊內呼叫 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/form.html" target="_blank" rel="noreferrer">form</a> 函數：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.auth.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 配置表單身份驗證</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以選擇指定一個 <a href="./server-auth#provider-name">提供者名稱</a>，該名稱可用於 <a href="#authenticate-route">驗證指定的路由</a>。</p><h2 id="configure" tabindex="-1">配置表單身份驗證 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置表單身份驗證 {id=&quot;configure&quot;}&quot;">​</a></h2><h3 id="configure-provider" tabindex="-1">步驟 1：配置表單提供者 <a class="header-anchor" href="#configure-provider" aria-label="Permalink to &quot;步驟 1：配置表單提供者 {id=&quot;configure-provider&quot;}&quot;">​</a></h3><p><code>form</code> 身份驗證提供者透過 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-form-authentication-provider/-config/index.html" target="_blank" rel="noreferrer">FormAuthenticationProvider.Config</a> 類別暴露其設定。在下面的範例中，指定了以下設定：</p><ul><li><code>userParamName</code> 和 <code>passwordParamName</code> 屬性指定了用於獲取使用者名稱和密碼的參數名稱。</li><li><code>validate</code> 函數驗證使用者名稱和密碼。 <code>validate</code> 函數檢查 <code>UserPasswordCredential</code>，並在成功身份驗證時返回一個 <code>UserIdPrincipal</code>，或者在身份驗證失敗時返回 <code>null</code>。</li><li><code>challenge</code> 函數指定了身份驗證失敗時執行的操作。例如，您可以重定向回登入頁面或發送 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-unauthorized-response/index.html" target="_blank" rel="noreferrer">UnauthorizedResponse</a>。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-form&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        userParamName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;username&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        passwordParamName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;password&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { credentials </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (credentials.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;jetbrains&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> credentials.password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foobar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                UserIdPrincipal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(credentials.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        challenge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpStatusCode.Unauthorized, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;憑證無效&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>至於 <code>basic</code> 身份驗證，您也可以使用 <a href="./server-basic-auth#validate-user-hash">UserHashedTableAuth</a> 來驗證儲存在記憶體表格中的使用者，該表格儲存使用者名稱和密碼雜湊。</p></blockquote><h3 id="authenticate-route" tabindex="-1">步驟 2：保護特定資源 <a class="header-anchor" href="#authenticate-route" aria-label="Permalink to &quot;步驟 2：保護特定資源 {id=&quot;authenticate-route&quot;}&quot;">​</a></h3><p>配置 <code>form</code> 提供者後，您需要定義一個 <code>post</code> 路由來接收資料。 然後，在 <strong><a href="./server-auth#authenticate-route">authenticate</a></strong> 函數內部新增此路由。 在成功身份驗證的情況下，您可以使用 <code>call.principal</code> 函數在路由處理器內部檢索已驗證的 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-user-id-principal/index.html" target="_blank" rel="noreferrer">UserIdPrincipal</a>，並獲取已驗證使用者的名稱。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-form&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/login&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;哈囉，\${call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">principal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UserIdPrincipal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;()?.name}！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以使用 <a href="./server-session-auth">Session 身份驗證</a> 來儲存登入使用者的 ID。 例如，當使用者首次使用網頁表單登入時，您可以將使用者名稱儲存到一個 cookie session 中，並在後續請求中，使用 <code>session</code> 提供者來授權該使用者。</p>`,17))])}const q=E(g,[["render",y]]);export{_ as __pageData,q as default};
