import{_ as i,c as a,o as k,ag as h}from"./chunks/framework.Bksy39di.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-integrate-database.md","filePath":"ko/ktor/server-integrate-database.md","lastUpdated":1755457140000}'),t={name:"ko/ktor/server-integrate-database.md"};function n(p,s,l,E,e,r){return k(),a("div",null,s[0]||(s[0]=[h(`<div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">topic</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xmlns:xsi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   xsi:noNamespaceSchemaLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Kotlin, Ktor, Exposed와 데이터베이스 통합하기&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;server-integrate-database&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">show-structure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chapter&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> depth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tldr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;코드 예시&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tutorial-server-db-integration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            tutorial-server-db-integration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;사용된 플러그인&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;: &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-routing&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Routing은 서버 애플리케이션에서 수신 요청을 처리하기 위한 핵심 플러그인입니다.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;라우팅 (Routing)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-static-content&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;스타일시트, 스크립트, 이미지 등과 같은 정적 콘텐츠를 제공하는 방법을 알아보세요.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;정적 콘텐츠 (Static Content)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-serialization&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ContentNegotiation 플러그인은 두 가지 주요 목적을 가지고 있습니다. 클라이언트와 서버 간의 미디어 타입을 협상하고, 특정 형식으로 콘텐츠를 직렬화/역직렬화합니다.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;콘텐츠 협상 (Content Negotiation)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-status-pages&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%plugin_name%를 사용하면 Ktor 애플리케이션이 발생한 예외 또는 상태 코드에 따라 모든 실패 상태에 적절하게 응답할 수 있습니다.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;상태 페이지 (Status pages)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/ktorio/ktor-plugin-registry/blob/main/plugins/server/org.jetbrains/kotlinx.serialization/2.2/documentation.md&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ContentNegotiation 플러그인은 두 가지 주요 목적을 가지고 있습니다. 클라이언트와 서버 간의 미디어 타입을 협상하고, 특정 형식으로 콘텐츠를 직렬화/역직렬화합니다.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;kotlinx.serialization&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/ktorio/ktor-plugin-registry/blob/main/plugins/server/org.jetbrains/exposed/2.2/documentation.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exposed&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/ktorio/ktor-plugin-registry/blob/main/plugins/server/org.jetbrains/postgres/2.2/documentation.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Postgres&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tldr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">card-summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Exposed SQL 라이브러리를 사용하여 Ktor 서비스를 데이터베이스 저장소에 연결하는 과정을 알아보세요.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">card-summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link-summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Exposed SQL 라이브러리를 사용하여 Ktor 서비스를 데이터베이스 저장소에 연결하는 과정을 알아보세요.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link-summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">web-summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Kotlin과 Ktor를 사용하여 RESTful 서비스가 데이터베이스 저장소에 연결되는 단일 페이지 애플리케이션(SPA)을 구축하는 방법을 알아보세요. 이 애플리케이션은 Exposed SQL 라이브러리를 사용하며, 테스트를 위해 가짜 저장소를 사용할 수 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">web-summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    이 문서에서는 Kotlin용 SQL 라이브러리인 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/JetBrains/Exposed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exposed&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 사용하여 Ktor 서비스를 관계형 데이터베이스와 통합하는 방법을 배웁니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이 튜토리얼을 마치면 다음을 수행하는 방법을 배울 수 있습니다:&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;JSON 직렬화를 사용하는 RESTful 서비스를 생성합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이 서비스에 다양한 저장소를 주입합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;가짜 저장소를 사용하여 서비스에 대한 단위 테스트를 생성합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exposed 및 의존성 주입 (DI)을 사용하여 작동하는 저장소를 구축합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;외부 데이터베이스에 액세스하는 서비스를 배포합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    이전 튜토리얼에서는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-requests-and-responses&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;작업 관리자 애플리케이션을 구축하여 Kotlin의 Ktor에서 라우팅, 요청 처리 및 매개변수 기초를 알아보세요.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;요청 처리&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-create-restful-apis&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Kotlin과 Ktor를 사용하여 JSON 파일을 생성하는 RESTful API 예시가 포함된 백엔드 서비스를 구축하는 방법을 알아보세요.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;RESTful API 생성&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 또는</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-create-website&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Kotlin과 Ktor, Thymeleaf 템플릿으로 웹사이트를 구축하는 방법을 알아보세요.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Thymeleaf 템플릿으로 웹 앱 구축&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;과 같은 기본 사항을 다루기 위해 작업 관리자 예시를 사용했습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    이전 튜토리얼이 간단한 인메모리 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 사용한 프론트엔드 기능에 중점을 둔 반면,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    이 가이드는 Ktor 서비스가 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/JetBrains/Exposed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exposed SQL 라이브러리&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 통해 관계형 데이터베이스와 상호 작용하는 방법을 보여주는 데 중점을 둡니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    이 가이드는 더 길고 복잡하지만, 여전히 빠르게 작동하는 코드를 생성하고 새로운 기능을 점진적으로 도입할 수 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이 가이드는 두 부분으로 나뉩니다:&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;decimal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#create-restful-service-and-repository&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;인메모리 저장소로 애플리케이션 생성.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#add-postgresql-repository&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;인메모리 저장소를 PostgreSQL을 사용하는 저장소로 교체.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;전제 조건&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prerequisites&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        이 튜토리얼은 독립적으로 수행할 수 있지만, 콘텐츠 협상 (Content Negotiation) 및 REST에 익숙해지기 위해 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-create-restful-apis&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Kotlin과 Ktor를 사용하여 JSON 파일을 생성하는 RESTful API 예시가 포함된 백엔드 서비스를 구축하는 방법을 알아보세요.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;RESTful API 생성&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 튜토리얼을 완료하는 것을 권장합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.jetbrains.com/help/idea/installation-guide.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;IntelliJ IDEA&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 설치하는 것을 권장하지만, 원하는 다른 IDE를 사용할 수도 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;RESTful 서비스 및 인메모리 저장소 생성&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-restful-service-and-repository&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        먼저, 작업 관리자 RESTful 서비스를 다시 생성합니다. 처음에는 인메모리 저장소를 사용하지만, 최소한의 노력으로 교체할 수 있도록 설계를 구성할 것입니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;다음 여섯 단계로 진행됩니다:&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;decimal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#create-project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;초기 프로젝트 생성.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#add-starter-code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;시작 코드 추가.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#add-routes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;CRUD 라우트 추가.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#add-client-page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;단일 페이지 애플리케이션 (SPA) 추가.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#test-manually&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;애플리케이션 수동 테스트.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#add-automated-tests&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;자동화된 테스트 추가.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;플러그인과 함께 새 프로젝트 생성&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Ktor 프로젝트 제너레이터 (Ktor Project Generator)로 새 프로젝트를 생성하려면 다음 단계를 따르세요:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-project-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://start.ktor.io/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Ktor 프로젝트 제너레이터&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Project artifact&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 필드에 프로젝트 아티팩트의 이름으로</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;com.example.ktor-exposed-task-app&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;을 입력합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial_server_db_integration_project_artifact.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Ktor 프로젝트 제너레이터에서 프로젝트 아티팩트 이름 지정&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;block&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;706&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    플러그인 섹션에서 다음 플러그인을 검색하여 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Add&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 버튼을 클릭하여 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bullet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Routing&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Content Negotiation&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Kotlinx.serialization&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Static Content&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Status Pages&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exposed&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Postgres&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ktor_project_generator_add_plugins.gif&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Ktor 프로젝트 제너레이터에 플러그인 추가&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;block&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;706&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    플러그인을 추가한 후, 플러그인 섹션의 오른쪽 상단에 있는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;7 plugins&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 버튼을 클릭하여 추가된 플러그인을 확인합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;그러면 프로젝트에 추가될 모든 플러그인 목록이 표시됩니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial_server_db_integration_plugin_list.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Ktor 프로젝트 제너레이터의 플러그인 드롭다운&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;block&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;706&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Download&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 버튼을 클릭하여 Ktor 프로젝트를 생성하고 다운로드합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    생성된 프로젝트를 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.jetbrains.com/help/idea/installation-guide.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;IntelliJ IDEA&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 또는 원하는 다른 IDE에서 엽니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동하여 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;CitySchema.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 및 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;UsersSchema.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 삭제합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;delete-function&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Databases.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 열고 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;configureDatabases()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 함수의 내용을 제거합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        fun Application.configureDatabases() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이 기능을 제거하는 이유는 Ktor 프로젝트 제너레이터가 HSQLDB 또는 PostgreSQL에 사용자 및 도시에 대한 데이터를 지속하는 방법을 보여주는 샘플 코드를 추가했기 때문입니다. 이 튜토리얼에서는 해당 샘플 코드가 필요하지 않습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;시작 코드 추가&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-starter-code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-starter-code-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동하여 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;model&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이라는 하위 패키지를 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;model&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 패키지 내에 새로운 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Task.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Task.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 열고 우선순위를 나타내는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;enum&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;과 작업을 나타내는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;class&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 추가합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;package com.example.model</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import kotlinx.serialization.Serializable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">enum class Priority {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Low, Medium, High, Vital</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@Serializable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">data class Task(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    val name: String,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    val description: String,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    val priority: Priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Task&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 클래스는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-serialization&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ContentNegotiation 플러그인은 두 가지 주요 목적을 가지고 있습니다. 클라이언트와 서버 간의 미디어 타입을 협상하고, 특정 형식으로 콘텐츠를 직렬화/역직렬화합니다.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;kotlinx.serialization&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 라이브러리의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Serializable&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입으로 어노테이션되어 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이전 튜토리얼에서와 마찬가지로 인메모리 저장소를 생성합니다. 그러나 이번에는 저장소가 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;interface&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 구현하여 나중에 쉽게 교체할 수 있도록 합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;model&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 하위 패키지에 새로운 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 열고 다음 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;interface&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        package com.example.model</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        interface TaskRepository {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            fun allTasks(): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            fun tasksByPriority(priority: Priority): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            fun taskByName(name: String): Task?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            fun addTask(task: Task)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            fun removeTask(name: String): Boolean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                같은 디렉토리 안에 새로운 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;FakeTaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;FakeTaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 열고 다음 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;class&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        package com.example.model</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        class FakeTaskRepository : TaskRepository {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            private val tasks = mutableListOf(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                Task(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cleaning</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Clean the house</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, Priority.Low),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                Task(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gardening</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Mow the lawn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, Priority.Medium),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                Task(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">shopping</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Buy the groceries</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, Priority.High),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                Task(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">painting</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Paint the fence</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, Priority.Medium)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            )</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            override fun allTasks(): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> = tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            override fun tasksByPriority(priority: Priority) = tasks.filter {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                it.priority == priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            override fun taskByName(name: String) = tasks.find {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                it.name.equals(name, ignoreCase = true)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            override fun addTask(task: Task) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                if (taskByName(task.name) != null) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                    throw IllegalStateException(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Cannot duplicate task names!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                tasks.add(task)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            override fun removeTask(name: String): Boolean {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                return tasks.removeIf { it.name == name }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;라우트 추가&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-routes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-routes-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Serialization.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 엽니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    기존의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Application.configureSerialization()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 함수를 다음 구현으로 바꿉니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;package com.example</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.model.Priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.model.Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.model.TaskRepository</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.http.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.serialization.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.serialization.kotlinx.json.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.server.application.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.server.plugins.contentnegotiation.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.server.request.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.server.response.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.server.routing.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">fun Application.configureSerialization(repository: TaskRepository) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    install(ContentNegotiation) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        json()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    routing {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        route(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            get {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                val tasks = repository.allTasks()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                call.respond(tasks)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/byName/{taskName}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                val name = call.parameters[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">taskName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                if (name == null) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.BadRequest)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    return@get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                val task = repository.taskByName(name)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                if (task == null) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.NotFound)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    return@get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                call.respond(task)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/byPriority/{priority}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                val priorityAsText = call.parameters[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                if (priorityAsText == null) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.BadRequest)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    return@get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                try {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    val priority = Priority.valueOf(priorityAsText)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    val tasks = repository.tasksByPriority(priority)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    if (tasks.isEmpty()) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        call.respond(HttpStatusCode.NotFound)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        return@get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(tasks)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                } catch (ex: IllegalArgumentException) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.BadRequest)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            post {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                try {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    val task = call.receive</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    repository.addTask(task)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.NoContent)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                } catch (ex: IllegalStateException) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.BadRequest)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                } catch (ex: JsonConvertException) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.BadRequest)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            delete(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/{taskName}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                val name = call.parameters[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">taskName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                if (name == null) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.BadRequest)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    return@delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                if (repository.removeTask(name)) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.NoContent)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                } else {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    call.respond(HttpStatusCode.NotFound)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이것은 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-create-restful-apis&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Kotlin과 Ktor를 사용하여 JSON 파일을 생성하는 RESTful API 예시가 포함된 백엔드 서비스를 구축하는 방법을 알아보세요.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;RESTful API 생성&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 튜토리얼에서 구현했던 라우팅과 동일하지만, 이제 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;routing()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 함수에 저장소를 매개변수로 전달하고 있습니다. 매개변수의 타입이 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;interface&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이므로, 다양한 구현을 주입할 수 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이제 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;configureSerialization()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;에 매개변수를 추가했으므로, 기존 호출은 더 이상 컴파일되지 않습니다. 다행히 이 함수는 한 번만 호출됩니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 내의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Application.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 엽니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;module()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 함수를 다음 구현으로 바꿉니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                    import com.example.model.FakeTaskRepository</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    fun Application.module() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        val repository = FakeTaskRepository()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        configureSerialization(repository)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        configureDatabases()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        configureRouting()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이제 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;FakeTaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 인스턴스를 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;configureSerialization()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;에 주입하고 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    장기 목표는 이를 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgresTaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 교체할 수 있도록 하는 것입니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;클라이언트 페이지 추가&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-client-page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-client-page-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/resources/static&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;index.html&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 엽니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    현재 내용을 다음 구현으로 바꿉니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;html&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">html</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">title</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">A Simple SPA For Tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/title</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">script type=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">application/javascript</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function displayAllTasks() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            clearTasksTable();</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            fetchAllTasks().then(displayTasks)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function displayTasksWithPriority() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            clearTasksTable();</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            const priority = readTaskPriority();</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            fetchTasksWithPriority(priority).then(displayTasks)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function displayTask(name) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            fetchTaskWithName(name).then(t =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                taskDisplay().innerHTML</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    = \`\${t.priority} priority task \${t.name} with description </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${t.description}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            )</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function deleteTask(name) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            deleteTaskWithName(name).then(() =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                clearTaskDisplay();</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                displayAllTasks();</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            })</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function deleteTaskWithName(name) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return sendDELETE(\`/tasks/\${name}\`)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function addNewTask() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            const task = buildTaskFromForm();</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            sendPOST(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, task).then(displayAllTasks);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function buildTaskFromForm() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                name: getTaskFormValue(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                description: getTaskFormValue(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskDescription</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                priority: getTaskFormValue(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskPriority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function getTaskFormValue(controlName) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return document.addTaskForm[controlName].value;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function taskDisplay() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return document.getElementById(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">currentTaskDisplay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function readTaskPriority() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return document.priorityForm.priority.value</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function fetchTasksWithPriority(priority) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return sendGET(\`/tasks/byPriority/\${priority}\`);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function fetchTaskWithName(name) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return sendGET(\`/tasks/byName/\${name}\`);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function fetchAllTasks() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return sendGET(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function sendGET(url) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return fetch(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                url,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                {headers: {&#39;Accept&#39;: &#39;application/json&#39;}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ).then(response =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                if (response.ok) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    return response.json()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                return [];</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            });</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function sendPOST(url, data) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return fetch(url, {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                method: &#39;POST&#39;,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                headers: {&#39;Content-Type&#39;: &#39;application/json&#39;},</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                body: JSON.stringify(data)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            });</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function sendDELETE(url) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return fetch(url, {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                method: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DELETE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            });</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function tasksTable() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return document.getElementById(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tasksTableBody</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function clearTasksTable() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            tasksTable().innerHTML = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function clearTaskDisplay() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            taskDisplay().innerText = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">None</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function displayTasks(tasks) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            const tasksTableBody = tasksTable()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            tasks.forEach(task =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                const newRow = taskRow(task);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                tasksTableBody.appendChild(newRow);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            });</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function taskRow(task) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return tr([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                td(task.name),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                td(task.priority),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                td(viewLink(task.name)),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                td(deleteLink(task.name)),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ]);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function tr(children) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            const node = document.createElement(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            children.forEach(child =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node.appendChild(child));</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return node;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function td(content) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            const node = document.createElement(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">td</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            if (content instanceof Element) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                node.appendChild(content)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            } else {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                node.appendChild(document.createTextNode(content));</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return node;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function viewLink(taskName) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            const node = document.createElement(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            node.setAttribute(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">href</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, \`javascript:displayTask(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${taskName}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            )</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            node.appendChild(document.createTextNode(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">view</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">));</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return node;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        function deleteLink(taskName) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            const node = document.createElement(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            node.setAttribute(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">href</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, \`javascript:deleteTask(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${taskName}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            )</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            node.appendChild(document.createTextNode(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">));</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            return node;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/script</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">body onload=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">displayAllTasks()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">작업 관리자 클라이언트</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/h1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">form action=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">javascript:displayAllTasks()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">span</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">모든 작업 보기</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/span</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">input type=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">submit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">이동</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/form</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">form name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">priorityForm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">javascript:displayTasksWithPriority()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">span</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">우선순위별 작업 보기</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/span</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">select name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Low</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">낮음</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Medium</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">중간</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">High</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">높음</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Vital</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">필수</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">input type=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">submit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">이동</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/form</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">form name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">addTaskForm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">javascript:addNewTask()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">span</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">다음으로 새 작업 생성</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/span</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">label for=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">이름</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/label</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">input type=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">text</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">label for=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskDescription</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">설명</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/label</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">input type=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">text</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskDescription</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskDescription</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">label for=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskPriority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">우선순위</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/label</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">select id=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskPriority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">newTaskPriority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Low</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">낮음</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Medium</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">중간</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">High</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">높음</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">option name=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Vital</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">필수</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/option</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">input type=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">submit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">이동</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/form</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">div</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    현재 작업은 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">em id=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">currentTaskDisplay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">없음</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/em</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/div</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">table</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">thead</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">이름</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">우선순위</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/th</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/thead</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tbody id=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tasksTableBody</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;gt;&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tbody</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/table</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/body</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/html</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이것은 이전 튜토리얼에서 사용된 동일한 SPA입니다. JavaScript로 작성되었으며 브라우저 내에서 사용 가능한 라이브러리만 사용하므로 클라이언트 측 종속성에 대해 걱정할 필요가 없습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;애플리케이션 수동 테스트&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test-manually&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test-manually-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                이 첫 번째 버전은 데이터베이스에 연결하는 대신 인메모리 저장소를 사용하므로 애플리케이션이 올바르게 구성되었는지 확인해야 합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/resources/application.yaml&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동하여 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;postgres&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 구성을 제거합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yaml&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ktor:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    application:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        modules:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            - com.example.ApplicationKt.module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    deployment:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        port: 8080&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;IntelliJ IDEA에서 실행 버튼 (&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;intellij_idea_gutter_icon.svg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                              style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inline&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                              alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA 실행 아이콘&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;)을 클릭하여 애플리케이션을 시작합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    브라우저에서 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://0.0.0.0:8080/static/index.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;http://0.0.0.0:8080/static/index.html&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동합니다. 세 개의 폼과 필터링된 결과가 표시되는 테이블로 구성된 클라이언트 페이지가 보일 것입니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial_server_db_integration_index_page.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;작업 관리자 클라이언트를 보여주는 브라우저 창&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rounded&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;706&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이동&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 버튼을 사용하여 폼을 작성하고 전송하여 애플리케이션을 테스트합니다. 테이블 항목에서 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;보기&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 및 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;삭제&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 버튼을 사용합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial_server_db_integration_manual_test.gif&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;작업 관리자 클라이언트를 보여주는 브라우저 창&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rounded&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;706&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;자동화된 단위 테스트 추가&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-automated-tests&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-automated-tests-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/test/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;ApplicationTest.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 열고 다음 테스트를 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;package com.example</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.model.Priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.model.Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.client.call.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.client.plugins.contentnegotiation.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.client.request.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.http.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.serialization.kotlinx.json.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import io.ktor.server.testing.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import kotlin.test.*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">class ApplicationTest {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    @Test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    fun tasksCanBeFoundByPriority() = testApplication {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        application {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            val repository = FakeTaskRepository()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureSerialization(repository)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureRouting()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val client = createClient {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            install(ContentNegotiation) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                json()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val response = client.get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks/byPriority/Medium</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val results = response.body</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        assertEquals(HttpStatusCode.OK, response.status)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val expectedTaskNames = listOf(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gardening</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">painting</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val actualTaskNames = results.map(Task::name)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        assertContentEquals(expectedTaskNames, actualTaskNames)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    @Test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    fun invalidPriorityProduces400() = testApplication {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        application {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            val repository = FakeTaskRepository()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureSerialization(repository)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureRouting()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val response = client.get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks/byPriority/Invalid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        assertEquals(HttpStatusCode.BadRequest, response.status)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    @Test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    fun unusedPriorityProduces404() = testApplication {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        application {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            val repository = FakeTaskRepository()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureSerialization(repository)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureRouting()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val response = client.get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks/byPriority/Vital</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        assertEquals(HttpStatusCode.NotFound, response.status)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    @Test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    fun newTasksCanBeAdded() = testApplication {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        application {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            val repository = FakeTaskRepository()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureSerialization(repository)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            configureRouting()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val client = createClient {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            install(ContentNegotiation) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                json()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val task = Task(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">swimming</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Go to the beach</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, Priority.Low)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val response1 = client.post(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            header(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                HttpHeaders.ContentType,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                ContentType.Application.Json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            )</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            setBody(task)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        assertEquals(HttpStatusCode.NoContent, response1.status)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val response2 = client.get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        assertEquals(HttpStatusCode.OK, response2.status)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val taskNames = response2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .body</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .map { it.name }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        assertContains(taskNames, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">swimming</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이 테스트를 컴파일하고 실행하려면 Ktor 클라이언트용 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-content-negotiation/io.ktor.server.plugins.contentnegotiation/-content-negotiation.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;콘텐츠 협상 (Content Negotiation)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    플러그인에 대한 의존성을 추가해야 합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;gradle/libs.versions.toml&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 열고 다음 라이브러리를 지정합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        [libraries]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        #...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        ktor-client-content-negotiation = { module = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">io.ktor:ktor-client-content-negotiation</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, version.ref = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ktor-version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;build.gradle.kts&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 열고 다음 종속성을 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        dependencies {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            testImplementation(libs.ktor.client.content.negotiation)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;IntelliJ IDEA에서 편집기 오른쪽에 있는 Gradle 알림 아이콘 (&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA Gradle 아이콘&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                          src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;intellij_idea_gradle_icon.svg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;26&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;)을 클릭하여 Gradle 변경 사항을 로드합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;IntelliJ IDEA에서 테스트 클래스 정의 옆에 있는 실행 버튼 (&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;intellij_idea_gutter_icon.svg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                          style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inline&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                          alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA 실행 아이콘&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;)을 클릭하여 테스트를 실행합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;그러면 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;실행&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 창에 테스트가 성공적으로 실행되었음이 표시되어야 합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial_server_db_integration_test_results.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA의 실행 창에 성공적인 테스트 결과 표시&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                     width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;706&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PostgreSQL 저장소 추가&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-postgresql-repository&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        이제 인메모리 데이터를 사용하는 작동하는 애플리케이션이 있으므로, 다음 단계는 데이터 저장소를 PostgreSQL 데이터베이스로 외부화하는 것입니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        다음과 같은 방법으로 이를 달성할 수 있습니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;decimal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#create-schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgreSQL 내에 데이터베이스 스키마 생성.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#adapt-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;비동기 액세스를 위해 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 조정.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#config-db-connection&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;애플리케이션 내에서 데이터베이스 연결 구성.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#create-mapping&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Task&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입을 관련 데이터베이스 테이블에 매핑.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#create-new-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이 매핑을 기반으로 새 저장소 생성.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#switch-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;시작 코드에서 이 새 저장소로 전환.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;데이터베이스 스키마 생성&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-schema-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    선택한 데이터베이스 관리 도구를 사용하여 PostgreSQL 내에 새 데이터베이스를 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이름은 중요하지 않으며, 기억하기만 하면 됩니다. 이 예시에서는</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;ktor_tutorial_db&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 사용합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        PostgreSQL에 대한 자세한 내용은 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                            href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.postgresql.org/docs/current/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;공식 문서&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 참조하세요.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        IntelliJ IDEA에서는 데이터베이스 도구를 사용하여 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                            href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.jetbrains.com/help/idea/postgresql.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgreSQL 데이터베이스에 연결하고 관리할 수 있습니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    데이터베이스에 다음 SQL 명령을 실행합니다. 이 명령은 데이터베이스 스키마를 생성하고 채웁니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sql&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        DROP TABLE IF EXISTS task;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        CREATE TABLE task(id SERIAL PRIMARY KEY, name VARCHAR(50), description VARCHAR(50), priority VARCHAR(50));</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        INSERT INTO task (name, description, priority) VALUES (&#39;cleaning&#39;, &#39;Clean the house&#39;, &#39;Low&#39;);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        INSERT INTO task (name, description, priority) VALUES (&#39;gardening&#39;, &#39;Mow the lawn&#39;, &#39;Medium&#39;);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        INSERT INTO task (name, description, priority) VALUES (&#39;shopping&#39;, &#39;Buy the groceries&#39;, &#39;High&#39;);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        INSERT INTO task (name, description, priority) VALUES (&#39;painting&#39;, &#39;Paint the fence&#39;, &#39;Medium&#39;);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        INSERT INTO task (name, description, priority) VALUES (&#39;exercising&#39;, &#39;Walk the dog&#39;, &#39;Medium&#39;);</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        INSERT INTO task (name, description, priority) VALUES (&#39;meditating&#39;, &#39;Contemplate the infinite&#39;, &#39;High&#39;);&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    다음 사항에 유의하십시오:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;name&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;description&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;priority&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 열을 가진 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;task&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;라는 단일 테이블을 생성합니다. 이들은 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Task&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 클래스의 속성에 매핑되어야 합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        테이블이 이미 존재하는 경우 다시 생성하므로 스크립트를 반복해서 실행할 수 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;SERIAL&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;id&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;라는 추가 열이 있습니다. 이것은 각 행에 기본 키를 부여하는 데 사용되는 정수 값입니다. 이 값은 데이터베이스에서 자동으로 할당됩니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;기존 저장소 조정&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;adapt-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;adapt-repo-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                데이터베이스에 대한 쿼리를 실행할 때 HTTP 요청을 처리하는 스레드를 차단하지 않기 위해 비동기적으로 실행하는 것이 좋습니다. Kotlin에서는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://kotlinlang.org/docs/coroutines-overview.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;코루틴 (coroutines)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;을 통해 이 작업이 가장 잘 관리됩니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example/model&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 엽니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    모든 인터페이스 메서드에 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;suspend&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 키워드를 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                    interface TaskRepository {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        suspend fun allTasks(): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        suspend fun tasksByPriority(priority: Priority): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        suspend fun taskByName(name: String): Task?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        suspend fun addTask(task: Task)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        suspend fun removeTask(name: String): Boolean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이렇게 하면 인터페이스 메서드의 구현이 다른 코루틴 디스패처 (Coroutine Dispatcher)에서 작업을 시작할 수 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이제 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;FakeTaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 메서드를 일치하도록 조정해야 하지만, 해당 구현에서는 디스패처를 전환할 필요는 없습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;FakeTaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 열고 모든 메서드에 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;suspend&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 키워드를 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                    class FakeTaskRepository : TaskRepository {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        override suspend fun allTasks(): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> = tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        override suspend fun tasksByPriority(priority: Priority) = tasks.filter {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        override suspend fun taskByName(name: String) = tasks.find {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        override suspend fun addTask(task: Task) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        override suspend fun removeTask(name: String): Boolean {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이 시점까지는 새로운 기능을 도입하지 않았습니다. 대신, 데이터베이스에 대해 비동기적으로 쿼리를 실행할 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgresTaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 생성하기 위한 기반을 마련했습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;데이터베이스 연결 구성&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config-db-connection&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config-db-connection-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#delete-function&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이 튜토리얼의 첫 번째 부분&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;에서는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Databases.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 내의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;configureDatabases()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 메서드에 있는 샘플 코드를 삭제했습니다. 이제 자신만의 구현을 추가할 준비가 되었습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Databases.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 엽니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Database.connect()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 함수를 사용하여 데이터베이스에 연결하고, 환경에 맞게 설정 값을 조정합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        fun Application.configureDatabases() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            Database.connect(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                &amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc:postgresql://localhost:5432/ktor_tutorial_db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                user = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">postgres</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                password = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">password</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            )</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;url&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;에는 다음 구성 요소가 포함되어 있습니다:&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;localhost:5432&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;는 PostgreSQL 데이터베이스가 실행 중인 호스트 및 포트입니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;ktor_tutorial_db&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;는 서비스를 실행할 때 생성된 데이터베이스의 이름입니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    자세한 내용은 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://jetbrains.github.io/Exposed/database-and-datasource.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exposed에서 데이터베이스 및 데이터 소스 작업&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;을 참조하세요.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;객체/관계형 매핑 생성&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-mapping&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-mapping-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동하여 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;db&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;라는 새 패키지를 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;db&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 패키지 안에 새로운 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;mapping.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;mapping.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 열고 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskTable&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 및 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskDAO&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입을 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;package com.example.db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import kotlinx.coroutines.Dispatchers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.dao.IntEntity</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.dao.IntEntityClass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.dao.id.EntityID</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.dao.id.IntIdTable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">object TaskTable : IntIdTable(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    val name = varchar(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, 50)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    val description = varchar(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">description</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, 50)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    val priority = varchar(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, 50)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">class TaskDAO(id: EntityID</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Int</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) : IntEntity(id) {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    companion object : IntEntityClass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TaskDAO</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(TaskTable)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    var name by TaskTable.name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    var description by TaskTable.description</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    var priority by TaskTable.priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이 타입은 Exposed 라이브러리를 사용하여 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Task&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입의 속성을 데이터베이스의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;task&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 테이블의 열에 매핑합니다. &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskTable&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입은 기본 매핑을 정의하며, &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskDAO&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입은 작업을 생성, 찾기, 업데이트 및 삭제하는 헬퍼 메서드를 추가합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    Ktor 프로젝트 제너레이터에서는 DAO 타입에 대한 지원이 추가되지 않았으므로, Gradle 빌드 파일에 관련 종속성을 추가해야 합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;gradle/libs.versions.toml&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 열고 다음 라이브러리를 지정합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                       [libraries]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       #...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                       exposed-dao = { module = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">org.jetbrains.exposed:exposed-dao</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, version.ref = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exposed-version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;build.gradle.kts&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 열고 다음 종속성을 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                        dependencies {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            implementation(libs.exposed.dao)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;IntelliJ IDEA에서 Gradle 알림 아이콘 (&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA Gradle 아이콘&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                          src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;intellij_idea_gradle_icon.svg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;26&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;)을 클릭하여 Gradle 변경 사항을 로드합니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;mapping.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일로 돌아가 다음 두 헬퍼 함수를 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;suspend fun </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">T</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> suspendTransaction(block: Transaction.() -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> T): T =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    newSuspendedTransaction(Dispatchers.IO, statement = block)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">fun daoToModel(dao: TaskDAO) = Task(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    dao.name,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    dao.description,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    Priority.valueOf(dao.priority)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;suspendTransaction()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;은 코드 블록을 받아 IO 디스패처 (IO Dispatcher)를 통해 데이터베이스 트랜잭션 내에서 실행합니다. 이는 블로킹 작업을 스레드 풀로 오프로드하도록 설계되었습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;daoToModel()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;은 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskDAO&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입의 인스턴스를 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Task&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 객체로 변환합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    다음 누락된 임포트를 추가합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;import com.example.model.Priority</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.model.Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.sql.Transaction</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.sql.transactions.experimental.newSuspendedTransaction&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;새 저장소 작성&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-new-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-new-repo-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;이제 데이터베이스별 저장소를 생성하는 데 필요한 모든 리소스가 있습니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example/model&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동하여 새로운 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgresTaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 생성합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgresTaskRepository.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 열고 다음 구현으로 새로운 타입을 생성합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;package com.example.model</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.db.TaskDAO</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.db.TaskTable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.db.daoToModel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import com.example.db.suspendTransaction</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.sql.SqlExpressionBuilder.eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import org.jetbrains.exposed.sql.deleteWhere</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">class PostgresTaskRepository : TaskRepository {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    override suspend fun allTasks(): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> = suspendTransaction {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        TaskDAO.all().map(::daoToModel)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    override suspend fun tasksByPriority(priority: Priority): List</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> = suspendTransaction {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        TaskDAO</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .find { (TaskTable.priority eq priority.toString()) }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .map(::daoToModel)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    override suspend fun taskByName(name: String): Task? = suspendTransaction {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        TaskDAO</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .find { (TaskTable.name eq name) }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .limit(1)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .map(::daoToModel)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            .firstOrNull()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    override suspend fun addTask(task: Task): Unit = suspendTransaction {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        TaskDAO.new {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            name = task.name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            description = task.description</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            priority = task.priority.toString()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    override suspend fun removeTask(name: String): Boolean = suspendTransaction {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        val rowsDeleted = TaskTable.deleteWhere {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            TaskTable.name eq name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        rowsDeleted == 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이 구현에서는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskDAO&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 및 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;TaskTable&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입의 헬퍼 메서드를 사용하여 데이터베이스와 상호 작용합니다. 이 새로운 저장소를 생성했으므로, 남은 유일한 작업은 라우트 내에서 이를 사용하도록 전환하는 것입니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;새 저장소로 전환&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;switch-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;switch-repo-procedure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;외부 데이터베이스로 전환하려면 단순히 저장소 타입을 변경하면 됩니다.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/main/kotlin/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Application.kt&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 파일을 엽니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Application.module()&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 함수에서 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;FakeTaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;를 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgresTaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 바꿉니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kotlin&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                    //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    import com.example.model.PostgresTaskRepository</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    //...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    fun Application.module() {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        val repository = PostgresTaskRepository()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        configureSerialization(repository)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        configureDatabases()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        configureRouting()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;#10;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    }&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    의존성을 인터페이스를 통해 주입하기 때문에, 구현 변경은 라우트 관리를 위한 코드에는 투명합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    IntelliJ IDEA에서 다시 실행 버튼 (&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;intellij_idea_rerun_icon.svg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                                                                       style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inline&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                                                                       alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA 다시 실행 아이콘&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;)을 클릭하여 애플리케이션을 다시 시작합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://0.0.0.0:8080/static/index.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;http://0.0.0.0:8080/static/index.html&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 이동합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                UI는 변경되지 않았지만, 이제 데이터베이스에서 데이터를 가져옵니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    이를 확인하려면, 폼을 사용하여 새 작업을 추가하고 PostgreSQL의 작업 테이블에 저장된 데이터를 쿼리합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        IntelliJ IDEA에서 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.jetbrains.com/help/idea/query-consoles.html#create_console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;쿼리 콘솔 (Query Console)&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;과 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;SELECT&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; SQL 문을 사용하여 테이블 데이터를 쿼리할 수 있습니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code-block</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SQL&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;                            SELECT * FROM task;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        쿼리된 데이터는 새 작업을 포함하여</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ui-path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Service&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ui-path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 창에 표시되어야 합니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial_server_db_integration_task_table.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA의 서비스 창에 표시된 작업 테이블&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                         width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;706&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">procedure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        이로써 애플리케이션에 데이터베이스를 성공적으로 통합했습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;FakeTaskRepository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 타입은 더 이상 프로덕션 코드에서 필요하지 않으므로,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;src/test/com/example&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;의 테스트 소스 세트로 이동할 수 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        최종 프로젝트 구조는 다음과 같을 것입니다:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial_server_db_integration_src_folder.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IntelliJ IDEA 프로젝트 뷰에 표시된 src 폴더&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         border-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;다음 단계&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;next-steps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        이제 Ktor RESTful 서비스와 통신하는 애플리케이션이 있습니다. 이 애플리케이션은 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/JetBrains/Exposed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exposed&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 작성된 저장소를 사용하여</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.postgresql.org/docs/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;PostgreSQL&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;에 액세스합니다. 또한 웹 서버나 데이터베이스 없이도 핵심 기능을 확인하는 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#add-automated-tests&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;테스트 스위트&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;도 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        이 구조는 필요한 대로 임의의 기능을 지원하도록 확장될 수 있지만, 먼저 가용성, 보안 및 확장성과 같은 비기능적 측면을 고려할 수 있습니다. &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docker-compose.topic#extract-db-settings&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;데이터베이스 설정을 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/ktor/server-configuration-file&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;구성 파일에서 다양한 서버 매개변수를 구성하는 방법을 알아보세요.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;구성 파일&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Links</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;로 추출&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;하는 것부터 시작할 수 있습니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">topic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,1)]))}const F=i(t,[["render",n]]);export{d as __pageData,F as default};
