import{_ as f,C as l,c as v,o as g,G as o,ag as c,j as e,w as r,a as n}from"./chunks/framework.Bksy39di.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/server-partial-content.md","filePath":"ktor/server-partial-content.md","lastUpdated":1755457140000}'),b={name:"ktor/server-partial-content.md"};function T(P,t,_,C,y,S){const p=l("TopicTitle"),u=l("primary-label"),d=l("Links"),m=l("tldr"),i=l("code-block"),a=l("TabItem"),s=l("Tabs"),k=l("list");return g(),v("div",null,[o(p,{labelRef:"server-plugin",title:"部分内容"}),o(u,{ref:"server-plugin"},null,512),o(m,null,{default:r(()=>[t[3]||(t[3]=e("p",null,[e("b",null,"所需依赖项"),n(": "),e("code",null,"io.ktor:ktor-server-partial-content")],-1)),t[4]||(t[4]=e("p",null,[e("b",null,"服务端示例"),n(": "),e("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/download-file"},"download-file"),n(", "),e("b",null,"客户端示例"),n(": "),e("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-download-file-range"},"client-download-file-range")],-1)),e("p",null,[e("b",null,[o(d,{href:"/ktor/server-native",summary:"Ktor 支持 Kotlin/Native，并允许您在没有额外运行时或虚拟机的情况下运行服务端。"},{default:r(()=>t[0]||(t[0]=[n("原生服务端")])),_:1}),t[1]||(t[1]=n("支持"))]),t[2]||(t[2]=n(": ✅ "))])]),_:1}),t[17]||(t[17]=c('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-partial-content/io.ktor.server.plugins.partialcontent/-partial-content.html" target="_blank" rel="noreferrer">PartialContent</a> 插件添加了对处理 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests" target="_blank" rel="noreferrer">HTTP 范围请求</a>的支持，这些请求用于仅将 HTTP 消息的一部分发送回客户端。此插件适用于流式传输内容或恢复部分下载。</p><p><code>PartialContent</code> 有以下限制：</p><ul><li>仅适用于 <code>HEAD</code> 和 <code>GET</code> 请求，如果客户端尝试将 <code>Range</code> 头部与其它方法一起使用，则返回 <code>405 Method Not Allowed</code>。</li><li>仅适用于已定义 <code>Content-Length</code> 头部响应。</li><li>在提供范围时禁用 <a href="./server-compression">Compression</a>。</li></ul><h2 id="add_dependencies" tabindex="-1">添加依赖项 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;添加依赖项 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p> 要使用 <code>PartialContent</code>，您需要在构建脚本中包含 <code>ktor-server-partial-content</code> artifact： </p>',5)),o(s,{group:"languages"},{default:r(()=>[o(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:r(()=>[o(i,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-partial-content:$ktor_version")'})]),_:1}),o(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:r(()=>[o(i,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-partial-content:$ktor_version"'})]),_:1}),o(a,{title:"Maven","group-key":"maven"},{default:r(()=>[o(i,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-partial-content-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),t[18]||(t[18]=e("h2",{id:"install_plugin",tabindex:"-1"},[n("安装 PartialContent "),e("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安装 PartialContent {id="install_plugin"}"'},"​")],-1)),e("p",null,[t[6]||(t[6]=n(" 要将 ")),t[7]||(t[7]=e("code",null,"PartialContent",-1)),t[8]||(t[8]=n(" 插件")),t[9]||(t[9]=e("a",{href:"#install"},"安装",-1)),t[10]||(t[10]=n("到应用程序，请将其传递给指定")),o(d,{href:"/ktor/server-modules",summary:"模块允许您通过分组路由来构建应用程序。"},{default:r(()=>t[5]||(t[5]=[n("模块")])),_:1}),t[11]||(t[11]=n("中的 ")),t[12]||(t[12]=e("code",null,"install",-1)),t[13]||(t[13]=n(" 函数。 以下代码片段展示了如何安装 ")),t[14]||(t[14]=e("code",null,"PartialContent",-1)),t[15]||(t[15]=n(" ... "))]),o(k,null,{default:r(()=>t[16]||(t[16]=[e("li",null,[n(" ... 在 "),e("code",null,"embeddedServer"),n(" 函数调用内部。 ")],-1),e("li",null,[n(" ... 在显式定义的 "),e("code",null,"module"),n(" 内部，它是一个 "),e("code",null,"Application"),n(" 类的扩展函数。 ")],-1)])),_:1}),o(s,null,{default:r(()=>[o(a,{title:"embeddedServer"},{default:r(()=>[o(i,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.partialcontent.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(PartialContent)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),o(a,{title:"module"},{default:r(()=>[o(i,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.partialcontent.*
            // ...
            fun Application.module() {
                install(PartialContent)
                // ...
            }`})]),_:1})]),_:1}),t[19]||(t[19]=e("p",null,[e("code",null,"PartialContent"),n(" 插件也可以"),e("a",{href:"#install-route"},"安装到特定路由"),n("。如果您需要针对不同的应用程序资源使用不同的 "),e("code",null,"PartialContent"),n(" 配置，这可能会很有用。 ")],-1)),t[20]||(t[20]=e("p",null,[n("要了解如何使用 "),e("code",null,"PartialContent"),n(" 通过 HTTP 范围请求来提供文件，请参见 "),e("a",{href:"./server-responses#file"},"File"),n(" 节。")],-1))])}const I=f(b,[["render",T]]);export{w as __pageData,I as default};
