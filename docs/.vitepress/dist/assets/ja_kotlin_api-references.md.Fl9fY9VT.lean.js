import{_ as i}from"./chunks/github.BrA_NiFJ.js";import{_ as p,C as n,c as u,o as h,G as e,w as r,j as t,a as l}from"./chunks/framework.Bksy39di.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/api-references.md","filePath":"ja/kotlin/api-references.md","lastUpdated":1754307826000}'),c={name:"ja/kotlin/api-references.md"};function m(b,o,k,d,g,f){const a=n("list"),s=n("topic");return h(),u("div",null,[e(s,{"xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance","xsi:noNamespaceSchemaLocation":"https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd",id:"api-references",title:"APIリファレンス"},{default:r(()=>[o[1]||(o[1]=t("p",null,"Kotlin APIリファレンスへようこそ。ここでは、公式KotlinライブラリおよびツールのAPIドキュメントへのリンクをご覧いただけます。",-1)),e(a,{columns:"2"},{default:r(()=>o[0]||(o[0]=[t("li",null,[t("a",{href:"https://kotlinlang.org/api/core/kotlin-stdlib/"},[t("b",null,"標準ライブラリ (stdlib)")]),t("br"),t("p",null,"Kotlin標準ライブラリは、Kotlinプログラミングのためのコア機能を提供します。これには、コレクション、テキストおよび文字列処理、範囲、シーケンスなどの必須APIが含まれます。プラットフォーム固有のAPIを拡張し、それらを扱うためのKotlinファーストなAPIを提供します。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/JetBrains/kotlin"},"kotlin"),t("br")],-1),t("li",null,[t("a",{href:"https://kotlinlang.org/api/core/kotlin-test/"},[t("b",null,"テストライブラリ (kotlin.test)")]),t("br"),t("p",null,"共通のテストアノテーションとユーティリティ関数を提供するマルチプラットフォームテストライブラリです。各プラットフォームの一般的なテストフレームワークとの統合をサポートし、Kotlinエコシステム全体で統一されたテストエクスペリエンスを提供します。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/JetBrains/kotlin"},"kotlin"),t("br")],-1),t("li",null,[t("a",{href:"https://kotlinlang.org/api/kotlinx.coroutines/"},[t("b",null,"コルーチン (kotlinx.coroutines)")]),t("br"),t("p",null,"Kotlinコルーチンを使用した非同期プログラミングのための強力なライブラリです。構造化された並行処理、非同期ストリーム、ミューテックスやセマフォなどの同期プリミティブ、テストなどをサポートするツールを提供します。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/Kotlin/kotlinx.coroutines"},"kotlinx.coroutines"),t("br")],-1),t("li",null,[t("a",{href:"https://kotlinlang.org/api/kotlinx.serialization/"},[t("b",null,"シリアライゼーション (kotlinx.serialization)")]),t("br"),t("p",null,"マルチプラットフォーム対応のシリアライゼーションライブラリです。KotlinオブジェクトをJSON、CBOR、Protocol Buffersなど様々な形式に変換するための、型安全でコンパイル時実行可能なメカニズムを提供します。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/Kotlin/kotlinx.serialization"},"kotlinx.serialization"),t("br")],-1),t("li",null,[t("a",{href:"https://kotlinlang.org/api/kotlinx-io/"},[t("b",null,"Kotlin I/Oライブラリ (kotlinx-io)")]),t("br"),t("p",null,"低レベルI/O操作のためのマルチプラットフォームライブラリです。バイナリストリームやバッファからの読み書きのための抽象化を定義しており、すべてのKotlinプラットフォームで効率的かつポータブルに設計されています。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/Kotlin/kotlinx-io"},"kotlinx-io"),t("br")],-1),t("li",null,[t("a",{href:"https://kotlinlang.org/api/kotlinx-datetime/"},[t("b",null,"日付と時刻 (kotlinx-datetime)")]),t("br"),t("p",null,"カレンダーベースの計算のためのマルチプラットフォームライブラリです。日付値の表現を提供し、タイムゾーン固有の操作をサポートします。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/Kotlin/kotlinx-datetime"},"kotlinx-datetime"),t("br")],-1),t("li",null,[t("a",{href:"https://kotlinlang.org/api/kotlinx-metadata-jvm/"},[t("b",null,"JVMメタデータ (kotlin-metadata-jvm)")]),t("br"),t("p",null,"JVMクラスファイルに保存されているKotlinメタデータを読み書きするためのライブラリです。主にアノテーションプロセッサ、静的アナライザ、コンパイラプラグインなどのツールで使用されます。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/JetBrains/kotlin/tree/master/libraries/kotlinx-metadata"},"kotlinx-metadata"),t("br")],-1),t("li",null,[t("a",{href:"https://kotlinlang.org/api/kotlin-gradle-plugin/"},[t("b",null,"Kotlin Gradleプラグイン (kotlin-gradle-plugin)")]),t("br"),t("p",null,"Kotlinコードのコンパイル、テスト、パッケージングを行うためのKotlin Gradleプラグインです。これらのプラグインは、JVMおよびマルチプラットフォームビルドを簡素化し、依存関係を管理し、IDEやCIシステムと統合します。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/JetBrains/kotlin/tree/master/libraries/tools/kotlin-gradle-plugin"},"kotlin-gradle-plugin"),t("br")],-1),t("li",null,[t("a",{href:"https://api.ktor.io/"},[t("b",null,"Ktor")]),t("br"),t("p",null,"Kotlinを使用して接続システムで非同期クライアントとサーバーを構築するためのフレームワークです。Ktorはスケーラビリティと柔軟性のために設計されており、非ブロッキングI/Oと構造化された並行処理のためにコルーチンと深く統合されています。"),t("img",{src:i,width:"18",alt:"GitHub"}),l(),t("a",{href:"https://github.com/ktorio/ktor"},"ktor"),t("br")],-1)])),_:1})]),_:1})])}const _=p(c,[["render",m]]);export{w as __pageData,_ as default};
