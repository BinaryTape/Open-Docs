import{_ as u,a as d,b as m,c as h,d as g,e as c,f,g as k,h as b,i as _,j as E,k as I,l as D}from"./chunks/run-wasm-app.BQkB6EyS.js";import{_ as A,C as n,c as w,o as S,j as l,G as e,ag as s,a as t,w as a}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"Kotlin Multiplatform クイックスタート","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/quickstart.md","filePath":"ja/kmp/quickstart.md","lastUpdated":1755516278000}'),K={name:"ja/kmp/quickstart.md"};function M(C,i,v,J,x,O){const p=n("web-summary"),o=n("TabItem"),r=n("Tabs");return S(),w("div",null,[i[12]||(i[12]=l("h1",{id:"kotlin-multiplatform-クイックスタート",tabindex:"-1"},[t("Kotlin Multiplatform クイックスタート "),l("a",{class:"header-anchor",href:"#kotlin-multiplatform-クイックスタート","aria-label":'Permalink to "Kotlin Multiplatform クイックスタート"'},"​")],-1)),e(p,null,{default:a(()=>i[0]||(i[0]=[t("JetBrains は IntelliJ IDEA および Android Studio の公式 Kotlin IDE サポートを提供しています。")])),_:1}),i[13]||(i[13]=l("p",null,"このチュートリアルでは、シンプルな Kotlin Multiplatform アプリケーションをすばやく起動して実行できます。",-1)),i[14]||(i[14]=l("h2",{id:"環境設定",tabindex:"-1"},[t("環境設定 "),l("a",{class:"header-anchor",href:"#環境設定","aria-label":'Permalink to "環境設定"'},"​")],-1)),i[15]||(i[15]=l("p",null,"Kotlin Multiplatform (KMP) プロジェクトには特定の環境が必要ですが、 ほとんどの要件は IDE のプリフライトチェックによって明確にされます。",-1)),i[16]||(i[16]=l("p",null,"IDE と必要なプラグインから始めます。",-1)),l("ol",null,[i[4]||(i[4]=s('<li><p>IDE を選択してインストールします。 Kotlin Multiplatform は IntelliJ IDEA および Android Studio でサポートされているため、お好みの IDE を使用できます。</p><p><a href="https://www.jetbrains.com/toolbox/app/" target="_blank" rel="noreferrer">JetBrains Toolbox App</a> は、IDE をインストールするための推奨ツールです。 これにより、複数の製品やバージョン（<a href="https://www.jetbrains.com/resources/eap/" target="_blank" rel="noreferrer">早期アクセスプログラム</a> (EAP) や Nightly リリースを含む）を管理できます。</p><p>スタンドアロンインストールの場合、<a href="https://www.jetbrains.com/idea/download/" target="_blank" rel="noreferrer">IntelliJ IDEA</a> または <a href="https://developer.android.com/studio" target="_blank" rel="noreferrer">Android Studio</a> のインストーラーをダウンロードしてください。</p><p>Kotlin Multiplatform に必要なプラグインは、<strong>IntelliJ IDEA 2025.1.1.1</strong> または <strong>Android Studio Narwhal 2025.1.1</strong> を必要とします。</p></li><li><p><a href="https://plugins.jetbrains.com/plugin/14936-kotlin-multiplatform" target="_blank" rel="noreferrer">Kotlin Multiplatform IDE プラグイン</a>をインストールします (Kotlin Multiplatform Gradle プラグインと混同しないように)。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin Multiplatform プラグインは、Windows または Linux の IDE ではまだ利用できません。 しかし、これらのプラットフォームで厳密に必要というわけでもありません。 KMP プロジェクトを生成して実行するためのチュートリアルは引き続き実行できます。</p></div></li><li><p>IntelliJ IDEA 用の Kotlin Multiplatform IDE プラグインをインストールすると、まだ持っていない場合は必要なすべての依存関係もインストールされます (Android Studio には必要なすべてのプラグインがバンドルされています)。</p><p>Windows または Linux 用の IntelliJ IDEA を使用している場合は、必要なすべてのプラグインを手動でインストールしていることを確認してください。</p><ul><li><a href="https://plugins.jetbrains.com/plugin/22989-android" target="_blank" rel="noreferrer">Android</a></li><li><a href="https://plugins.jetbrains.com/plugin/22990-android-design-tools" target="_blank" rel="noreferrer">Android Design Tools</a></li><li><a href="https://plugins.jetbrains.com/plugin/18409-jetpack-compose" target="_blank" rel="noreferrer">Jetpack Compose</a></li><li><a href="https://plugins.jetbrains.com/plugin/12775-native-debugging-support" target="_blank" rel="noreferrer">Native Debugging Support</a></li><li><a href="https://plugins.jetbrains.com/plugin/16541-compose-multiplatform-for-desktop-ide-support" target="_blank" rel="noreferrer">Compose Multiplatform for Desktop IDE Support</a> (Kotlin Multiplatform プラグインがない場合にのみ必要です)。</li></ul></li>',3)),l("li",null,[i[3]||(i[3]=l("p",null,[l("code",null,"ANDROID_HOME"),t(" 環境変数が設定されていない場合は、システムがそれを認識するように設定します。")],-1)),e(r,null,{default:a(()=>[e(o,{title:"Bash または Zsh"},{default:a(()=>i[1]||(i[1]=[l("p",null,[t("以下のコマンドを "),l("code",null,".profile"),t(" または "),l("code",null,".zprofile"),t(" に追加します。")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ANDROID_HOME"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=~"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"/Library/Android/sdk")])])])],-1)])),_:1}),e(o,{title:"Windows PowerShell または CMD"},{default:a(()=>i[2]||(i[2]=[l("p",null,[t("PowerShell の場合、以下のコマンドで永続的な環境変数を追加できます (詳細は "),l("a",{href:"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables",target:"_blank",rel:"noreferrer"},"PowerShell ドキュメント"),t(" を参照してください)。")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[Environment]::SetEnvironmentVariable("),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"'ANDROID_HOME'"),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},","),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '<path to the SDK>',"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'Machine'"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")])])])],-1),l("p",null,[t("CMD の場合、"),l("a",{href:"https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/setx",target:"_blank",rel:"noreferrer"},[l("code",null,"setx")]),t(" コマンドを使用します。")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"setx"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ANDROID_HOME"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "<path to the SDK>"')])])])],-1)])),_:1})]),_:1})]),i[5]||(i[5]=l("li",null,[l("p",null,[t("iOS アプリケーションを作成するには、"),l("a",{href:"https://apps.apple.com/us/app/xcode/id497799835",target:"_blank",rel:"noreferrer"},"Xcode"),t(" がインストールされた macOS ホストが必要です。 IDE は内部で Xcode を実行し、iOS フレームワークをビルドします。")]),l("p",null,"KMP プロジェクトの作業を開始する前に、少なくとも一度は Xcode を起動し、初期設定を完了させてください。"),l("div",{class:"note custom-block"},[l("p",{class:"custom-block-title"},"NOTE"),l("p",null,"Xcode が更新されるたびに手動で起動し、更新されたツールをダウンロードする必要があります。 Kotlin Multiplatform IDE プラグインは、Xcode が作業に適した状態でない場合に警告を発するプリフライトチェックを行います。")])],-1))]),i[17]||(i[17]=l("h2",{id:"プロジェクトを作成",tabindex:"-1"},[t("プロジェクトを作成 "),l("a",{class:"header-anchor",href:"#プロジェクトを作成","aria-label":'Permalink to "プロジェクトを作成"'},"​")],-1)),i[18]||(i[18]=l("h3",{id:"macos-の場合",tabindex:"-1"},[t("macOS の場合 "),l("a",{class:"header-anchor",href:"#macos-の場合","aria-label":'Permalink to "macOS の場合"'},"​")],-1)),i[19]||(i[19]=l("p",null,"macOS では、Kotlin Multiplatform プラグインが IDE 内でプロジェクト生成ウィザードを提供します。",-1)),e(r,null,{default:a(()=>[e(o,{title:"IntelliJ IDEA"},{default:a(()=>i[6]||(i[6]=[l("p",null,"IDE ウィザードを使用して新しい KMP プロジェクトを作成します。",-1),l("ol",null,[l("li",null,[t("メインメニューで "),l("strong",null,"File"),t(" | "),l("strong",null,"New"),t(" | "),l("strong",null,"Project"),t(" を選択します。")]),l("li",null,[t("左側のリストから "),l("strong",null,"Kotlin Multiplatform"),t(" を選択します。")]),l("li",null,"必要に応じて、プロジェクトの名前、場所、その他の基本属性を設定します。"),l("li",null,[t("プロジェクトの JDK として "),l("a",{href:"https://github.com/JetBrains/JetBrainsRuntime",target:"_blank",rel:"noreferrer"},"JetBrains Runtime"),t(" (JBR) のバージョンを選択することを推奨します。これは、特にデスクトップ KMP アプリの互換性を向上させる上で重要な修正を提供するためです。 関連するバージョンの JBR はすべての IntelliJ IDEA ディストリビューションに含まれているため、追加の設定は必要ありません。")]),l("li",null,[t("プロジェクトの一部として含めたいプラットフォームを選択します。 "),l("ul",null,[l("li",null,"すべてのターゲットプラットフォームは、最初から Compose Multiplatform を使用して UI コードを共有するように設定できます (UI コードを持たないサーバーモジュールを除く)。"),l("li",null,[t("iOS の場合、2つの実装のいずれかを選択できます。 "),l("ul",null,[l("li",null,"Compose Multiplatform を使用した共有 UI コード"),l("li",null,"SwiftUI で作成され、共有ロジックを持つ Kotlin モジュールに接続された完全なネイティブ UI")])]),l("li",null,"デスクトップターゲットには、Compose Hot Reload 機能のアルファ版が含まれており、対応するコードを変更するとすぐに UI の変更を確認できます。 デスクトップアプリを作成する予定がない場合でも、UI コードの作成を高速化するためにデスクトップバージョンを使用することをお勧めします。")])])],-1),l("p",null,[t("プラットフォームの選択が完了したら、"),l("strong",null,"Create"),t(" ボタンをクリックし、IDE がプロジェクトを生成してインポートするのを待ちます。")],-1),l("p",null,[l("img",{src:u,alt:"IntelliJ IDEA ウィザードのデフォルト設定で Android、iOS、デスクトップ、および Web プラットフォームが選択されている",width:"800"})],-1)])),_:1}),e(o,{title:"Android Studio"},{default:a(()=>i[7]||(i[7]=[l("p",null,[t("Kotlin Multiplatform IDE プラグインは K2 機能に大きく依存しており、それがなければ記載どおりに動作しません。 したがって、開始する前に K2 モードが有効になっていることを確認してください。 "),l("strong",null,"Settings"),t(" | "),l("strong",null,"Languages & Frameworks"),t(" | "),l("strong",null,"Kotlin"),t(" | "),l("strong",null,"Enable K2 mode"),t("。")],-1),l("p",null,"IDE ウィザードを使用して新しい KMP プロジェクトを作成します。",-1),l("ol",null,[l("li",null,[l("p",null,[t("メインメニューで "),l("strong",null,"File"),t(" | "),l("strong",null,"New"),t(" | "),l("strong",null,"New project"),t(" を選択します。")])]),l("li",null,[l("p",null,[t("デフォルトの "),l("strong",null,"Phone and Tablet"),t(" テンプレートカテゴリから "),l("strong",null,"Kotlin Multiplatform"),t(" を選択します。")]),l("p",null,[l("img",{src:d,alt:"Android Studio の新規プロジェクト作成の最初のステップ",width:"400"})])]),l("li",null,[l("p",null,[t("必要に応じて、プロジェクトの名前、場所、その他の基本属性を設定し、"),l("strong",null,"Next"),t(" をクリックします。")])]),l("li",null,[l("p",null,"プロジェクトの一部として含めたいプラットフォームを選択します。"),l("ul",null,[l("li",null,"すべてのターゲットプラットフォームは、最初から Compose Multiplatform を使用して UI コードを共有するように設定できます (UI コードを持たないサーバーモジュールを除く)。"),l("li",null,[t("iOS の場合、2つの実装のいずれかを選択できます。 "),l("ul",null,[l("li",null,"Compose Multiplatform を使用した共有 UI コード"),l("li",null,"SwiftUI で作成され、共有ロジックを持つ Kotlin モジュールに接続された完全なネイティブ UI")])]),l("li",null,"デスクトップターゲットには、ホットリロード機能のアルファ版が含まれており、対応するコードを変更するとすぐに UI の変更を確認できます。 デスクトップアプリを作成する予定がない場合でも、UI コードの作成を高速化するためにデスクトップバージョンを使用することをお勧めします。")])]),l("li",null,[l("p",null,[t("プロジェクトが生成されたら、プロジェクトの JDK として "),l("a",{href:"https://github.com/JetBrains/JetBrainsRuntime",target:"_blank",rel:"noreferrer"},"JetBrains Runtime"),t(" (JBR) のバージョンを選択することを推奨します。これは、特にデスクトップ KMP アプリの互換性を向上させる上で重要な修正を提供するためです。 関連するバージョンの JBR はすべての IntelliJ IDEA ディストリビューションに含まれているため、追加の設定は必要ありません。")])])],-1),l("p",null,[t("プラットフォームの選択が完了したら、"),l("strong",null,"Finish"),t(" ボタンをクリックし、IDE がプロジェクトを生成してインポートするのを待ちます。")],-1),l("p",null,[l("img",{src:m,alt:"Android、iOS、デスクトップ、および Web プラットフォームが選択された Android Studio ウィザードの最後のステップ",width:"800"})],-1)])),_:1})]),_:1}),i[20]||(i[20]=s('<h3 id="windows-または-linux-の場合" tabindex="-1">Windows または Linux の場合 <a class="header-anchor" href="#windows-または-linux-の場合" aria-label="Permalink to &quot;Windows または Linux の場合&quot;">​</a></h3><p>Windows または Linux を使用している場合:</p><ol><li><a href="https://kmp.jetbrains.com/" target="_blank" rel="noreferrer">Web KMP ウィザード</a> を使用してプロジェクトを生成します。</li><li>アーカイブを解凍し、生成されたフォルダを IDE で開きます。</li><li>インポートが完了するのを待ってから、<a href="#run-the-sample-apps">undefined</a> セクションに進み、アプリのビルドと実行方法について学習します。</li></ol><h2 id="プリフライトチェックを確認する" tabindex="-1">プリフライトチェックを確認する <a class="header-anchor" href="#プリフライトチェックを確認する" aria-label="Permalink to &quot;プリフライトチェックを確認する&quot;">​</a></h2><p><strong>Project Environment Preflight Checks</strong> ツールウィンドウを開いて、プロジェクト設定に環境の問題がないことを確認できます。 右サイドバーまたは下部バーにあるプリフライトチェックアイコンをクリックします <img src="'+I+'" alt="飛行機のプリフライトチェックアイコン" width="20"></p><p>このツールウィンドウでは、これらのチェックに関連するメッセージを確認したり、再実行したり、設定を変更したりできます。</p><p>プリフライトチェックコマンドは、<strong>Search Everywhere</strong> ダイアログでも利用できます。 <code>Shift</code> を2回押して、「preflight」という単語を含むコマンドを検索します。</p><p><img src="'+D+'" alt="「preflight」という単語が入力された Search Everywhere メニュー"></p><h2 id="サンプルアプリを実行する" tabindex="-1">サンプルアプリを実行する <a class="header-anchor" href="#サンプルアプリを実行する" aria-label="Permalink to &quot;サンプルアプリを実行する&quot;">​</a></h2><p>IDE ウィザードによって作成されたプロジェクトには、iOS、Android、デスクトップ、Web アプリケーション用の生成された実行設定、およびサーバーアプリを実行するための Gradle タスクが含まれています。 Windows および Linux の場合、各プラットフォームの Gradle コマンドについては以下を参照してください。</p>',10)),e(r,null,{default:a(()=>[e(o,{title:"Android"},{default:a(()=>i[8]||(i[8]=[l("p",null,[t("Android アプリを実行するには、"),l("strong",null,"composeApp"),t(" 実行設定を開始します。")],-1),l("p",null,[l("img",{src:h,alt:"Android 実行設定がハイライトされたドロップダウン",width:"250"})],-1),l("p",null,[t("Windows または Linux で Android アプリを実行するには、"),l("strong",null,"Android App"),t(" 実行設定を作成し、モジュールを "),l("strong",null,"[プロジェクト名].composeApp"),t(" に選択します。")],-1),l("p",null,"デフォルトでは、利用可能な最初の仮想デバイスで実行されます。",-1),l("p",null,[l("img",{src:g,alt:"仮想デバイスで実行された Android アプリ",width:"350"})],-1)])),_:1}),e(o,{title:"iOS"},{default:a(()=>i[9]||(i[9]=[l("div",{class:"note custom-block"},[l("p",{class:"custom-block-title"},"NOTE"),l("p",null,"iOS アプリをビルドするには macOS ホストが必要です。")],-1),l("p",null,[t("プロジェクトの iOS ターゲットを選択し、Xcode がインストールされた macOS マシンを設定した場合、 "),l("strong",null,"iosApp"),t(" 実行設定を選択し、シミュレートされたデバイスを選択できます。")],-1),l("p",null,[l("img",{src:c,alt:"iOS 実行設定がハイライトされたドロップダウン",width:"250"})],-1),l("p",null,"iOS アプリを実行すると、内部で Xcode を使用してビルドされ、iOS シミュレーターで起動されます。 最初のビルドでは、コンパイルのためにネイティブ依存関係を収集し、その後の実行のためにビルドをウォームアップします。",-1),l("p",null,[l("img",{src:f,alt:"仮想デバイスで実行された iOS アプリ",width:"350"})],-1)])),_:1}),e(o,{title:"デスクトップ"},{default:a(()=>i[10]||(i[10]=[l("p",null,[t("デスクトップアプリのデフォルトの実行設定は、"),l("strong",null,"composeApp [desktop]"),t(" として作成されます。")],-1),l("p",null,[l("img",{src:k,alt:"デフォルトのデスクトップ実行設定がハイライトされたドロップダウン",width:"250"})],-1),l("p",null,[t("Windows または Linux でデスクトップアプリを実行するには、以下のコマンドで "),l("strong",null,"[アプリ名]:composeApp"),t(" Gradle プロジェクトを指す "),l("strong",null,"Gradle"),t(" 実行設定を作成します。")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"desktopRun"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -DmainClass=com.example.myapplication.MainKt"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --quiet")])])])],-1),l("p",null,"この設定により、JVM デスクトップアプリを実行できます。",-1),l("p",null,[l("img",{src:b,alt:"仮想デバイスで実行された JVM アプリ",width:"600"})],-1)])),_:1}),e(o,{title:"Web"},{default:a(()=>i[11]||(i[11]=[l("p",null,[t("Web アプリのデフォルトの実行設定は、"),l("strong",null,"composeApp [wasmJs]"),t(" として作成されます。")],-1),l("p",null,[l("img",{src:_,alt:"デフォルトの Wasm 実行設定がハイライトされたドロップダウン",width:"250"})],-1),l("p",null,[t("Windows または Linux で Web アプリを実行するには、以下のコマンドで "),l("strong",null,"[アプリ名]:composeApp"),t(" Gradle プロジェクトを指す "),l("strong",null,"Gradle"),t(" 実行設定を作成します。")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"wasmJsBrowserDevelopmentRun")])])])],-1),l("p",null,"この設定を実行すると、IDE は Kotlin/Wasm アプリをビルドし、デフォルトのブラウザで開きます。",-1),l("p",null,[l("img",{src:E,alt:"仮想デバイスで実行された Web アプリ",width:"600"})],-1)])),_:1})]),_:1}),i[21]||(i[21]=s('<h2 id="トラブルシューティング" tabindex="-1">トラブルシューティング <a class="header-anchor" href="#トラブルシューティング" aria-label="Permalink to &quot;トラブルシューティング&quot;">​</a></h2><h3 id="java-および-jdk" tabindex="-1">Java および JDK <a class="header-anchor" href="#java-および-jdk" aria-label="Permalink to &quot;Java および JDK&quot;">​</a></h3><p>Java に関する一般的な問題:</p><ul><li>一部のツールが Java バージョンを見つけられなかったり、間違ったバージョンを使用したりする場合があります。 これを解決するには: <ul><li><p><code>JAVA_HOME</code> 環境変数を適切な JDK がインストールされているディレクトリに設定します。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>クラス再定義をサポートする OpenJDK フォークである <a href="https://github.com/JetBrains/JetBrainsRuntime" target="_blank" rel="noreferrer">JetBrains Runtime</a> の使用をお勧めします。</p></div></li><li><p><code>JAVA_HOME</code> 内の <code>bin</code> フォルダへのパスを <code>PATH</code> 変数に追加し、JDK に含まれるツールがターミナルで利用可能になるようにします。</p></li></ul></li><li>Android Studio での Gradle JDK に関する問題に遭遇した場合は、正しく設定されていることを確認してください。 <strong>Settings</strong> | <strong>Build, Execution, Deployment</strong> | <strong>Build Tools</strong> | <strong>Gradle</strong> を選択します。</li></ul><h3 id="android-ツール" tabindex="-1">Android ツール <a class="header-anchor" href="#android-ツール" aria-label="Permalink to &quot;Android ツール&quot;">​</a></h3><p>JDK と同様に、<code>adb</code> などの Android ツールを起動する際に問題がある場合は、<code>ANDROID_HOME/tools</code>、<code>ANDROID_HOME/tools/bin</code>、および <code>ANDROID_HOME/platform-tools</code> へのパスが <code>PATH</code> 環境変数に追加されていることを確認してください。</p><h3 id="xcode" tabindex="-1">Xcode <a class="header-anchor" href="#xcode" aria-label="Permalink to &quot;Xcode&quot;">​</a></h3><p>iOS 実行設定が実行する仮想デバイスがないと報告する場合は、Xcode を起動し、iOS シミュレーターのアップデートがないか確認してください。</p><h3 id="ヘルプ" tabindex="-1">ヘルプ <a class="header-anchor" href="#ヘルプ" aria-label="Permalink to &quot;ヘルプ&quot;">​</a></h3><ul><li><strong>Kotlin Slack</strong>。 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">招待</a> を取得し、<code>#multiplatform</code> チャンネルに参加してください。</li><li><strong>Kotlin Multiplatform Tooling イシュートラッカー</strong>。 <a href="https://youtrack.jetbrains.com/newIssue?project=KMT" target="_blank" rel="noreferrer">新しい問題を報告</a> してください。</li></ul><h2 id="次にすること" tabindex="-1">次にすること <a class="header-anchor" href="#次にすること" aria-label="Permalink to &quot;次にすること&quot;">​</a></h2><p>KMP プロジェクトの構造と共有コードの作成について詳しく学習します。</p><ul><li>共有 UI コードの使用に関するチュートリアルのシリーズ: <a href="./compose-multiplatform-create-first-app">Compose Multiplatform アプリを作成する</a></li><li>ネイティブ UI と共有コードの使用に関するチュートリアルのシリーズ: <a href="./multiplatform-create-first-app">Kotlin Multiplatform アプリを作成する</a></li><li>Kotlin Multiplatform ドキュメントを詳しく確認します。 <ul><li><a href="./multiplatform-project-configuration">プロジェクト設定</a></li><li><a href="https://kotlinlang.org/docs/multiplatform-add-dependencies.html" target="_blank" rel="noreferrer">マルチプラットフォーム依存関係の使用</a></li></ul></li><li>Compose Multiplatform UI フレームワーク、その基本、およびプラットフォーム固有の機能について学習します。 <a href="./compose-multiplatform-and-jetpack-compose">Compose Multiplatform と Jetpack Compose</a>。</li></ul><p>KMP 向けにすでに書かれたコードを見つける。</p><ul><li>公式 JetBrains サンプルと、KMP の機能を示す厳選されたプロジェクトリストを含む <a href="./multiplatform-samples">サンプル</a> ページ。</li><li>GitHub トピック: <ul><li><a href="https://github.com/topics/kotlin-multiplatform" target="_blank" rel="noreferrer">kotlin-multiplatform</a>、Kotlin Multiplatform で実装されたプロジェクト。</li><li><a href="https://github.com/topics/kotlin-multiplatform-sample" target="_blank" rel="noreferrer">kotlin-multiplatform-sample</a>、 KMP で書かれたサンプルプロジェクトのリスト。</li></ul></li><li><a href="https://klibs.io" target="_blank" rel="noreferrer">klibs.io</a> – KMP ライブラリの検索プラットフォーム。これまでに OkHttp、Ktor、Coil、Koin、SQLDelight など、2000以上のライブラリがインデックス化されています。</li></ul>',15))])}const B=A(K,[["render",M]]);export{T as __pageData,B as default};
