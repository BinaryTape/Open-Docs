import{_ as k,C as n,c as g,o as c,j as a,G as s,ag as l,a as i,w as t}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"実行","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-run.md","filePath":"ja/ktor/server-run.md","lastUpdated":1755457140000}'),u={name:"ja/ktor/server-run.md"};function E(m,e,v,y,f,b){const h=n("show-structure"),p=n("link-summary"),r=n("TabItem"),o=n("code-block"),d=n("Tabs");return c(),g("div",null,[e[7]||(e[7]=a("h1",{id:"実行",tabindex:"-1"},[i("実行 "),a("a",{class:"header-anchor",href:"#実行","aria-label":'Permalink to "実行"'},"​")],-1)),s(h,{for:"chapter",depth:"2"}),s(p,null,{default:t(()=>e[0]||(e[0]=[i(" サーバーKtorアプリケーションの実行方法について学びます。 ")])),_:1}),e[8]||(e[8]=l('<p>Ktorサーバーアプリケーションを実行する際には、以下の点に注意してください。</p><ul><li><a href="./server-create-and-configure">サーバーを作成する</a>方法によって、<a href="#package">パッケージ化されたKtorアプリケーション</a>を実行する際にコマンドライン引数を渡してサーバーパラメーターを上書きできるかどうかが変わります。</li><li>Gradle/Mavenのビルドスクリプトでは、<a href="./server-create-and-configure#engine-main">EngineMain</a>を使用してサーバーを起動する際にメインクラス名を指定する必要があります。</li><li><a href="./server-war">サーブレットコンテナ</a>内でアプリケーションを実行するには、特定のサーブレット設定が必要です。</li></ul><p>このトピックでは、これらの設定の詳細を確認し、IntelliJ IDEAおよびパッケージ化されたアプリケーションとしてKtorアプリケーションを実行する方法を説明します。</p><h2 id="specifics" tabindex="-1">設定の詳細 <a class="header-anchor" href="#specifics" aria-label="Permalink to &quot;設定の詳細 {id=&quot;specifics&quot;}&quot;">​</a></h2><h3 id="code-vs-config" tabindex="-1">設定: コード vs 設定ファイル <a class="header-anchor" href="#code-vs-config" aria-label="Permalink to &quot;設定: コード vs 設定ファイル {id=&quot;code-vs-config&quot;}&quot;">​</a></h3><p>Ktorアプリケーションの実行は、<a href="./server-create-and-configure">サーバーを作成した</a>方法 (<code>embeddedServer</code> または <code>EngineMain</code>) によって異なります。</p><ul><li><code>embeddedServer</code> の場合、サーバーパラメーター (ホストアドレスやポートなど) はコードで設定されるため、アプリケーションの実行時にこれらのパラメーターを変更することはできません。</li><li><code>EngineMain</code> の場合、Ktorは <code>HOCON</code> または <code>YAML</code> 形式を使用する外部ファイルから設定をロードします。このアプローチを使用すると、コマンドラインから<a href="#package">パッケージ化されたアプリケーション</a>を実行し、対応する<a href="./server-configuration-file#command-line">コマンドライン引数</a>を渡すことで、必要なサーバーパラメーターを上書きできます。</li></ul><h3 id="gradle-maven" tabindex="-1">EngineMainの起動: GradleとMavenの特記事項 <a class="header-anchor" href="#gradle-maven" aria-label="Permalink to &quot;EngineMainの起動: GradleとMavenの特記事項 {id=&quot;gradle-maven&quot;}&quot;">​</a></h3><p><code>EngineMain</code> を使用してサーバーを作成する場合、目的の<a href="./server-engines">エンジン</a>でサーバーを起動するための <code>main</code> 関数を指定する必要があります。 以下の<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/engine-main" target="_blank" rel="noreferrer">例</a>は、Nettyエンジンでサーバーを実行するために使用される <code>main</code> 関数を示しています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> io.ktor.server.netty.EngineMain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args)</span></span></code></pre></div><p>Gradle/Mavenを使用して、<code>main</code> 関数内でエンジンを設定せずにKtorサーバーを実行するには、次のようにビルドスクリプトでメインクラス名を指定する必要があります。</p>',11)),s(r,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:t(()=>e[1]||(e[1]=[a("div",{class:"language-kotlin vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"kotlin"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[a("code",null,[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"application"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    mainClass."),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"io.ktor.server.netty.EngineMain"'),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),s(r,{title:"Gradle (Groovy)","group-key":"groovy"},{default:t(()=>e[2]||(e[2]=[a("div",{class:"language-groovy vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"groovy"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[a("code",null,[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"mainClassName "),a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "io.ktor.server.netty.EngineMain"')])])])],-1)])),_:1}),s(r,{title:"Maven","group-key":"maven"},{default:t(()=>e[3]||(e[3]=[a("div",{class:"language-xml vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"xml"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[a("code",null,[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),a("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"properties"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),a("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"main.class"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">io.ktor.server.netty.EngineMain</"),a("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"main.class"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"</"),a("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"properties"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")])])])],-1)])),_:1}),e[9]||(e[9]=l('<h3 id="warの特記事項" tabindex="-1">WARの特記事項 <a class="header-anchor" href="#warの特記事項" aria-label="Permalink to &quot;WARの特記事項&quot;">​</a></h3><p>Ktorを使用すると、アプリケーション内で直接、目的のエンジン (Netty、Jetty、Tomcatなど) を使用して<a href="./server-create-and-configure">サーバーを作成し起動できます</a>。この場合、アプリケーションはエンジン設定、接続、およびSSLオプションを制御できます。</p><p>このアプローチとは対照的に、サーブレットコンテナはアプリケーションのライフサイクルと接続設定を制御すべきです。Ktorは、アプリケーションの制御をサーブレットコンテナに委譲する特別な <code>ServletApplicationEngine</code> エンジンを提供します。<a href="./server-war#configure-war">WARの構成</a>からアプリケーションの設定方法を学ぶことができます。</p><h2 id="run" tabindex="-1">アプリケーションの実行 <a class="header-anchor" href="#run" aria-label="Permalink to &quot;アプリケーションの実行 {id=&quot;run&quot;}&quot;">​</a></h2><blockquote><p>開発中にサーバーを再起動すると時間がかかる場合があります。Ktorは、コード変更時にアプリケーションクラスをリロードし、高速なフィードバックループを提供する<a href="./server-auto-reload">自動リロード</a>を使用することで、この制限を克服できます。</p></blockquote><h3 id="gradle-maven-run" tabindex="-1">Gradle/Mavenを使用したアプリケーションの実行 <a class="header-anchor" href="#gradle-maven-run" aria-label="Permalink to &quot;Gradle/Mavenを使用したアプリケーションの実行 {id=&quot;gradle-maven-run&quot;}&quot;">​</a></h3><p>GradleまたはMavenを使用してKtorアプリケーションを実行するには、対応するプラグインを使用します。</p><ul><li>Gradle用の<a href="./server-packaging">Application</a>プラグイン。<a href="./server-native">ネイティブサーバー</a>の場合は、<a href="https://plugins.gradle.org/plugin/org.jetbrains.kotlin.multiplatform" target="_blank" rel="noreferrer">Kotlin Multiplatform</a>プラグインを使用します。</li><li>Maven用の<a href="https://www.mojohaus.org/exec-maven-plugin/" target="_blank" rel="noreferrer">Exec</a>プラグイン。</li></ul><blockquote><p>IntelliJ IDEAでKtorアプリケーションを実行する方法については、IntelliJ IDEAドキュメントの<a href="https://www.jetbrains.com/help/idea/ktor.html#run_ktor_app" target="_blank" rel="noreferrer">Ktorアプリケーションの実行</a>セクションを参照してください。</p></blockquote><h3 id="package" tabindex="-1">パッケージ化されたアプリケーションの実行 <a class="header-anchor" href="#package" aria-label="Permalink to &quot;パッケージ化されたアプリケーションの実行 {id=&quot;package&quot;}&quot;">​</a></h3><p>アプリケーションをデプロイする前に、<a href="./server-deployment#packaging">パッケージング</a>セクションで説明されているいずれかの方法でパッケージ化する必要があります。 生成されたパッケージからKtorアプリケーションを実行する方法は、パッケージの種類によって異なり、次のようになります。</p>',11)),a("ul",null,[e[5]||(e[5]=l('<li><p>設定されたポートを上書きしてファットJARにパッケージ化されたKtorサーバーを実行するには、次のコマンドを実行します。</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sample-app.jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -port=8080</span></span></code></pre></div></li>',1)),a("li",null,[e[4]||(e[4]=a("p",null,[i("Gradle "),a("a",{href:"./server-packaging"},"Application"),i("プラグインを使用してパッケージ化されたアプリケーションを実行するには、対応する実行可能ファイルを起動します。")],-1)),s(d,{group:"os"},{default:t(()=>[s(r,{title:"Linux/macOS","group-key":"unix"},{default:t(()=>[s(o,{code:"./ktor-sample"})]),_:1}),s(r,{title:"Windows","group-key":"windows"},{default:t(()=>[s(o,{code:"ktor-sample.bat"})]),_:1})]),_:1})]),e[6]||(e[6]=a("li",null,[a("p",null,[i("サーブレットKtorアプリケーションを実行するには、"),a("a",{href:"./server-war#run"},"Gretty"),i("プラグインの "),a("code",null,"run"),i(" タスクを使用します。")])],-1))])])}const F=k(u,[["render",E]]);export{C as __pageData,F as default};
