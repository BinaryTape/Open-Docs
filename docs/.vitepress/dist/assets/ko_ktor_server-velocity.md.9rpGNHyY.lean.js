import{_ as y,C as n,c,o as u,G as t,j as i,ag as F,w as l,a}from"./chunks/framework.Bksy39di.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-velocity.md","filePath":"ko/ktor/server-velocity.md","lastUpdated":1755457140000}'),v={name:"ko/ktor/server-velocity.md"};function m(C,s,b,f,B,q){const h=n("TopicTitle"),r=n("show-structure"),d=n("primary-label"),k=n("Links"),E=n("tldr"),e=n("code-block"),p=n("TabItem"),o=n("Tabs"),g=n("list");return u(),c("div",null,[t(h,{labelRef:"server-plugin",title:"Velocity"}),t(r,{for:"chapter",depth:"2"}),t(d,{ref:"server-plugin"},null,512),t(E,null,{default:l(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"필수 의존성"),a(": "),i("code",null,"io.ktor:ktor-server-velocity")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"코드 예시"),a(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/velocity"}," velocity ")],-1)),i("p",null,[i("b",null,[t(k,{href:"/ktor/server-native",summary:"Ktor는 Kotlin/Native를 지원하며 추가 런타임 또는 가상 머신 없이 서버를 실행할 수 있습니다."},{default:l(()=>s[0]||(s[0]=[a("네이티브 서버")])),_:1}),s[1]||(s[1]=a(" 지원"))]),s[2]||(s[2]=a(": ✖️ "))])]),_:1}),s[17]||(s[17]=i("p",null,[a("Ktor를 사용하면 "),i("a",{href:"https://velocity.apache.org/engine/",target:"_blank",rel:"noreferrer"},"Velocity 템플릿"),a("을 애플리케이션 내에서 뷰로 사용할 수 있습니다. 이를 위해 "),i("a",{href:"https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-velocity/io.ktor.server.velocity/-velocity",target:"_blank",rel:"noreferrer"},"Velocity"),a(" 플러그인을 설치하면 됩니다.")],-1)),s[18]||(s[18]=i("h2",{id:"add_dependencies",tabindex:"-1"},[a("의존성 추가 "),i("a",{class:"header-anchor",href:"#add_dependencies","aria-label":'Permalink to "의존성 추가 {id="add_dependencies"}"'},"​")],-1)),s[19]||(s[19]=i("p",null,[i("code",null,"Velocity"),a("을(를) 사용하려면 빌드 스크립트에 "),i("code",null,"ktor-server-velocity"),a(" 아티팩트를 포함해야 합니다: ")],-1)),t(o,{group:"languages"},{default:l(()=>[t(p,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:l(()=>[t(e,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-velocity:$ktor_version")'})]),_:1}),t(p,{title:"Gradle (Groovy)","group-key":"groovy"},{default:l(()=>[t(e,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-velocity:$ktor_version"'})]),_:1}),t(p,{title:"Maven","group-key":"maven"},{default:l(()=>[t(e,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-velocity-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[20]||(s[20]=i("h2",{id:"install_plugin",tabindex:"-1"},[a("Velocity 설치 "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "Velocity 설치 {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=a(" 애플리케이션에 ")),s[7]||(s[7]=i("code",null,"Velocity",-1)),s[8]||(s[8]=a(" 플러그인을 ")),s[9]||(s[9]=i("a",{href:"#install"},"설치",-1)),s[10]||(s[10]=a("하려면, 지정된 ")),t(k,{href:"/ktor/server-modules",summary:"모듈을 사용하면 경로를 그룹화하여 애플리케이션을 구조화할 수 있습니다."},{default:l(()=>s[5]||(s[5]=[a("모듈")])),_:1}),s[11]||(s[11]=a("에서 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=a(" 함수에 전달합니다. 아래 코드 스니펫은 ")),s[14]||(s[14]=i("code",null,"Velocity",-1)),s[15]||(s[15]=a("을(를) 설치하는 방법을 보여줍니다... "))]),t(g,null,{default:l(()=>s[16]||(s[16]=[i("li",null,[a(" ... "),i("code",null,"embeddedServer"),a(" 함수 호출 내에서. ")],-1),i("li",null,[a(" ... "),i("code",null,"Application"),a(" 클래스의 확장 함수인 명시적으로 정의된 "),i("code",null,"module"),a(" 내에서. ")],-1)])),_:1}),t(o,null,{default:l(()=>[t(p,{title:"embeddedServer"},{default:l(()=>[t(e,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.velocity.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(Velocity)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),t(p,{title:"module"},{default:l(()=>[t(e,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.velocity.*
            // ...
            fun Application.module() {
                install(Velocity)
                // ...
            }`})]),_:1})]),_:1}),s[21]||(s[21]=F("",15))])}const V=y(v,[["render",m]]);export{A as __pageData,V as default};
