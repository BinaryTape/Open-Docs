import{_ as d,a as o,b as E}from"./chunks/multiplatform-spm-url._IA5Tg3X.js";import{_ as g,C as n,c,o as y,j as s,G as l,ag as e,a,w as t}from"./chunks/framework.Bksy39di.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-spm-export.md","filePath":"ko/kmp/multiplatform-spm-export.md","lastUpdated":1755516278000}'),F={name:"ko/kmp/multiplatform-spm-export.md"};function m(u,i,C,f,b,w){const p=n("tldr"),h=n("list"),k=n("def"),r=n("deflist");return y(),c("div",null,[i[5]||(i[5]=s("h1",{id:"swift-패키지-내보내기-설정",tabindex:"-1"},[a("Swift 패키지 내보내기 설정 "),s("a",{class:"header-anchor",href:"#swift-패키지-내보내기-설정","aria-label":'Permalink to "Swift 패키지 내보내기 설정"'},"​")],-1)),l(p,null,{default:t(()=>i[0]||(i[0]=[a(" 원격 통합 방식입니다. 다음과 같은 경우에 적합합니다:"),s("br",null,null,-1),s("ul",null,[s("li",null,"최종 애플리케이션의 코드베이스를 공통 코드베이스와 분리하고 싶을 때."),s("li",null,"로컬 머신에 이미 iOS를 대상으로 하는 Kotlin Multiplatform 프로젝트를 설정했을 때."),s("li",null,[a("iOS 프로젝트에서 Swift Package Manager를 사용하여 의존성을 관리할 때."),s("br")])],-1),s("p",null,[s("a",{href:"./multiplatform-ios-integration-overview"},"가장 적합한 통합 방식 선택하기")],-1)])),_:1}),i[6]||(i[6]=e("",6)),i[7]||(i[7]=s("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"프로젝트-구성-옵션",tabindex:"-1"},[a("프로젝트 구성 옵션 "),s("a",{class:"header-anchor",href:"#프로젝트-구성-옵션","aria-label":'Permalink to "프로젝트 구성 옵션 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[8]||(i[8]=e("",8)),s("ol",null,[i[3]||(i[3]=s("li",null,[s("p",null,[s("code",null,"Shared.xcframework"),a(" 폴더를 ZIP 파일로 압축하고, 예를 들어 결과 아카이브에 대한 체크섬을 계산합니다:")]),s("p",null,[s("code",null,"swift package compute-checksum Shared.xcframework.zip")])],-1)),s("li",null,[i[2]||(i[2]=s("p",null,"선택한 파일 저장소에 ZIP 파일을 업로드합니다. 파일은 직접 링크로 액세스할 수 있어야 합니다. 예를 들어, GitHub 릴리스를 사용하여 이 작업을 수행하는 방법은 다음과 같습니다:",-1)),l(r,{collapsible:"true"},{default:t(()=>[l(k,{title:"GitHub 릴리스에 업로드"},{default:t(()=>[l(h,{type:"decimal"},{default:t(()=>i[1]||(i[1]=[s("li",null,[s("a",{href:"https://github.com"},"GitHub"),a("로 이동하여 계정에 로그인하십시오.")],-1),s("li",null,"릴리스를 생성하려는 저장소로 이동하십시오.",-1),s("li",null,[a("오른쪽의 "),s("b",null,"Releases"),a(" 섹션에서 "),s("b",null,"Create a new release"),a(" 링크를 클릭하십시오.")],-1),s("li",null,"릴리스 정보를 입력하고, 새 태그를 추가하거나 생성하며, 릴리스 제목을 지정하고 설명을 작성하십시오.",-1),s("li",null,[s("p",null,[a("하단의 "),s("b",null,"Attach binaries by dropping them here or selecting them"),a(" 필드를 통해 XCFramework가 포함된 ZIP 파일을 업로드하십시오:")]),s("img",{src:d,alt:"Fill in the release information",width:"700"})],-1),s("li",null,[s("b",null,"Publish release"),a("를 클릭하십시오.")],-1),s("li",null,[s("p",null,[a("릴리스의 "),s("b",null,"Assets"),a(" 섹션에서 ZIP 파일을 마우스 오른쪽 버튼으로 클릭하고 브라우저에서 "),s("b",null,"링크 주소 복사"),a(" 또는 유사한 옵션을 선택하십시오:")]),s("img",{src:o,alt:"Copy the link to the uploaded file",width:"500"})],-1)])),_:1})]),_:1})]),_:1})]),i[4]||(i[4]=e("",5))]),i[9]||(i[9]=e("",11))])}const v=g(F,[["render",m]]);export{S as __pageData,v as default};
