import{_ as r,C as i,c as k,o,j as a,G as n,ag as d,a as e,w as t}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-serving-spa.md","filePath":"ja/ktor/server-serving-spa.md","lastUpdated":1755457140000}'),c={name:"ja/ktor/server-serving-spa.md"};function g(u,s,E,F,y,m){const p=i("show-structure"),l=i("tldr"),h=i("link-summary");return o(),k("div",null,[s[2]||(s[2]=a("h1",{id:"シングルページアプリケーションの提供",tabindex:"-1"},[e("シングルページアプリケーションの提供 "),a("a",{class:"header-anchor",href:"#シングルページアプリケーションの提供","aria-label":'Permalink to "シングルページアプリケーションの提供"'},"​")],-1)),n(p,{for:"chapter",depth:"2"}),n(l,null,{default:t(()=>s[0]||(s[0]=[a("p",null,[a("b",null,"コード例"),e(": "),a("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/single-page-application"}," single-page-application ")],-1)])),_:1}),n(h,null,{default:t(()=>s[1]||(s[1]=[e(" Ktorは、React、Angular、Vueなどのシングルページアプリケーションを提供する機能を提供します。 ")])),_:1}),s[3]||(s[3]=d(`<p>Ktorは、React、Angular、Vueなどのシングルページアプリケーションを提供する機能を提供します。</p><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>シングルページアプリケーションを提供するには、<code>ktor-server-core</code> <a href="./server-dependencies#add-ktor-dependencies">依存関係</a>のみが必要です。 特定の依存関係は不要です。</p><h2 id="configure" tabindex="-1">アプリケーションの提供 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;アプリケーションの提供 {id=&quot;configure&quot;}&quot;">​</a></h2><p>シングルページアプリケーションを提供するには、コンテンツをどこから提供するか（ローカルファイルシステムまたはクラスパス）を定義する必要があります。 少なくとも、シングルページアプリケーションを含むフォルダ/リソースパッケージを指定する必要があります。</p><h3 id="serve-framework" tabindex="-1">フレームワーク固有のアプリケーションの提供 <a class="header-anchor" href="#serve-framework" aria-label="Permalink to &quot;フレームワーク固有のアプリケーションの提供 {id=&quot;serve-framework&quot;}&quot;">​</a></h3><p>React、Angular、Vueなどの特定のフレームワークを使用して作成されたシングルページアプリケーションのビルドを提供できます。 プロジェクトルートにReactアプリケーションを含む<code>react-app</code>フォルダがあるとします。 アプリケーションは次の構造を持ち、<code>index.html</code>ファイルがメインページです。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>react-app</span></span>
<span class="line"><span>├── index.html</span></span>
<span class="line"><span>├── ...</span></span>
<span class="line"><span>└── static</span></span>
<span class="line"><span>    └── ...</span></span></code></pre></div><p>このアプリケーションを提供するには、<code>routing</code> <a href="./server-routing">ブロック</a>内で<code>singlePageApplication</code>を呼び出し、フォルダ名を<code>react</code>関数に渡します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.http.content.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.routing.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        singlePageApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            react</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;react-app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Ktorは自動的に<code>index.html</code>を検索します。 デフォルトページをカスタマイズする方法については、「<a href="#serve-customize">サービング設定のカスタマイズ</a>」を参照してください。</p><blockquote><p>その他のフレームワークについては、<code>angular</code>、<code>vue</code>、<code>ember</code>などの対応する関数を使用してください。</p></blockquote><h3 id="serve-customize" tabindex="-1">サービング設定のカスタマイズ <a class="header-anchor" href="#serve-customize" aria-label="Permalink to &quot;サービング設定のカスタマイズ {id=&quot;serve-customize&quot;}&quot;">​</a></h3><p>リソースからシングルページアプリケーションを提供する方法を説明するために、アプリケーションが次の構造を持つ<code>sample-web-app</code>リソースパッケージ内に配置されているとします。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sample-web-app</span></span>
<span class="line"><span>├── main.html</span></span>
<span class="line"><span>├── ktor_logo.png</span></span>
<span class="line"><span>├── css</span></span>
<span class="line"><span>│   └──styles.css</span></span>
<span class="line"><span>└── js</span></span>
<span class="line"><span>    └── script.js</span></span></code></pre></div><p>このアプリケーションを提供するには、次の設定が使用されます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.http.content.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.routing.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        singlePageApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            useResources </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            filesPath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sample-web-app&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            defaultPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;main.html&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ignoreFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { it.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">endsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>useResources</code>: リソースパッケージからアプリケーションを提供することを有効にします。</li><li><code>filesPath</code>: アプリケーションが配置されているパスを指定します。</li><li><code>defaultPage</code>: <code>main.html</code>をデフォルトで提供するリソースとして指定します。</li><li><code>ignoreFiles</code>: 末尾に<code>.txt</code>を含むパスを無視します。</li></ul><p>完全な例は<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/single-page-application" target="_blank" rel="noreferrer">こちら</a>で確認できます。</p>`,19))])}const b=r(c,[["render",g]]);export{C as __pageData,b as default};
