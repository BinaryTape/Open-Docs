import{_ as o}from"./chunks/ios-integration-scheme.BWILfhhI.js";import{_ as r,c as e,o as t,ag as i}from"./chunks/framework.Bksy39di.js";const u=JSON.parse('{"title":"iOS 統合方法","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/multiplatform-ios-integration-overview.md","filePath":"ja/kmp/multiplatform-ios-integration-overview.md","lastUpdated":1755516278000}'),l={name:"ja/kmp/multiplatform-ios-integration-overview.md"};function p(s,a,n,c,d,m){return t(),e("div",null,a[0]||(a[0]=[i('<h1 id="ios-統合方法" tabindex="-1">iOS 統合方法 <a class="header-anchor" href="#ios-統合方法" aria-label="Permalink to &quot;iOS 統合方法&quot;">​</a></h1><p>Kotlin Multiplatformの共有モジュールをiOSアプリに統合できます。そのためには、共有モジュールから<a href="https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPFrameworks/Concepts/WhatAreFrameworks.html" target="_blank" rel="noreferrer">iOSフレームワーク</a>を生成し、それをiOSプロジェクトに依存関係として追加します。</p><p><img src="'+o+'" alt="iOS integration scheme"></p><p>このフレームワークは、ローカル依存関係またはリモート依存関係として利用できます。共通コードが変更されたときに、コードベース全体を完全に制御し、最終的なアプリケーションに即座に更新を反映させたい場合は、ローカル統合を選択してください。</p><p>最終的なアプリケーションのコードベースと共通コードベースを明示的に分離したい場合は、リモート統合を設定します。この場合、共有コードは通常のサードパーティ依存関係のように最終的なアプリケーションに統合されます。</p><h2 id="ローカル統合" tabindex="-1">ローカル統合 <a class="header-anchor" href="#ローカル統合" aria-label="Permalink to &quot;ローカル統合&quot;">​</a></h2><p>ローカル設定には、主に2つの統合オプションがあります。特殊なスクリプトを介して直接統合を使用できます。これにより、KotlinのビルドがiOSビルドの一部になります。Kotlin MultiplatformプロジェクトにPodの依存関係がある場合は、CocoaPods統合アプローチを使用してください。</p><h3 id="直接統合" tabindex="-1">直接統合 <a class="header-anchor" href="#直接統合" aria-label="Permalink to &quot;直接統合&quot;">​</a></h3><p>Xcodeプロジェクトに特殊なスクリプトを追加することで、Kotlin MultiplatformプロジェクトからiOSフレームワークを直接接続できます。このスクリプトは、プロジェクトのビルド設定のビルドフェーズに統合されます。</p><p>この統合方法は、Kotlin MultiplatformプロジェクトでCocoaPodsの依存関係をインポート<strong>しない</strong>場合に有効です。</p><p>Android Studioでプロジェクトを作成する場合、<strong>Regular framework</strong>オプションを選択すると、この設定が自動的に生成されます。<a href="https://kmp.jetbrains.com/" target="_blank" rel="noreferrer">Kotlin Multiplatform web wizard</a>を使用する場合、直接統合がデフォルトで適用されます。</p><p>詳細については、<a href="./multiplatform-direct-integration">直接統合</a>を参照してください。</p><h3 id="ローカルpodspecを使用したcocoapods統合" tabindex="-1">ローカルpodspecを使用したCocoaPods統合 <a class="header-anchor" href="#ローカルpodspecを使用したcocoapods統合" aria-label="Permalink to &quot;ローカルpodspecを使用したCocoaPods統合&quot;">​</a></h3><p>SwiftおよびObjective-Cプロジェクト向けの一般的な依存関係マネージャーである<a href="https://cocoapods.org/" target="_blank" rel="noreferrer">CocoaPods</a>を介して、Kotlin MultiplatformプロジェクトからiOSフレームワークを接続できます。</p><p>この統合方法は、以下の場合に有効です。</p><ul><li>CocoaPodsを使用するiOSプロジェクトを含むモノリポジトリ設定がある場合</li><li>Kotlin MultiplatformプロジェクトでCocoaPodsの依存関係をインポートしている場合</li></ul><p>ローカルのCocoaPods依存関係を持つワークフローを設定するには、スクリプトを手動で編集するか、Android Studioのウィザードを使用してプロジェクトを生成できます。</p><p>詳細については、<a href="./multiplatform-cocoapods-overview">CocoaPodsの概要とセットアップ</a>を参照してください。</p><h2 id="リモート統合" tabindex="-1">リモート統合 <a class="header-anchor" href="#リモート統合" aria-label="Permalink to &quot;リモート統合&quot;">​</a></h2><p>リモート統合の場合、Kotlin MultiplatformプロジェクトからiOSフレームワークを接続するために、プロジェクトはSwift Package Manager (SPM) またはCocoaPods依存関係マネージャーを使用する可能性があります。</p><h3 id="xcframeworksを使用したswift-package-manager" tabindex="-1">XCFrameworksを使用したSwift Package Manager <a class="header-anchor" href="#xcframeworksを使用したswift-package-manager" aria-label="Permalink to &quot;XCFrameworksを使用したSwift Package Manager&quot;">​</a></h3><p>XCFrameworksを使用してSwift Package Manager (SPM)の依存関係を設定し、Kotlin MultiplatformプロジェクトからiOSフレームワークを接続できます。</p><p>詳細については、<a href="./multiplatform-spm-export">Swiftパッケージのエクスポート設定</a>を参照してください。</p><h3 id="xcframeworksを使用したcocoapods統合" tabindex="-1">XCFrameworksを使用したCocoaPods統合 <a class="header-anchor" href="#xcframeworksを使用したcocoapods統合" aria-label="Permalink to &quot;XCFrameworksを使用したCocoaPods統合&quot;">​</a></h3><p>Kotlin CocoaPods Gradleプラグインを使用してXCFrameworksをビルドし、プロジェクトの共有部分をモバイルアプリとは別にCocoaPodsを介して配布できます。</p><p>詳細については、<a href="./multiplatform-build-native-binaries#build-frameworks">最終的なネイティブバイナリのビルド</a>を参照してください。</p>',26)]))}const k=r(l,[["render",p]]);export{u as __pageData,k as default};
