import{_ as r,C as n,c as e,o as a,j as d,G as l,ag as i,a as s}from"./chunks/framework.Bksy39di.js";const S=JSON.parse('{"title":"Kotlinコンポーネントの安定性（1.4以前）","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/components-stability-pre-1.4.md","filePath":"ja/kotlin/components-stability-pre-1.4.md","lastUpdated":1754307826000}'),p={name:"ja/kotlin/components-stability-pre-1.4.md"};function g(F,t,c,_,M,k){const o=n("no-index");return a(),e("div",null,[t[0]||(t[0]=d("h1",{id:"kotlinコンポーネントの安定性-1-4以前",tabindex:"-1"},[s("Kotlinコンポーネントの安定性（1.4以前） "),d("a",{class:"header-anchor",href:"#kotlinコンポーネントの安定性-1-4以前","aria-label":'Permalink to "Kotlinコンポーネントの安定性（1.4以前）"'},"​")],-1)),l(o),t[1]||(t[1]=i('<p>コンポーネントの進化速度に応じて、いくつかの安定性モードが存在します。</p><a name="moving-fast"></a><ul><li><p><strong>開発が速い (MF)</strong>: <a href="/ja/kotlin/kotlin-evolution-principles#language-and-tooling-releases">インクリメンタルリリース</a>間でも互換性は期待されず、警告なしに機能が追加、削除、または変更される可能性があります。</p></li><li><p><strong>インクリメンタルリリースでの追加 (AIR)</strong>: インクリメンタルリリースでは追加が可能ですが、削除や動作の変更は避けるべきであり、必要な場合は以前のインクリメンタルリリースで告知されるべきです。</p></li><li><p><strong>安定したインクリメンタルリリース (SIR)</strong>: インクリメンタルリリースは完全に互換性があり、最適化とバグ修正のみが行われます。<a href="/ja/kotlin/kotlin-evolution-principles#language-and-tooling-releases">言語リリース</a>ではあらゆる変更が可能です。</p></li></ul><a name="fully-stable"></a><ul><li><strong>完全安定 (FS)</strong>: インクリメンタルリリースは完全に互換性があり、最適化とバグ修正のみが行われます。機能リリースは後方互換性があります。</li></ul><p>同じコンポーネントであっても、ソースとバイナリの互換性には異なるモードが適用される場合があります。例えば、ソース言語が完全に安定する前にバイナリ形式が安定する場合や、その逆も考えられます。</p><p><a href="/ja/kotlin/kotlin-evolution-principles">Kotlin進化ポリシー</a>の規定は、完全安定 (FS) に達したコンポーネントにのみ完全に適用されます。その時点以降、互換性のない変更は言語委員会によって承認される必要があります。</p><table tabindex="0"><thead><tr><th><strong>コンポーネント</strong></th><th><strong>バージョンにおけるステータス</strong></th><th><strong>ソースのモード</strong></th><th><strong>バイナリのモード</strong></th></tr></thead><tbody><tr><td>Kotlin/JVM</td><td>1.0</td><td>FS</td><td>FS</td></tr><tr><td>kotlin-stdlib (JVM)</td><td>1.0</td><td>FS</td><td>FS</td></tr><tr><td>KDoc構文</td><td>1.0</td><td>FS</td><td>N/A</td></tr><tr><td>コルーチン</td><td>1.3</td><td>FS</td><td>FS</td></tr><tr><td>kotlin-reflect (JVM)</td><td>1.0</td><td>SIR</td><td>SIR</td></tr><tr><td>Kotlin/JS</td><td>1.1</td><td>AIR</td><td>MF</td></tr><tr><td>Kotlin/Native</td><td>1.3</td><td>AIR</td><td>MF</td></tr><tr><td>Kotlinスクリプト (*.kts)</td><td>1.2</td><td>AIR</td><td>MF</td></tr><tr><td>dokka</td><td>0.1</td><td>MF</td><td>N/A</td></tr><tr><td>KotlinスクリプティングAPI</td><td>1.2</td><td>MF</td><td>MF</td></tr><tr><td>コンパイラプラグインAPI</td><td>1.0</td><td>MF</td><td>MF</td></tr><tr><td>シリアライゼーション</td><td>1.3</td><td>MF</td><td>MF</td></tr><tr><td>マルチプラットフォームプロジェクト</td><td>1.2</td><td>MF</td><td>MF</td></tr><tr><td>インラインクラス</td><td>1.3</td><td>MF</td><td>MF</td></tr><tr><td>符号なし算術</td><td>1.3</td><td>MF</td><td>MF</td></tr><tr><td><strong>その他のすべての実験的機能（デフォルト）</strong></td><td>N/A</td><td><strong>MF</strong></td><td><strong>MF</strong></td></tr></tbody></table>',8))])}const h=r(p,[["render",g]]);export{S as __pageData,h as default};
