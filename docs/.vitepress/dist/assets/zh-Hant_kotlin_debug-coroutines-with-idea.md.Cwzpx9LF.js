import{_ as p,a as k,b as h}from"./chunks/variable-optimised-out.gsL8I0ER.js";import{_ as d,a as g,b as c,c as E}from"./chunks/coroutine-debug-3.D_74SQPz.js";import{_ as u,C as o,c as y,o as m,ag as a,j as i,a as t,G as n,w as l}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"使用 IntelliJ IDEA 偵錯協程 – 教學課程","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/debug-coroutines-with-idea.md","filePath":"zh-Hant/kotlin/debug-coroutines-with-idea.md","lastUpdated":1754307826000}'),F={name:"zh-Hant/kotlin/debug-coroutines-with-idea.md"};function _(b,s,C,f,x,B){const e=o("tab"),r=o("tabs");return m(),y("div",null,[s[6]||(s[6]=a('<h1 id="使用-intellij-idea-偵錯協程-–-教學課程" tabindex="-1">使用 IntelliJ IDEA 偵錯協程 – 教學課程 <a class="header-anchor" href="#使用-intellij-idea-偵錯協程-–-教學課程" aria-label="Permalink to &quot;使用 IntelliJ IDEA 偵錯協程 – 教學課程&quot;">​</a></h1><p>本教學課程示範如何建立 Kotlin 協程並使用 IntelliJ IDEA 偵錯它們。</p><p>本教學課程假設您已預先了解<a href="/zh-Hant/kotlin/coroutines-guide">協程</a>概念。</p><h2 id="建立協程" tabindex="-1">建立協程 <a class="header-anchor" href="#建立協程" aria-label="Permalink to &quot;建立協程&quot;">​</a></h2>',4)),i("ol",null,[s[4]||(s[4]=i("li",null,[i("p",null,[t("在 IntelliJ IDEA 中開啟 Kotlin 專案。如果您沒有專案，請"),i("a",{href:"/zh-Hant/kotlin/jvm-get-started#create-a-project"},"建立一個"),t("。")])],-1)),i("li",null,[s[2]||(s[2]=i("p",null,[t("若要在 Gradle 專案中使用 "),i("code",null,"kotlinx.coroutines"),t(" 函式庫，請將以下依賴項新增至 "),i("code",null,"build.gradle(.kts)"),t("：")],-1)),n(r,{group:"build-script"},{default:l(()=>[n(e,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>s[0]||(s[0]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependencies"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    implementation"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),n(e,{title:"Groovy","group-key":"groovy"},{default:l(()=>s[1]||(s[1]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"dependencies {")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    implementation "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),s[3]||(s[3]=i("p",null,[t("對於其他建置系統，請參閱 "),i("a",{href:"https://github.com/Kotlin/kotlinx.coroutines#using-in-your-projects",target:"_blank",rel:"noreferrer"},[i("code",null,"kotlinx.coroutines"),t(" README")]),t(" 中的說明。")],-1))]),s[5]||(s[5]=a(`<li><p>開啟 <code>src/main/kotlin</code> 中的 <code>Main.kt</code> 檔案。</p><p><code>src</code> 目錄包含 Kotlin 原始碼檔案和資源。<code>Main.kt</code> 檔案包含將印出 <code>Hello World!</code> 的範例程式碼。</p></li><li><p>變更 <code>main()</code> 函數中的程式碼：</p><ul><li>使用 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/run-blocking.html" target="_blank" rel="noreferrer"><code>runBlocking()</code></a> 區塊來包裝一個協程。</li><li>使用 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html" target="_blank" rel="noreferrer"><code>async()</code></a> 函數建立計算延遲值 <code>a</code> 和 <code>b</code> 的協程。</li><li>使用 <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/await.html" target="_blank" rel="noreferrer"><code>await()</code></a> 函數等待計算結果。</li><li>使用 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/println.html" target="_blank" rel="noreferrer"><code>println()</code></a> 函數將計算狀態和乘法結果印出到輸出。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinx.coroutines.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> runBlocking</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;I&#39;m computing part of the answer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;I&#39;m computing another part of the answer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;The answer is \${a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">await</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> b.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">await</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>點擊 <strong>建置專案</strong> 來建置程式碼。</p><p><img src="`+p+'" alt="建置應用程式"></p></li>',3))]),s[7]||(s[7]=a('<h2 id="偵錯協程" tabindex="-1">偵錯協程 <a class="header-anchor" href="#偵錯協程" aria-label="Permalink to &quot;偵錯協程&quot;">​</a></h2><ol><li><p>在呼叫 <code>println()</code> 函數的行上設定中斷點：</p><p><img src="'+d+'" alt="建置主控台應用程式"></p></li><li><p>點擊螢幕頂部執行設定旁邊的 <strong>偵錯</strong>，以偵錯模式執行程式碼。</p><p><img src="'+k+'" alt="建置主控台應用程式"></p><p><strong>偵錯</strong> 工具視窗出現：</p><ul><li><strong>框架</strong> 索引標籤包含呼叫堆疊。</li><li><strong>變數</strong> 索引標籤包含目前上下文中的變數。</li><li><strong>協程</strong> 索引標籤包含執行中或已暫停協程的資訊。它顯示有三個協程。 第一個協程的狀態為 <strong>執行中</strong>，而另外兩個的狀態為 <strong>已建立</strong>。</li></ul><p><img src="'+g+'" alt="偵錯協程"></p></li><li><p>點擊 <strong>偵錯</strong> 工具視窗中的 <strong>恢復程式</strong>，恢復偵錯程式會話：</p><p><img src="'+c+'" alt="偵錯協程"></p><p>現在 <strong>協程</strong> 索引標籤顯示以下內容：</p><ul><li>第一個協程的狀態為 <strong>已暫停</strong> – 它正在等待值以便進行乘法運算。</li><li>第二個協程正在計算 <code>a</code> 值 – 它的狀態為 <strong>執行中</strong>。</li><li>第三個協程的狀態為 <strong>已建立</strong>，並且沒有計算 <code>b</code> 的值。</li></ul></li><li><p>點擊 <strong>偵錯</strong> 工具視窗中的 <strong>恢復程式</strong>，恢復偵錯程式會話：</p><p><img src="'+E+'" alt="建置主控台應用程式"></p><p>現在 <strong>協程</strong> 索引標籤顯示以下內容：</p><ul><li>第一個協程的狀態為 <strong>已暫停</strong> – 它正在等待值以便進行乘法運算。</li><li>第二個協程已計算出其值並消失了。</li><li>第三個協程正在計算 <code>b</code> 值 – 它的狀態為 <strong>執行中</strong>。</li></ul></li></ol><p>使用 IntelliJ IDEA 偵錯工具，您可以深入每個協程以偵錯您的程式碼。</p><h3 id="經優化移除的變數" tabindex="-1">經優化移除的變數 <a class="header-anchor" href="#經優化移除的變數" aria-label="Permalink to &quot;經優化移除的變數&quot;">​</a></h3><p>如果您使用 <code>suspend</code> 函數，在偵錯工具中，您可能會在變數名稱旁邊看到「was optimized out」文字：</p><p><img src="'+h+'" alt="變數「a」已被優化移除" width="480"></p><p>此文字表示變數的生命週期已縮短，並且該變數已不存在。 偵錯帶有優化變數的程式碼很困難，因為您看不到它們的值。 您可以使用 <code>-Xdebug</code> 編譯器選項來禁用此行為。</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p><strong>切勿在生產環境中使用此旗標</strong>：<code>-Xdebug</code> 可能<a href="https://youtrack.jetbrains.com/issue/KT-48678/Coroutine-debugger-disable-was-optimised-out-compiler-feature#focus=Comments-27-6015585.0-0" target="_blank" rel="noreferrer">導致記憶體洩漏</a>。</p></div>',8))])}const D=u(F,[["render",_]]);export{T as __pageData,D as default};
