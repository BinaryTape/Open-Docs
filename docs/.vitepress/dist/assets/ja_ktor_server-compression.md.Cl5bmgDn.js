import{_ as u,C as t,c as m,o as y,G as e,ag as d,j as i,w as a,a as n}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-compression.md","filePath":"ja/ktor/server-compression.md","lastUpdated":1755457140000}'),v={name:"ja/ktor/server-compression.md"};function b(f,s,C,_,F,q){const k=t("TopicTitle"),h=t("show-structure"),c=t("primary-label"),p=t("Links"),E=t("tldr"),l=t("code-block"),o=t("TabItem"),r=t("Tabs"),g=t("list");return y(),m("div",null,[e(k,{labelRef:"server-plugin",title:"圧縮"}),e(h,{for:"chapter",depth:"2"}),e(c,{ref:"server-plugin"},null,512),e(E,null,{default:a(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"必須の依存関係"),n(": "),i("code",null,"io.ktor:ktor-server-compression")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"コード例"),n(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/compression"}," compression ")],-1)),i("p",null,[i("b",null,[e(p,{href:"/ktor/server-native",summary:"Ktor は Kotlin/Native をサポートしており、追加のランタイムや仮想マシンなしでサーバーを実行できます。"},{default:a(()=>s[0]||(s[0]=[n("ネイティブサーバー")])),_:1}),s[1]||(s[1]=n("のサポート"))]),s[2]||(s[2]=n(": ✖️ "))])]),_:1}),s[16]||(s[16]=d('<p>Ktor は、<a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-compression/io.ktor.server.plugins.compression/-compression.html" target="_blank" rel="noreferrer">Compression</a> プラグインを使用して、レスポンスボディの圧縮とリクエストボディの解凍を行う機能を提供します。 <code>gzip</code> や <code>deflate</code> などの様々な圧縮アルゴリズムを使用したり、データ圧縮に必要な条件（コンテンツタイプやレスポンスサイズなど）を指定したり、特定の要求パラメータに基づいてデータを圧縮したりすることも可能です。</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p><code>Compression</code> プラグインは現在、<code>SSE</code> レスポンスをサポートしていないことに注意してください。</p></div><blockquote><p>Ktor で事前に圧縮された静的ファイルをどのように提供するかについては、<a href="./server-static-content#precompressed">事前圧縮ファイル</a> を参照してください。</p></blockquote><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>Compression</code> を使用するには、ビルドスクリプトに <code>ktor-server-compression</code> アーティファクトを含める必要があります。 </p>',5)),e(r,{group:"languages"},{default:a(()=>[e(o,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-compression:$ktor_version")'})]),_:1}),e(o,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-compression:$ktor_version"'})]),_:1}),e(o,{title:"Maven","group-key":"maven"},{default:a(()=>[e(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-compression-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[17]||(s[17]=i("h2",{id:"install_plugin",tabindex:"-1"},[n("Compression のインストール "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "Compression のインストール {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=i("code",null,"Compression",-1)),s[7]||(s[7]=n(" プラグインをアプリケーションに")),s[8]||(s[8]=i("a",{href:"#install"},"インストール",-1)),s[9]||(s[9]=n("するには、指定された")),e(p,{href:"/ktor/server-modules",summary:"モジュールを使用すると、ルートをグループ化してアプリケーションを構造化できます。"},{default:a(()=>s[5]||(s[5]=[n("モジュール")])),_:1}),s[10]||(s[10]=n("内で ")),s[11]||(s[11]=i("code",null,"install",-1)),s[12]||(s[12]=n(" 関数に渡します。 以下のコードスニペットは、")),s[13]||(s[13]=i("code",null,"Compression",-1)),s[14]||(s[14]=n(" をインストールする方法を示しています... "))]),e(g,null,{default:a(()=>s[15]||(s[15]=[i("li",null,[n(" ... "),i("code",null,"embeddedServer"),n(" 関数呼び出し内。 ")],-1),i("li",null,[n(" ... "),i("code",null,"Application"),n(" クラスの拡張関数である、明示的に定義された "),i("code",null,"module"),n(" 内。 ")],-1)])),_:1}),e(r,null,{default:a(()=>[e(o,{title:"embeddedServer"},{default:a(()=>[e(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.compression.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(Compression)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),e(o,{title:"module"},{default:a(()=>[e(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.compression.*
            // ...
            fun Application.module() {
                install(Compression)
                // ...
            }`})]),_:1})]),_:1}),s[18]||(s[18]=d(`<p>これにより、サーバー上で <code>gzip</code>、<code>deflate</code>、<code>identity</code> エンコーダーが有効になります。 次の章では、特定のエンコーダーのみを有効にし、データを圧縮するための条件を構成する方法について説明します。 追加されたすべてのエンコーダーは、必要に応じてリクエストボディを解凍するために使用されることに注意してください。</p><h2 id="configure" tabindex="-1">圧縮設定の構成 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;圧縮設定の構成 {id=&quot;configure&quot;}&quot;">​</a></h2><p>圧縮は複数の方法で構成できます。特定のエンコーダーのみを有効にしたり、その優先順位を指定したり、特定のコンテンツタイプのみを圧縮したりできます。</p><h3 id="add_specific_encoders" tabindex="-1">特定のエンコーダーの追加 <a class="header-anchor" href="#add_specific_encoders" aria-label="Permalink to &quot;特定のエンコーダーの追加 {id=&quot;add_specific_encoders&quot;}&quot;">​</a></h3><p>特定のエンコーダーのみを有効にするには、対応する拡張関数を呼び出します。例えば、次のようになります。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>各圧縮アルゴリズムの優先度は、<code>priority</code> プロパティを設定することで指定できます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>上記の例では、<code>deflate</code> の方が高い優先度値を持つため、<code>gzip</code> よりも優先されます。サーバーはまず <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding" target="_blank" rel="noreferrer">Accept-Encoding</a> ヘッダー内の <a href="https://developer.mozilla.org/en-US/docs/Glossary/Quality_Values" target="_blank" rel="noreferrer">品質値 (quality values)</a> を確認し、その後に指定された優先度を考慮することに注意してください。</p><h3 id="configure_content_type" tabindex="-1">コンテンツタイプの構成 <a class="header-anchor" href="#configure_content_type" aria-label="Permalink to &quot;コンテンツタイプの構成 {id=&quot;configure_content_type&quot;}&quot;">​</a></h3><p>デフォルトでは、Ktor は <code>audio</code>、<code>video</code>、<code>image</code>、<code>text/event-stream</code> などの特定のコンテンツタイプを圧縮しません。 <code>matchContentType</code> を呼び出して圧縮するコンテンツタイプを選択したり、<code>excludeContentType</code> を使用して圧縮から除外するメディアタイプを指定したりできます。以下のコードスニペットは、<code>gzip</code> を使用してJavaScriptコードを圧縮し、<code>deflate</code> を使用してすべてのテキストサブタイプを圧縮する方法を示しています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        matchContentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ContentType.Application.JavaScript</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        matchContentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ContentType.Text.Any</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>完全な例はこちらで確認できます: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/compression" target="_blank" rel="noreferrer">compression</a>。</p><h3 id="configure_response_size" tabindex="-1">レスポンスサイズの構成 <a class="header-anchor" href="#configure_response_size" aria-label="Permalink to &quot;レスポンスサイズの構成 {id=&quot;configure_response_size&quot;}&quot;">​</a></h3><p><code>Compression</code> プラグインを使用すると、指定された値を超えないサイズのレスポンスに対する圧縮を無効にできます。これを行うには、目的の値を (バイト単位で) <code>minimumSize</code> 関数に渡します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        deflate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            minimumSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><h3 id="specify_custom_conditions" tabindex="-1">カスタム条件の指定 <a class="header-anchor" href="#specify_custom_conditions" aria-label="Permalink to &quot;カスタム条件の指定 {id=&quot;specify_custom_conditions&quot;}&quot;">​</a></h3><p>必要に応じて、<code>condition</code> 関数を使用してカスタム条件を提供し、特定のリクエストパラメータに応じてデータを圧縮できます。以下のコードスニペットは、指定されたURIへのリクエストを圧縮する方法を示しています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.uri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/orders&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="security" tabindex="-1">HTTPS セキュリティ <a class="header-anchor" href="#security" aria-label="Permalink to &quot;HTTPS セキュリティ {id=&quot;security&quot;}&quot;">​</a></h2><p>圧縮が有効になっている HTTPS は、<a href="https://en.wikipedia.org/wiki/BREACH" target="_blank" rel="noreferrer">BREACH</a> 攻撃に対して脆弱です。この攻撃を軽減するには様々な方法があります。たとえば、リファラーヘッダーがクロスサイトリクエストを示している場合、圧縮を無効にすることができます。Ktor では、これはリファラーヘッダーの値をチェックすることで実現できます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Compression) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gzip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.headers[HttpHeaders.Referrer]?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://my.domain/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="custom_encoder" tabindex="-1">カスタムエンコーダーの実装 <a class="header-anchor" href="#custom_encoder" aria-label="Permalink to &quot;カスタムエンコーダーの実装 {id=&quot;custom_encoder&quot;}&quot;">​</a></h2><p>必要に応じて、<a href="https://api.ktor.io/ktor-utils/io.ktor.util/-content-encoder/index.html" target="_blank" rel="noreferrer">ContentEncoder</a> インターフェースを実装することで独自のエンコーダーを提供できます。 実装例として <a href="https://github.com/ktorio/ktor/blob/b5b59ca3ae61601e6175f334e6a1252609638e61/ktor-server/ktor-server-plugins/ktor-server-compression/jvm/src/io/ktor/server/plugins/compression/Encoders.kt#L41" target="_blank" rel="noreferrer">GzipEncoder</a> を参照してください。</p>`,24))])}const x=u(v,[["render",b]]);export{B as __pageData,x as default};
