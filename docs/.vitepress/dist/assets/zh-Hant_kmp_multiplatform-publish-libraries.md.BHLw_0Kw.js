import{_ as o,a as k,b as d}from"./chunks/published_on_maven_central.BgjvbPaZ.js";import{_ as c,C as t,c as g,o as E,ag as n,G as e,j as s,w as l,a as i}from"./chunks/framework.Bksy39di.js";const A=JSON.parse('{"title":"將您的函式庫發佈到 Maven Central – 教學","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/multiplatform-publish-libraries.md","filePath":"zh-Hant/kmp/multiplatform-publish-libraries.md","lastUpdated":1755516278000}'),u={name:"zh-Hant/kmp/multiplatform-publish-libraries.md"};function y(b,a,m,F,C,v){const p=t("TabItem"),r=t("Tabs"),h=t("shortcut");return E(),g("div",null,[a[8]||(a[8]=n('<h1 id="將您的函式庫發佈到-maven-central-–-教學" tabindex="-1">將您的函式庫發佈到 Maven Central – 教學 <a class="header-anchor" href="#將您的函式庫發佈到-maven-central-–-教學" aria-label="Permalink to &quot;將您的函式庫發佈到 Maven Central – 教學&quot;">​</a></h1><p>在本教學中，您將學習如何將您的 Kotlin Multiplatform 函式庫發佈到 <a href="https://central.sonatype.com/" target="_blank" rel="noreferrer">Maven Central</a> 儲存庫。</p><p>要發佈您的函式庫，您需要：</p><ol><li>設定憑證，包括 Maven Central 上的帳戶和用於簽署的 PGP 金鑰。</li><li>在函式庫專案中配置發佈外掛程式。</li><li>向發佈外掛程式提供您的憑證，以便它可以簽署並上傳您的構件。</li><li>執行發佈任務，無論是在本機還是使用持續整合。</li></ol><p>本教學假設您：</p><ul><li>正在建立一個開源函式庫。</li><li>將函式庫的程式碼儲存在 GitHub 儲存庫中。</li><li>使用 macOS 或 Linux。如果您是 Windows 使用者，請使用 <a href="https://gnupg.org/download" target="_blank" rel="noreferrer">GnuPG 或 Gpg4win</a> 來產生金鑰對。</li><li>尚未在 Maven Central 註冊，或已擁有適合<a href="https://central.sonatype.org/publish-ea/publish-ea-guide/" target="_blank" rel="noreferrer">發佈到 Central Portal</a> 的現有帳戶（在 2024 年 3 月 12 日之後建立，或由其支援遷移到 Central Portal）。</li><li>使用 GitHub Actions 進行持續整合。</li></ul><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>這裡的大多數步驟在您使用不同設定時仍然適用，但可能存在一些您需要考量的差異。 一個<a href="./multiplatform-publish-lib-setup#host-requirements">重要的限制</a> 是 Apple 目標必須在 macOS 機器上建構。</p></div><h2 id="範例函式庫" tabindex="-1">範例函式庫 <a class="header-anchor" href="#範例函式庫" aria-label="Permalink to &quot;範例函式庫&quot;">​</a></h2><p>在本教學中，您將使用 <a href="https://github.com/Kotlin/multiplatform-library-template/" target="_blank" rel="noreferrer">fibonacci</a> 函式庫作為範例。您可以參考該儲存庫的程式碼，了解發佈設定的運作方式。</p><p>如果您想重複使用這些程式碼，您<strong>必須將所有範例值</strong>替換為您專案特有的值。</p><h2 id="準備帳戶和憑證" tabindex="-1">準備帳戶和憑證 <a class="header-anchor" href="#準備帳戶和憑證" aria-label="Permalink to &quot;準備帳戶和憑證&quot;">​</a></h2><p>要開始發佈到 Maven Central，請在 <a href="https://central.sonatype.com/" target="_blank" rel="noreferrer">Maven Central</a> 入口網站登入（或建立新帳戶）。</p><h3 id="選擇並驗證命名空間" tabindex="-1">選擇並驗證命名空間 <a class="header-anchor" href="#選擇並驗證命名空間" aria-label="Permalink to &quot;選擇並驗證命名空間&quot;">​</a></h3><p>您需要一個經過驗證的命名空間，以便在 Maven Central 上唯一識別您的函式庫構件。</p><p>Maven 構件由其<a href="https://central.sonatype.org/publish/requirements/#correct-coordinates" target="_blank" rel="noreferrer">座標</a>識別，例如 <code>com.example:fibonacci-library:1.0.0</code>。這些座標由三部分組成，以冒號分隔：</p><ul><li><code>groupId</code> 以反向 DNS 格式表示，例如 <code>com.example</code></li><li><code>artifactId</code>：函式庫本身的唯一名稱，例如 <code>fibonacci-library</code></li><li><code>version</code>：版本字串，例如 <code>1.0.0</code>。版本可以是任何字串，但不能以 <code>-SNAPSHOT</code> 結尾</li></ul><p>您註冊的命名空間允許您在 Maven Central 上設定 <code>groupId</code> 的格式。例如，如果您註冊 <code>com.example</code> 命名空間，您可以發佈 <code>groupId</code> 設定為 <code>com.example</code>、<code>com.example.libraryname</code>、<code>com.example.module.feature</code> 等的構件。</p><p>登入 Maven Central 後，導覽至 <a href="https://central.sonatype.com/publishing/namespaces" target="_blank" rel="noreferrer">Namespaces</a> 頁面。然後，點擊 <strong>Add Namespace</strong> 按鈕並註冊您的命名空間：</p>',18)),e(r,null,{default:l(()=>[e(p,{id:"github",title:"使用 GitHub 儲存庫"},{default:l(()=>a[0]||(a[0]=[s("p",null,"如果您沒有網域名稱，使用您的 GitHub 帳戶建立命名空間是一個不錯的選擇：",-1),s("ol",null,[s("li",null,[i("輸入 "),s("code",null,"io.github.<您的使用者名稱>"),i(" 作為您的命名空間，例如 "),s("code",null,"io.github.kotlinhandson"),i("，然後點擊 "),s("strong",null,"Submit"),i("。")]),s("li",null,[i("複製新建立命名空間下顯示的 "),s("strong",null,"Verification Key"),i("。")]),s("li",null,[i("在 GitHub 上，使用您使用的使用者名稱登入，並建立一個新的公共儲存庫，以驗證金鑰作為儲存庫的名稱，例如 "),s("code",null,"http://github.com/kotlin-hands-on/ex4mpl3c0d"),i("。")]),s("li",null,[i("導覽回 Maven Central，然後點擊 "),s("strong",null,"Verify Namespace"),i(" 按鈕。驗證成功後，您可以刪除您建立的儲存庫。")])],-1)])),_:1}),e(p,{id:"domain",title:"使用網域名稱"},{default:l(()=>a[1]||(a[1]=[s("p",null,"要使用您擁有的網域名稱作為您的命名空間：",-1),s("ol",null,[s("li",null,[s("p",null,[i("以反向 DNS 格式輸入您的網域作為命名空間。如果您的網域是 "),s("code",null,"example.com"),i("，請輸入 "),s("code",null,"com.example"),i("。")])]),s("li",null,[s("p",null,[i("複製顯示的 "),s("strong",null,"Verification Key"),i("。")])]),s("li",null,[s("p",null,"建立一個新的 TXT DNS 記錄，並以驗證金鑰作為其內容。"),s("p",null,[i("有關如何使用各種網域註冊商執行此操作的更多資訊，請參閱 "),s("a",{href:"https://central.sonatype.org/faq/how-to-set-txt-record/",target:"_blank",rel:"noreferrer"},"Maven Central 的 FAQ"),i("。")])]),s("li",null,[s("p",null,[i("返回 Maven Central，然後點擊 "),s("strong",null,"Verify Namespace"),i(" 按鈕。驗證成功後，您可以刪除您建立的 TXT 記錄。")])])],-1)])),_:1})]),_:1}),a[9]||(a[9]=n('<h4 id="產生金鑰對" tabindex="-1">產生金鑰對 <a class="header-anchor" href="#產生金鑰對" aria-label="Permalink to &quot;產生金鑰對&quot;">​</a></h4><p>在您將內容發佈到 Maven Central 之前，您需要使用 <a href="https://central.sonatype.org/publish/requirements/gpg/" target="_blank" rel="noreferrer">PGP 簽名</a>來簽署您的構件，這允許使用者驗證構件的來源。</p><p>要開始簽署，您需要產生一個金鑰對：</p><ul><li><em>私密金鑰</em> 用於簽署您的構件，不應與他人分享。</li><li><em>公開金鑰</em> 可以與他人分享，以便他們可以驗證您的構件的簽名。</li></ul><p>可為您管理簽名的 <code>gpg</code> 工具可在 <a href="https://gnupg.org/download/index.html" target="_blank" rel="noreferrer">GnuPG 網站</a>上找到。您也可以使用套件管理器（例如 <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a>）進行安裝：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpg</span></span></code></pre></div>',6)),s("ol",null,[a[6]||(a[6]=n('<li><p>使用以下命令開始產生金鑰對，並在提示時提供所需的詳細資訊：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --full-generate-key</span></span></code></pre></div></li>',1)),s("li",null,[s("p",null,[a[3]||(a[3]=i("選擇建議的預設金鑰類型。您可以將選取留空並按下 ")),e(h,null,{default:l(()=>a[2]||(a[2]=[i("Enter")])),_:1}),a[4]||(a[4]=i(" 以接受預設值。"))]),a[5]||(a[5]=n(`<div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Please select what kind of key you want:</span></span>
<span class="line"><span>    (1) RSA and RSA</span></span>
<span class="line"><span>    (2) DSA and Elgamal</span></span>
<span class="line"><span>    (3) DSA (sign only)</span></span>
<span class="line"><span>    (4) RSA (sign only)</span></span>
<span class="line"><span>    (9) ECC (sign and encrypt) *default*</span></span>
<span class="line"><span>    (10) ECC (sign only)</span></span>
<span class="line"><span>    (14) Existing key from card</span></span>
<span class="line"><span>Your selection? 9</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please select which elliptic curve you want:</span></span>
<span class="line"><span>    (1) Curve 25519 *default*</span></span>
<span class="line"><span>    (4) NIST P-384</span></span>
<span class="line"><span>    (6) Brainpool P-256</span></span>
<span class="line"><span>Your selection? 1</span></span></code></pre></div><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>在撰寫本文時，這是 <code>ECC (sign and encrypt)</code> 與 <code>Curve 25519</code>。 舊版 <code>gpg</code> 可能預設為 <code>RSA</code> 和 <code>3072</code> 位元金鑰大小。</p></div>`,2))]),a[7]||(a[7]=n(`<li><p>當提示指定金鑰的有效期時，您可以選擇預設的永不過期選項。</p><p>如果您選擇建立一個會自動在設定時間後過期的金鑰，則在金鑰過期時，您需要<a href="https://central.sonatype.org/publish/requirements/gpg/#dealing-with-expired-keys" target="_blank" rel="noreferrer">延長其有效期</a>。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Please specify how long the key should be valid.</span></span>
<span class="line"><span>    0 = key does not expire</span></span>
<span class="line"><span>    &lt;n&gt;  = key expires in n days</span></span>
<span class="line"><span>    &lt;n&gt;w = key expires in n weeks</span></span>
<span class="line"><span>    &lt;n&gt;m = key expires in n months</span></span>
<span class="line"><span>    &lt;n&gt;y = key expires in n years</span></span>
<span class="line"><span>Key is valid for? (0) 0</span></span>
<span class="line"><span>Key does not expire at all</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Is this correct? (y/N) y</span></span></code></pre></div></li><li><p>輸入您的姓名、電子郵件和可選的註解，將金鑰與身份關聯（您可以將註解欄位留空）：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GnuPG needs to construct a user ID to identify your key.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Real name: Jane Doe</span></span>
<span class="line"><span>Email address: janedoe@example.com</span></span>
<span class="line"><span>Comment:</span></span>
<span class="line"><span>You selected this USER-ID:</span></span>
<span class="line"><span>    &quot;Jane Doe &lt;janedoe@example.com&gt;&quot;</span></span></code></pre></div></li><li><p>輸入密碼以加密金鑰，並在提示時重複輸入。</p><p>請將此密碼安全且私密地儲存起來。您稍後將需要它來在簽署構件時存取私密金鑰。</p></li><li><p>使用以下命令查看您建立的金鑰：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-keys</span></span></code></pre></div></li>`,4))]),a[10]||(a[10]=n(`<p>輸出看起來會像這樣：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pub   ed25519 2024-10-06 [SC]</span></span>
<span class="line"><span>      F175482952A225BFD4A07A713EE6B5F76620B385CE</span></span>
<span class="line"><span>uid   [ultimate] Jane Doe &lt;janedoe@example.com&gt;</span></span>
<span class="line"><span>      sub   cv25519 2024-10-06 [E]</span></span></code></pre></div><p>在接下來的步驟中，您需要使用輸出中顯示的金鑰的長型英數字元識別碼。</p><h4 id="上傳公開金鑰" tabindex="-1">上傳公開金鑰 <a class="header-anchor" href="#上傳公開金鑰" aria-label="Permalink to &quot;上傳公開金鑰&quot;">​</a></h4><p>您需要<a href="https://central.sonatype.org/publish/requirements/gpg/#distributing-your-public-key" target="_blank" rel="noreferrer">將公開金鑰上傳到金鑰伺服器</a>，以便 Maven Central 接受它。有多個可用的金鑰伺服器，讓我們使用 <code>keyserver.ubuntu.com</code> 作為預設選擇。</p><p>執行以下命令以上傳您的公開金鑰，使用 <code>gpg</code>，<strong>將您自己的金鑰 ID 替換</strong>到參數中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keyserver</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> keyserver.ubuntu.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --send-keys</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> F175482952A225BFC4A07A715EE6B5F76620B385CE</span></span></code></pre></div><h4 id="匯出您的私密金鑰" tabindex="-1">匯出您的私密金鑰 <a class="header-anchor" href="#匯出您的私密金鑰" aria-label="Permalink to &quot;匯出您的私密金鑰&quot;">​</a></h4><p>要讓您的 Gradle 專案存取您的私密金鑰，您需要將其匯出到二進位檔案中。系統將提示您輸入建立金鑰時使用的密碼。</p><p>使用以下命令，<strong>傳遞您自己的金鑰 ID</strong> 作為參數：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-armor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --export-secret-keys</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> F175482952A225BFC4A07A715EE6B5F76620B385CE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key.gpg</span></span></code></pre></div><p>此命令將建立一個包含您的私密金鑰的 <code>key.gpg</code> 二進位檔案（請務必<strong>不要</strong>使用 <code>--armor</code> 旗標，該旗標只會建立金鑰的純文字版本）。</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>切勿與任何人分享您的私密金鑰檔案 – 只有您應該有權存取它， 因為私密金鑰允許使用您的憑證簽署檔案。</p></div><h2 id="配置專案" tabindex="-1">配置專案 <a class="header-anchor" href="#配置專案" aria-label="Permalink to &quot;配置專案&quot;">​</a></h2><h3 id="準備您的函式庫專案" tabindex="-1">準備您的函式庫專案 <a class="header-anchor" href="#準備您的函式庫專案" aria-label="Permalink to &quot;準備您的函式庫專案&quot;">​</a></h3><p>如果您從範本專案開始開發您的函式庫，那麼現在是更改專案中任何預設名稱以符合您函式庫名稱的好時機。這包括您的函式庫模組名稱以及頂層 <code>build.gradle.kts</code> 檔案中根專案的名稱。</p><p>如果您的專案中有 Android 目標，您應該遵循<a href="https://developer.android.com/build/publish-library/prep-lib-release" target="_blank" rel="noreferrer">準備您的 Android 函式庫發行版</a>的步驟。 最低限度，此過程要求您為您的函式庫<a href="https://developer.android.com/build/publish-library/prep-lib-release#choose-namespace" target="_blank" rel="noreferrer">指定一個適當的命名空間</a>，以便在編譯其資源時產生一個唯一的 <code>R</code> 類別。 請注意，此命名空間與<a href="#choose-and-verify-a-namespace">之前建立的</a> Maven 命名空間不同。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// build.gradle.kts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    namespace </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;io.github.kotlinhandson.fibonacci&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="設定發佈外掛程式" tabindex="-1">設定發佈外掛程式 <a class="header-anchor" href="#設定發佈外掛程式" aria-label="Permalink to &quot;設定發佈外掛程式&quot;">​</a></h3><p>本教學使用 <a href="https://github.com/vanniktech/gradle-maven-publish-plugin" target="_blank" rel="noreferrer">vanniktech/gradle-maven-publish-plugin</a> 來協助向 Maven Central 發佈。 您可以在<a href="https://vanniktech.github.io/gradle-maven-publish-plugin/#advantages-over-maven-publish" target="_blank" rel="noreferrer">此處</a>閱讀有關該外掛程式優點的更多資訊。 請參閱<a href="https://vanniktech.github.io/gradle-maven-publish-plugin/central/" target="_blank" rel="noreferrer">外掛程式文件</a>以了解其用法和可用的配置選項。</p><p>要將外掛程式添加到您的專案中，請將以下行添加到您的函式庫模組的 <code>build.gradle.kts</code> 檔案的 <code>plugins {}</code> 區塊中：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &lt;module directory&gt;/build.gradle.kts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.vanniktech.maven.publish&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.30.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>有關該外掛程式的最新可用版本，請查看其 <a href="https://github.com/vanniktech/gradle-maven-publish-plugin/releases" target="_blank" rel="noreferrer">Releases 頁面</a>。</p></div><p>在同一個檔案中，添加以下配置，確保為您的函式庫自訂所有值：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &lt;module directory&gt;/build.gradle.kts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavenPublishing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    publishToMavenCentral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SonatypeHost.CENTRAL_PORTAL)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    signAllPublications</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    coordinates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(group.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fibonacci&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, version.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Fibonacci library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        description </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;A mathematics calculation library.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        inceptionYear </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2024&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/kotlin-hands-on/fibonacci/&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        licenses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            license</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;The Apache License, Version 2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://www.apache.org/licenses/LICENSE-2.0.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                distribution </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://www.apache.org/licenses/LICENSE-2.0.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        developers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            developer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kotlin-hands-on&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Kotlin Developer Advocate&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/kotlin-hands-on/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        scm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/kotlin-hands-on/fibonacci/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            connection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;scm:git:git://github.com/kotlin-hands-on/fibonacci.git&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            developerConnection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;scm:git:ssh://git@github.com/kotlin-hands-on/fibonacci.git&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>要配置此項，您也可以使用 <a href="https://docs.gradle.org/current/userguide/build_environment.html" target="_blank" rel="noreferrer">Gradle 屬性</a>。</p></div><p>這裡最重要的設定是：</p><ul><li><code>coordinates</code>，它指定您的函式庫的 <code>groupId</code>、<code>artifactId</code> 和 <code>version</code>。</li><li><a href="https://central.sonatype.org/publish/requirements/#license-information" target="_blank" rel="noreferrer">license</a>，您的函式庫在此許可下發佈。</li><li><a href="https://central.sonatype.org/publish/requirements/#developer-information" target="_blank" rel="noreferrer">developer information</a>，列出了函式庫的作者。</li><li><a href="https://central.sonatype.org/publish/requirements/#scm-information" target="_blank" rel="noreferrer">SCM (Source Code Management) information</a>，指定函式庫原始碼的託管位置。</li></ul><h2 id="使用持續整合發佈到-maven-central" tabindex="-1">使用持續整合發佈到 Maven Central <a class="header-anchor" href="#使用持續整合發佈到-maven-central" aria-label="Permalink to &quot;使用持續整合發佈到 Maven Central&quot;">​</a></h2><h3 id="產生使用者權杖" tabindex="-1">產生使用者權杖 <a class="header-anchor" href="#產生使用者權杖" aria-label="Permalink to &quot;產生使用者權杖&quot;">​</a></h3><p>您需要 Maven 存取權杖才能讓 Maven Central 授權您的發佈請求。 開啟 <a href="https://central.sonatype.com/account" target="_blank" rel="noreferrer">Setup Token-Based Authentication</a> 頁面並點擊 <strong>Generate User Token</strong> 按鈕。</p><p>輸出看起來像下面的範例，包含一個使用者名稱和一個密碼。 如果您遺失這些憑證，您需要稍後產生新的憑證，因為 Maven Central 不會儲存它們。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${server}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;l2nfaPmz&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;gh9jT9XfnGtUngWTZwTu/8141keYdmQpipqLPRKeDLTh&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="將機密添加到-github" tabindex="-1">將機密添加到 GitHub <a class="header-anchor" href="#將機密添加到-github" aria-label="Permalink to &quot;將機密添加到 GitHub&quot;">​</a></h3><p>為了在您的 GitHub Actions 工作流程中使用發佈所需的金鑰和憑證，同時保持它們的私密性，您需要將這些值儲存為機密。</p><ol><li><p>在您的 GitHub 儲存庫<strong>Settings</strong> 頁面，點擊 <strong>Security</strong> | <strong>Secrets and variables</strong> | <strong>Actions</strong>。</p></li><li><p>點擊 <code>New repository secret</code> 按鈕並添加以下機密：</p><ul><li><code>MAVEN_CENTRAL_USERNAME</code> 和 <code>MAVEN_CENTRAL_PASSWORD</code> 是由 Central Portal 網站<a href="#generate-the-user-token">為 User Token 產生</a>的值。</li><li><code>SIGNING_KEY_ID</code> 是您簽署金鑰識別碼的<strong>後 8 個字元</strong>，例如 <code>F175482952A225BFC4A07A715EE6B5F76620B385CE</code> 的 <code>20B385CE</code>。</li><li><code>SIGNING_PASSWORD</code> 是您在產生 GPG 金鑰時提供的密碼。</li><li><code>GPG_KEY_CONTENTS</code> 應包含您 <a href="#export-your-private-key">key.gpg 檔案</a>的完整內容。</li></ul><p><img src="`+o+`" alt="將機密添加到 GitHub" width="700"></p></li></ol><p>您將在下一步的 CI 配置中使用這些機密的名稱。</p><h3 id="將-github-actions-工作流程添加到您的專案" tabindex="-1">將 GitHub Actions 工作流程添加到您的專案 <a class="header-anchor" href="#將-github-actions-工作流程添加到您的專案" aria-label="Permalink to &quot;將 GitHub Actions 工作流程添加到您的專案&quot;">​</a></h3><p>您可以設定持續整合來自動建構和發佈您的函式庫。我們將以 <a href="https://docs.github.com/en/actions" target="_blank" rel="noreferrer">GitHub Actions</a> 為例。</p><p>首先，將以下工作流程添加到您的儲存庫的 <code>.github/workflows/publish.yml</code> 檔案中：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .github/workflows/publish.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Publish</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  release</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    types</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">released</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">prereleased</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Release build and publish</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">macOS-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Check out code</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Set up JDK 21</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/setup-java@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          distribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zulu&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          java-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Publish to MavenCentral</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./gradlew publishToMavenCentral --no-configuration-cache</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ORG_GRADLE_PROJECT_mavenCentralUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.MAVEN_CENTRAL_USERNAME }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ORG_GRADLE_PROJECT_mavenCentralPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.MAVEN_CENTRAL_PASSWORD }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ORG_GRADLE_PROJECT_signingInMemoryKeyId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.SIGNING_KEY_ID }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.SIGNING_PASSWORD }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ORG_GRADLE_PROJECT_signingInMemoryKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.GPG_KEY_CONTENTS }}</span></span></code></pre></div><p>一旦您提交並推送此檔案，只要您在託管專案的 GitHub 儲存庫中建立發行版（包括預發行版），此工作流程就會自動執行。工作流程會檢查您的程式碼的目前版本，設定 JDK，然後執行 <code>publishToMavenCentral</code> Gradle 任務。</p><p>使用 <code>publishToMavenCentral</code> 任務時，您仍需要檢查並在 Maven Central 網站上<a href="#create-a-release-on-github">手動發佈您的部署</a>。或者，您可以使用 <code>publishAndReleaseToMavenCentral</code> 任務來完全自動化發佈過程。</p><p>您也可以配置工作流程以在<a href="https://stackoverflow.com/a/61892639" target="_blank" rel="noreferrer">標籤推送到您的儲存庫時觸發</a>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>上述指令稿透過在 Gradle 命令中添加 <code>--no-configuration-cache</code> 來禁用發佈任務的 Gradle <a href="https://docs.gradle.org/current/userguide/configuration_cache.html" target="_blank" rel="noreferrer">配置快取</a>， 因為發佈外掛程式不支援它（請參閱此<a href="https://github.com/gradle/gradle/issues/22779" target="_blank" rel="noreferrer">未解決的問題</a>）。</p></div><p>此動作需要您的簽署詳細資訊和 Maven Central 憑證，您已將其建立為<a href="#add-secrets-to-github">儲存庫機密</a>。</p><p>工作流程配置會自動將這些機密傳輸到環境變數中，使它們可供 Gradle 建構過程使用。</p><h3 id="在-github-上建立發行版" tabindex="-1">在 GitHub 上建立發行版 <a class="header-anchor" href="#在-github-上建立發行版" aria-label="Permalink to &quot;在 GitHub 上建立發行版&quot;">​</a></h3><p>設定好工作流程和機密後，您現在可以<a href="https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository#creating-a-release" target="_blank" rel="noreferrer">建立發行版</a>，這將觸發您的函式庫的發佈。</p><ol><li><p>確保您的函式庫的 <code>build.gradle.kts</code> 檔案中指定的版本號碼是您想要發佈的版本。</p></li><li><p>前往您的 GitHub 儲存庫主頁。</p></li><li><p>在右側邊欄中，點擊 <strong>Releases</strong>。</p></li><li><p>點擊 <strong>Draft a new release</strong> 按鈕（如果您之前未為此儲存庫建立發行版，則點擊 <strong>Create a new release</strong> 按鈕）。</p></li><li><p>每個發行版都有一個標籤。在標籤下拉選單中建立一個新標籤，並設定發行標題（標籤名稱和標題可以相同）。</p><p>您可能希望這些與您在 <code>build.gradle.kts</code> 檔案中指定的函式庫版本號碼相同。</p><p><img src="`+k+'" alt="在 GitHub 上建立發行版" width="700"></p></li><li><p>仔細檢查您想要發行版指向的分支（特別是如果它不是預設分支），並為您的新版本添加適當的發行說明。</p></li><li><p>使用描述下方的核取方塊將發行版標記為預發行版（對於早期存取版本（例如 alpha、beta 或 RC）很有用）。</p><p>您也可以將發行版標記為最新版本（如果您之前已為此儲存庫建立過發行版）。</p></li><li><p>點擊 <strong>Publish release</strong> 按鈕以建立新發行版。</p></li><li><p>點擊 GitHub 儲存庫頁面頂部的 <strong>Actions</strong> 標籤。在這裡，您會看到新發行版觸發了您的發佈工作流程。</p><p>您可以點擊工作流程以查看發佈任務的輸出。</p></li><li><p>工作流程執行完成後，導覽至 Maven Central 上的 <a href="https://central.sonatype.com/publishing/deployments" target="_blank" rel="noreferrer">Deployments</a> 儀表板。您應該會在這裡看到一個新的部署。</p><p>此部署可能會在 <em>pending</em> 或 <em>validating</em> 狀態下維持一段時間，同時 Maven Central 執行檢查。</p></li><li><p>一旦您的部署處於 <em>validated</em> 狀態，請檢查它是否包含您上傳的所有構件。 如果一切看起來正確，請點擊 <strong>Publish</strong> 按鈕以發佈這些構件。</p><p><img src="'+d+'" alt="發佈設定" width="700"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>發行版後，構件需要一些時間（通常約 15-30 分鐘）才能在 Maven Central 儲存庫中公開可用。它們可能需要更長時間才能被索引並在 <a href="https://central.sonatype.com/" target="_blank" rel="noreferrer">Maven Central 網站</a>上可搜尋。</p></div></li></ol><p>要在部署驗證後自動發佈構件，請將工作流程中的 <code>publishToMavenCentral</code> 任務替換為 <code>publishAndReleaseToMavenCentral</code>。</p><h2 id="後續步驟" tabindex="-1">後續步驟 <a class="header-anchor" href="#後續步驟" aria-label="Permalink to &quot;後續步驟&quot;">​</a></h2><ul><li><a href="./multiplatform-publish-lib-setup">了解更多關於設定多平台函式庫發佈和要求</a></li><li><a href="https://shields.io/badges/maven-central-version" target="_blank" rel="noreferrer">將 shield.io 徽章添加到您的 README</a></li><li><a href="https://kotl.in/dokka" target="_blank" rel="noreferrer">使用 Dokka 為您的專案分享 API 文件</a></li><li><a href="https://docs.renovatebot.com/" target="_blank" rel="noreferrer">添加 Renovate 以自動更新相依性</a></li><li><a href="https://klibs.io/" target="_blank" rel="noreferrer">在 JetBrains 的搜尋平台推廣您的函式庫</a></li><li><a href="https://kotlinlang.slack.com/" target="_blank" rel="noreferrer">在 <code>#feed</code> Kotlin Slack 頻道與社群分享您的函式庫</a> (要註冊，請造訪 <a href="https://kotl.in/slack" target="_blank" rel="noreferrer">https://kotl.in/slack</a>)</li></ul>',53))])}const D=c(u,[["render",y]]);export{A as __pageData,D as default};
