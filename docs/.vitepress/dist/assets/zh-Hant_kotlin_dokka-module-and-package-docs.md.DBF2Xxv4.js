import{_ as i,C as l,c as r,o as d,ag as c,G as s,w as o,j as a,a as n}from"./chunks/framework.Bksy39di.js";const v=JSON.parse('{"title":"模組文件","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/dokka-module-and-package-docs.md","filePath":"zh-Hant/kotlin/dokka-module-and-package-docs.md","lastUpdated":1755514048000}'),k={name:"zh-Hant/kotlin/dokka-module-and-package-docs.md"};function u(g,e,h,f,m,b){const t=l("tab"),p=l("tabs");return d(),r("div",null,[e[3]||(e[3]=c(`<h1 id="模組文件" tabindex="-1">模組文件 <a class="header-anchor" href="#模組文件" aria-label="Permalink to &quot;模組文件&quot;">​</a></h1><p>整個模組以及該模組中套件的文件，可以作為獨立的 Markdown 檔案提供。</p><h2 id="檔案格式" tabindex="-1">檔案格式 <a class="header-anchor" href="#檔案格式" aria-label="Permalink to &quot;檔案格式&quot;">​</a></h2><p>在 Markdown 檔案中，整個模組及個別套件的文件由對應的一級標題引入。模組的標題文字<strong>必須</strong>是 <strong>Module <code>&lt;module name&gt;</code></strong>，而套件的標題文字則<strong>必須</strong>是 <strong>Package <code>&lt;package qualified name&gt;</code></strong>。</p><p>該檔案不必同時包含模組與套件的文件。您可以只包含套件或模組文件的檔案。您甚至可以為每個模組或套件建立一個 Markdown 檔案。</p><p>使用 <a href="https://www.markdownguide.org/basic-syntax/" target="_blank" rel="noreferrer">Markdown 語法</a>，您可以新增：</p><ul><li>高達 6 級的標題</li><li>以粗體或斜體格式進行強調</li><li>連結</li><li>行內程式碼</li><li>程式碼區塊</li><li>引言區塊</li></ul><p>以下是一個包含模組與套件文件的範例檔案：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Module kotlin-demo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This content appears under your module name.</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Package org.jetbrains.kotlin.demo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This content appears under your package name in the packages list.</span></span>
<span class="line"><span>It also appears under the first-level heading on your package&#39;s page.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Level 2 heading for package org.jetbrains.kotlin.demo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Content after this heading is also part of documentation for \`org.jetbrains.kotlin.demo\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Package org.jetbrains.kotlin.demo2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This content appears under your package name in the packages list.</span></span>
<span class="line"><span>It also appears under the first-level heading on your package&#39;s page.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Level 2 heading for package org.jetbrains.kotlin.demo2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Content after this heading is also part of documentation for \`org.jetbrains.kotlin.demo2\`</span></span></code></pre></div><p>若要探索使用 Gradle 的範例專案，請參閱 <a href="https://github.com/Kotlin/dokka/tree/2.0.0/examples/gradle/dokka-gradle-example" target="_blank" rel="noreferrer">Dokka Gradle 範例</a>。</p><h2 id="將檔案傳遞給-dokka" tabindex="-1">將檔案傳遞給 Dokka <a class="header-anchor" href="#將檔案傳遞給-dokka" aria-label="Permalink to &quot;將檔案傳遞給 Dokka&quot;">​</a></h2><p>若要將這些檔案傳遞給 Dokka，您需要使用 Gradle、Maven 或 CLI 的對應 <strong>includes</strong> 選項：</p>`,12)),s(p,{group:"build-script"},{default:o(()=>[s(t,{title:"Gradle","group-key":"gradle"},{default:o(()=>e[0]||(e[0]=[a("p",null,[n("在 "),a("a",{href:"/zh-Hant/kotlin/dokka-gradle#includes"},"Source set configuration"),n(" 中使用 "),a("a",{href:"/zh-Hant/kotlin/dokka-gradle#source-set-configuration"},"includes"),n(" 選項。")],-1)])),_:1}),s(t,{title:"Maven","group-key":"mvn"},{default:o(()=>e[1]||(e[1]=[a("p",null,[n("在 "),a("a",{href:"/zh-Hant/kotlin/dokka-maven#general-configuration"},"General configuration"),n(" 中使用 "),a("a",{href:"/zh-Hant/kotlin/dokka-maven#includes"},"includes"),n(" 選項。")],-1)])),_:1}),s(t,{title:"CLI","group-key":"cli"},{default:o(()=>e[2]||(e[2]=[a("p",null,[n("如果您使用命令列配置，請在 "),a("a",{href:"/zh-Hant/kotlin/dokka-cli#source-set-options"},"Source set options"),n(" 中使用 "),a("a",{href:"/zh-Hant/kotlin/dokka-cli#includes-cli"},"includes"),n(" 選項。")],-1),a("p",null,[n("如果您使用 JSON 配置，請在 "),a("a",{href:"/zh-Hant/kotlin/dokka-cli#general-configuration"},"General configuration"),n(" 中使用 "),a("a",{href:"/zh-Hant/kotlin/dokka-cli#includes-json"},"includes"),n(" 選項。")],-1)])),_:1})]),_:1})])}const x=i(k,[["render",u]]);export{v as __pageData,x as default};
