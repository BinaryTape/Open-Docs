import{_ as t,c as e,o as i,ag as o}from"./chunks/framework.Bksy39di.js";const h=JSON.parse('{"title":"API 穩定性與發佈類型","description":"","frontmatter":{"title":"API 穩定性與發佈類型","custom_edit_url":null},"headers":[],"relativePath":"zh-Hant/koin/support/api-stability.md","filePath":"zh-Hant/koin/support/api-stability.md","lastUpdated":1748365453000}'),n={name:"zh-Hant/koin/support/api-stability.md"};function l(r,a,p,s,d,c){return i(),e("div",null,a[0]||(a[0]=[o('<h1 id="api-穩定性與發佈類型" tabindex="-1">API 穩定性與發佈類型 <a class="header-anchor" href="#api-穩定性與發佈類型" aria-label="Permalink to &quot;API 穩定性與發佈類型&quot;">​</a></h1><h2 id="api-穩定性" tabindex="-1">API 穩定性 <a class="header-anchor" href="#api-穩定性" aria-label="Permalink to &quot;API 穩定性&quot;">​</a></h2><p>Koin 專案致力於在不同版本間維持高度相容性。Kotzilla 團隊與所有活躍的維護者，努力確保新發佈版本中引入的任何變更、增強功能或最佳化，皆不會破壞現有應用程式。我們理解穩定且可預測的升級路徑對使用者而言至關重要，我們也努力在發展 API 時將中斷降至最低。</p><h3 id="實驗性-api-koinexperimentalapi" tabindex="-1">實驗性 API - @KoinExperimentalAPI <a class="header-anchor" href="#實驗性-api-koinexperimentalapi" aria-label="Permalink to &quot;實驗性 API - @KoinExperimentalAPI&quot;">​</a></h3><p>為促進創新並同時收集寶貴的社群回饋，我們在 <code>@KoinExperimentalAPI</code> 註解下引入新功能和 API。此指定表示：</p><ul><li><strong>活躍開發中</strong>: 該 API 仍處於設計階段，並且可能會變更。</li><li><strong>鼓勵提供回饋</strong>: 我們邀請開發者測試這些功能並分享他們的經驗，協助我們完善並改進設計。</li><li><strong>潛在的破壞性變更</strong>: 因為這些 API 屬於實驗性質，它們可能會在後續發佈版本中根據社群輸入進行修改或移除。</li></ul><h3 id="棄用政策-deprecated" tabindex="-1">棄用政策 - @Deprecated <a class="header-anchor" href="#棄用政策-deprecated" aria-label="Permalink to &quot;棄用政策 - @Deprecated&quot;">​</a></h3><p>為確保 API 部分內容逐步淘汰時能順利過渡，Koin 使用 <code>@Deprecated</code> 註解明確標記這些區域。我們的棄用策略包括：</p><p>清晰的警告：棄用的 API 會附帶一則訊息，指出建議的替代方案或棄用的原因。</p><p>棄用級別：</p><ul><li><strong>警告</strong>: 表示儘管 API 仍可使用，但不鼓勵其使用，應盡早替換。</li><li><strong>錯誤</strong>: 表示該 API 已不再打算使用，並且無法編譯，確保重要變更能及時處理。</li></ul><p>這種方法有助於開發者識別和更新依賴過時 API 的程式碼，減少技術債務，並為更簡潔、更穩固的程式碼庫鋪平道路。<code>ReplaceWith</code> 可與 API 一併提供，視更新的複雜性而定。</p><h3 id="內部-api-koininternalapi" tabindex="-1">內部 API - @KoinInternalAPI <a class="header-anchor" href="#內部-api-koininternalapi" aria-label="Permalink to &quot;內部 API - @KoinInternalAPI&quot;">​</a></h3><p>對於嚴格用於 Koin 框架內部使用的功能，我們引入 <code>@KoinInternalAPI</code> 註解。這些 API 不屬於公開契約的一部分，並且：</p><ul><li><strong>僅限內部使用</strong>: 僅為 Koin 的內部機制而設計。</li><li><strong>可能變更</strong>: 未來發佈版本中可能在不另行通知的情況下進行修改或移除。</li><li><strong>避免外部使用</strong>: 為維持長期相容性，不鼓勵開發者在其應用程式碼中使用這些 API。</li></ul><h3 id="使用-kotlin-的-optin-註解選擇啟用" tabindex="-1">使用 Kotlin 的 @OptIn 註解選擇啟用 <a class="header-anchor" href="#使用-kotlin-的-optin-註解選擇啟用" aria-label="Permalink to &quot;使用 Kotlin 的 @OptIn 註解選擇啟用&quot;">​</a></h3><p>Koin 中實驗性 API 和棄用 API 的使用都需要選擇啟用，以確保開發者完全知曉該 API 的狀態和潛在風險。透過使用 Kotlin 的 <code>@OptIn</code> 註解，您明確承認您的程式碼依賴於屬於實驗性質或已標記為棄用的 API。</p><h2 id="發佈類型" tabindex="-1">發佈類型 <a class="header-anchor" href="#發佈類型" aria-label="Permalink to &quot;發佈類型&quot;">​</a></h2><p>Koin 遵循語義化版本控制 (SemVer)，並帶有額外的字首識別符，以表示每個發佈版本的成熟度和預期用途。我們使用的字首包括：</p><ul><li><strong>發佈候選版 (RC)</strong>: 這些發佈版本是穩定版本的完整功能候選版。它們會進行最終測試和完善。雖然 RC 版本旨在高度相容，但根據最終回饋，在正式發佈之前仍可能發生微小變更。</li><li><strong>Alpha / Beta</strong>: Alpha 和 Beta 版本主要用於測試和回饋。它們通常包含實驗性功能，並且可能不完全符合穩定 API 的保證。鼓勵開發者在非生產環境中試用這些發佈版本，以協助識別潛在問題並引導未來的改進。</li></ul>',20)]))}const I=t(n,[["render",l]]);export{h as __pageData,I as default};
