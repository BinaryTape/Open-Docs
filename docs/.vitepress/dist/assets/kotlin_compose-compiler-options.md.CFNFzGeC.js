import{_ as i,c as a,o as e,ag as p}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"Compose 编译器选项 DSL","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/compose-compiler-options.md","filePath":"kotlin/compose-compiler-options.md","lastUpdated":1754307826000}'),l={name:"kotlin/compose-compiler-options.md"};function n(t,s,o,r,h,k){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="compose-编译器选项-dsl" tabindex="-1">Compose 编译器选项 DSL <a class="header-anchor" href="#compose-编译器选项-dsl" aria-label="Permalink to &quot;Compose 编译器选项 DSL&quot;">​</a></h1><p>Compose 编译器 Gradle 插件提供了用于各种编译器选项的 DSL。你可以在应用该插件的模块的 <code>build.gradle.kts</code> 文件中的 <code>composeCompiler {}</code> 代码块中配置编译器。</p><p>你可以指定两种选项：</p><ul><li>通用编译器设置，可以在任何给定项目中根据需要禁用或启用。</li><li>特性标志，用于启用或禁用新的实验性的特性，这些特性最终应成为基线的一部分。</li></ul><p>你可以在 Compose 编译器 Gradle 插件 API 参考中找到<a href="https://kotlinlang.org/api/kotlin-gradle-plugin/compose-compiler-gradle-plugin/org.jetbrains.kotlin.compose.compiler.gradle/-compose-compiler-gradle-plugin-extension/" target="_blank" rel="noreferrer">可用通用设置列表</a>和<a href="https://kotlinlang.org/api/kotlin-gradle-plugin/compose-compiler-gradle-plugin/org.jetbrains.kotlin.compose.compiler.gradle/-compose-feature-flag/-companion/" target="_blank" rel="noreferrer">支持的特性标志列表</a>。</p><p>这是一个配置示例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composeCompiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    includeSourceInformation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    featureFlags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ComposeFeatureFlag.StrongSkipping.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ComposeFeatureFlag.OptimizeNonSkippingGroups</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>Gradle 插件为一些在 Kotlin 2.0 之前仅能手动指定的 Compose 编译器选项提供了默认值。例如，如果你使用 <code>freeCompilerArgs</code> 设置了其中任何一个，Gradle 将报告重复选项错误。</p></div><h2 id="特性标志的目的与用途" tabindex="-1">特性标志的目的与用途 <a class="header-anchor" href="#特性标志的目的与用途" aria-label="Permalink to &quot;特性标志的目的与用途&quot;">​</a></h2><p>特性标志被组织成一组单独的选项，以最小化在新标志不断推出和弃用时对顶层属性的更改。</p><p>要启用默认禁用的特性标志，请在 set 中指定它，例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">featureFlags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ComposeFeatureFlag.OptimizeNonSkippingGroups)</span></span></code></pre></div><p>要禁用默认启用的特性标志，请调用其上的 <code>disabled()</code> 函数，例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">featureFlags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ComposeFeatureFlag.StrongSkipping.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>如果你直接配置 Compose 编译器，请使用以下语法向其传递特性标志：</p><div class="language-none vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">none</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-P plugin:androidx.compose.compiler.plugins.kotlin:featureFlag=&lt;flag name&gt;</span></span></code></pre></div><p>关于支持的特性标志，请参见 Compose 编译器 Gradle 插件 API 参考中的<a href="https://kotlinlang.org/api/kotlin-gradle-plugin/compose-compiler-gradle-plugin/org.jetbrains.kotlin.compose.compiler.gradle/-compose-feature-flag/-companion/" target="_blank" rel="noreferrer">列表</a>。</p>`,17)]))}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
