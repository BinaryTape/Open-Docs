import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/sqldelight/common/types_sqlite.md","filePath":"zh-Hant/sqldelight/common/types_sqlite.md","lastUpdated":1748435462000}'),l={name:"zh-Hant/sqldelight/common/types_sqlite.md"};function n(p,s,h,o,d,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="sqlite-型別" tabindex="-1">SQLite 型別 <a class="header-anchor" href="#sqlite-型別" aria-label="Permalink to &quot;SQLite 型別&quot;">​</a></h2><p>SQLDelight 的欄位定義與一般的 SQLite 欄位定義相同，但支援一項<a href="#custom-column-types">額外欄位約束</a>，用於指定生成介面中該欄位的 Kotlin 型別。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> some_types</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  some_long </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 在資料庫中儲存為 INTEGER，取回時為 Long</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  some_double </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 在資料庫中儲存為 REAL，取回時為 Double</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  some_string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 在資料庫中儲存為 TEXT，取回時為 String</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  some_blob BLOB               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 在資料庫中儲存為 BLOB，取回時為 ByteArray</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="基本型別" tabindex="-1">基本型別 <a class="header-anchor" href="#基本型別" aria-label="Permalink to &quot;基本型別&quot;">​</a></h2><p>一個同級模組，為您的便利提供基本型別的轉換。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-P28Vp" id="tab-uxMNyRW" checked><label data-title="Kotlin" for="tab-uxMNyRW">Kotlin</label><input type="radio" name="group-P28Vp" id="tab-meJgkly"><label data-title="Groovy" for="tab-meJgkly">Groovy</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.cash.sqldelight:primitive-adapters:2.1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  implementation </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.cash.sqldelight:primitive-adapters:2.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>存在以下轉換器：</p><ul><li><code>FloatColumnAdapter</code> — 用於 SQL 型別隱式儲存為 <code>kotlin.Double</code> 時，取回 <code>kotlin.Float</code></li><li><code>IntColumnAdapter</code> — 用於 SQL 型別隱式儲存為 <code>kotlin.Long</code> 時，取回 <code>kotlin.Int</code></li><li><code>ShortColumnAdapter</code> — 用於 SQL 型別隱式儲存為 <code>kotlin.Long</code> 時，取回 <code>kotlin.Short</code></li></ul>`,8)]))}const E=i(l,[["render",n]]);export{c as __pageData,E as default};
