import{_ as r}from"./chunks/direct-integration-scheme.Cw1ubqmC.js";import{_ as d,a as k,b as h,c as g}from"./chunks/xcode-spm-usage.Dn1odtN3.js";import{_ as c,C as p,c as u,o as E,j as s,G as l,ag as t,a,w as n}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"ローカルのSwiftパッケージからKotlinを使用する","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/multiplatform-spm-local-integration.md","filePath":"ja/kmp/multiplatform-spm-local-integration.md","lastUpdated":1755516278000}'),m={name:"ja/kmp/multiplatform-spm-local-integration.md"};function F(y,i,f,C,b,S){const o=p("tldr"),e=p("shortcut");return E(),u("div",null,[i[17]||(i[17]=s("h1",{id:"ローカルのswiftパッケージからkotlinを使用する",tabindex:"-1"},[a("ローカルのSwiftパッケージからKotlinを使用する "),s("a",{class:"header-anchor",href:"#ローカルのswiftパッケージからkotlinを使用する","aria-label":'Permalink to "ローカルのSwiftパッケージからKotlinを使用する"'},"​")],-1)),l(o,null,{default:n(()=>i[0]||(i[0]=[a(" これはローカルでの統合方法です。次の場合に役立ちます。"),s("br",null,null,-1),s("ul",null,[s("li",null,"ローカルのSPMモジュールを持つiOSアプリがある。"),s("li",null,"ローカルマシンでiOSをターゲットとするKotlin Multiplatformプロジェクトを既にセットアップしている。"),s("li",null,[a("既存のiOSプロジェクトが静的リンクタイプを使用している。"),s("br")])],-1),s("p",null,[s("a",{href:"./multiplatform-ios-integration-overview"},"最適な統合方法を選択する")],-1)])),_:1}),i[18]||(i[18]=t("",9)),i[19]||(i[19]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"spmのbinarytarget統合からの移行",tabindex:"-1"},[a("SPMの"),s("code",null,"binaryTarget"),a("統合からの移行 "),s("a",{class:"header-anchor",href:"#spmのbinarytarget統合からの移行","aria-label":'Permalink to "SPMの`binaryTarget`統合からの移行 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[20]||(i[20]=s("p",null,[s("code",null,"binaryTarget"),a("を使用したSPM統合から移行するには：")],-1)),s("ol",null,[s("li",null,[i[2]||(i[2]=a("Xcodeで、")),i[3]||(i[3]=s("strong",null,"Product",-1)),i[4]||(i[4]=a(" | ")),i[5]||(i[5]=s("strong",null,"Clean Build Folder",-1)),i[6]||(i[6]=a(" を使用するか、")),l(e,null,{default:n(()=>i[1]||(i[1]=[a("Cmd + Shift + K")])),_:1}),i[7]||(i[7]=a("ショートカットでビルドディレクトリをクリーンアップします。"))]),i[8]||(i[8]=s("li",null,[a("すべての"),s("code",null,"Package.swift"),a("ファイルから、Kotlinフレームワークを含むパッケージへの依存関係と、プロダクトへのターゲット依存関係の両方を削除します。")],-1))]),i[21]||(i[21]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"cocoapodsプラグインからの移行",tabindex:"-1"},[a("CocoaPodsプラグインからの移行 "),s("a",{class:"header-anchor",href:"#cocoapodsプラグインからの移行","aria-label":'Permalink to "CocoaPodsプラグインからの移行 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[22]||(i[22]=s("div",{class:"danger custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,[s("code",null,"cocoapods {}"),a("ブロックに他のPodへの依存関係がある場合は、CocoaPods統合アプローチに頼る必要があります。現在、マルチモーダルSPMプロジェクトでPodとKotlinフレームワークの両方に依存関係を持つことは不可能です。")])],-1)),i[23]||(i[23]=s("p",null,"CocoaPodsプラグインから移行するには：",-1)),s("ol",null,[s("li",null,[s("p",null,[i[10]||(i[10]=a("Xcodeで、")),i[11]||(i[11]=s("strong",null,"Product",-1)),i[12]||(i[12]=a(" | ")),i[13]||(i[13]=s("strong",null,"Clean Build Folder",-1)),i[14]||(i[14]=a(" を使用するか、")),l(e,null,{default:n(()=>i[9]||(i[9]=[a("Cmd + Shift + K")])),_:1}),i[15]||(i[15]=a("ショートカットでビルドディレクトリをクリーンアップします。"))])]),i[16]||(i[16]=t("",3))]),i[24]||(i[24]=t("",8))])}const A=c(m,[["render",F]]);export{B as __pageData,A as default};
