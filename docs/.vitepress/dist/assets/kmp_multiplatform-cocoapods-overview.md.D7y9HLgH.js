import{_ as d}from"./chunks/as-project-wizard.Dms9yQTz.js";import{_ as r}from"./chunks/disable-sandboxing-cocoapods.CXTxy-d-.js";import{_ as k,C as o,c,o as g,j as s,G as l,ag as n,a,w as e}from"./chunks/framework.Bksy39di.js";const P=JSON.parse('{"title":"CocoaPods 概览与设置","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/multiplatform-cocoapods-overview.md","filePath":"kmp/multiplatform-cocoapods-overview.md","lastUpdated":1755516278000}'),u={name:"kmp/multiplatform-cocoapods-overview.md"};function b(y,i,F,E,m,C){const h=o("tldr"),t=o("TabItem"),p=o("Tabs");return g(),c("div",null,[i[8]||(i[8]=s("h1",{id:"cocoapods-概览与设置",tabindex:"-1"},[a("CocoaPods 概览与设置 "),s("a",{class:"header-anchor",href:"#cocoapods-概览与设置","aria-label":'Permalink to "CocoaPods 概览与设置"'},"​")],-1)),l(h,null,{default:e(()=>i[0]||(i[0]=[a(" 这是一种本地集成方法。它适用于以下情况："),s("br",null,null,-1),s("ul",null,[s("li",null,"你有一个使用 CocoaPods 的 iOS 项目的单体版本库设置。"),s("li",null,[a("你的 Kotlin Multiplatform 项目有 CocoaPods 依赖项。"),s("br")])],-1),s("p",null,[s("a",{href:"./multiplatform-ios-integration-overview"},"选择最适合你的集成方法")],-1)])),_:1}),i[9]||(i[9]=n('<p>Kotlin/Native 提供了与 <a href="https://cocoapods.org/" target="_blank" rel="noreferrer">CocoaPods 依赖项管理器</a>的集成。你可以添加对 Pod 库的依赖项，也可以将 Kotlin 项目用作 CocoaPods 依赖项。</p><p>你可以在 IntelliJ IDEA 或 Android Studio 中直接管理 Pod 依赖项，并享受所有额外特性，例如代码高亮和自动补全。你可以使用 Gradle 构建整个 Kotlin 项目，而无需切换到 Xcode。</p><p>只有当你想要修改 Swift/Objective-C 代码，或者在 Apple 模拟器或设备上运行应用程序时，才需要 Xcode。要使用 Xcode，请先<a href="#update-podfile-for-xcode">更新你的 Podfile</a>。</p><h2 id="设置-cocoapods-工作环境" tabindex="-1">设置 CocoaPods 工作环境 <a class="header-anchor" href="#设置-cocoapods-工作环境" aria-label="Permalink to &quot;设置 CocoaPods 工作环境&quot;">​</a></h2><p>使用你选择的安装工具安装 <a href="https://cocoapods.org/" target="_blank" rel="noreferrer">CocoaPods 依赖项管理器</a>：</p>',5)),l(p,null,{default:e(()=>[l(t,{title:"RVM"},{default:e(()=>i[1]||(i[1]=[s("ol",null,[s("li",null,[s("p",null,[a("安装 "),s("a",{href:"https://rvm.io/rvm/install",target:"_blank",rel:"noreferrer"},"RVM"),a("，如果你尚未安装。")])]),s("li",null,[s("p",null,"安装 Ruby。你可以选择一个特定版本："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"rvm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," install"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ruby"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 3.0.0")])])])])]),s("li",null,[s("p",null,"安装 CocoaPods："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"sudo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gem"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," install"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -n"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /usr/local/bin"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," cocoapods")])])])])])],-1)])),_:1}),l(t,{title:"Rbenv"},{default:e(()=>i[2]||(i[2]=[s("ol",null,[s("li",null,[s("p",null,[a("安装 "),s("a",{href:"https://github.com/rbenv/rbenv#installation",target:"_blank",rel:"noreferrer"},"rbenv from GitHub"),a("，如果你尚未安装。")])]),s("li",null,[s("p",null,"安装 Ruby。你可以选择一个特定版本："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"rbenv"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," install"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 3.0.0")])])])])]),s("li",null,[s("p",null,"将 Ruby 版本设置为某个目录的本地版本或整个机器的全局版本："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"rbenv"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," global"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 3.0.0")])])])])]),s("li",null,[s("p",null,"安装 CocoaPods："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"sudo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gem"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," install"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -n"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /usr/local/bin"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," cocoapods")])])])])])],-1)])),_:1}),l(t,{title:"Default Ruby"},{default:e(()=>i[3]||(i[3]=[s("div",{class:"note custom-block"},[s("p",{class:"custom-block-title"},"NOTE"),s("p",null,"此安装方式不适用于搭载 Apple M 芯片的设备。请使用其他工具设置 CocoaPods 工作环境。")],-1),s("p",null,"你可以使用 macOS 上应默认提供的 Ruby 安装 CocoaPods 依赖项管理器：",-1),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"sudo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," gem"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," install"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," cocoapods")])])])],-1)])),_:1}),l(t,{title:"Homebrew"},{default:e(()=>i[4]||(i[4]=[s("div",{class:"danger custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,[a("使用 Homebrew 安装 CocoaPods 可能会导致兼容性问题。 安装 CocoaPods 时，Homebrew 也会安装对使用 Xcode 必需的 "),s("a",{href:"https://github.com/CocoaPods/Xcodeproj",target:"_blank",rel:"noreferrer"},"Xcodeproj"),a(" gem。 但是，它无法通过 Homebrew 更新，并且如果已安装的 Xcodeproj 尚不支持最新的 Xcode 版本，你将在 Pod 安装时遇到错误。如果出现这种情况，请尝试其他工具安装 CocoaPods。")])],-1),s("ol",null,[s("li",null,[s("p",null,[a("安装 "),s("a",{href:"https://brew.sh/",target:"_blank",rel:"noreferrer"},"Homebrew"),a("，如果你尚未安装。")])]),s("li",null,[s("p",null,"安装 CocoaPods："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"brew"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," install"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," cocoapods")])])])])])],-1)])),_:1})]),_:1}),i[10]||(i[10]=n('<p>如果在安装过程中遇到问题，请查阅<a href="#possible-issues-and-solutions">可能的问题和解决方案</a>章节。</p><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><p>当环境设置好后，你可以创建一个新的 Kotlin Multiplatform 项目。为此，请使用 Kotlin Multiplatform 网页向导或 Android Studio 的 Kotlin Multiplatform 插件。</p><h3 id="使用网页向导" tabindex="-1">使用网页向导 <a class="header-anchor" href="#使用网页向导" aria-label="Permalink to &quot;使用网页向导&quot;">​</a></h3><p>要使用网页向导创建项目并配置 CocoaPods 集成：</p><ol><li><p>打开 <a href="https://kmp.jetbrains.com" target="_blank" rel="noreferrer">Kotlin Multiplatform 向导</a> 并为你的项目选择目标平台。</p></li><li><p>点击 <strong>Download</strong> 按钮并解压下载的归档文件。</p></li><li><p>在 Android Studio 中，选择菜单中的 <strong>File | Open</strong>。</p></li><li><p>导航到解压后的项目文件夹，然后点击 <strong>Open</strong>。</p></li><li><p>将 Kotlin CocoaPods Gradle 插件添加到版本目录。在 <code>gradle/libs.versions.toml</code> 文件中，将以下声明添加到 <code>[plugins]</code> 代码块中：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kotlinCocoapods = { id = &quot;org.jetbrains.kotlin.native.cocoapods&quot;, version.ref = &quot;kotlin&quot; }</span></span></code></pre></div></li><li><p>导航到项目的根 <code>build.gradle.kts</code> 文件，并将以下别名添加到 <code>plugins {}</code> 代码块中：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(libs.plugins.kotlinCocoapods) apply </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div></li><li><p>打开你想要集成 CocoaPods 的模块，例如 <code>composeApp</code> 模块，并将以下别名添加到 <code>plugins {}</code> 代码块中：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(libs.plugins.kotlinCocoapods)</span></span></code></pre></div></li></ol><p>现在你已准备好<a href="#configure-the-project">在 Kotlin Multiplatform 项目中配置 CocoaPods</a>。</p><h3 id="在-android-studio-中" tabindex="-1">在 Android Studio 中 <a class="header-anchor" href="#在-android-studio-中" aria-label="Permalink to &quot;在 Android Studio 中&quot;">​</a></h3><p>要在 Android Studio 中创建具有 CocoaPods 集成的项目：</p><ol><li><p>在 Android Studio 中安装 <a href="https://plugins.jetbrains.com/plugin/14936-kotlin-multiplatform" target="_blank" rel="noreferrer">Kotlin Multiplatform 插件</a>。</p></li><li><p>在 Android Studio 中，选择菜单中的 <strong>File</strong> | <strong>New</strong> | <strong>New Project</strong>。</p></li><li><p>在项目模板列表中，选择 <strong>Kotlin Multiplatform App</strong>，然后点击 <strong>Next</strong>。</p></li><li><p>为你的应用程序命名，然后点击 <strong>Next</strong>。</p></li><li><p>选择 <strong>CocoaPods Dependency Manager</strong> 作为 iOS framework 分发选项。</p><p><img src="'+d+`" alt="Android Studio wizard with the Kotlin Multiplatform plugin" width="700"></p></li><li><p>其他所有选项保持默认。点击 <strong>Finish</strong>。</p><p>该插件将自动生成已设置 CocoaPods 集成的项目。</p></li></ol><h2 id="配置项目" tabindex="-1">配置项目 <a class="header-anchor" href="#配置项目" aria-label="Permalink to &quot;配置项目&quot;">​</a></h2><p>要在你的 Multiplatform 项目中配置 Kotlin CocoaPods Gradle 插件：</p><ol><li><p>在你的项目的共享模块的 <code>build.gradle(.kts)</code> 中，应用 CocoaPods 插件以及 Kotlin Multiplatform 插件。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>如果你已通过<a href="#using-web-wizard">网页向导</a>或<a href="#in-android-studio">适用于 Android Studio 的 Kotlin Multiplatform 插件</a>创建项目，请跳过此步骤。</p></div><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;multiplatform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;native.cocoapods&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>在 <code>cocoapods</code> 代码块中配置 Podspec 文件的 <code>version</code>、<code>summary</code>、<code>homepage</code> 和 <code>baseName</code>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;multiplatform&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;native.cocoapods&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 必需属性</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 在此处指定所需的 Pod 版本</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 否则，使用 Gradle 项目版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Some description for a Kotlin/Native module&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Link to a Kotlin/Native module homepage&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 可选属性</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 在此处配置 Pod 名称，而不是更改 Gradle 项目名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MyCocoaPod&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        framework</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 必需属性              </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Framework 名称配置。请使用此属性而非已弃用的 &#39;frameworkName&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            baseName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MyFramework&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 可选属性</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 指定 framework 链接类型。默认情况下为动态链接。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            isStatic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 依赖项导出</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 如果你有其他项目模块，请取消注释并指定：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // export(project(&quot;:&lt;your other KMP module&gt;&quot;))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            transitiveExport </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 这是默认值。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 将自定义 Xcode 配置映射到 NativeBuildType</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        xcodeConfigurationToNativeBuildType[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CUSTOM_DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NativeBuildType.DEBUG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        xcodeConfigurationToNativeBuildType[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CUSTOM_RELEASE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NativeBuildType.RELEASE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>关于 Kotlin DSL 的完整语法，请参阅 <a href="https://github.com/JetBrains/kotlin/blob/master/libraries/tools/kotlin-gradle-plugin/src/common/kotlin/org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsExtension.kt" target="_blank" rel="noreferrer">Kotlin Gradle 插件版本库</a>。</p></div></li><li><p>在 IntelliJ IDEA 中运行 <strong>Build</strong> | <strong>Reload All Gradle Projects</strong>（或在 Android Studio 中运行 <strong>File</strong> | <strong>Sync Project with Gradle Files</strong>）以重新导入项目。</p></li><li><p>生成 <a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html" target="_blank" rel="noreferrer">Gradle wrapper</a> 以避免 Xcode 构建期间的兼容性问题。</p></li></ol><p>应用 CocoaPods 插件后，它会执行以下操作：</p><ul><li>为所有 macOS、iOS、tvOS 和 watchOS 目标添加 <code>debug</code> 和 <code>release</code> framework 作为输出二进制文件。</li><li>创建一个 <code>podspec</code> 任务，该任务为项目生成一个 <a href="https://guides.cocoapods.org/syntax/podspec.html" target="_blank" rel="noreferrer">Podspec</a> 文件。</li></ul><p><code>Podspec</code> 文件包含输出 framework 的路径以及在 Xcode 项目的构建过程中自动构建此 framework 的脚本阶段。</p><h2 id="更新-xcode-的-podfile" tabindex="-1">更新 Xcode 的 Podfile <a class="header-anchor" href="#更新-xcode-的-podfile" aria-label="Permalink to &quot;更新 Xcode 的 Podfile&quot;">​</a></h2><p>如果你想将 Kotlin 项目导入 Xcode 项目：</p><ol><li><p>在 Kotlin 项目的 iOS 部分，对 Podfile 进行更改：</p><ul><li><p>如果你的项目有任何 Git、HTTP 或自定义 Podspec 版本库依赖项，请在 Podfile 中指定 Podspec 的路径。</p><p>例如，如果你添加对 <code>podspecWithFilesExample</code> 的依赖项，请在 Podfile 中声明 Podspec 的路径：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ios-app&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # ... other dependencies ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;podspecWithFilesExample&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cocoapods/externalSources/url/podspecWithFilesExample&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><code>:path</code> 应包含 Pod 的文件路径。</p></li><li><p>如果你从自定义 Podspec 版本库添加库，请在 Podfile 的开头指定 specs 的<a href="https://guides.cocoapods.org/syntax/podfile.html#source" target="_blank" rel="noreferrer">位置</a>：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://github.com/Kotlin/kotlin-cocoapods-spec.git&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin-cocoapods-xcproj&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ... other dependencies ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div></li></ul></li><li><p>在项目目录中运行 <code>pod install</code>。</p><p>当你首次运行 <code>pod install</code> 时，它会创建 <code>.xcworkspace</code> 文件。此文件包含你的原始 <code>.xcodeproj</code> 和 CocoaPods 项目。</p></li><li><p>关闭你的 <code>.xcodeproj</code> 并改为打开新的 <code>.xcworkspace</code> 文件。这样可以避免项目依赖项方面的问题。</p></li><li><p>在 IntelliJ IDEA 中运行 <strong>Build</strong> | <strong>Reload All Gradle Projects</strong>（或在 Android Studio 中运行 <strong>File</strong> | <strong>Sync Project with Gradle Files</strong>）以重新导入项目。</p></li></ol><p>如果你不在 Podfile 中进行这些更改，<code>podInstall</code> 任务将失败，并且 CocoaPods 插件将在日志中显示错误消息。</p><h2 id="可能的问题和解决方案" tabindex="-1">可能的问题和解决方案 <a class="header-anchor" href="#可能的问题和解决方案" aria-label="Permalink to &quot;可能的问题和解决方案&quot;">​</a></h2>`,21)),i[11]||(i[11]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"cocoapods-安装",tabindex:"-1"},[a("CocoaPods 安装 "),s("a",{class:"header-anchor",href:"#cocoapods-安装","aria-label":'Permalink to "CocoaPods 安装 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[12]||(i[12]=n('<h4 id="ruby-安装" tabindex="-1">Ruby 安装 <a class="header-anchor" href="#ruby-安装" aria-label="Permalink to &quot;Ruby 安装&quot;">​</a></h4><p>CocoaPods 使用 Ruby 构建，你可以使用 macOS 上应默认提供的 Ruby 安装它。 Ruby 1.9 或更高版本内置了 RubyGems 包管理框架，可帮助你安装 <a href="https://guides.cocoapods.org/using/getting-started.html#installation" target="_blank" rel="noreferrer">CocoaPods 依赖项管理器</a>。</p><p>如果你在安装和使用 CocoaPods 时遇到问题，请遵循<a href="https://www.ruby-lang.org/en/documentation/installation/" target="_blank" rel="noreferrer">此指南</a>安装 Ruby，或参考 <a href="https://rubygems.org/pages/download/" target="_blank" rel="noreferrer">RubyGems 网站</a>安装该框架。</p><h4 id="版本兼容性" tabindex="-1">版本兼容性 <a class="header-anchor" href="#版本兼容性" aria-label="Permalink to &quot;版本兼容性&quot;">​</a></h4><p>我们建议使用最新版本的 Kotlin。如果你当前的版本早于 1.7.0，则需要额外安装 <a href="https://github.com/square/cocoapods-generate#installation%22" target="_blank" rel="noreferrer"><code>cocoapods-generate</code></a> 插件。</p><p>但是，<code>cocoapods-generate</code> 与 Ruby 3.0.0 或更高版本不兼容。在这种情况下，请降级 Ruby 或将 Kotlin 升级到 1.7.0 或更高版本。</p>',6)),i[13]||(i[13]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"使用-xcode-时出现构建错误",tabindex:"-1"},[a("使用 Xcode 时出现构建错误 "),s("a",{class:"header-anchor",href:"#使用-xcode-时出现构建错误","aria-label":'Permalink to "使用 Xcode 时出现构建错误 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[14]||(i[14]=n('<p>CocoaPods 安装的一些变体可能导致 Xcode 中出现构建错误。 通常，Kotlin Gradle 插件会在 <code>PATH</code> 中发现 <code>pod</code> 可执行文件，但这可能因你的环境而异。</p><p>要显式设置 CocoaPods 安装路径，你可以手动将其添加到项目的 <code>local.properties</code> 文件中，或使用 shell 命令：</p><ul><li><p>如果使用代码编辑器，请将以下行添加到 <code>local.properties</code> 文件中：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kotlin.apple.cocoapods.bin=/Users/Jane.Doe/.rbenv/shims/pod</span></span></code></pre></div></li><li><p>如果使用终端，请运行以下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kotlin.apple.cocoapods.bin=$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pod)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local.properties</span></span></code></pre></div></li></ul>',3)),i[15]||(i[15]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"找不到模块或-framework",tabindex:"-1"},[a("找不到模块或 framework "),s("a",{class:"header-anchor",href:"#找不到模块或-framework","aria-label":'Permalink to "找不到模块或 framework {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[16]||(i[16]=s("p",null,[a("安装 Pods 时，你可能会遇到与 "),s("a",{href:"https://kotlinlang.org/docs/native-c-interop.html",target:"_blank",rel:"noreferrer"},"C interop"),a(" 问题相关的 "),s("code",null,"module 'SomeSDK' not found"),a(" 或 "),s("code",null,"framework 'SomeFramework' not found"),a(" 错误。要解决此类错误，请尝试以下解决方案：")],-1)),i[17]||(i[17]=s("h4",{id:"更新包",tabindex:"-1"},[a("更新包 "),s("a",{class:"header-anchor",href:"#更新包","aria-label":'Permalink to "更新包"'},"​")],-1)),i[18]||(i[18]=s("p",null,"更新你的安装工具和已安装的包（gems）：",-1)),l(p,null,{default:e(()=>[l(t,{title:"RVM"},{default:e(()=>i[5]||(i[5]=[s("ol",null,[s("li",null,[s("p",null,"更新 RVM："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"rvm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," get"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," stable")])])])])]),s("li",null,[s("p",null,"更新 Ruby 的包管理器 RubyGems："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"gem"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," update"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --system")])])])])]),s("li",null,[s("p",null,"将所有已安装的 gems 升级到最新版本："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"gem"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," update")])])])])])],-1)])),_:1}),l(t,{title:"Rbenv"},{default:e(()=>i[6]||(i[6]=[s("ol",null,[s("li",null,[s("p",null,"更新 Rbenv："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"cd"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ~/.rbenv")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pull")])])])])]),s("li",null,[s("p",null,"更新 Ruby 的包管理器 RubyGems："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"gem"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," update"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --system")])])])])]),s("li",null,[s("p",null,"将所有已安装的 gems 升级到最新版本："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"gem"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," update")])])])])])],-1)])),_:1}),l(t,{title:"Homebrew"},{default:e(()=>i[7]||(i[7]=[s("ol",null,[s("li",null,[s("p",null,"更新 Homebrew 包管理器："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"brew"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," update")])])])])]),s("li",null,[s("p",null,"将所有已安装的包升级到最新版本："),s("div",{class:"language-bash vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"brew"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," upgrade")])])])])])],-1)])),_:1})]),_:1}),i[19]||(i[19]=n(`<h4 id="指定-framework-名称" tabindex="-1">指定 framework 名称 <a class="header-anchor" href="#指定-framework-名称" aria-label="Permalink to &quot;指定 framework 名称&quot;">​</a></h4><ol><li><p>检查下载的 Pod 目录 <code>[shared_module_name]/build/cocoapods/synthetic/IOS/Pods/...</code>，查找 <code>module.modulemap</code> 文件。</p></li><li><p>检查模块内的 framework 名称，例如 <code>SDWebImageMapKit {}</code>。如果 framework 名称与 Pod 名称不匹配，请显式指定：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SDWebImage/MapKit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    moduleName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;SDWebImageMapKit&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h4 id="指定头文件" tabindex="-1">指定头文件 <a class="header-anchor" href="#指定头文件" aria-label="Permalink to &quot;指定头文件&quot;">​</a></h4><p>如果 Pod 不包含 <code>.modulemap</code> 文件，例如 <code>pod(&quot;NearbyMessages&quot;)</code>，请显式指定主头文件：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NearbyMessages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.1.1&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    headers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;GNSMessages.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>有关更多信息，请查阅 <a href="https://guides.cocoapods.org/" target="_blank" rel="noreferrer">CocoaPods 文档</a>。如果所有方法都无效，并且你仍然遇到此错误，请在 <a href="https://youtrack.jetbrains.com/newissue?project=kt" target="_blank" rel="noreferrer">YouTrack</a> 中报告一个问题。</p>`,6)),i[20]||(i[20]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"rsync-错误",tabindex:"-1"},[a("Rsync 错误 "),s("a",{class:"header-anchor",href:"#rsync-错误","aria-label":'Permalink to "Rsync 错误 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[21]||(i[21]=n('<p>你可能会遇到 <code>rsync error: some files could not be transferred</code> 错误。这是一个<a href="https://github.com/CocoaPods/CocoaPods/issues/11946" target="_blank" rel="noreferrer">已知问题</a>，当 Xcode 中的应用程序目标启用了用户脚本的沙盒化时会发生。</p><p>要解决此问题：</p><ol><li><p>在应用程序目标中禁用用户脚本的沙盒化：</p><p><img src="'+r+'" alt="Disable sandboxing CocoaPods" width="700"></p></li><li><p>停止可能已被沙盒化的 Gradle 守护进程：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stop</span></span></code></pre></div></li></ol><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><ul><li><a href="./multiplatform-cocoapods-libraries">在 Kotlin 项目中添加对 Pod 库的依赖项</a></li><li><a href="./multiplatform-cocoapods-xcode">设置 Kotlin 项目与 Xcode 项目之间的依赖项</a></li><li><a href="./multiplatform-cocoapods-dsl-reference">查阅完整的 CocoaPods Gradle 插件 DSL 参考</a></li></ul>',5))])}const A=k(u,[["render",b]]);export{P as __pageData,A as default};
