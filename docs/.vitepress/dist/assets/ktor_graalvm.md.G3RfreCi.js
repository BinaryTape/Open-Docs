import{_ as p,C as r,c as d,o as g,j as t,G as l,ag as h,a as e,w as o}from"./chunks/framework.Bksy39di.js";const G=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/graalvm.md","filePath":"ktor/graalvm.md","lastUpdated":1755457140000}'),f={name:"ktor/graalvm.md"};function u(c,a,v,b,k,_){const n=r("control"),i=r("tldr"),s=r("web-summary"),m=r("link-summary");return g(),d("div",null,[a[5]||(a[5]=t("h1",{id:"graalvm",tabindex:"-1"},[e("GraalVM "),t("a",{class:"header-anchor",href:"#graalvm","aria-label":'Permalink to "GraalVM"'},"​")],-1)),l(i,null,{default:o(()=>[t("p",null,[l(n,null,{default:o(()=>a[0]||(a[0]=[e("示例项目")])),_:1}),a[1]||(a[1]=e(": ")),a[2]||(a[2]=t("a",{href:"https://github.com/ktorio/ktor-samples/tree/main/graalvm"},"graalvm",-1))])]),_:1}),l(s,null,{default:o(()=>a[3]||(a[3]=[e(" Ktor Server 应用程序可以利用 GraalVM，以获得适用于不同平台的原生镜像。 ")])),_:1}),l(m,null,{default:o(()=>a[4]||(a[4]=[e(" 了解如何使用 GraalVM 为不同平台生成原生镜像。 ")])),_:1}),a[6]||(a[6]=h('<p>Ktor Server 应用程序可以利用 <a href="https://graalvm.org" target="_blank" rel="noreferrer">GraalVM</a> 获得适用于不同平台的原生镜像，当然，还能利用 GraalVM 提供的更快启动时间和其他优势。</p><p>目前，希望利用 GraalVM 的 Ktor Server 应用程序必须使用 CIO 作为 <a href="./server-engines">应用程序引擎</a>。</p><h2 id="为-graalvm-做准备" tabindex="-1">为 GraalVM 做准备 <a class="header-anchor" href="#为-graalvm-做准备" aria-label="Permalink to &quot;为 GraalVM 做准备&quot;">​</a></h2><p>除了安装 GraalVM 并将安装目录添加到系统路径中之外，您还需要准备您的应用程序，以便所有依赖项都捆绑在一起，即您需要创建一个 fat jar。</p><h3 id="反射配置" tabindex="-1">反射配置 <a class="header-anchor" href="#反射配置" aria-label="Permalink to &quot;反射配置&quot;">​</a></h3><p>GraalVM 对使用反射的应用程序有一些<a href="https://www.graalvm.org/22.1/reference-manual/native-image/Reflection/" target="_blank" rel="noreferrer">要求</a>，Ktor 就是如此。它要求您提供一个包含特定类型信息的 <a href="https://github.com/ktorio/ktor-samples/blob/main/graalvm/src/main/resources/META-INF/native-image/reflect-config.json" target="_blank" rel="noreferrer">JSON 文件</a>。然后，此配置文件将作为实参传递给 <code>native-image</code> 工具。</p><h2 id="执行-native-image-工具" tabindex="-1">执行 <code>native-image</code> 工具 <a class="header-anchor" href="#执行-native-image-工具" aria-label="Permalink to &quot;执行 `native-image` 工具&quot;">​</a></h2><p>一旦 fat jar 准备就绪，唯一需要的步骤是使用 <code>native-image</code> CLI 工具创建原生镜像。这也可以通过 <a href="https://graalvm.github.io/native-build-tools/0.9.8/gradle-plugin.html" target="_blank" rel="noreferrer">Gradle 插件</a> 来完成。您可以在<a href="https://github.com/ktorio/ktor-samples/blob/main/graalvm/build.gradle.kts" target="_blank" rel="noreferrer">此处</a> 查看 <code>build.gradle.kts</code> 文件的示例。但是，请注意，某些选项可能会因所使用的依赖项、项目包名等而异。</p><h2 id="运行生成的二进制文件" tabindex="-1">运行生成的二进制文件 <a class="header-anchor" href="#运行生成的二进制文件" aria-label="Permalink to &quot;运行生成的二进制文件&quot;">​</a></h2><p>如果 shell 脚本执行时没有出现任何错误，您将获得一个原生应用程序，在示例中，它被称为 <code>graal-server</code>。执行它将启动 Ktor Server，并在 <code>https://0.0.0.0:8080</code> 响应。</p><p><a href="#" title="title: GraalVM">//</a>: # (<p><b>Code example</b>: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/deployment-ktor-plugin"> deployment-ktor-plugin </a></p></p>) <p><a href="#" title="title: GraalVM">//</a>: # (Ktor Server 应用程序可以利用 <a href="https://graalvm.org" target="_blank" rel="noreferrer">GraalVM</a> 获得适用于不同平台的原生镜像，当然，还能利用 GraalVM 提供的更快启动时间和其他优势。<a href="https://github.com/ktorio/ktor-build-plugins" target="_blank" rel="noreferrer">Ktor Gradle 插件</a> 允许您构建项目的 GraalVM 原生镜像。)</p><p><a href="#" title="title: GraalVM">//</a>: # (&gt; 目前，希望利用 GraalVM 的 Ktor Server 应用程序必须使用 CIO 作为 <a href="./Engines">应用程序引擎</a>。)</p><p><a href="#" title="title: GraalVM">//</a>: # (- <a href="https://www.graalvm.org/docs/getting-started/" target="_blank" rel="noreferrer">GraalVM</a> 和 <a href="https://www.graalvm.org/reference-manual/native-image/" target="_blank" rel="noreferrer">Native Image</a> 已安装。)</p><p><a href="#" title="title: GraalVM">//</a>: # (2. 确保 <a href="server-dependencies.xml#create-entry-point">主应用程序类</a> 已配置：)</p>',16))])}const M=p(f,[["render",u]]);export{G as __pageData,M as default};
