import{_ as a,a as s,b as e,c as i}from"./chunks/wasm-composeapp-browser.n73x6mgF.js";import{_ as l,a as o,b as r}from"./chunks/wasm-composeapp-github-clickme.W2UAtuJ-.js";import{_ as p}from"./chunks/join-slack-channel.C908i2w7.js";import{_ as n,c as m,o as c,ag as h}from"./chunks/framework.Bksy39di.js";const D=JSON.parse('{"title":"開始使用 Kotlin/Wasm 與 Compose Multiplatform","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/wasm-get-started.md","filePath":"zh-Hant/kotlin/wasm-get-started.md","lastUpdated":1754307826000}'),d={name:"zh-Hant/kotlin/wasm-get-started.md"};function g(u,t,b,k,w,f){return c(),m("div",null,t[0]||(t[0]=[h('<h1 id="開始使用-kotlin-wasm-與-compose-multiplatform" tabindex="-1">開始使用 Kotlin/Wasm 與 Compose Multiplatform <a class="header-anchor" href="#開始使用-kotlin-wasm-與-compose-multiplatform" aria-label="Permalink to &quot;開始使用 Kotlin/Wasm 與 Compose Multiplatform&quot;">​</a></h1><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin/Wasm 處於 <a href="/zh-Hant/kotlin/components-stability">Alpha</a> 階段，可能隨時變更。 <a href="https://slack-chats.kotlinlang.org/c/webassembly" target="_blank" rel="noreferrer">加入 Kotlin/Wasm 社群。</a></p></div><p>本教學課程示範如何在 IntelliJ IDEA 中使用 <a href="/zh-Hant/kotlin/wasm-overview">Kotlin/Wasm</a> 執行 <a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a> 應用程式，並產生可在 <a href="https://pages.github.com/" target="_blank" rel="noreferrer">GitHub Pages</a> 上發佈為網站的成果物。</p><h2 id="開始之前" tabindex="-1">開始之前 <a class="header-anchor" href="#開始之前" aria-label="Permalink to &quot;開始之前&quot;">​</a></h2><p>使用 Kotlin Multiplatform 精靈建立專案：</p><ol><li><p>開啟 <a href="https://kmp.jetbrains.com/#newProject" target="_blank" rel="noreferrer">Kotlin Multiplatform 精靈</a>。</p></li><li><p>在 <strong>New Project</strong> 索引標籤上，將專案名稱和 ID 變更為您的偏好設定。在本教學課程中，我們將名稱設為「WasmDemo」，ID 設為「wasm.project.demo」。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>這些是專案目錄的名稱和 ID。您也可以保持原樣。</p></div></li><li><p>選取 <strong>Web</strong> 選項。請確保沒有選取其他選項。</p></li><li><p>點擊 <strong>Download</strong> 按鈕並解壓縮產生的壓縮檔。</p><p><img src="'+a+'" alt="Kotlin Multiplatform wizard" width="400"></p></li></ol><h2 id="在-intellij-idea-中開啟專案" tabindex="-1">在 IntelliJ IDEA 中開啟專案 <a class="header-anchor" href="#在-intellij-idea-中開啟專案" aria-label="Permalink to &quot;在 IntelliJ IDEA 中開啟專案&quot;">​</a></h2><ol><li>下載並安裝最新版本的 <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noreferrer">IntelliJ IDEA</a>。</li><li>在 IntelliJ IDEA 的歡迎畫面中，點擊 <strong>Open</strong> 或在選單列中選取 <strong>File | Open</strong>。</li><li>導覽至已解壓縮的「WasmDemo」資料夾並點擊 <strong>Open</strong>。</li></ol><h2 id="執行應用程式" tabindex="-1">執行應用程式 <a class="header-anchor" href="#執行應用程式" aria-label="Permalink to &quot;執行應用程式&quot;">​</a></h2><ol><li><p>在 IntelliJ IDEA 中，透過選取 <strong>View</strong> | <strong>Tool Windows</strong> | <strong>Gradle</strong> 開啟 <strong>Gradle</strong> 工具視窗。</p><p>專案載入後，您可以在 Gradle 工具視窗中找到 Gradle 任務。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>您的 Gradle JVM 需要至少 Java 11 才能成功載入任務。</p></div></li><li><p>在 <strong>wasmdemo</strong> | <strong>Tasks</strong> | <strong>kotlin browser</strong> 中，選取並執行 <strong>wasmJsBrowserDevelopmentRun</strong> 任務。</p><p><img src="'+s+'" alt="Run the Gradle task" width="400"></p><p>或者，您可以在 <code>WasmDemo</code> 根目錄的終端機中執行以下指令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmJsBrowserDevelopmentRun</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span></span></code></pre></div></li><li><p>應用程式啟動後，在您的瀏覽器中開啟以下 URL：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://localhost:8080/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>連接埠號碼可能因 8080 連接埠可能無法使用而有所不同。您可以在 Gradle 建置主控台中找到實際的連接埠號碼。</p></div><p>您會看到一個「Click me!」按鈕。點擊它：</p><p><img src="'+e+'" alt="Click me" width="650"></p><p>現在您會看到 Compose Multiplatform 標誌：</p><p><img src="'+i+'" alt="Compose app in browser" width="650"></p></li></ol><h2 id="產生成果物" tabindex="-1">產生成果物 <a class="header-anchor" href="#產生成果物" aria-label="Permalink to &quot;產生成果物&quot;">​</a></h2><p>在 <strong>wasmdemo</strong> | <strong>Tasks</strong> | <strong>kotlin browser</strong> 中，選取並執行 <strong>wasmJsBrowserDistribution</strong> 任務。</p><p><img src="'+l+'" alt="Run the Gradle task" width="400"></p><p>或者，您可以在 <code>WasmDemo</code> 根目錄的終端機中執行以下指令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasmJsBrowserDistribution</span></span></code></pre></div><p>應用程式任務完成後，您可以在 <code>composeApp/build/dist/wasmJs/productionExecutable</code> 目錄中找到產生的成果物：</p><p><img src="'+o+'" alt="Artifacts directory" width="400"></p><h2 id="發佈到-github-pages" tabindex="-1">發佈到 GitHub Pages <a class="header-anchor" href="#發佈到-github-pages" aria-label="Permalink to &quot;發佈到 GitHub Pages&quot;">​</a></h2><ol><li><p>將 <code>productionExecutable</code> 目錄中的所有內容複製到您要建立網站的儲存庫中。</p></li><li><p>依照 GitHub 的說明<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site#creating-your-site" target="_blank" rel="noreferrer">建立您的網站</a>。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>將變更推送到 GitHub 後，您的網站可能需要長達 10 分鐘才能發佈。</p></div></li><li><p>在瀏覽器中，導覽至您的 GitHub Pages 網域。</p><p><img src="'+r+'" alt="Navigate to GitHub pages" width="650"></p><p>恭喜！您已成功在 GitHub Pages 上發佈您的成果物。</p></li></ol><h2 id="接下來呢" tabindex="-1">接下來呢？ <a class="header-anchor" href="#接下來呢" aria-label="Permalink to &quot;接下來呢？&quot;">​</a></h2><ul><li><p><a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-multiplatform-create-first-app.html" target="_blank" rel="noreferrer">了解如何使用 Compose Multiplatform 在 iOS 和 Android 之間共用 UI</a></p></li><li><p>嘗試更多 Kotlin/Wasm 範例：</p><ul><li>Compose image viewer</li><li>Jetsnack application</li><li>Node.js example</li><li>WASI example</li><li>Compose example</li></ul></li><li><p>在 Kotlin Slack 中加入 Kotlin/Wasm 社群：</p><p><a href="https://slack-chats.kotlinlang.org/c/webassembly"><img src="'+p+'" width="500" alt="Join the Kotlin/Wasm community" style=""></a></p></li></ul>',21)]))}const P=n(d,[["render",g]]);export{D as __pageData,P as default};
