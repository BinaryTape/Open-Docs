import{_ as d,a as h,b as m,l as g,c as f,d as k,e as c,f as b,g as w,h as D,i as E,j as I,k as _}from"./chunks/run-wasm-app.BQkB6EyS.js";import{_ as A,C as o,c as M,o as K,j as l,G as e,ag as s,a as t,w as a}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"Kotlin Multiplatform 快速入門","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/quickstart.md","filePath":"zh-Hant/kmp/quickstart.md","lastUpdated":1755516278000}'),v={name:"zh-Hant/kmp/quickstart.md"};function S(C,i,J,x,O,P){const p=o("web-summary"),r=o("TabItem"),n=o("Tabs"),u=o("shortcut");return K(),M("div",null,[i[17]||(i[17]=l("h1",{id:"kotlin-multiplatform-快速入門",tabindex:"-1"},[t("Kotlin Multiplatform 快速入門 "),l("a",{class:"header-anchor",href:"#kotlin-multiplatform-快速入門","aria-label":'Permalink to "Kotlin Multiplatform 快速入門"'},"​")],-1)),e(p,null,{default:a(()=>i[0]||(i[0]=[t("JetBrains 為 IntelliJ IDEA 和 Android Studio 提供官方 Kotlin IDE 支援。")])),_:1}),i[18]||(i[18]=l("p",null,"透過本教學，您可以讓一個簡單的 Kotlin Multiplatform 應用程式快速啟動並運行。",-1)),i[19]||(i[19]=l("h2",{id:"設定環境",tabindex:"-1"},[t("設定環境 "),l("a",{class:"header-anchor",href:"#設定環境","aria-label":'Permalink to "設定環境"'},"​")],-1)),i[20]||(i[20]=l("p",null,"Kotlin Multiplatform (KMP) 專案需要特定的環境，但大多數要求會透過 IDE 中的預檢（preflight checks）清楚說明。",-1)),i[21]||(i[21]=l("p",null,"從 IDE 和必要的插件開始：",-1)),l("ol",null,[i[4]||(i[4]=s('<li><p>選擇並安裝 IDE。 IntelliJ IDEA 和 Android Studio 都支援 Kotlin Multiplatform，因此您可以使用您偏好的 IDE。</p><p><a href="https://www.jetbrains.com/toolbox/app/" target="_blank" rel="noreferrer">JetBrains Toolbox App</a> 是安裝 IDE 的推薦工具。 它允許您管理多個產品或版本，包括 <a href="https://www.jetbrains.com/resources/eap/" target="_blank" rel="noreferrer">搶先體驗計畫</a> (EAP) 和每夜發佈 (Nightly releases)。</p><p>對於獨立安裝，請下載 <a href="https://www.jetbrains.com/idea/download/" target="_blank" rel="noreferrer">IntelliJ IDEA</a> 或 <a href="https://developer.android.com/studio" target="_blank" rel="noreferrer">Android Studio</a> 的安裝程式。</p><p>Kotlin Multiplatform 所需的插件需要 <strong>IntelliJ IDEA 2025.1.1.1</strong> 或 <strong>Android Studio Narwhal 2025.1.1</strong>。</p></li><li><p>安裝 <a href="https://plugins.jetbrains.com/plugin/14936-kotlin-multiplatform" target="_blank" rel="noreferrer">Kotlin Multiplatform IDE 插件</a> (不要與 Kotlin Multiplatform Gradle 插件混淆)。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>適用於 Windows 或 Linux 上 IDE 的 Kotlin Multiplatform 插件尚未提供。 但在這些平台上它也不是嚴格必要的： 您仍然可以依照本教學生成並運行 KMP 專案。</p></div></li><li><p>為 IntelliJ IDEA 安裝 Kotlin Multiplatform IDE 插件也會安裝所有必要的依賴項（如果您尚未安裝它們）（Android Studio 已綁定所有必要的插件）。</p><p>如果您正在 Windows 或 Linux 上使用 IntelliJ IDEA，請確保手動安裝所有必要的插件：</p><ul><li><a href="https://plugins.jetbrains.com/plugin/22989-android" target="_blank" rel="noreferrer">Android</a></li><li><a href="https://plugins.jetbrains.com/plugin/22990-android-design-tools" target="_blank" rel="noreferrer">Android Design Tools</a></li><li><a href="https://plugins.jetbrains.com/plugin/18409-jetpack-compose" target="_blank" rel="noreferrer">Jetpack Compose</a></li><li><a href="https://plugins.jetbrains.com/plugin/12775-native-debugging-support" target="_blank" rel="noreferrer">Native Debugging Support</a></li><li><a href="https://plugins.jetbrains.com/plugin/16541-compose-multiplatform-for-desktop-ide-support" target="_blank" rel="noreferrer">Compose Multiplatform for Desktop IDE Support</a> (僅在您沒有 Kotlin Multiplatform 插件時才需要)。</li></ul></li>',3)),l("li",null,[i[3]||(i[3]=l("p",null,[t("如果您尚未設定 "),l("code",null,"ANDROID_HOME"),t(" 環境變數，請配置您的系統以識別它：")],-1)),e(n,null,{default:a(()=>[e(r,{title:"Bash 或 Zsh"},{default:a(()=>i[1]||(i[1]=[l("p",null,[t("將以下命令新增到您的 "),l("code",null,".profile"),t(" 或 "),l("code",null,".zprofile"),t(" 中：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ANDROID_HOME"),l("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=~"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"/Library/Android/sdk")])])])],-1)])),_:1}),e(r,{title:"Windows PowerShell 或 CMD"},{default:a(()=>i[2]||(i[2]=[l("p",null,[t("對於 PowerShell，您可以使用以下命令新增一個持久環境變數（詳情請參閱 "),l("a",{href:"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables",target:"_blank",rel:"noreferrer"},"PowerShell 文件"),t("）：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[Environment]::SetEnvironmentVariable("),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"'ANDROID_HOME'"),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},","),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '<path to the SDK>',"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'Machine'"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")])])])],-1),l("p",null,[t("對於 CMD，請使用 "),l("a",{href:"https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/setx",target:"_blank",rel:"noreferrer"},[l("code",null,"setx")]),t(" 命令：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"setx"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ANDROID_HOME"),l("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "<path to the SDK>"')])])])],-1)])),_:1})]),_:1})]),i[5]||(i[5]=l("li",null,[l("p",null,[t("若要建立 iOS 應用程式，您需要一台安裝了 "),l("a",{href:"https://apps.apple.com/us/app/xcode/id497799835",target:"_blank",rel:"noreferrer"},"Xcode"),t(" 的 macOS 主機。 您的 IDE 將在底層運行 Xcode 以建構 iOS 框架。")]),l("p",null,"在開始使用 KMP 專案之前，請確保至少啟動一次 Xcode，以便它完成初始設定。"),l("div",{class:"note custom-block"},[l("p",{class:"custom-block-title"},"NOTE"),l("p",null,"每次 Xcode 更新時，您都需要手動啟動它並下載更新的工具。 Kotlin Multiplatform IDE 插件會執行預檢，當 Xcode 狀態不正確而無法工作時會提醒您。")])],-1))]),i[22]||(i[22]=l("h2",{id:"建立專案",tabindex:"-1"},[t("建立專案 "),l("a",{class:"header-anchor",href:"#建立專案","aria-label":'Permalink to "建立專案"'},"​")],-1)),i[23]||(i[23]=l("h3",{id:"在-macos-上",tabindex:"-1"},[t("在 macOS 上 "),l("a",{class:"header-anchor",href:"#在-macos-上","aria-label":'Permalink to "在 macOS 上"'},"​")],-1)),i[24]||(i[24]=l("p",null,"在 macOS 上，Kotlin Multiplatform 插件在 IDE 內部提供了一個專案生成精靈：",-1)),e(n,null,{default:a(()=>[e(r,{title:"IntelliJ IDEA"},{default:a(()=>i[6]||(i[6]=[l("p",null,"使用 IDE 精靈建立新的 KMP 專案：",-1),l("ol",null,[l("li",null,[t("在主選單中選擇 "),l("strong",null,"檔案"),t(" | "),l("strong",null,"新增"),t(" | "),l("strong",null,"專案"),t("。")]),l("li",null,[t("在左側列表中選擇 "),l("strong",null,"Kotlin Multiplatform"),t("。")]),l("li",null,"根據需要設定專案的名稱、位置和其他基本屬性。"),l("li",null,[t("我們建議選擇一個版本的 "),l("a",{href:"https://github.com/JetBrains/JetBrainsRuntime",target:"_blank",rel:"noreferrer"},"JetBrains Runtime"),t(" (JBR) 作為您專案的 JDK，因為它提供了重要的修復，特別是為了提高桌面 KMP 應用程式的相容性。 每個 IntelliJ IDEA 發行版中都包含相關版本的 JBR，因此無需額外設定。")]),l("li",null,[t("選擇您希望作為專案一部分的平台： "),l("ul",null,[l("li",null,"所有目標平台都可以設定為從一開始就使用 Compose Multiplatform 共用 UI 代碼（不包含 UI 代碼的伺服器模組除外）。"),l("li",null,[t("對於 iOS，您可以選擇兩種實作方式之一： "),l("ul",null,[l("li",null,"共用 UI 代碼，使用 Compose Multiplatform，"),l("li",null,"完全原生的 UI，使用 SwiftUI 製作並與具有共用邏輯的 Kotlin 模組連接。")])]),l("li",null,[t("桌面目標包含 "),l("a",{href:"./compose-hot-reload"},"Compose Hot Reload"),t(" 功能的 Alpha 版本，它允許您在更改相應代碼後立即看到 UI 變更。 即使您不打算製作桌面應用程式，您可能也會想使用桌面版本來加速編寫 UI 代碼。")])])])],-1),l("p",null,[t("選擇完平台後，點擊 "),l("strong",null,"建立 (Create)"),t(" 按鈕，等待 IDE 生成並匯入專案。")],-1),l("p",null,[l("img",{src:d,alt:"IntelliJ IDEA Wizard with default settings and Android, iOS, desktop, and web platforms selected",width:"800"})],-1)])),_:1}),e(r,{title:"Android Studio"},{default:a(()=>i[7]||(i[7]=[l("p",null,[t("Kotlin Multiplatform IDE 插件嚴重依賴 K2 功能，沒有它將無法如描述般運作。 因此，在開始之前，請確保 K2 模式已啟用： "),l("strong",null,"設定"),t(" | "),l("strong",null,"語言與框架"),t(" | "),l("strong",null,"Kotlin"),t(" | "),l("strong",null,"啟用 K2 模式"),t("。")],-1),l("p",null,"使用 IDE 精靈建立新的 KMP 專案：",-1),l("ol",null,[l("li",null,[l("p",null,[t("在主選單中選擇 "),l("strong",null,"檔案"),t(" | "),l("strong",null,"新增"),t(" | "),l("strong",null,"新增專案"),t("。")])]),l("li",null,[l("p",null,[t("在預設的 "),l("strong",null,"手機和平板"),t(" 範本類別中選擇 "),l("strong",null,"Kotlin Multiplatform"),t("。")]),l("p",null,[l("img",{src:h,alt:"First new project step in Android Studio",width:"400"})])]),l("li",null,[l("p",null,[t("根據需要設定專案的名稱、位置和其他基本屬性，然後點擊 "),l("strong",null,"下一步 (Next)"),t("。")])]),l("li",null,[l("p",null,"選擇您希望作為專案一部分的平台："),l("ul",null,[l("li",null,"所有目標平台都可以設定為從一開始就使用 Compose Multiplatform 共用 UI 代碼（不包含 UI 代碼的伺服器模組除外）。"),l("li",null,[t("對於 iOS，您可以選擇兩種實作方式之一： "),l("ul",null,[l("li",null,"共用 UI 代碼，使用 Compose Multiplatform，"),l("li",null,"完全原生的 UI，使用 SwiftUI 製作並與具有共用邏輯的 Kotlin 模組連接。")])]),l("li",null,"桌面目標包含熱重載（hot reload）功能的 alpha 版本，它允許您在更改相應代碼後立即看到 UI 變更。 即使您不打算製作桌面應用程式，您可能也會想使用桌面版本來加速編寫 UI 代碼。")])]),l("li",null,[l("p",null,[t("當專案生成後，我們建議選擇一個版本的 "),l("a",{href:"https://github.com/JetBrains/JetBrainsRuntime",target:"_blank",rel:"noreferrer"},"JetBrains Runtime"),t(" (JBR) 作為您專案的 JDK，因為它提供了重要的修復，特別是為了提高桌面 KMP 應用程式的相容性。 每個 IntelliJ IDEA 發行版中都包含相關版本的 JBR，因此無需額外設定。")])])],-1),l("p",null,[t("選擇完平台後，點擊 "),l("strong",null,"完成 (Finish)"),t(" 按鈕，等待 IDE 生成並匯入專案。")],-1),l("p",null,[l("img",{src:m,alt:"Last step in the Android Studio wizard with Android, iOS, desktop, and web platforms selected",width:"800"})],-1)])),_:1})]),_:1}),i[25]||(i[25]=s('<h3 id="在-windows-或-linux-上" tabindex="-1">在 Windows 或 Linux 上 <a class="header-anchor" href="#在-windows-或-linux-上" aria-label="Permalink to &quot;在 Windows 或 Linux 上&quot;">​</a></h3><p>如果您正在使用 Windows 或 Linux：</p><ol><li>使用 <a href="https://kmp.jetbrains.com/" target="_blank" rel="noreferrer">web KMP 精靈</a> 生成一個專案。</li><li>解壓縮歸檔檔並在您的 IDE 中打開生成的資料夾。</li><li>等待匯入完成，然後前往 <a href="#run-the-sample-apps">未定義</a> 部分了解如何建構和運行應用程式。</li></ol><h2 id="諮詢預檢" tabindex="-1">諮詢預檢 <a class="header-anchor" href="#諮詢預檢" aria-label="Permalink to &quot;諮詢預檢&quot;">​</a></h2><p>您可以透過打開 <strong>專案環境預檢 (Project Environment Preflight Checks)</strong> 工具視窗來確保專案設定沒有環境問題：點擊右側邊欄或底部工具欄上的預檢圖示 <img src="'+_+'" alt="Preflight checks icon with a plane" width="20"></p><p>在此工具視窗中，您可以查看與這些檢查相關的訊息、重新運行它們或更改其設定。</p>',6)),l("p",null,[i[9]||(i[9]=t("預檢命令也可在 ")),i[10]||(i[10]=l("strong",null,"隨處搜尋 (Search Everywhere)",-1)),i[11]||(i[11]=t(" 對話框中找到。 按下雙擊 ")),e(u,null,{default:a(()=>i[8]||(i[8]=[t("Shift")])),_:1}),i[12]||(i[12]=t(" 並搜尋包含「preflight」一詞的命令："))]),i[26]||(i[26]=l("p",null,[l("img",{src:g,alt:'The Search Everywhere menu with the word "preflight" entered'})],-1)),i[27]||(i[27]=l("h2",{id:"運行範例應用程式",tabindex:"-1"},[t("運行範例應用程式 "),l("a",{class:"header-anchor",href:"#運行範例應用程式","aria-label":'Permalink to "運行範例應用程式"'},"​")],-1)),i[28]||(i[28]=l("p",null,"IDE 精靈建立的專案包括為 iOS、Android、桌面和 Web 應用程式生成的運行配置，以及運行伺服器應用程式的 Gradle 任務。 在 Windows 和 Linux 上，請參閱下方每個平台的 Gradle 命令。",-1)),e(n,null,{default:a(()=>[e(r,{title:"Android"},{default:a(()=>i[13]||(i[13]=[l("p",null,[t("若要運行 Android 應用程式，請啟動 "),l("strong",null,"composeApp"),t(" 運行配置：")],-1),l("p",null,[l("img",{src:f,alt:"Dropdown with the Android run configuration highlighted",width:"250"})],-1),l("p",null,[t("要在 Windows 或 Linux 上運行 Android 應用程式，請建立一個 "),l("strong",null,"Android 應用程式 (Android App)"),t(" 運行配置，並選擇模組 "),l("strong",null,"[專案名稱].composeApp"),t("。")],-1),l("p",null,"預設情況下，它會在第一個可用的虛擬裝置上運行：",-1),l("p",null,[l("img",{src:k,alt:"Android app ran on a virtual device",width:"350"})],-1)])),_:1}),e(r,{title:"iOS"},{default:a(()=>i[14]||(i[14]=[l("div",{class:"note custom-block"},[l("p",{class:"custom-block-title"},"NOTE"),l("p",null,"您需要 macOS 主機才能建構 iOS 應用程式。")],-1),l("p",null,[t("如果您為專案選擇了 iOS 目標並設定了安裝 Xcode 的 macOS 機器， 您可以選擇 "),l("strong",null,"iosApp"),t(" 運行配置並選擇一個模擬裝置：")],-1),l("p",null,[l("img",{src:c,alt:"Dropdown with the iOS run configuration highlighted",width:"250"})],-1),l("p",null,"當您運行 iOS 應用程式時，它會在底層使用 Xcode 建構，並在 iOS 模擬器中啟動。 首次建構會收集編譯所需的原生依賴項，並為後續運行預熱建構：",-1),l("p",null,[l("img",{src:b,alt:"iOS app ran on a virtual device",width:"350"})],-1)])),_:1}),e(r,{title:"桌面"},{default:a(()=>i[15]||(i[15]=[l("p",null,[t("桌面應用程式的預設運行配置建立為 "),l("strong",null,"composeApp [desktop]"),t("：")],-1),l("p",null,[l("img",{src:w,alt:"Dropdown with the default desktop run configuration highlighted",width:"250"})],-1),l("p",null,[t("要在 Windows 或 Linux 上運行桌面應用程式，請建立一個 "),l("strong",null,"Gradle"),t(" 運行配置，指向 "),l("strong",null,"[應用程式名稱]:composeApp"),t(" Gradle 專案，並使用以下命令：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"desktopRun"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -DmainClass=com.example.myapplication.MainKt"),l("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --quiet")])])])],-1),l("p",null,"透過此配置，您可以運行 JVM 桌面應用程式：",-1),l("p",null,[l("img",{src:D,alt:"JVM app ran on a virtual device",width:"600"})],-1)])),_:1}),e(r,{title:"Web"},{default:a(()=>i[16]||(i[16]=[l("p",null,[t("Web 應用程式的預設運行配置建立為 "),l("strong",null,"composeApp [wasmJs]"),t("：")],-1),l("p",null,[l("img",{src:E,alt:"Dropdown with the default Wasm run configuration highlighted",width:"250"})],-1),l("p",null,[t("要在 Windows 或 Linux 上運行 Web 應用程式，請建立一個 "),l("strong",null,"Gradle"),t(" 運行配置，指向 "),l("strong",null,"[應用程式名稱]:composeApp"),t(" Gradle 專案，並使用以下命令：")],-1),l("div",{class:"language-shell vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"shell"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"wasmJsBrowserDevelopmentRun")])])])],-1),l("p",null,"當您運行此配置時，IDE 會建構 Kotlin/Wasm 應用程式並在預設瀏覽器中打開它：",-1),l("p",null,[l("img",{src:I,alt:"Web app ran on a virtual device",width:"600"})],-1)])),_:1})]),_:1}),i[29]||(i[29]=s('<h2 id="疑難排解" tabindex="-1">疑難排解 <a class="header-anchor" href="#疑難排解" aria-label="Permalink to &quot;疑難排解&quot;">​</a></h2><h3 id="java-和-jdk" tabindex="-1">Java 和 JDK <a class="header-anchor" href="#java-和-jdk" aria-label="Permalink to &quot;Java 和 JDK&quot;">​</a></h3><p>Java 的常見問題：</p><ul><li>某些工具可能找不到要運行的 Java 版本或使用了錯誤的版本。 為了解決這個問題： <ul><li><p>將 <code>JAVA_HOME</code> 環境變數設定為安裝了適當 JDK 的目錄。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>我們建議使用 <a href="https://github.com/JetBrains/JetBrainsRuntime" target="_blank" rel="noreferrer">JetBrains Runtime</a>， 這是一個支援類別重新定義的 OpenJDK 分支。</p></div></li><li><p>將 <code>JAVA_HOME</code> 內的 <code>bin</code> 資料夾路徑附加到 <code>PATH</code> 變數中， 以便 JDK 中包含的工具可在終端機中使用。</p></li></ul></li><li>如果您在 Android Studio 中遇到 Gradle JDK 的問題，請確保其配置正確： 選擇 <strong>設定</strong> | <strong>建構、執行、部署</strong> | <strong>建構工具</strong> | <strong>Gradle</strong>。</li></ul><h3 id="android-工具" tabindex="-1">Android 工具 <a class="header-anchor" href="#android-工具" aria-label="Permalink to &quot;Android 工具&quot;">​</a></h3><p>與 JDK 相同，如果您在啟動 <code>adb</code> 等 Android 工具時遇到問題， 請確保將 <code>ANDROID_HOME/tools</code>、<code>ANDROID_HOME/tools/bin</code> 和 <code>ANDROID_HOME/platform-tools</code> 的路徑新增到您的 <code>PATH</code> 環境變數中。</p><h3 id="xcode" tabindex="-1">Xcode <a class="header-anchor" href="#xcode" aria-label="Permalink to &quot;Xcode&quot;">​</a></h3><p>如果您的 iOS 運行配置報告沒有可運行的虛擬裝置，請確保啟動 Xcode 並查看 iOS 模擬器是否有任何更新。</p><h3 id="獲取協助" tabindex="-1">獲取協助 <a class="header-anchor" href="#獲取協助" aria-label="Permalink to &quot;獲取協助&quot;">​</a></h3><ul><li><strong>Kotlin Slack</strong>。獲取 <a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">邀請</a> 並加入 <a href="https://kotlinlang.slack.com/archives/C3PQML5NU" target="_blank" rel="noreferrer">#multiplatform</a> 頻道。</li><li><strong>Kotlin Multiplatform 工具問題追蹤器</strong>。<a href="https://youtrack.jetbrains.com/newIssue?project=KMT" target="_blank" rel="noreferrer">回報新問題</a>。</li></ul><h2 id="接下來" tabindex="-1">接下來 <a class="header-anchor" href="#接下來" aria-label="Permalink to &quot;接下來&quot;">​</a></h2><p>了解更多關於 KMP 專案結構和編寫共用代碼的資訊：</p><ul><li>一系列關於使用共用 UI 代碼的教學：<a href="./compose-multiplatform-create-first-app">建立您的 Compose Multiplatform 應用程式</a></li><li>一系列關於將共用代碼與原生 UI 結合使用的教學：<a href="./multiplatform-create-first-app">建立您的 Kotlin Multiplatform 應用程式</a></li><li>深入了解 Kotlin Multiplatform 文件： <ul><li><a href="./multiplatform-project-configuration">專案配置</a></li><li><a href="https://kotlinlang.org/docs/multiplatform-add-dependencies.html" target="_blank" rel="noreferrer">使用多平台依賴項</a></li></ul></li><li>了解 Compose Multiplatform UI 框架、其基礎知識和平台特定功能： <a href="./compose-multiplatform-and-jetpack-compose">Compose Multiplatform 和 Jetpack Compose</a>。</li></ul><p>探索已為 KMP 編寫的代碼：</p><ul><li>我們的 <a href="./multiplatform-samples">範例</a> 頁面，包含 JetBrains 官方範例以及展示 KMP 功能的精選專案列表。</li><li>GitHub 主題： <ul><li><a href="https://github.com/topics/kotlin-multiplatform" target="_blank" rel="noreferrer">kotlin-multiplatform</a>，使用 Kotlin Multiplatform 實作的專案。</li><li><a href="https://github.com/topics/kotlin-multiplatform-sample" target="_blank" rel="noreferrer">kotlin-multiplatform-sample</a>， 使用 KMP 編寫的範例專案列表。</li></ul></li><li><a href="https://klibs.io" target="_blank" rel="noreferrer">klibs.io</a> – KMP 函式庫搜尋平台，迄今已索引超過 2000 個函式庫， 包括 OkHttp、Ktor、Coil、Koin、SQLDelight 等。</li></ul>',15))])}const F=A(v,[["render",S]]);export{B as __pageData,F as default};
