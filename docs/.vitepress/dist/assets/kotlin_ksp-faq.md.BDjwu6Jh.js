import{_ as t,c as e,o as l,ag as i}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"KSP 常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/ksp-faq.md","filePath":"kotlin/ksp-faq.md","lastUpdated":1754307826000}'),o={name:"kotlin/ksp-faq.md"};function r(n,a,s,p,k,h){return l(),e("div",null,a[0]||(a[0]=[i('<h1 id="ksp-常见问题" tabindex="-1">KSP 常见问题 <a class="header-anchor" href="#ksp-常见问题" aria-label="Permalink to &quot;KSP 常见问题&quot;">​</a></h1><h3 id="为什么选择-ksp" tabindex="-1">为什么选择 KSP？ <a class="header-anchor" href="#为什么选择-ksp" aria-label="Permalink to &quot;为什么选择 KSP？&quot;">​</a></h3><p>KSP 相较于 <a href="/kotlin/kapt">kapt</a> 有以下几点优势：</p><ul><li>速度更快。</li><li>API 对 Kotlin 用户来说更流畅。</li><li>它支持对生成的 Kotlin 源代码进行 <a href="/kotlin/ksp-multi-round">多轮处理</a>。</li><li>它的设计考虑了多平台兼容性。</li></ul><h3 id="为什么-ksp-比-kapt-更快" tabindex="-1">为什么 KSP 比 kapt 更快？ <a class="header-anchor" href="#为什么-ksp-比-kapt-更快" aria-label="Permalink to &quot;为什么 KSP 比 kapt 更快？&quot;">​</a></h3><p>kapt 必须解析和解析每个类型引用才能生成 Java 存根，而 KSP 则是按需解析引用。将任务委托给 javac 也会耗费时间。</p><p>此外，KSP 的 <a href="/kotlin/ksp-incremental">增量处理模型</a> 比单纯的隔离和聚合具有更细的粒度。它能找到更多机会来避免重新处理所有内容。此外，由于 KSP 动态跟踪符号解析，文件中的更改不太可能污染其他文件，因此需要重新处理的文件集也更小。这对于 kapt 是不可能的，因为它将处理委托给 javac。</p><h3 id="ksp-是-kotlin-特有的吗" tabindex="-1">KSP 是 Kotlin 特有的吗？ <a class="header-anchor" href="#ksp-是-kotlin-特有的吗" aria-label="Permalink to &quot;KSP 是 Kotlin 特有的吗？&quot;">​</a></h3><p>KSP 也可以处理 Java 源代码。API 是统一的，这意味着当你解析 Java 类和 Kotlin 类时，KSP 会提供统一的数据结构。</p><h3 id="如何升级-ksp" tabindex="-1">如何升级 KSP？ <a class="header-anchor" href="#如何升级-ksp" aria-label="Permalink to &quot;如何升级 KSP？&quot;">​</a></h3><p>KSP 包含 API 和实现。API 很少更改并向后兼容：可能会有新接口，但旧接口永不更改。实现与特定的编译器版本绑定。随着新版本的发布，支持的编译器版本可能会更改。</p><p>处理器仅依赖于 API，因此不与编译器版本绑定。然而，处理器用户在项目中提升编译器版本时，需要同时提升 KSP 版本。否则，将出现以下错误：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ksp-a.b.c is too old for kotlin-x.y.z. Please upgrade ksp or downgrade kotlin-gradle-plugin</span></span></code></pre></div><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>处理器用户无需提升处理器的版本，因为处理器仅依赖于 API。</p></div><p>例如，某个处理器发布并经过 KSP 1.0.1 测试，该版本严格依赖于 Kotlin 1.6.0。为了使其与 Kotlin 1.6.20 兼容，你唯一需要做的就是将 KSP 提升到针对 Kotlin 1.6.20 构建的版本（例如 KSP 1.1.0）。</p><h3 id="我可以使用较新的-ksp-实现与较旧的-kotlin-编译器吗" tabindex="-1">我可以使用较新的 KSP 实现与较旧的 Kotlin 编译器吗？ <a class="header-anchor" href="#我可以使用较新的-ksp-实现与较旧的-kotlin-编译器吗" aria-label="Permalink to &quot;我可以使用较新的 KSP 实现与较旧的 Kotlin 编译器吗？&quot;">​</a></h3><p>如果语言版本相同，Kotlin 编译器应向后兼容。提升 Kotlin 编译器版本通常是微不足道的。如果你需要更新的 KSP 实现，请相应地升级 Kotlin 编译器。</p><h3 id="ksp-的更新频率如何" tabindex="-1">KSP 的更新频率如何？ <a class="header-anchor" href="#ksp-的更新频率如何" aria-label="Permalink to &quot;KSP 的更新频率如何？&quot;">​</a></h3><p>KSP 尽可能遵循 <a href="https://semver.org/" target="_blank" rel="noreferrer">语义化版本控制</a>。 对于 KSP 版本 <code>major.minor.patch</code>：</p><ul><li><code>major</code> 版本号保留给不兼容的 API 更改。对此没有预设的发布计划。</li><li><code>minor</code> 版本号保留给新特性。大约每季度更新一次。</li><li><code>patch</code> 版本号保留给错误修复和新的 Kotlin 发布。大约每月更新一次。</li></ul><p>通常，在新 Kotlin 版本发布后的几天内，就会发布相应的 KSP 版本，包括 <a href="/kotlin/eap">预发布版本（Beta 或 RC）</a>。</p><h3 id="除了-kotlin-还有其他库的版本要求吗" tabindex="-1">除了 Kotlin，还有其他库的版本要求吗？ <a class="header-anchor" href="#除了-kotlin-还有其他库的版本要求吗" aria-label="Permalink to &quot;除了 Kotlin，还有其他库的版本要求吗？&quot;">​</a></h3><p>以下是库/基础设施的版本要求列表：</p><ul><li>Android Gradle Plugin 7.1.3+</li><li>Gradle 6.8.3+</li></ul><h3 id="ksp-的未来路线图是什么" tabindex="-1">KSP 的未来路线图是什么？ <a class="header-anchor" href="#ksp-的未来路线图是什么" aria-label="Permalink to &quot;KSP 的未来路线图是什么？&quot;">​</a></h3><p>已规划以下事项：</p><ul><li>支持 <a href="/kotlin/roadmap">新的 Kotlin 编译器</a></li><li>改进对多平台的支持。例如，在目标子集上运行 KSP/在目标之间共享计算。</li><li>提升性能。还有大量的优化工作要做！</li><li>持续修复错误。</li></ul><p>如果你想讨论任何想法，请随时通过 <a href="https://kotlinlang.slack.com/archives/C013BA8EQSE" target="_blank" rel="noreferrer">Kotlin Slack 中的 #ksp 频道</a>（<a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">获取邀请</a>）联系我们。也欢迎提交 <a href="https://github.com/google/ksp/issues" target="_blank" rel="noreferrer">GitHub issue/特性请求</a> 或拉取请求！</p>',28)]))}const P=t(o,[["render",r]]);export{c as __pageData,P as default};
