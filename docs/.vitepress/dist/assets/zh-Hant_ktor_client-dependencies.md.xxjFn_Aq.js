import{_ as E,C as l,c as y,o as m,j as t,G as i,ag as r,a as o,w as n}from"./chunks/framework.Bksy39di.js";const K=JSON.parse('{"title":"新增客戶端依賴","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/client-dependencies.md","filePath":"zh-Hant/ktor/client-dependencies.md","lastUpdated":1755457140000}'),v={name:"zh-Hant/ktor/client-dependencies.md"};function _(f,e,b,F,q,C){const h=l("show-structure"),c=l("link-summary"),d=l("control"),s=l("code-block"),a=l("TabItem"),g=l("note"),p=l("Tabs"),k=l("list"),u=l("chapter");return m(),y("div",null,[e[10]||(e[10]=t("h1",{id:"新增客戶端依賴",tabindex:"-1"},[o("新增客戶端依賴 "),t("a",{class:"header-anchor",href:"#新增客戶端依賴","aria-label":'Permalink to "新增客戶端依賴"'},"​")],-1)),i(h,{for:"chapter",depth:"2"}),i(c,null,{default:n(()=>e[0]||(e[0]=[o("了解如何將客戶端依賴新增至現有專案。")])),_:1}),e[11]||(e[11]=r('<p>要在專案中使用 Ktor HTTP 客戶端，您需要<a href="#repositories">設定儲存庫</a>並新增以下依賴：</p><ul><li><p><strong><a href="#client-dependency">ktor-client-core</a></strong></p><p><code>ktor-client-core</code> 包含 Ktor 客戶端的核心功能。</p></li><li><p><strong><a href="#engine-dependency">引擎依賴</a></strong></p><p>引擎用於處理網路請求。 請注意，<a href="./client-supported-platforms">特定平台</a>可能需要特定的引擎來處理網路請求。</p></li><li><p>(可選) <strong><a href="#logging-dependency">日誌依賴</a></strong></p><p>提供日誌框架以啟用結構化且靈活的日誌功能。</p></li><li><p>(可選) <strong><a href="#plugin-dependency">外掛程式依賴</a></strong></p><p>外掛程式用於擴展客戶端的特定功能。</p></li></ul><p> 在新增 Ktor 依賴之前，您需要為此專案設定儲存庫： </p>',3)),i(k,null,{default:n(()=>[t("li",null,[t("p",null,[i(d,null,{default:n(()=>e[1]||(e[1]=[o("生產版本")])),_:1})]),e[3]||(e[3]=t("p",null," Ktor 的生產版本可在 Maven Central 儲存庫中取得。 您可以在建構腳本中宣告此儲存庫，如下所示： ",-1)),i(p,{group:"languages"},{default:n(()=>[i(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(s,{lang:"Kotlin",code:`                    repositories {
                        mavenCentral()
                    }`})]),_:1}),i(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(s,{lang:"Groovy",code:`                    repositories {
                        mavenCentral()
                    }`})]),_:1}),i(a,{title:"Maven","group-key":"maven"},{default:n(()=>[i(g,null,{default:n(()=>e[2]||(e[2]=[t("p",null,[o(" 您不需要在 "),t("path",null,"pom.xml"),o(" 檔案中新增 Maven Central 儲存庫，因為您的專案會從 "),t("a",{href:"https://maven.apache.org/guides/introduction/introduction-to-the-pom.html#super-pom"},"Super POM"),o(" 繼承中央儲存庫。 ")],-1)])),_:1})]),_:1})]),_:1})]),t("li",null,[t("p",null,[i(d,null,{default:n(()=>e[4]||(e[4]=[o("搶先體驗計畫 (EAP)")])),_:1})]),e[5]||(e[5]=t("p",null,[o(" 要存取 Ktor 的 "),t("a",{href:"https://ktor.io/eap/"},"EAP"),o(" 版本，您需要引用 "),t("a",{href:"https://maven.pkg.jetbrains.space/public/p/ktor/eap/io/ktor/"},"Space 儲存庫"),o("： ")],-1)),i(p,{group:"languages"},{default:n(()=>[i(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(s,{lang:"Kotlin",code:`                    repositories {
                        maven {
                            url = uri("https://maven.pkg.jetbrains.space/public/p/ktor/eap")
                        }
                    }`})]),_:1}),i(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(s,{lang:"Groovy",code:`                    repositories {
                        maven {
                            url "https://maven.pkg.jetbrains.space/public/p/ktor/eap"
                        }
                    }`})]),_:1}),i(a,{title:"Maven","group-key":"maven"},{default:n(()=>[i(s,{lang:"XML",code:`                    <repositories>
                        <repository>
                            <id>ktor-eap</id>
                            <url>https://maven.pkg.jetbrains.space/public/p/ktor/eap</url>
                        </repository>
                    </repositories>`})]),_:1})]),_:1}),e[6]||(e[6]=t("p",null,[o(" 請注意，Ktor EAP 可能需要 "),t("a",{href:"https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev"},"Kotlin 開發儲存庫"),o("： ")],-1)),i(p,{group:"languages"},{default:n(()=>[i(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(s,{lang:"Kotlin",code:`                    repositories {
                        maven {
                            url = uri("https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev")
                        }
                    }`})]),_:1}),i(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(s,{lang:"Groovy",code:`                    repositories {
                        maven {
                            url "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev"
                        }
                    }`})]),_:1}),i(a,{title:"Maven","group-key":"maven"},{default:n(()=>[i(s,{lang:"XML",code:`                    <repositories>
                        <repository>
                            <id>ktor-eap</id>
                            <url>https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev</url>
                        </repository>
                    </repositories>`})]),_:1})]),_:1})])]),_:1}),e[12]||(e[12]=r('<h2 id="add-ktor-dependencies" tabindex="-1">新增依賴 <a class="header-anchor" href="#add-ktor-dependencies" aria-label="Permalink to &quot;新增依賴 {id=&quot;add-ktor-dependencies&quot;}&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>對於<a href="./client-supported-platforms">不同平台</a>，Ktor 提供帶有後綴的特定平台構件，例如 <code>-jvm</code> 或 <code>-js</code>，例如 <code>ktor-client-core-jvm</code>。請注意，Gradle 會自動解析適用於給定平台的構件，而 Maven 不支援此功能。這表示對於 Maven，您需要手動新增特定平台的後綴。</p></div><h3 id="client-dependency" tabindex="-1">客戶端依賴 <a class="header-anchor" href="#client-dependency" aria-label="Permalink to &quot;客戶端依賴 {id=&quot;client-dependency&quot;}&quot;">​</a></h3><p>主要的客戶端功能在 <code>ktor-client-core</code> 構件中提供。根據您的建構系統，您可以透過以下方式新增它：</p>',4)),i(p,{group:"languages"},{default:n(()=>[i(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(s,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-client-core:$ktor_version")'})]),_:1}),i(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(s,{lang:"Groovy",code:'            implementation "io.ktor:ktor-client-core:$ktor_version"'})]),_:1}),i(a,{title:"Maven","group-key":"maven"},{default:n(()=>[i(s,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-client-core-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),e[13]||(e[13]=r(`<p>您可以將 <code>$ktor_version</code> 替換為所需的 Ktor 版本，例如 <code>3.2.3</code>。</p><h4 id="client-dependency-multiplatform" tabindex="-1">多平台 <a class="header-anchor" href="#client-dependency-multiplatform" aria-label="Permalink to &quot;多平台 {id=&quot;client-dependency-multiplatform&quot;}&quot;">​</a></h4><p>對於多平台專案，您可以在 <code>gradle/libs.versions.toml</code> 檔案中定義 Ktor 版本和 <code>ktor-client-core</code> 構件：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[versions]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ktor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;3.2.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[libraries]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kotlin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { module </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;org.jetbrains.kotlin:kotlin-test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, version.ref </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kotlin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ktor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">okhttp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { module </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;io.ktor:ktor-client-okhttp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, version.ref </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ktor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p>然後，將 <code>ktor-client-core</code> 作為依賴新增到 <code>commonMain</code> 原始碼集：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sourceSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    commonMain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(libs.ktor.client.core)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="engine-dependency" tabindex="-1">引擎依賴 <a class="header-anchor" href="#engine-dependency" aria-label="Permalink to &quot;引擎依賴 {id=&quot;engine-dependency&quot;}&quot;">​</a></h3><p><a href="./client-engines">引擎</a>負責處理網路請求。有適用於各種平台的不同客戶端引擎，例如 Apache、CIO、Android、iOS 等。例如，您可以如下新增 <code>CIO</code> 引擎依賴：</p>`,8)),i(p,{group:"languages"},{default:n(()=>[i(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(s,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-client-cio:$ktor_version")'})]),_:1}),i(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(s,{lang:"Groovy",code:'            implementation "io.ktor:ktor-client-cio:$ktor_version"'})]),_:1}),i(a,{title:"Maven","group-key":"maven"},{default:n(()=>[i(s,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-client-cio-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),e[14]||(e[14]=r(`<h4 id="engine-dependency-multiplatform" tabindex="-1">多平台 <a class="header-anchor" href="#engine-dependency-multiplatform" aria-label="Permalink to &quot;多平台 {id=&quot;engine-dependency-multiplatform&quot;}&quot;">​</a></h4><p>對於多平台專案，您需要將所需引擎的依賴新增到對應的原始碼集。</p><p>例如，要為 Android 新增 <code>OkHttp</code> 引擎依賴，您可以先在 <code>gradle/libs.versions.toml</code> 檔案中定義 Ktor 版本和 <code>ktor-client-okhttp</code> 構件：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[versions]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ktor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;3.2.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[libraries]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kotlin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { module </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;org.jetbrains.kotlin:kotlin-test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, version.ref </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kotlin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ktor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">darwin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { module </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;io.ktor:ktor-client-darwin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, version.ref </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ktor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p>然後，將 <code>ktor-client-okhttp</code> 作為依賴新增到 <code>androidMain</code> 原始碼集：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sourceSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    androidMain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(libs.ktor.client.okhttp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>有關特定引擎所需依賴的完整列表，請參閱<a href="./client-engines#dependencies">新增引擎依賴</a>。</p><h3 id="日誌依賴" tabindex="-1">日誌依賴 <a class="header-anchor" href="#日誌依賴" aria-label="Permalink to &quot;日誌依賴&quot;">​</a></h3><p> 在 <a href="#jvm">JVM</a> 上，Ktor 使用 Simple Logging Facade for Java (<a href="http://www.slf4j.org/">SLF4J</a>) 作為日誌記錄的抽象層。SLF4J 將日誌 API 與底層日誌實作分離， 讓您可以整合最適合您應用程式需求的日誌框架。 常見的選擇包括 <a href="https://logback.qos.ch/">Logback</a> 或 <a href="https://logging.apache.org/log4j">Log4j</a>。如果未提供框架，SLF4J 將預設為無操作 (NOP) 實作，這基本上會禁用 日誌記錄。 </p><p> 要啟用日誌記錄，請包含一個帶有所需 SLF4J 實作的構件，例如 <a href="https://logback.qos.ch/">Logback</a>： </p>`,10)),i(p,{group:"languages"},{default:n(()=>[i(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(s,{lang:"Kotlin",code:'              implementation("ch.qos.logback:logback-classic:$logback_version")'})]),_:1}),i(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(s,{lang:"Groovy",code:'              implementation "ch.qos.logback:logback-classic:$logback_version"'})]),_:1}),i(a,{title:"Maven","group-key":"maven"},{default:n(()=>[i(s,{lang:"XML",code:`              <dependency>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-classic</artifactId>
                  <version>\${logback_version}</version>
              </dependency>`})]),_:1})]),_:1}),e[15]||(e[15]=r('<p>有關 Ktor 客戶端中日誌記錄的更多資訊，請參閱<a href="./client-logging">Ktor 客戶端中的日誌記錄</a>。</p><h3 id="plugin-dependency" tabindex="-1">外掛程式依賴 <a class="header-anchor" href="#plugin-dependency" aria-label="Permalink to &quot;外掛程式依賴 {id=&quot;plugin-dependency&quot;}&quot;">​</a></h3><p>Ktor 讓您可以使用預設不提供的額外客戶端功能（<a href="./client-plugins">外掛程式</a>），例如授權和序列化。其中一些在單獨的構件中提供。您可以從所需外掛程式的主題中了解您需要哪些依賴。</p><blockquote><p>對於多平台專案，外掛程式依賴應新增到 <code>commonMain</code> 原始碼集。請注意，某些外掛程式對於特定平台可能存在<a href="./client-engines#limitations">限制</a>。</p></blockquote><h2 id="確保-ktor-版本一致性" tabindex="-1">確保 Ktor 版本一致性 <a class="header-anchor" href="#確保-ktor-版本一致性" aria-label="Permalink to &quot;確保 Ktor 版本一致性&quot;">​</a></h2>',5)),i(u,{title:"使用 Ktor BOM 依賴"},{default:n(()=>[e[7]||(e[7]=t("p",null,"Ktor BOM 讓您可以確保所有 Ktor 模組使用相同且一致的版本，而無需單獨指定每個依賴的版本。",-1)),e[8]||(e[8]=t("p",null,"要新增 Ktor BOM 依賴，請在您的建構腳本中宣告它，如下所示：",-1)),i(p,{group:"languages"},{default:n(()=>[i(a,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(s,{lang:"Kotlin",code:'            implementation(platform("io.ktor:ktor-bom:$ktor_version"))'})]),_:1}),i(a,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(s,{lang:"Groovy",code:'            implementation platform "io.ktor:ktor-bom:$ktor_version"'})]),_:1}),i(a,{title:"Maven","group-key":"maven"},{default:n(()=>[i(s,{lang:"XML",code:`            <dependencyManagement>
              <dependencies>
                  <dependency>
                      <groupId>io.ktor</groupId>
                      <artifactId>ktor-bom</artifactId>
                      <version>3.2.3</version>
                      <type>pom</type>
                      <scope>import</scope>
                  </dependency>
              </dependencies>
          </dependencyManagement>`})]),_:1})]),_:1})]),_:1}),e[16]||(e[16]=t("p",null," 您也可以透過使用已發布的版本目錄來集中 Ktor 依賴宣告。 此方法提供以下優點： ",-1)),i(k,{id:"published-version-catalog-benefits"},{default:n(()=>e[9]||(e[9]=[t("li",null," 無需在您自己的目錄中手動宣告 Ktor 版本。 ",-1),t("li",null," 在單一命名空間下公開每個 Ktor 模組。 ",-1)])),_:1}),e[17]||(e[17]=t("p",null,[o(" 要在 "),t("path",null,"settings.gradle.kts"),o(" 中宣告目錄，請使用您選擇的名稱建立一個版本目錄： ")],-1)),i(s,{lang:"kotlin",code:`    dependencyResolutionManagement {
        versionCatalogs {
            create("ktorLibs") {
                from("io.ktor:ktor-version-catalog:3.2.3")
            }
        }
    }`}),e[18]||(e[18]=t("p",null,[o(" 然後，您可以透過引用目錄名稱，在模組的 "),t("path",null,"build.gradle.kts"),o(" 中新增依賴： ")],-1)),i(s,{lang:"kotlin",code:`    dependencies {
        implementation(ktorLibs.client.core)
        // ...
    }`})])}const T=E(v,[["render",_]]);export{K as __pageData,T as default};
