import{_ as y,C as l,c as F,o as u,G as i,ag as h,j as a,w as n,a as t}from"./chunks/framework.Bksy39di.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/client-logging.md","filePath":"zh-Hant/ktor/client-logging.md","lastUpdated":1755457140000}'),m={name:"zh-Hant/ktor/client-logging.md"};function C(f,s,_,b,A,B){const r=l("TopicTitle"),o=l("show-structure"),g=l("primary-label"),d=l("tldr"),e=l("code-block"),p=l("TabItem"),k=l("Tabs"),c=l("snippet"),E=l("Links");return u(),F("div",null,[i(r,{labelRef:"client-plugin",title:"Ktor 客戶端中的日誌記錄"}),i(o,{for:"chapter",depth:"2"}),i(g,{ref:"client-plugin"},null,512),i(d,null,{default:n(()=>s[0]||(s[0]=[a("p",null,[a("b",null,"所需的依賴項"),t("："),a("code",null,"io.ktor:ktor-client-logging")],-1),a("p",null,[a("b",null,"程式碼範例"),t("： "),a("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-logging"}," client-logging ")],-1)])),_:1}),s[6]||(s[6]=h('<p>日誌記錄是一種追蹤程式執行情況並透過記錄重要事件、錯誤或資訊性訊息來診斷問題的方式。</p><p>Ktor 提供使用 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-logging/io.ktor.client.plugins.logging/-logging" target="_blank" rel="noreferrer">Logging</a> 外掛程式來記錄 HTTP 呼叫的功能。 此外掛程式為不同的平台提供不同的日誌記錄器類型。</p><blockquote><p>在伺服器端，Ktor 提供 <a href="./server-logging">Logging</a> 外掛程式用於應用程式日誌記錄，以及 <a href="./server-call-logging">CallLogging</a> 外掛程式用於記錄客戶端請求。</p></blockquote><h2 id="jvm" tabindex="-1">JVM <a class="header-anchor" href="#jvm" aria-label="Permalink to &quot;JVM&quot;">​</a></h2>',4)),i(c,{id:"jvm-logging"},{default:n(()=>[s[1]||(s[1]=a("p",null,[t(" 在 "),a("a",{href:"#jvm"},"JVM"),t(" 上，Ktor 使用適用於 Java 的簡單日誌記錄介面 ("),a("a",{href:"http://www.slf4j.org/"},"SLF4J"),t(") 作為日誌記錄的抽象層。SLF4J 將日誌記錄 API 與底層日誌記錄實作解耦， 讓您可以整合最符合應用程式需求的日誌記錄框架。 常見的選擇包括 "),a("a",{href:"https://logback.qos.ch/"},"Logback"),t(" 或 "),a("a",{href:"https://logging.apache.org/log4j"},"Log4j"),t("。如果沒有提供框架，SLF4J 將預設使用 無操作 (NOP) 實作，這基本上會禁用日誌記錄。 ")],-1)),s[2]||(s[2]=a("p",null,[t(" 要啟用日誌記錄，請包含一個具有所需 SLF4J 實作的 artifact，例如 "),a("a",{href:"https://logback.qos.ch/"},"Logback"),t("： ")],-1)),i(k,{group:"languages"},{default:n(()=>[i(p,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(e,{lang:"Kotlin",code:'              implementation("ch.qos.logback:logback-classic:$logback_version")'})]),_:1}),i(p,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(e,{lang:"Groovy",code:'              implementation "ch.qos.logback:logback-classic:$logback_version"'})]),_:1}),i(p,{title:"Maven","group-key":"maven"},{default:n(()=>[i(e,{lang:"XML",code:`              <dependency>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-classic</artifactId>
                  <version>\${logback_version}</version>
              </dependency>`})]),_:1})]),_:1})]),_:1}),s[7]||(s[7]=a("h3",{id:"android",tabindex:"-1"},[t("Android "),a("a",{class:"header-anchor",href:"#android","aria-label":'Permalink to "Android"'},"​")],-1)),s[8]||(s[8]=a("p",null," 在 Android 上，我們建議使用 SLF4J Android 函式庫： ",-1)),i(k,{group:"languages"},{default:n(()=>[i(p,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(e,{lang:"Kotlin",code:'            implementation("org.slf4j:slf4j-android:$slf4j_version")'})]),_:1}),i(p,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(e,{lang:"Groovy",code:'            implementation "org.slf4j:slf4j-android:$slf4j_version"'})]),_:1})]),_:1}),s[9]||(s[9]=h('<h2 id="native" tabindex="-1">Native <a class="header-anchor" href="#native" aria-label="Permalink to &quot;Native&quot;">​</a></h2><p>對於 <a href="./client-engines#native">Native 目標</a>，<code>Logging</code> 外掛程式提供一個將所有內容 列印到標準輸出串流 (<code>STDOUT</code>) 的日誌記錄器。</p><h2 id="multiplatform" tabindex="-1">Multiplatform <a class="header-anchor" href="#multiplatform" aria-label="Permalink to &quot;Multiplatform&quot;">​</a></h2><p>在 <a href="./client-create-multiplatform-application">多平台專案</a> 中，您可以指定 <a href="#custom_logger">自訂日誌記錄器</a>，例如 <a href="https://github.com/AAkira/Napier" target="_blank" rel="noreferrer">Napier</a>。</p><h2 id="add_dependencies" tabindex="-1">新增依賴項 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;新增依賴項 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>要新增 <code>Logging</code> 外掛程式，請在您的建置腳本中包含以下 artifact：</p>',6)),i(k,{group:"languages"},{default:n(()=>[i(p,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(e,{lang:"Kotlin",code:'              implementation("io.ktor:ktor-client-logging:$ktor_version")'})]),_:1}),i(p,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(e,{lang:"Groovy",code:'              implementation "io.ktor:ktor-client-logging:$ktor_version"'})]),_:1}),i(p,{title:"Maven","group-key":"maven"},{default:n(()=>[i(e,{lang:"XML",code:`              <dependency>
                  <groupId>io.ktor</groupId>
                  <artifactId>ktor-client-logging-jvm</artifactId>
                  <version>\${ktor_version}</version>
              </dependency>`})]),_:1})]),_:1}),a("p",null,[s[4]||(s[4]=t(" 您可以從 ")),i(E,{href:"/ktor/client-dependencies",summary:"了解如何將客戶端依賴項新增到現有專案。"},{default:n(()=>s[3]||(s[3]=[t("新增客戶端依賴項")])),_:1}),s[5]||(s[5]=t(" 中了解更多關於 Ktor 客戶端所需的 artifact。 "))]),s[10]||(s[10]=h(`<h2 id="install_plugin" tabindex="-1">安裝 Logging <a class="header-anchor" href="#install_plugin" aria-label="Permalink to &quot;安裝 Logging {id=&quot;install_plugin&quot;}&quot;">​</a></h2><p>要安裝 <code>Logging</code>，請在 <a href="./client-create-and-configure#configure-client">客戶端配置區塊</a> 中將其傳遞給 <code>install</code> 函數：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.logging.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Logging)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configure_plugin" tabindex="-1">配置 Logging <a class="header-anchor" href="#configure_plugin" aria-label="Permalink to &quot;配置 Logging {id=&quot;configure_plugin&quot;}&quot;">​</a></h2><p><code>Logging</code> 外掛程式的配置由 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-logging/io.ktor.client.plugins.logging/-logging-config" target="_blank" rel="noreferrer">Logging.Config</a> 類別提供。以下範例顯示一個範例配置：</p><p><code>logger</code> : 指定一個 Logger 實例。<code>Logger.DEFAULT</code> 使用 SLF4J 日誌記錄框架。對於 Native 目標，將此屬性設定為 <code>Logger.SIMPLE</code>。</p><p><code>level</code> : 指定日誌記錄級別。<code>LogLevel.HEADERS</code> 只會記錄請求/回應標頭。</p><p><code>filter()</code> : 允許您篩選與指定判斷式匹配的請求的日誌訊息。在以下範例中，只有發送到 <code>ktor.io</code> 的請求會進入日誌。</p><p><code>sanitizeHeader()</code> : 允許您淨化敏感標頭，以避免其值出現在日誌中。在以下範例中，當記錄時，<code>Authorization</code> 標頭的值將被替換為 &#39;***&#39;。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> com.example</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.logging.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.request.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.statement.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.http.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinx.coroutines.runBlocking</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    runBlocking</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Logging) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                logger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Logger.DEFAULT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                level </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LogLevel.HEADERS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    request.url.host.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ktor.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                sanitizeHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HttpHeaders.Authorization }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response1: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://ktor.io/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response2: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://jetbrains.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>有關完整範例，請參閱 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-logging" target="_blank" rel="noreferrer">client-logging</a>。</p><h3 id="custom_logger" tabindex="-1">提供自訂的日誌記錄器 <a class="header-anchor" href="#custom_logger" aria-label="Permalink to &quot;提供自訂的日誌記錄器 {id=&quot;custom_logger&quot;}&quot;">​</a></h3><p>要在您的客戶端應用程式中使用自訂日誌記錄器，您需要建立一個 <code>Logger</code> 實例並覆寫 <code>log</code> 函數。 以下範例顯示如何使用 <a href="https://github.com/AAkira/Napier" target="_blank" rel="noreferrer">Napier</a> 函式庫記錄 HTTP 呼叫：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> com.example</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.github.aakira.napier.DebugAntilog</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.github.aakira.napier.Napier</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.logging.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.request.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.statement.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlinx.coroutines.runBlocking</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    runBlocking</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Logging) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                logger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        Napier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HTTP Client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, message)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                level </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LogLevel.HEADERS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">also</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Napier.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DebugAntilog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HttpResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://ktor.io/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>有關完整範例，請參閱 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-logging-napier" target="_blank" rel="noreferrer">client-logging-napier</a>。</p>`,15))])}const L=y(m,[["render",C]]);export{D as __pageData,L as default};
