import{_ as s,c as a,o as t,ag as n}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"테스트 용이성","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/api-guidelines-testability.md","filePath":"ko/kotlin/api-guidelines-testability.md","lastUpdated":1754307826000}'),e={name:"ko/kotlin/api-guidelines-testability.md"};function l(p,i,k,h,o,d){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="테스트-용이성" tabindex="-1">테스트 용이성 <a class="header-anchor" href="#테스트-용이성" aria-label="Permalink to &quot;테스트 용이성&quot;">​</a></h1><p>라이브러리 테스트 (<a href="/ko/kotlin/api-guidelines-consistency#maintain-conventions-and-quality">testing your library</a>) 외에도, 라이브러리를 사용하는 코드가 테스트 가능하도록 보장해야 합니다.</p><h2 id="전역-상태-및-상태-저장-최상위-함수-피하기" tabindex="-1">전역 상태 및 상태 저장 최상위 함수 피하기 <a class="header-anchor" href="#전역-상태-및-상태-저장-최상위-함수-피하기" aria-label="Permalink to &quot;전역 상태 및 상태 저장 최상위 함수 피하기&quot;">​</a></h2><p>여러분의 라이브러리는 전역 변수의 상태에 의존하거나 공개 API의 일부로 상태 저장 최상위 함수를 제공해서는 안 됩니다. 이러한 변수와 함수는 테스트가 전역 값을 제어할 방법을 찾아야 하므로 라이브러리를 사용하는 코드의 테스트를 어렵게 만듭니다.</p><p>예를 들어, 라이브러리가 현재 시간에 대한 접근을 제공하는 전역적으로 접근 가능한 함수를 정의할 수 있습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instant: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Instant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Clock.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instant)</span></span></code></pre></div><p>이 API를 사용하는 모든 코드는 테스트하기 어려울 것입니다. <code>now()</code> 함수 호출이 항상 실제 현재 시간을 반환하는 반면, 테스트에서는 가짜 값을 반환하는 것이 종종 바람직하기 때문입니다.</p><p>테스트 용이성을 확보하기 위해, <a href="https://github.com/Kotlin/kotlinx-datetime" target="_blank" rel="noreferrer"><code>kotlinx-datetime</code></a> 라이브러리는 사용자가 <code>Clock</code> 인스턴스를 얻은 다음 이를 사용하여 현재 시간을 가져올 수 있도록 하는 API를 제공합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> clock: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Clock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Clock.System</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instant: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Instant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> clock.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instant)</span></span></code></pre></div><p>이를 통해 라이브러리 사용자는 자신의 클래스에 <code>Clock</code> 인스턴스를 주입하고, 테스트 중에 실제 구현을 가짜 구현으로 대체할 수 있습니다.</p><h2 id="다음-단계" tabindex="-1">다음 단계 <a class="header-anchor" href="#다음-단계" aria-label="Permalink to &quot;다음 단계&quot;">​</a></h2><p>아직 다음 페이지들을 살펴보지 않았다면 고려해 보세요.</p><ul><li><a href="/ko/kotlin/api-guidelines-backward-compatibility">이전 버전과의 호환성</a> 페이지에서 이전 버전과의 호환성을 유지하는 방법에 대해 알아보세요.</li><li>효과적인 문서화 관행에 대한 광범위한 개요는 <a href="/ko/kotlin/api-guidelines-informative-documentation">정보성 문서화</a>를 참조하세요.</li></ul>`,13)]))}const g=s(e,[["render",l]]);export{c as __pageData,g as default};
