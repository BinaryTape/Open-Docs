import{_ as d,c as e,o,ag as a}from"./chunks/framework.Bksy39di.js";const u=JSON.parse('{"title":"Kotlin/Nativeのターゲットサポート","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/native-target-support.md","filePath":"ja/kotlin/native-target-support.md","lastUpdated":1754307826000}'),r={name:"ja/kotlin/native-target-support.md"};function l(i,t,c,n,p,s){return o(),e("div",null,t[0]||(t[0]=[a('<h1 id="kotlin-nativeのターゲットサポート" tabindex="-1">Kotlin/Nativeのターゲットサポート <a class="header-anchor" href="#kotlin-nativeのターゲットサポート" aria-label="Permalink to &quot;Kotlin/Nativeのターゲットサポート&quot;">​</a></h1><p>Kotlin/Nativeコンパイラは非常に多くの異なるターゲットをサポートしていますが、それらすべてに対して同じレベルのサポートを提供することは困難です。このドキュメントでは、Kotlin/Nativeがサポートするターゲットと、コンパイラによるサポートの度合いに応じてそれらをいくつかのティアに分類する方法について説明します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>ティアの数、サポートされるターゲットのリスト、およびその機能は、必要に応じて調整される可能性があります。</p></div><p>以下のティアテーブルで使用される用語にご注意ください。</p><ul><li><p><strong>Gradleターゲット名</strong>は、Kotlin Multiplatform Gradleプラグインでターゲットを有効にするために使用される<a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-dsl-reference.html#targets" target="_blank" rel="noreferrer">ターゲット名</a>です。</p></li><li><p><strong>ターゲットトリプル</strong>は、<a href="https://clang.llvm.org/docs/CrossCompilation.html#target-triple" target="_blank" rel="noreferrer">コンパイラ</a>で一般的に使用される<code>&lt;architecture&gt;-&lt;vendor&gt;-&lt;system&gt;-&lt;abi&gt;</code>構造に基づくターゲット名です。</p></li><li><p><strong>テストの実行</strong>は、GradleおよびIDEでのテスト実行の「すぐに使える（out of the box）」サポートを示します。</p><p>これは、特定のターゲットに対するネイティブホストでのみ利用可能です。例えば、<code>macosX64</code>および<code>iosX64</code>のテストは、macOS x86-64ホスト上でのみ実行できます。</p></li></ul><h2 id="ティア1" tabindex="-1">ティア1 <a class="header-anchor" href="#ティア1" aria-label="Permalink to &quot;ティア1&quot;">​</a></h2><ul><li>ターゲットは、コンパイルおよび実行可能であるかCIで定期的にテストされます。</li><li>コンパイラのリリース間でのソースおよび<a href="https://youtrack.jetbrains.com/issue/KT-42293" target="_blank" rel="noreferrer">バイナリ互換性</a>を提供します。</li></ul><table tabindex="0"><thead><tr><th>Gradleターゲット名</th><th>ターゲットトリプル</th><th>テストの実行</th><th>説明</th></tr></thead><tbody><tr><td>Apple macOSホストのみ:</td><td></td><td></td><td></td></tr><tr><td><code>macosX64</code></td><td><code>x86_64-apple-macos</code></td><td>✅</td><td>x86_64プラットフォーム上のApple macOS</td></tr><tr><td><code>macosArm64</code></td><td><code>aarch64-apple-macos</code></td><td>✅</td><td>Apple Siliconプラットフォーム上のApple macOS</td></tr><tr><td><code>iosSimulatorArm64</code></td><td><code>aarch64-apple-ios-simulator</code></td><td>✅</td><td>Apple Siliconプラットフォーム上のApple iOSシミュレーター</td></tr><tr><td><code>iosX64</code></td><td><code>x86_64-apple-ios-simulator</code></td><td>✅</td><td>x86-64プラットフォーム上のApple iOSシミュレーター</td></tr><tr><td><code>iosArm64</code></td><td><code>aarch64-apple-ios</code></td><td></td><td>ARM64プラットフォーム上のApple iOSおよびiPadOS</td></tr></tbody></table><h2 id="ティア2" tabindex="-1">ティア2 <a class="header-anchor" href="#ティア2" aria-label="Permalink to &quot;ティア2&quot;">​</a></h2><ul><li>ターゲットは、コンパイル可能であるかCIで定期的にテストされますが、実行可能であるかの自動テストは行われない場合があります。</li><li>コンパイラのリリース間でのソースおよび<a href="https://youtrack.jetbrains.com/issue/KT-42293" target="_blank" rel="noreferrer">バイナリ互換性</a>を提供するよう最善を尽くしています。</li></ul><table tabindex="0"><thead><tr><th>Gradleターゲット名</th><th>ターゲットトリプル</th><th>テストの実行</th><th>説明</th></tr></thead><tbody><tr><td><code>linuxX64</code></td><td><code>x86_64-unknown-linux-gnu</code></td><td>✅</td><td>x86_64プラットフォーム上のLinux</td></tr><tr><td><code>linuxArm64</code></td><td><code>aarch64-unknown-linux-gnu</code></td><td></td><td>ARM64プラットフォーム上のLinux</td></tr><tr><td>Apple macOSホストのみ:</td><td></td><td></td><td></td></tr><tr><td><code>watchosSimulatorArm64</code></td><td><code>aarch64-apple-watchos-simulator</code></td><td>✅</td><td>Apple Siliconプラットフォーム上のApple watchOSシミュレーター</td></tr><tr><td><code>watchosX64</code></td><td><code>x86_64-apple-watchos-simulator</code></td><td>✅</td><td>x86_64プラットフォーム上のApple watchOS 64ビットシミュレーター</td></tr><tr><td><code>watchosArm32</code></td><td><code>armv7k-apple-watchos</code></td><td></td><td>ARM32プラットフォーム上のApple watchOS</td></tr><tr><td><code>watchosArm64</code></td><td><code>arm64_32-apple-watchos</code></td><td></td><td>ILP32を持つARM64プラットフォーム上のApple watchOS</td></tr><tr><td><code>tvosSimulatorArm64</code></td><td><code>aarch64-apple-tvos-simulator</code></td><td>✅</td><td>Apple Siliconプラットフォーム上のApple tvOSシミュレーター</td></tr><tr><td><code>tvosX64</code></td><td><code>x86_64-apple-tvos-simulator</code></td><td>✅</td><td>x86_64プラットフォーム上のApple tvOSシミュレーター</td></tr><tr><td><code>tvosArm64</code></td><td><code>aarch64-apple-tvos</code></td><td></td><td>ARM64プラットフォーム上のApple tvOS</td></tr></tbody></table><h2 id="ティア3" tabindex="-1">ティア3 <a class="header-anchor" href="#ティア3" aria-label="Permalink to &quot;ティア3&quot;">​</a></h2><ul><li>ターゲットはCIでテストされることを保証しません。</li><li>これらのターゲットに対する変更は非常にまれですが、異なるコンパイラのリリース間でのソースおよびバイナリ互換性を約束することはできません。</li></ul><table tabindex="0"><thead><tr><th>Gradleターゲット名</th><th>ターゲットトリプル</th><th>テストの実行</th><th>説明</th></tr></thead><tbody><tr><td><code>androidNativeArm32</code></td><td><code>arm-unknown-linux-androideabi</code></td><td></td><td>ARM32プラットフォーム上の<a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>androidNativeArm64</code></td><td><code>aarch64-unknown-linux-android</code></td><td></td><td>ARM64プラットフォーム上の<a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>androidNativeX86</code></td><td><code>i686-unknown-linux-android</code></td><td></td><td>x86プラットフォーム上の<a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>androidNativeX64</code></td><td><code>x86_64-unknown-linux-android</code></td><td></td><td>x86_64プラットフォーム上の<a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>mingwX64</code></td><td><code>x86_64-pc-windows-gnu</code></td><td>✅</td><td><a href="https://www.mingw-w64.org" target="_blank" rel="noreferrer">MinGW</a>互換性レイヤーを使用する64ビットWindows 10以降</td></tr><tr><td>Apple macOSホストのみ:</td><td></td><td></td><td></td></tr><tr><td><code>watchosDeviceArm64</code></td><td><code>aarch64-apple-watchos</code></td><td></td><td>ARM64プラットフォーム上のApple watchOS</td></tr></tbody></table><div class="note custom-block"><p class="custom-block-title">NOTE</p><p><code>linuxArm32Hfp</code>ターゲットは非推奨であり、将来のリリースで削除される予定です。</p></div><h2 id="ライブラリ作者向け" tabindex="-1">ライブラリ作者向け <a class="header-anchor" href="#ライブラリ作者向け" aria-label="Permalink to &quot;ライブラリ作者向け&quot;">​</a></h2><p>ライブラリ作者がKotlin/Nativeコンパイラよりも多くのターゲットをテストしたり、より厳格な保証を提供したりすることはお勧めしません。ネイティブターゲットのサポートを検討する際には、以下の¹アプローチを使用できます。</p><ul><li>ティア1、2、3のすべてのターゲットをサポートします。</li><li>ティア1および2で、すぐにテスト実行をサポートするターゲットを定期的にテストします。</li></ul><p>Kotlinチームは、公式のKotlinライブラリ（例: <a href="/ja/kotlin/coroutines-guide">kotlinx.coroutines</a>や<a href="/ja/kotlin/serialization">kotlinx.serialization</a>）でこのアプローチを使用しています。</p>',19)]))}const m=d(r,[["render",l]]);export{u as __pageData,m as default};
