import{_ as u,C as r,c as y,o as v,G as e,ag as k,j as i,w as a,a as t}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/server-metrics-micrometer.md","filePath":"ktor/server-metrics-micrometer.md","lastUpdated":1755457140000}'),F={name:"ktor/server-metrics-micrometer.md"};function f(b,s,_,C,M,B){const h=r("TopicTitle"),d=r("show-structure"),c=r("primary-label"),o=r("Links"),E=r("tldr"),m=r("link-summary"),n=r("code-block"),l=r("TabItem"),p=r("Tabs"),g=r("list");return v(),y("div",null,[e(h,{labelRef:"server-plugin",title:"Micrometer 指标"}),e(d,{for:"chapter",depth:"2"}),e(c,{ref:"server-plugin"},null,512),e(E,null,{default:a(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依赖项"),t(": "),i("code",null,"io.ktor:ktor-server-metrics-micrometer")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"代码示例"),t(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/micrometer-metrics"}," micrometer-metrics ")],-1)),i("p",null,[i("b",null,[e(o,{href:"/ktor/server-native",summary:"Ktor 支持 Kotlin/Native，允许您在没有额外运行时或虚拟机的情况下运行服务器。"},{default:a(()=>s[0]||(s[0]=[t("原生服务器")])),_:1}),s[1]||(s[1]=t(" 支持"))]),s[2]||(s[2]=t(": ✖️ "))])]),_:1}),e(m,null,{default:a(()=>s[5]||(s[5]=[t("MicrometerMetrics 插件在您的 Ktor 服务器应用程序中启用 Micrometer 指标，并允许您选择所需的监控系统，例如 Prometheus、JMX、Elastic 等。")])),_:1}),s[21]||(s[21]=k('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-metrics-micrometer/io.ktor.server.metrics.micrometer/-micrometer-metrics" target="_blank" rel="noreferrer">MicrometerMetrics</a> 插件在您的 Ktor 服务器应用程序中启用 <a href="https://micrometer.io/docs" target="_blank" rel="noreferrer">Micrometer</a> 指标，并允许您选择所需的监控系统，例如 Prometheus、JMX、Elastic 等。默认情况下，Ktor 暴露用于监控 HTTP 请求的指标和一组用于<a href="https://micrometer.io/docs/ref/jvm" target="_blank" rel="noreferrer">监控 JVM</a> 的低级指标。您可以自定义这些指标或创建新的指标。</p><h2 id="add_dependencies" tabindex="-1">添加依赖项 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;添加依赖项 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>要启用 <code>MicrometerMetrics</code>，您需要将以下构件包含到构建脚本中：</p>',3)),i("ul",null,[i("li",null,[s[6]||(s[6]=i("p",null,[t("添加 "),i("code",null,"ktor-server-metrics-micrometer"),t(" 依赖项：")],-1)),e(p,{group:"languages"},{default:a(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(n,{lang:"Kotlin",code:'              implementation("io.ktor:ktor-server-metrics-micrometer:$ktor_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(n,{lang:"Groovy",code:'              implementation "io.ktor:ktor-server-metrics-micrometer:$ktor_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:a(()=>[e(n,{lang:"XML",code:`              <dependency>
                  <groupId>io.ktor</groupId>
                  <artifactId>ktor-server-metrics-micrometer-jvm</artifactId>
                  <version>\${ktor_version}</version>
              </dependency>`})]),_:1})]),_:1})]),i("li",null,[s[7]||(s[7]=i("p",null,"添加监控系统所需的依赖项。下面的示例展示了如何为 Prometheus 添加构件：",-1)),e(p,{group:"languages"},{default:a(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(n,{lang:"Kotlin",code:'              implementation("io.micrometer:micrometer-registry-prometheus:$prometheus_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(n,{lang:"Groovy",code:'              implementation "io.micrometer:micrometer-registry-prometheus:$prometheus_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:a(()=>[e(n,{lang:"XML",code:`              <dependency>
                  <groupId>io.micrometer</groupId>
                  <artifactId>micrometer-registry-prometheus</artifactId>
                  <version>\${prometheus_version}</version>
              </dependency>`})]),_:1})]),_:1}),s[8]||(s[8]=i("p",null,[t("您可以将 "),i("code",null,"$prometheus_version"),t(" 替换为 "),i("code",null,"micrometer-registry-prometheus"),t(" 构件的所需版本，例如 "),i("code",null,"1.10.3"),t("。")],-1))])]),s[22]||(s[22]=i("h2",{id:"install_plugin",tabindex:"-1"},[t("安装 MicrometerMetrics "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安装 MicrometerMetrics {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[10]||(s[10]=t(" 要将 ")),s[11]||(s[11]=i("code",null,"MicrometerMetrics",-1)),s[12]||(s[12]=t(" 插件")),s[13]||(s[13]=i("a",{href:"#install"},"安装",-1)),s[14]||(s[14]=t("到应用程序中， 请将其传递给指定")),e(o,{href:"/ktor/server-modules",summary:"模块允许您通过对路由进行分组来组织应用程序。"},{default:a(()=>s[9]||(s[9]=[t("模块")])),_:1}),s[15]||(s[15]=t("中的 ")),s[16]||(s[16]=i("code",null,"install",-1)),s[17]||(s[17]=t(" 函数。 下面的代码片段展示了如何安装 ")),s[18]||(s[18]=i("code",null,"MicrometerMetrics",-1)),s[19]||(s[19]=t(" ... "))]),e(g,null,{default:a(()=>s[20]||(s[20]=[i("li",null,[t(" ... 在 "),i("code",null,"embeddedServer"),t(" 函数调用内部。 ")],-1),i("li",null,[t(" ... 在显式定义的 "),i("code",null,"module"),t(" 内部，它是 "),i("code",null,"Application"),t(" 类的扩展函数。 ")],-1)])),_:1}),e(p,null,{default:a(()=>[e(l,{title:"embeddedServer"},{default:a(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.metrics.micrometer.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(MicrometerMetrics)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),e(l,{title:"module"},{default:a(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.metrics.micrometer.*
            // ...
            fun Application.module() {
                install(MicrometerMetrics)
                // ...
            }`})]),_:1})]),_:1}),s[23]||(s[23]=k(`<h3 id="ktor_metrics" tabindex="-1">暴露的指标 <a class="header-anchor" href="#ktor_metrics" aria-label="Permalink to &quot;暴露的指标 {id=&quot;ktor_metrics&quot;}&quot;">​</a></h3><p>Ktor 暴露以下指标用于监控 HTTP 请求：</p><ul><li><code>ktor.http.server.requests.active</code>：一个<a href="https://micrometer.io/docs/concepts#_gauges" target="_blank" rel="noreferrer">计量器</a>，用于统计并发 HTTP 请求的数量。此指标不提供任何标签。</li><li><code>ktor.http.server.requests</code>：一个<a href="https://micrometer.io/docs/concepts#_timers" target="_blank" rel="noreferrer">计时器</a>，用于测量每个请求的时间。此指标提供一组标签用于监控请求数据，包括用于请求 URL 的 <code>address</code>、用于 HTTP 方法的 <code>method</code>、用于处理请求的 Ktor 路由的 <code>route</code> 等。</li></ul><p>您可以使用 <code>metricName</code> <a href="#configure_metrics">配置</a>属性自定义默认的 <code>ktor.http.server.requests</code> 前缀。</p><blockquote><p>指标名称可能会根据配置的监控系统而<a href="https://micrometer.io/docs/concepts#_naming_meters" target="_blank" rel="noreferrer">不同</a>。</p></blockquote><p>除了 HTTP 指标外，Ktor 还暴露一组用于<a href="#jvm_metrics">监控 JVM</a> 的指标。</p><h2 id="create_registry" tabindex="-1">创建注册表 <a class="header-anchor" href="#create_registry" aria-label="Permalink to &quot;创建注册表 {id=&quot;create_registry&quot;}&quot;">​</a></h2><p>安装 <code>MicrometerMetrics</code> 后，您需要为<a href="https://micrometer.o/docs/concepts#_registry" target="_blank" rel="noreferrer">监控系统创建注册表</a>并将其赋值给 <code>registry</code> 属性。在下面的示例中，<code>PrometheusMeterRegistry</code> 在 <code>install</code> 代码块外部创建，以便能够在不同的<a href="./server-routing">路由处理器</a>中重用此注册表：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> appMicrometerRegistry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PrometheusMeterRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PrometheusConfig.DEFAULT)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MicrometerMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        registry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> appMicrometerRegistry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configure_metrics" tabindex="-1">配置指标 <a class="header-anchor" href="#configure_metrics" aria-label="Permalink to &quot;配置指标 {id=&quot;configure_metrics&quot;}&quot;">​</a></h2><p><code>MicrometerMetrics</code> 插件提供各种配置选项，可以使用 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-metrics-micrometer/io.ktor.server.metrics.micrometer/-micrometer-metrics-config/index.html" target="_blank" rel="noreferrer">MicrometerMetricsConfig</a> 进行访问。</p><h3 id="timers" tabindex="-1">计时器 <a class="header-anchor" href="#timers" aria-label="Permalink to &quot;计时器 {id=&quot;timers&quot;}&quot;">​</a></h3><p>要自定义每个计时器的标签，可以使用为每个请求调用的 <code>timers</code> 函数：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MicrometerMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    timers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { call, exception </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;region&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, call.request.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regionId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="distribution_statistics" tabindex="-1">分布统计 <a class="header-anchor" href="#distribution_statistics" aria-label="Permalink to &quot;分布统计 {id=&quot;distribution_statistics&quot;}&quot;">​</a></h3><p>您可以使用 <code>distributionStatisticConfig</code> 属性配置<a href="https://micrometer.io/docs/concepts#_configuring_distribution_statistics" target="_blank" rel="noreferrer">分布统计</a>，例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MicrometerMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    distributionStatisticConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DistributionStatisticConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">percentilesHistogram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">maximumExpectedValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Duration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ofSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toNanos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">serviceLevelObjectives</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Duration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ofMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toNanos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Duration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ofMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toNanos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="jvm_metrics" tabindex="-1">JVM 和系统指标 <a class="header-anchor" href="#jvm_metrics" aria-label="Permalink to &quot;JVM 和系统指标 {id=&quot;jvm_metrics&quot;}&quot;">​</a></h3><p>除了 <a href="#ktor_metrics">HTTP 指标</a>外，Ktor 还暴露一组用于<a href="https://micrometer.io/docs/ref/jvm" target="_blank" rel="noreferrer">监控 JVM</a> 的指标。您可以使用 <code>meterBinders</code> 属性自定义这些指标的列表，例如：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MicrometerMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    meterBinders </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        JvmMemoryMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        JvmGcMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        ProcessorMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您也可以赋值一个空列表来完全禁用这些指标。</p><h2 id="prometheus_endpoint" tabindex="-1">Prometheus：暴露抓取端点 <a class="header-anchor" href="#prometheus_endpoint" aria-label="Permalink to &quot;Prometheus：暴露抓取端点 {id=&quot;prometheus_endpoint&quot;}&quot;">​</a></h2><p>如果您使用 Prometheus 作为监控系统，您需要向 Prometheus 抓取器暴露一个 HTTP 端点。在 Ktor 中，您可以通过以下方式实现：</p><ol><li><p>创建一个接受 GET 请求的专用<a href="./server-routing">路由</a>，使用所需的地址（在下面的示例中为 <code>/metrics</code>）。</p></li><li><p>使用 <code>call.respond</code> 将抓取数据发送到 Prometheus。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> appMicrometerRegistry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PrometheusMeterRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PrometheusConfig.DEFAULT)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MicrometerMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        registry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> appMicrometerRegistry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/metrics&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(appMicrometerRegistry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以在此处找到完整示例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/micrometer-metrics" target="_blank" rel="noreferrer">micrometer-metrics</a>。</p></li></ol>`,24))])}const P=u(F,[["render",f]]);export{T as __pageData,P as default};
