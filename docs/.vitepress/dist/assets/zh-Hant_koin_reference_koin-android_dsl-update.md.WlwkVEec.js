import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.Bksy39di.js";const o=JSON.parse('{"title":"Android 的建構函式 DSL","description":"","frontmatter":{"title":"Android 的建構函式 DSL"},"headers":[],"relativePath":"zh-Hant/koin/reference/koin-android/dsl-update.md","filePath":"zh-Hant/koin/reference/koin-android/dsl-update.md","lastUpdated":1748365453000}'),e={name:"zh-Hant/koin/reference/koin-android/dsl-update.md"};function p(h,s,t,k,d,r){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="android-的建構函式-dsl" tabindex="-1">Android 的建構函式 DSL <a class="header-anchor" href="#android-的建構函式-dsl" aria-label="Permalink to &quot;Android 的建構函式 DSL&quot;">​</a></h1><h2 id="新的建構函式-dsl-自-3-2-版起" tabindex="-1">新的建構函式 DSL (自 3.2 版起) <a class="header-anchor" href="#新的建構函式-dsl-自-3-2-版起" aria-label="Permalink to &quot;新的建構函式 DSL (自 3.2 版起)&quot;">​</a></h2><p>Koin 現在提供一種新型的 DSL 關鍵字，允許您直接指定類別建構函式，並避免在 lambda 表達式中輸入您的定義。</p><p>請查看新的 <a href="/zh-Hant/koin/reference/koin-core/dsl-update#constructor-dsl-since-32">建構函式 DSL</a> 部分以獲取更多詳細資訊。</p><p>對於 Android，這表示以下新的建構函式 DSL 關鍵字：</p><ul><li><code>viewModelOf()</code> - 等同於 <code>viewModel { }</code></li><li><code>fragmentOf()</code> - 等同於 <code>fragment { }</code></li><li><code>workerOf()</code> - 等同於 <code>worker { }</code></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>請確保在類別名稱前使用 <code>::</code>，以指定您的類別建構函式</p></div><h3 id="android-範例" tabindex="-1">Android 範例 <a class="header-anchor" href="#android-範例" aria-label="Permalink to &quot;Android 範例&quot;">​</a></h3><p>假設一個 Android 應用程式包含以下元件：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一個簡單的服務</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimpleServiceImpl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleService</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一個 Presenter，使用 SimpleService 並可接收注入的 &quot;id&quot; 參數</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FactoryPresenter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> service: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一個 ViewModel，可接收注入的 &quot;id&quot; 參數、使用 SimpleService 並取得 SavedStateHandle</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimpleViewModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> service: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> handle: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SavedStateHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ViewModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一個有作用域的 Session，可接收指向 MyActivity 的連結 (來自作用域)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> activity: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyActivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一個 Worker，使用 SimpleService 並取得 Context 與 WorkerParameters</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimpleWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> simpleService: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    appContext: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WorkerParameters</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CoroutineWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>我們可以這樣宣告它們：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    singleOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleServiceImpl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;() }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    factoryOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FactoryPresenter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    viewModelOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleViewModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyActivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        scopedOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    workerOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SimpleWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="android-反射-dsl-自-3-2-版起已棄用" tabindex="-1">Android 反射 DSL (自 3.2 版起已棄用) <a class="header-anchor" href="#android-反射-dsl-自-3-2-版起已棄用" aria-label="Permalink to &quot;Android 反射 DSL (自 3.2 版起已棄用)&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">CAUTION</p><p>Koin 反射 DSL 現已棄用。請改用上方的 Koin 建構函式 DSL。</p></div>`,14)]))}const c=i(e,[["render",p]]);export{o as __pageData,c as default};
