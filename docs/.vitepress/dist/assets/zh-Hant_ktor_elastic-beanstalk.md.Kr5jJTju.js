import{_ as c,C as t,c as u,o as g,j as s,G as a,ag as p,a as i,w as n}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/elastic-beanstalk.md","filePath":"zh-Hant/ktor/elastic-beanstalk.md","lastUpdated":1755457140000}'),m={name:"zh-Hant/ktor/elastic-beanstalk.md"};function b(E,e,f,y,v,F){const d=t("show-structure"),o=t("control"),h=t("tldr"),l=t("code-block"),r=t("TabItem"),k=t("Tabs");return g(),u("div",null,[e[8]||(e[8]=s("h1",{id:"aws-elastic-beanstalk",tabindex:"-1"},[i("AWS Elastic Beanstalk "),s("a",{class:"header-anchor",href:"#aws-elastic-beanstalk","aria-label":'Permalink to "AWS Elastic Beanstalk"'},"​")],-1)),a(d,{for:"chapter",depth:"2"}),a(h,null,{default:n(()=>[s("p",null,[a(o,null,{default:n(()=>e[0]||(e[0]=[i("初始專案")])),_:1}),e[1]||(e[1]=i("：")),e[2]||(e[2]=s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/embedded-server"},"embedded-server",-1)),e[3]||(e[3]=i(" 或 ")),e[4]||(e[4]=s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/engine-main"},"engine-main",-1))]),s("p",null,[a(o,null,{default:n(()=>e[5]||(e[5]=[i("最終專案")])),_:1}),e[6]||(e[6]=i("：")),e[7]||(e[7]=s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/aws-elastic-beanstalk"},"aws-elastic-beanstalk",-1))])]),_:1}),e[9]||(e[9]=p(`<p>在本教學中，我們將向您展示如何準備 Ktor 應用程式並將其部署到 AWS Elastic Beanstalk。您可以根據用於 <a href="./server-create-and-configure">建立 Ktor 伺服器</a> 的方式，使用以下其中一個初始專案：</p><ul><li><a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/embedded-server" target="_blank" rel="noreferrer">embedded-server</a></li><li><a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/engine-main" target="_blank" rel="noreferrer">engine-main</a></li></ul><blockquote><p>瞭解更多關於從 <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_Java.html" target="_blank" rel="noreferrer">Elastic Beanstalk 文件</a> 部署 Java 應用程式的資訊。</p></blockquote><h2 id="prerequisites" tabindex="-1">先決條件 <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;先決條件 {id=&quot;prerequisites&quot;}&quot;">​</a></h2><p>在開始本教學之前，您需要建立一個 AWS 帳戶。</p><h2 id="clone" tabindex="-1">複製範例應用程式 <a class="header-anchor" href="#clone" aria-label="Permalink to &quot;複製範例應用程式 {id=&quot;clone&quot;}&quot;">​</a></h2><p>若要開啟範例應用程式，請依照以下步驟操作：</p><ol><li>複製 Ktor 文件儲存庫並開啟 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets" target="_blank" rel="noreferrer">codeSnippets</a> 專案。</li><li>開啟 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/embedded-server" target="_blank" rel="noreferrer">embedded-server</a> 或 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/engine-main" target="_blank" rel="noreferrer">engine-main</a> 範例。這些範例展示了 <a href="./server-create-and-configure">建立和設定 Ktor 伺服器</a> 的不同方法：透過程式碼或使用組態檔。部署這些專案的唯一區別在於如何 <a href="#port">指定一個埠</a> 以偵聽傳入的請求。</li></ol><h2 id="prepare-app" tabindex="-1">準備應用程式 <a class="header-anchor" href="#prepare-app" aria-label="Permalink to &quot;準備應用程式 {id=&quot;prepare-app&quot;}&quot;">​</a></h2><h3 id="port" tabindex="-1">步驟 1：設定埠 <a class="header-anchor" href="#port" aria-label="Permalink to &quot;步驟 1：設定埠 {id=&quot;port&quot;}&quot;">​</a></h3><p>首先，您需要指定一個用於偵聽傳入請求的埠。Elastic Beanstalk 會將請求轉發到您應用程式的埠 5000。您可以選擇透過設定 <code>PORT</code> 環境變數來覆寫預設埠。根據您用於 <a href="./server-create-and-configure">設定 Ktor 伺服器</a> 的方式，您可以透過以下方法之一設定埠：</p><ul><li><p>如果您選擇了 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/embedded-server" target="_blank" rel="noreferrer">embedded-server</a> 範例，其中伺服器組態是在程式碼中指定的，您可以使用 <code>System.getenv</code> 取得環境變數值，或在未指定環境變數的情況下使用預設值 <em>5000</em>。開啟位於 <code>src/main/kotlin/com/example</code> 資料夾中的 <code>Application.kt</code> 檔案並變更 <code>embeddedServer</code> 函數的 <code>port</code> 參數值，如下所示：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   embeddedServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Netty, port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PORT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)?:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wait </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>如果您選擇了 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/engine-main" target="_blank" rel="noreferrer">engine-main</a> 範例，其中伺服器組態是在 <code>application.conf</code> 檔案中指定的，您可以透過使用 <code>\${ENV}</code> 語法將環境變數指派給 <code>port</code> 參數。開啟位於 <code>src/main/resources</code> 中的 <code>application.conf</code> 檔案並如下所示更新它：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ktor {</span></span>
<span class="line"><span>    deployment {</span></span>
<span class="line"><span>        port = 5000</span></span>
<span class="line"><span>        port = \${?PORT}</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div></li></ul><h3 id="configure-ktor-plugin" tabindex="-1">步驟 2：應用 Ktor 外掛程式 <a class="header-anchor" href="#configure-ktor-plugin" aria-label="Permalink to &quot;步驟 2：應用 Ktor 外掛程式 {id=&quot;configure-ktor-plugin&quot;}&quot;">​</a></h3><p>本教學展示如何使用 <a href="./server-fatjar">fat JAR</a> 將應用程式部署到 Elastic Beanstalk。若要產生 fat JAR，您需要應用 Ktor 外掛程式。開啟 <code>build.gradle.kts</code> 檔案並將外掛程式新增到 <code>plugins</code> 區塊：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.ktor.plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.2.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>然後，請確保已設定 <a href="./server-dependencies#create-entry-point">主應用程式類別</a>：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mainClass.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.ktor.server.netty.EngineMain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="build" tabindex="-1">建構 Fat JAR <a class="header-anchor" href="#build" aria-label="Permalink to &quot;建構 Fat JAR {id=&quot;build&quot;}&quot;">​</a></h2><p>若要建構 Fat JAR，開啟終端機並執行由 <a href="#configure-ktor-plugin">Ktor 外掛程式</a> 提供的 <code>buildFatJar</code> 任務：</p>`,19)),a(k,{group:"os"},{default:n(()=>[a(r,{title:"Linux/macOS","group-key":"unix"},{default:n(()=>[a(l,{code:"./gradlew :aws-elastic-beanstalk:buildFatJar"})]),_:1}),a(r,{title:"Windows","group-key":"windows"},{default:n(()=>[a(l,{code:"gradlew.bat :aws-elastic-beanstalk:buildFatJar"})]),_:1})]),_:1}),e[10]||(e[10]=p(`<p>當此建構完成時，您應該會在 <code>build/libs</code> 目錄中看到 <code>aws-elastic-beanstalk-all.jar</code> 檔案。</p><h2 id="deploy-app" tabindex="-1">部署應用程式 <a class="header-anchor" href="#deploy-app" aria-label="Permalink to &quot;部署應用程式 {id=&quot;deploy-app&quot;}&quot;">​</a></h2><p>若要部署應用程式，登入 <a href="https://aws.amazon.com/console/" target="_blank" rel="noreferrer">AWS 管理主控台</a> 並依照以下步驟操作：</p><ol><li>開啟 <strong>Elastic Beanstalk</strong> 服務在 <strong>AWS 服務</strong> 群組中。</li><li>在開啟的頁面上，點擊 <strong>Create Application</strong>。</li><li>指定以下應用程式設定： <ul><li><strong>應用程式名稱</strong>：指定應用程式名稱 (例如，<em>Sample Ktor app</em>)。</li><li><strong>平台</strong>：從列表中選擇 <em>Java</em>。</li><li><strong>平台分支</strong>：選擇 <em>Corretto 11 running on 64bit Amazon Linux 2</em>。</li><li><strong>應用程式程式碼</strong>：選擇 <em>上傳您的程式碼</em>。</li><li><strong>原始碼來源</strong>：選擇 <em>本地檔案</em>。然後，點擊 <strong>Choose file</strong> 按鈕並選擇在 <a href="#build">上一步</a> 中產生的 Fat JAR。請等待檔案上傳完成。</li></ul></li><li>點擊 <strong>Create application</strong> 按鈕並等待幾分鐘，直到 Beanstalk 建立環境並發佈應用程式：<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>INFO    Instance deployment completed successfully.</span></span>
<span class="line"><span>INFO    Application available at Samplektorapp-env.eba-bnye2kpu.us-east-2.elasticbeanstalk.com.</span></span>
<span class="line"><span>INFO    Successfully launched environment: Samplektorapp-env</span></span></code></pre></div></li></ol>`,4))])}const C=c(m,[["render",b]]);export{q as __pageData,C as default};
