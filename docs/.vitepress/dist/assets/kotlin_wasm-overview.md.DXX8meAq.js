import{_ as e,a as l,b as o}from"./chunks/wasm-performance-compose.D4ElAMQ8.js";import{_ as t}from"./chunks/slack.7XnOPcJK.js";import{_ as r,c as s,o as i,ag as m}from"./chunks/framework.Bksy39di.js";const K=JSON.parse('{"title":"Kotlin/Wasm","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/wasm-overview.md","filePath":"kotlin/wasm-overview.md","lastUpdated":1754307826000}'),n={name:"kotlin/wasm-overview.md"};function p(c,a,h,f,b,k){return i(),s("div",null,a[0]||(a[0]=[m('<h1 id="kotlin-wasm" tabindex="-1">Kotlin/Wasm <a class="header-anchor" href="#kotlin-wasm" aria-label="Permalink to &quot;Kotlin/Wasm&quot;">​</a></h1><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin/Wasm 处于 <a href="/kotlin/components-stability">Alpha</a> 阶段。 它可能随时发生变化。您可以在生产环境前的场景中使用它。我们欢迎您在 <a href="https://youtrack.jetbrains.com/issue/KT-56492" target="_blank" rel="noreferrer">YouTrack</a> 中提供反馈。 <a href="https://slack-chats.kotlinlang.org/c/webassembly" target="_blank" rel="noreferrer">加入 Kotlin/Wasm 社区</a>。</p></div><p>Kotlin/Wasm 能够将您的 Kotlin 代码编译为 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly (Wasm)</a> 格式。 借助 Kotlin/Wasm，您可以创建可在不同环境和设备上运行的应用程序，这些环境和设备支持 Wasm 并满足 Kotlin 的要求。</p><p>Wasm 是一种用于基于栈的虚拟机的二进制指令格式。 这种格式是平台无关的，因为它在其自己的虚拟机上运行。Wasm 为 Kotlin 和其他语言提供了编译目标。</p><p>您可以在不同的目标环境中使用 Kotlin/Wasm，例如在浏览器中开发使用 <a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a> 构建的 Web 应用程序，或在浏览器外部的独立 Wasm 虚拟机中运行。在浏览器外部的情况下，<a href="https://wasi.dev/" target="_blank" rel="noreferrer">WebAssembly System Interface (WASI)</a> 提供平台 API 访问，您也可以利用这些 API。</p><h2 id="kotlin-wasm-与-compose-multiplatform" tabindex="-1">Kotlin/Wasm 与 Compose Multiplatform <a class="header-anchor" href="#kotlin-wasm-与-compose-multiplatform" aria-label="Permalink to &quot;Kotlin/Wasm 与 Compose Multiplatform&quot;">​</a></h2><p>借助 Kotlin，您能够通过 Compose Multiplatform 和 Kotlin/Wasm 构建应用程序，并在您的 Web 项目中复用移动和桌面用户界面 (UI)。</p><p><a href="https://www.jetbrains.com/lp/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a> 是一个基于 Kotlin 和 <a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noreferrer">Jetpack Compose</a> 的声明式框架，它允许您实现一次 UI，并在您面向的所有平台上共享。</p><p>对于 Web 平台，Compose Multiplatform 使用 Kotlin/Wasm 作为其编译目标。使用 Kotlin/Wasm 和 Compose Multiplatform 构建的应用程序使用 <code>wasm-js</code> 目标并在浏览器中运行。</p><p><a href="https://zal.im/wasm/jetsnack/" target="_blank" rel="noreferrer">探索我们使用 Compose Multiplatform 和 Kotlin/Wasm 构建的应用程序在线演示</a></p><p><img src="'+e+'" alt="Kotlin/Wasm 演示" width="700"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>要在浏览器中运行使用 Kotlin/Wasm 构建的应用程序，您需要一个支持新的垃圾回收和旧式异常处理提案的浏览器版本。要查看浏览器支持状态，请参阅 <a href="https://webassembly.org/roadmap/" target="_blank" rel="noreferrer">WebAssembly 路线图</a>。</p></div><p>此外，您可以开箱即用地在 Kotlin/Wasm 中使用最流行的 Kotlin 库。与其他 Kotlin 和多平台项目一样，您可以在构建脚本中添加依赖项声明。更多信息，请参阅 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-add-dependencies.html" target="_blank" rel="noreferrer">添加多平台库依赖项</a>。</p><p>想亲自尝试吗？</p><p><a href="/kotlin/wasm-get-started"><img src="'+l+'" width="600" alt="开始使用 Kotlin/Wasm" style=""></a></p><h2 id="kotlin-wasm-与-wasi" tabindex="-1">Kotlin/Wasm 与 WASI <a class="header-anchor" href="#kotlin-wasm-与-wasi" aria-label="Permalink to &quot;Kotlin/Wasm 与 WASI&quot;">​</a></h2><p>Kotlin/Wasm 使用 <a href="https://wasi.dev/" target="_blank" rel="noreferrer">WebAssembly System Interface (WASI)</a> 来构建服务器端应用程序。 使用 Kotlin/Wasm 和 WASI 构建的应用程序使用 Wasm-WASI 目标，允许您调用 WASI API 并在浏览器环境外部运行应用程序。</p><p>Kotlin/Wasm 利用 WASI 抽象平台特有的细节，使相同的 Kotlin 代码能够在不同的平台上运行。这扩展了 Kotlin/Wasm 的覆盖范围到 Web 应用程序之外，而无需为每个运行时进行自定义处理。</p><p>WASI 提供了一个安全的标准接口，用于在不同环境中运行编译为 WebAssembly 的 Kotlin 应用程序。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>要查看 Kotlin/Wasm 和 WASI 的实际应用，请查阅 <a href="/kotlin/wasm-wasi">Kotlin/Wasm 和 WASI 入门教程</a>。</p></div><h2 id="kotlin-wasm-性能" tabindex="-1">Kotlin/Wasm 性能 <a class="header-anchor" href="#kotlin-wasm-性能" aria-label="Permalink to &quot;Kotlin/Wasm 性能&quot;">​</a></h2><p>尽管 Kotlin/Wasm 仍处于 Alpha 阶段，但运行在 Kotlin/Wasm 上的 Compose Multiplatform 已经展现出令人鼓舞的性能特性。 您可以看到其执行速度优于 JavaScript 并正在接近 JVM 的性能：</p><p><img src="'+o+'" alt="Kotlin/Wasm 性能" width="700"></p><p>我们定期运行 Kotlin/Wasm 的基准测试，这些结果来自我们在最新版 Google Chrome 中的测试。</p><h2 id="浏览器-api-支持" tabindex="-1">浏览器 API 支持 <a class="header-anchor" href="#浏览器-api-支持" aria-label="Permalink to &quot;浏览器 API 支持&quot;">​</a></h2><p>Kotlin/Wasm 标准库提供了浏览器 API 的声明，包括 DOM API。 通过这些声明，您可以直接使用 Kotlin API 访问和利用各种浏览器功能。 例如，在您的 Kotlin/Wasm 应用程序中，您可以操作 DOM 元素或 fetch API，而无需从头定义这些声明。要了解更多信息，请参阅我们的 <a href="https://github.com/Kotlin/kotlin-wasm-examples/tree/main/browser-example" target="_blank" rel="noreferrer">Kotlin/Wasm 浏览器示例</a>。</p><p>浏览器 API 支持的声明是使用 JavaScript <a href="/kotlin/wasm-js-interop">互操作能力</a> 定义的。 您可以使用相同的功能来定义您自己的声明。此外，Kotlin/Wasm-JavaScript 互操作性允许您从 JavaScript 中使用 Kotlin 代码。更多信息，请参阅 <a href="/kotlin/wasm-js-interop#use-kotlin-code-in-javascript">在 JavaScript 中使用 Kotlin 代码</a>。</p><h2 id="留下反馈" tabindex="-1">留下反馈 <a class="header-anchor" href="#留下反馈" aria-label="Permalink to &quot;留下反馈&quot;">​</a></h2><h3 id="kotlin-wasm-反馈" tabindex="-1">Kotlin/Wasm 反馈 <a class="header-anchor" href="#kotlin-wasm-反馈" aria-label="Permalink to &quot;Kotlin/Wasm 反馈&quot;">​</a></h3><ul><li><img src="'+t+'" alt="Slack" width="25" type="joined"> Slack：<a href="https://surveys.jetbrains.com/s3/kotlin-slack-sign-up" target="_blank" rel="noreferrer">获取 Slack 邀请</a> 并直接在我们的 <a href="https://kotlinlang.slack.com/archives/CDFP59223" target="_blank" rel="noreferrer">#webassembly</a> 频道中向开发者提供反馈。</li><li>在 <a href="https://youtrack.jetbrains.com/issue/KT-56492" target="_blank" rel="noreferrer">YouTrack</a> 中报告任何问题。</li></ul><h3 id="compose-multiplatform-反馈" tabindex="-1">Compose Multiplatform 反馈 <a class="header-anchor" href="#compose-multiplatform-反馈" aria-label="Permalink to &quot;Compose Multiplatform 反馈&quot;">​</a></h3><ul><li><img src="'+t+'" alt="Slack" width="25" type="joined"> Slack：在 <a href="https://slack-chats.kotlinlang.org/c/compose-web" target="_blank" rel="noreferrer">#compose-web</a> 公共频道中提供反馈。</li><li><a href="https://github.com/JetBrains/compose-multiplatform/issues" target="_blank" rel="noreferrer">在 GitHub 中报告任何问题</a>。</li></ul><h2 id="了解更多" tabindex="-1">了解更多 <a class="header-anchor" href="#了解更多" aria-label="Permalink to &quot;了解更多&quot;">​</a></h2><ul><li>在此 <a href="https://kotl.in/wasm-pl" target="_blank" rel="noreferrer">YouTube 播放列表</a> 中了解更多关于 Kotlin/Wasm 的信息。</li><li>在我们的 GitHub 版本库中探索 <a href="https://github.com/Kotlin/kotlin-wasm-examples" target="_blank" rel="noreferrer">Kotlin/Wasm 示例</a>。</li></ul>',34)]))}const w=r(n,[["render",p]]);export{K as __pageData,w as default};
