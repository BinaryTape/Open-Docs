import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.Bksy39di.js";const r=JSON.parse('{"title":"Compose 애플리케이션에서 격리된 컨텍스트","description":"","frontmatter":{"title":"Compose 애플리케이션에서 격리된 컨텍스트"},"headers":[],"relativePath":"ko/koin/reference/koin-compose/isolated-context.md","filePath":"ko/koin/reference/koin-compose/isolated-context.md","lastUpdated":1748365453000}'),t={name:"ko/koin/reference/koin-compose/isolated-context.md"};function o(p,s,l,k,h,c){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="compose-애플리케이션에서-격리된-컨텍스트" tabindex="-1">Compose 애플리케이션에서 격리된 컨텍스트 <a class="header-anchor" href="#compose-애플리케이션에서-격리된-컨텍스트" aria-label="Permalink to &quot;Compose 애플리케이션에서 격리된 컨텍스트&quot;">​</a></h1><p>Compose 애플리케이션을 사용하면 Koin 정의가 최종 사용자의 정의와 섞이지 않도록 SDK 또는 화이트 라벨 애플리케이션을 처리하는 <a href="/ko/koin/reference/koin-core/context-isolation">격리된 컨텍스트</a>와 동일한 방식으로 작업할 수 있습니다.</p><h2 id="격리된-컨텍스트-정의" tabindex="-1">격리된 컨텍스트 정의 <a class="header-anchor" href="#격리된-컨텍스트-정의" aria-label="Permalink to &quot;격리된 컨텍스트 정의&quot;">​</a></h2><p>먼저 격리된 Koin 인스턴스를 메모리에 저장하기 위해 격리된 컨텍스트 홀더를 선언합니다. 이는 다음과 같은 간단한 Object 클래스로 수행할 수 있습니다. <code>MyIsolatedKoinContext</code> 클래스는 Koin 인스턴스를 보관합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyIsolatedKoinContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> koinApp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> koinApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // declare used modules</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sdkAppModule)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="note custom-block"><p class="custom-block-title">NOTE</p><p><code>MyIsolatedKoinContext</code> 클래스를 초기화 요구 사항에 따라 조정하세요.</p></div><h2 id="compose와-함께-격리된-컨텍스트-설정" tabindex="-1">Compose와 함께 격리된 컨텍스트 설정 <a class="header-anchor" href="#compose와-함께-격리된-컨텍스트-설정" aria-label="Permalink to &quot;Compose와 함께 격리된 컨텍스트 설정&quot;">​</a></h2><p>이제 격리된 Koin 컨텍스트를 정의했으므로, Compose에서 이를 사용하여 모든 API를 재정의하도록 설정할 수 있습니다. 루트 Compose 함수에서 <code>KoinIsolatedContext</code>를 사용하기만 하면 됩니다. 이는 모든 하위 컴포저블에 Koin 컨텍스트를 전파할 것입니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Set current Koin instance to Compose context</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    KoinIsolatedContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MyIsolatedKoinContext.koinApp) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        MyScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>KoinIsolatedContext</code>를 사용한 후에는 모든 Koin Compose API가 격리된 Koin 컨텍스트를 사용하게 됩니다.</p></div>`,10)]))}const E=i(t,[["render",o]]);export{r as __pageData,E as default};
