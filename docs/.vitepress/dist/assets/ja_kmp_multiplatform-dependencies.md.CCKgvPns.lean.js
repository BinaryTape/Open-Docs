import{_ as h}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as k}from"./chunks/icon-2-done.e1N9yMQF.js";import{_ as o}from"./chunks/icon-3.DqpDG4W7.js";import{_ as d}from"./chunks/icon-4-todo.DqbNYzPe.js";import{_ as E}from"./chunks/icon-5-todo.DJgVODZv.js";import{_ as g}from"./chunks/gradle-sync.fCQp85Nh.js";import{_ as u}from"./chunks/first-multiplatform-project-3.DSsneMHX.js";import{_ as m,C as l,c as y,o as F,j as s,G as t,ag as f,a,w as n}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/multiplatform-dependencies.md","filePath":"ja/kmp/multiplatform-dependencies.md","lastUpdated":1755516278000}'),c={name:"ja/kmp/multiplatform-dependencies.md"};function C(b,i,B,A,D,v){const e=l("secondary-label"),p=l("Links"),r=l("tldr");return F(),y("div",null,[i[22]||(i[22]=s("h1",{id:"プロジェクトに依存関係を追加する",tabindex:"-1"},[a("プロジェクトに依存関係を追加する "),s("a",{class:"header-anchor",href:"#プロジェクトに依存関係を追加する","aria-label":'Permalink to "プロジェクトに依存関係を追加する"'},"​")],-1)),t(e,{ref:"IntelliJ IDEA"},null,512),t(e,{ref:"Android Studio"},null,512),t(r,null,{default:n(()=>[i[18]||(i[18]=s("p",null,"このチュートリアルではIntelliJ IDEAを使用していますが、Android Studioでも同様に進めることができます。どちらのIDEもコア機能とKotlin Multiplatformのサポートを共有しています。",-1)),i[19]||(i[19]=s("br",null,null,-1)),i[20]||(i[20]=s("br",null,null,-1)),i[21]||(i[21]=s("p",null,[a("これは「"),s("strong",null,"共有ロジックとネイティブUIを備えたKotlin Multiplatformアプリを作成する"),a("」チュートリアルの第3部です。進む前に、前の手順を完了していることを確認してください。")],-1)),s("p",null,[i[2]||(i[2]=s("img",{src:h,width:"20",alt:"First step"},null,-1)),i[3]||(i[3]=a()),t(p,{href:"/kmp/multiplatform-create-first-app",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the first part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:n(()=>i[0]||(i[0]=[a("Kotlin Multiplatformアプリを作成する")])),_:1}),i[4]||(i[4]=s("br",null,null,-1)),i[5]||(i[5]=s("img",{src:k,width:"20",alt:"Second step"},null,-1)),i[6]||(i[6]=a()),t(p,{href:"/kmp/multiplatform-update-ui",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the second part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Before proceeding, make sure you've completed previous steps. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:n(()=>i[1]||(i[1]=[a("ユーザーインターフェースを更新する")])),_:1}),i[7]||(i[7]=s("br",null,null,-1)),i[8]||(i[8]=s("img",{src:o,width:"20",alt:"Third step"},null,-1)),i[9]||(i[9]=a()),i[10]||(i[10]=s("strong",null,"依存関係を追加する",-1)),i[11]||(i[11]=s("br",null,null,-1)),i[12]||(i[12]=s("img",{src:d,width:"20",alt:"Fourth step"},null,-1)),i[13]||(i[13]=a(" より多くのロジックを共有する")),i[14]||(i[14]=s("br",null,null,-1)),i[15]||(i[15]=s("img",{src:E,width:"20",alt:"Fifth step"},null,-1)),i[16]||(i[16]=a(" プロジェクトを完了する")),i[17]||(i[17]=s("br",null,null,-1))])]),_:1}),i[23]||(i[23]=f("",17))])}const N=m(c,[["render",C]]);export{T as __pageData,N as default};
