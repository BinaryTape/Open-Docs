import{_ as r,a as d,b as o}from"./chunks/ktor-routing-3.BEpN3HgF.js";import{_ as E,C as n,c as g,o as u,j as s,G as t,ag as k,a as i,w as l}from"./chunks/framework.Bksy39di.js";const v=JSON.parse('{"title":"アプリケーションの構造","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-application-structure.md","filePath":"ja/ktor/server-application-structure.md","lastUpdated":1755457140000}'),y={name:"ja/ktor/server-application-structure.md"};function c(F,a,m,C,b,f){const p=n("link-summary"),e=n("TabItem"),h=n("Tabs");return u(),g("div",null,[a[5]||(a[5]=s("h1",{id:"アプリケーションの構造",tabindex:"-1"},[i("アプリケーションの構造 "),s("a",{class:"header-anchor",href:"#アプリケーションの構造","aria-label":'Permalink to "アプリケーションの構造"'},"​")],-1)),t(p,null,{default:l(()=>a[0]||(a[0]=[i("アプリケーションの成長に合わせて保守性を維持するための構造化方法を学びます。")])),_:1}),a[6]||(a[6]=s("p",null,[i("Ktorの強みの一つは、アプリケーションの構造化に関して提供する柔軟性です。他の多くのサーバーサイドフレームワークとは異なり、例えばすべての凝集性の高いルートを"),s("code",null,"CustomerController"),i("という単一のクラス名に配置するといった特定のパターンを強制することはありません。それはもちろん可能ですが、必須ではありません。")],-1)),a[7]||(a[7]=s("p",null,"このセクションでは、アプリケーションを構造化するためのさまざまなオプションを検討します。",-1)),a[8]||(a[8]=s("h2",{id:"group_by_file",tabindex:"-1"},[i("ファイルごとにグループ化 "),s("a",{class:"header-anchor",href:"#group_by_file","aria-label":'Permalink to "ファイルごとにグループ化 {id="group_by_file"}"'},"​")],-1)),a[9]||(a[9]=s("p",null,[i("一つのアプローチは、関連するルートを単一のファイルにグループ化することです。例えば、アプリケーションが顧客と注文を扱っている場合、これは"),s("code",null,"CustomerRoutes.kt"),i("と"),s("code",null,"OrderRoutes.kt"),i("というファイルを持つことを意味します。")],-1)),t(h,null,{default:l(()=>[t(e,{title:"CustomerRoutes.kt"},{default:l(()=>a[1]||(a[1]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Route"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"customerByIdRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    get"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/customer/{id}"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Route"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"createCustomerRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    post"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/customer"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(e,{title:"OrderRoutes.kt"},{default:l(()=>a[2]||(a[2]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Route"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getOrderRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    get"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/order/{id}"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Route"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"totalizeOrderRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    get"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/order/{id}/total"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[10]||(a[10]=k(`<p>サブルート（例：<code>order/shipment</code>）はどうなるでしょうか？これは、このURLで何を理解するかによって多少異なります。これらをリソースとして（実際にそうなのですが）捉えるのであれば、<code>shipment</code>自体もリソースになり得るので、別のファイル<code>ShipmentRoutes.kt</code>に簡単にマッピングできます。</p><h2 id="group_routing_definitions" tabindex="-1">ルーティング定義のグループ化 <a class="header-anchor" href="#group_routing_definitions" aria-label="Permalink to &quot;ルーティング定義のグループ化 {id=&quot;group_routing_definitions&quot;}&quot;">​</a></h2><p>このアプローチの利点の一つは、ルーティング定義、そして場合によっては機能もファイルごとにグループ化できることです。例えば、上記のようにファイルごとのレイアウトに従うとします。ルートが別のファイルにある場合でも、アプリケーションレベルでそれらを宣言する必要があります。そのため、私たちのアプリは次のようになります。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    customerRouting</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    listOrdersRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getOrderRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    totalizeOrderRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>アプリに大量のルートがあると、これはすぐに長く、扱いにくくなる可能性があります。しかし、ルートはファイルごとにグループ化されているため、この利点を活用して、各ファイル内でもルーティングを定義できます。このために、<a href="https://api.ktor.io/ktor-server/ktor-server-core/io.ktor.server.application/-application/index.html" target="_blank" rel="noreferrer">Application</a>の拡張を作成し、ルートを定義できます。</p>`,5)),t(h,null,{default:l(()=>[t(e,{title:"CustomerRoutes.kt"},{default:l(()=>a[3]||(a[3]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Application"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"customerRoutes"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    routing"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        listCustomersRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        customerByIdRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        createCustomerRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        deleteCustomerRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }    ")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(e,{title:"OrderRoutes.kt"},{default:l(()=>a[4]||(a[4]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Application"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"orderRoutes"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    routing"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        listOrdersRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        getOrderRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        totalizeOrderRoute"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[11]||(a[11]=k(`<p>実際の<code>Application.module</code>の起動時には、<code>routing</code>ブロックを使用することなく、これらの関数を呼び出すだけになります。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Init....</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    customerRoutes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    orderRoutes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>さらに一歩進んで、必要に応じてアプリケーションごとにプラグインをインストールすることもできます。特に、特定のルートに依存する<code>Authentication</code>プラグインを使用している場合などです。ただし、重要な注意点として、Ktorはプラグインが2回インストールされた場合、<code>DuplicateApplicationPluginException</code>例外をスローして検出します。</p><h3 id="オブジェクトの使用に関する注意" tabindex="-1">オブジェクトの使用に関する注意 <a class="header-anchor" href="#オブジェクトの使用に関する注意" aria-label="Permalink to &quot;オブジェクトの使用に関する注意&quot;">​</a></h3><p>オブジェクトを使用してルーティング関数をグループ化しても、Ktorのトップレベル関数は一度だけインスタンス化されるため、パフォーマンスやメモリの利点は得られません。共通の機能を共有したい場合に、ある種の凝集性のある構造を提供できますが、何らかのオーバーヘッドを懸念してオブジェクトを使用する必要はありません。</p><h2 id="group_by_folder" tabindex="-1">フォルダーごとのグループ化 <a class="header-anchor" href="#group_by_folder" aria-label="Permalink to &quot;フォルダーごとのグループ化 {id=&quot;group_by_folder&quot;}&quot;">​</a></h2><p>すべてを単一のファイルにまとめていると、ファイルが肥大化するにつれて少し煩雑になる可能性があります。代わりにできることは、フォルダー（つまりパッケージ）を使用して異なる領域を定義し、各ルートを独自のファイルに配置することです。</p>`,7)),a[12]||(a[12]=s("p",null,[s("img",{src:r,alt:"フォルダーごとのグループ化",width:"350","border-effect":"rounded"})],-1)),a[13]||(a[13]=s("p",null,[i("これは、ルートや個々のアクションに関して優れたレイアウトという利点を提供しますが、確かに「パッケージ過多」や、場合によっては大量のファイル名が同じになることでナビゲーションが多少難しくなる可能性があります。一方で、次の例で見るように、各ファイルに領域をプレフィックスとして付けるだけ（例："),s("code",null,"CustomerCreate.kt"),i("など）でも可能です。")],-1)),a[14]||(a[14]=s("h2",{id:"group_by_feature",tabindex:"-1"},[i("機能ごとのグループ化 "),s("a",{class:"header-anchor",href:"#group_by_feature","aria-label":'Permalink to "機能ごとのグループ化 {id="group_by_feature"}"'},"​")],-1)),a[15]||(a[15]=s("p",null,"ASP.NET MVCやRuby on Railsのようなフレームワークでは、アプリケーションをModel、View、Controllers (Routes) の3つのフォルダーを使用して構造化するという概念があります。",-1)),a[16]||(a[16]=s("p",null,[s("img",{src:d,alt:"モデル・ビュー・コントローラー",width:"350","border-effect":"rounded"})],-1)),a[17]||(a[17]=s("p",null,[i("これは、上記で示した、ルートを独自のパッケージ/ファイルにグループ化し、Ktorの場合はビューを"),s("code",null,"resources"),i("フォルダーに配置するスキーマと大差ありません。そしてもちろん、表示したいデータやHTTPエンドポイントに応答するデータを配置するパッケージモデルを持つことを妨げるものはありません。")],-1)),a[18]||(a[18]=s("p",null,[i("このアプローチは機能し、他のフレームワークと似ていますが、ルート、モデル、ビューでプロジェクトを分散させるのではなく、"),s("code",null,"OrderProcessPayment"),i("、"),s("code",null,"CustomerAddressChange"),i("といった特定の振る舞い/機能ごとにグループ化する方が理にかなっていると主張する人もいます。")],-1)),a[19]||(a[19]=s("p",null,[s("img",{src:o,alt:"機能ごとのグループ化",width:"350","border-effect":"rounded"})],-1)),a[20]||(a[20]=k(`<p>多くのフレームワークでは、この種のコードの整理は、基盤となる規約を大幅にハッキングしないと実現できません。しかし、Ktorは非常に柔軟であるため、原則として問題はないはずです。ただし、一つ注意点があります。それは、<a href="./server-templating">テンプレートエンジン</a>を使用している場合、リソースが問題になる可能性があることです。しかし、これをどのように解決できるか見てみましょう。</p><p>この問題がどのように解決されるかは、ビューに何を使用するかによって大きく異なります。アプリケーションが単なるHTTPバックエンドであり、クライアントサイド技術を使用している場合、通常、すべてのレンダリングはクライアントサイドで行われます。Kotlinx.HTMLを使用している場合は、どこに配置されたKotlinファイルからでもページを生成できるため、再び問題にはなりません。</p><p>FreeMarkerのようなテンプレートエンジンを使用している場合に、より問題が発生します。これらはテンプレートファイルがどのように、どこに配置されるべきかという点で特殊です。幸いなことに、それらの中にはテンプレートのロード方法に柔軟性を提供するものもあります。</p><p>例えば、FreeMarkerでは、<code>MultiTemplateLoader</code>を使用して、異なる場所からテンプレートをロードできます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FreeMarker) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customerTemplates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FileTemplateLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./customer/changeAddress&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loaders </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> arrayOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TemplateLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(customerTemplates)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    templateLoader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MultiTemplateLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(loaders)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>明らかに、このコードは相対パスを使用しているなどの理由で理想的ではありませんが、実際にフォルダーをループしてテンプレートをロードする方法や、実行前にビューを<code>resources</code>フォルダーにコピーするカスタムビルドアクションを持つ方法を理解することは難しくありません。この問題を解決する方法は数多く存在します。</p><p>このアプローチの利点は、技術的/インフラストラクチャ的な側面ではなく、同じ機能に関連するすべてを単一の場所、つまり機能ごとにグループ化できることです。</p>`,7))])}const A=E(y,[["render",c]]);export{v as __pageData,A as default};
