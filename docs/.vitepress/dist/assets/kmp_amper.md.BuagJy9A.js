import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.Bksy39di.js";const E=JSON.parse('{"title":"通过 Amper 配置项目","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/amper.md","filePath":"kmp/amper.md","lastUpdated":1755516278000}'),p={name:"kmp/amper.md"};function t(l,s,r,h,k,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="通过-amper-配置项目" tabindex="-1">通过 Amper 配置项目 <a class="header-anchor" href="#通过-amper-配置项目" aria-label="Permalink to &quot;通过 Amper 配置项目&quot;">​</a></h1><p><a href="https://github.com/JetBrains/amper/tree/HEAD" target="_blank" rel="noreferrer">Amper</a> 是 JetBrains 创建的一款新工具，可帮助你配置项目以进行构建、打包、发布等。使用 Amper，你可以减少处理构建系统的时间，转而专注于解决实际的业务挑战。</p><p>Amper 允许你为可在 JVM、Android、iOS、macOS 和 Linux 上运行的 Kotlin 多平台应用程序以及可与所有这些受支持的目标平台协同工作的多平台库创建配置文件。</p><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>Amper 当前为<a href="./supported-platforms#general-kotlin-stability-levels">实验性的</a>。 欢迎你在 Kotlin 多平台项目中使用它。 我们非常感谢你在 <a href="https://youtrack.jetbrains.com/issues/AMPER" target="_blank" rel="noreferrer">YouTrack</a> 中提供反馈意见。</p></div><h2 id="amper-的工作原理" tabindex="-1">Amper 的工作原理 <a class="header-anchor" href="#amper-的工作原理" aria-label="Permalink to &quot;Amper 的工作原理&quot;">​</a></h2><p>Amper 当前使用 Gradle 作为后端，YAML 作为定义项目配置的前端。它支持自定义任务、CocoaPods、向 Maven 发布库以及通过 Gradle 互操作打包桌面应用程序。</p><p>借助 Amper，你可以为平台特有的应用程序和共享 Kotlin 库设置配置。它们使用特殊的声明式 DSL 在 <code>.yaml</code> 模块清单文件中声明为模块。</p><p>此 DSL 的核心概念是 Kotlin 多平台。Amper 允许你快速轻松地配置 Kotlin 多平台项目，而无需深入复杂的 Gradle 概念。Amper DSL 提供了特殊的语法，使你能够处理多平台配置，包括依赖项、设置等。</p><p>以下是适用于 JVM、Android 和 iOS 应用程序的 Kotlin 多平台共享库的 Amper 清单文件示例：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">product</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lib</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  platforms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jvm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iosSimulatorArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iosX64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 共享 Compose 多平台依赖项：</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">org.jetbrains.compose.foundation:foundation:1.5.0-rc01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">org.jetbrains.compose.material3:material3:1.5.0-rc01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 仅限 Android 的依赖项</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies@android</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 将 Compose 与 Activity 集成</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.activity:activity-compose:1.7.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">androidx.appcompat:appcompat:1.6.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exported</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 仅限 iOS 的依赖项，依赖于 CocoaPod</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请注意，CocoaPods 依赖项尚未在原型中实现</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies@ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;FirebaseCore&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~&gt; 6.6&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 启用 Kotlin 序列化</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    serialization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 启用 Compose 多平台框架</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  compose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">enabled</span></span></code></pre></div><ul><li><code>product</code> 部分定义了项目类型和目标平台列表。</li><li><code>dependencies</code> 部分不仅添加了 Kotlin 和 Maven 依赖项，还添加了平台特有的包管理器，例如 CocoaPods 和 Swift Package Manager。</li><li><code>@platform</code> 限定符标记平台特有的部分，包括依赖项和设置。</li></ul><h2 id="试用-amper" tabindex="-1">试用 Amper <a class="header-anchor" href="#试用-amper" aria-label="Permalink to &quot;试用 Amper&quot;">​</a></h2><p>你可以通过以下方式之一试用 Amper：</p><ul><li>将 <a href="https://www.jetbrains.com/idea/nextversion/" target="_blank" rel="noreferrer">IntelliJ IDEA</a> 2023.3 及更高版本用于 JVM 和 Android 项目（从构建版本 233.11555 开始）。</li><li>使用 <a href="https://docs.gradle.org/current/userguide/userguide.html" target="_blank" rel="noreferrer">Gradle</a> 从命令行或 CI/CD 工具构建 Amper 项目。</li></ul><p>按照<a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/Tutorial">本教程</a>创建你的第一个 Kotlin 多平台项目。查阅<a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/Documentation">文档</a>以了解更多关于 Amper 的功能和设计。</p><p>欢迎将你的任何反馈意见提交到我们的<a href="https://youtrack.jetbrains.com/issues/AMPER" target="_blank" rel="noreferrer">问题跟踪器</a>。你的输入将帮助我们塑造 Amper 的未来。</p><h2 id="接下来" tabindex="-1">接下来 <a class="header-anchor" href="#接下来" aria-label="Permalink to &quot;接下来&quot;">​</a></h2><ul><li>查看 <a href="https://blog.jetbrains.com/blog/2023/11/09/amper-improving-the-build-tooling-user-experience" target="_blank" rel="noreferrer">JetBrains 博客</a>，了解更多关于我们创建 Amper 的动机、其用例、项目的当前状态及其未来。</li><li>关于最常见问题，请参见 <a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/FAQ">Amper FAQ</a>。</li><li>关于 Amper 的功能和设计，请参阅 <a href="./https://github.com/JetBrains/amper/tree/HEAD/docs/Documentation">Amper 文档</a>，其中涵盖了 Amper 的不同方面。</li></ul>`,18)]))}const c=i(p,[["render",t]]);export{E as __pageData,c as default};
