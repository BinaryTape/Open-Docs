import{_ as o,c as r,o as a,ag as d}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"Android 専用コンポーネント","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/compose-android-only-components.md","filePath":"ja/kmp/compose-android-only-components.md","lastUpdated":1755516278000}'),i={name:"ja/kmp/compose-android-only-components.md"};function t(n,e,c,l,p,s){return a(),r("div",null,e[0]||(e[0]=[d('<h1 id="android-専用コンポーネント" tabindex="-1">Android 専用コンポーネント <a class="header-anchor" href="#android-専用コンポーネント" aria-label="Permalink to &quot;Android 専用コンポーネント&quot;">​</a></h1><p>Compose Multiplatformは、<a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noreferrer">Jetpack Compose</a>を基盤としています。Compose Multiplatformの機能のほとんどは、すべてのプラットフォームで利用可能です。しかし、Androidターゲットでのみ使用できるAPIやライブラリがいくつか存在します。これは、それらがAndroidに固有であるか、まだ他のプラットフォームに移植されていないためです。このページでは、Compose Multiplatform APIのこれらの部分を要約します。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>時々、<a href="https://developer.android.com/jetpack/compose/documentation" target="_blank" rel="noreferrer">Jetpack Composeドキュメント</a>やコミュニティが作成した記事で、Androidターゲットでのみ使用できるAPIを見かけるかもしれません。 <code>commonMain</code>コードでそれを使用しようとすると、IDEがこのAPIは利用できないと通知します。</p></div><h2 id="android-専用api" tabindex="-1">Android 専用API <a class="header-anchor" href="#android-専用api" aria-label="Permalink to &quot;Android 専用API&quot;">​</a></h2><p>Android専用APIはAndroidに固有のものであり、他のプラットフォームでは利用できません。これは、他のプラットフォームがAndroidで使用される特定の概念を必要としないためです。このAPIは通常、<code>android.*</code>パッケージのクラスを使用するか、Android固有の動作を設定します。以下に、Android専用APIの一部例を挙げます。</p><ul><li><a href="https://developer.android.com/reference/android/content/Context" target="_blank" rel="noreferrer"><code>android.context.Context</code></a> クラス</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/package-summary#LocalContext()" target="_blank" rel="noreferrer"><code>LocalContext</code></a>および<a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/package-summary#LocalConfiguration()" target="_blank" rel="noreferrer"><code>LocalConfiguration</code></a> 変数</li><li><a href="https://developer.android.com/reference/android/graphics/BitmapFactory" target="_blank" rel="noreferrer"><code>android.graphics.BitmapFactory</code></a>および<a href="https://developer.android.com/reference/android/graphics/Bitmap" target="_blank" rel="noreferrer"><code>android.graphics.Bitmap</code></a> クラス</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/graphics/ImageBitmap#(androidx.compose.ui.graphics.ImageBitmap).asAndroidBitmap()" target="_blank" rel="noreferrer"><code>ImageBitmap.asAndroidBitmap()</code></a> 関数</li><li><a href="https://developer.android.com/reference/android/app/Activity" target="_blank" rel="noreferrer"><code>android.app.Activity</code></a> クラス</li><li><a href="https://developer.android.com/reference/kotlin/androidx/activity/ComponentActivity#(androidx.activity.ComponentActivity).setContent(androidx.compose.runtime.CompositionContext,kotlin.Function0)" target="_blank" rel="noreferrer"><code>android.app.Activity.setContent()</code></a> 関数</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/ComposeView" target="_blank" rel="noreferrer"><code>ComposeView</code></a> クラス</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/platform/package-summary#LocalView()" target="_blank" rel="noreferrer"><code>LocalView</code></a> 変数</li><li><a href="https://github.com/androidx/androidx/blob/41cb7d5c422180edd89efde4076f9dc724d3a313/compose/ui/ui/src/androidMain/kotlin/androidx/compose/ui/input/pointer/PointerInteropFilter.android.kt" target="_blank" rel="noreferrer"><code>Modifier.pointerInteropFilter()</code></a> 関数</li><li><a href="https://developer.android.com/jetpack/compose/libraries#hilt" target="_blank" rel="noreferrer">Hilt</a> 依存性注入ライブラリ</li></ul><p>通常、このようなAPIの一部を共通化する強力な理由はないため、<code>androidMain</code>のみに留めるのが最善です。</p><h2 id="シグネチャにandroidクラスを含むapi" tabindex="-1">シグネチャにAndroidクラスを含むAPI <a class="header-anchor" href="#シグネチャにandroidクラスを含むapi" aria-label="Permalink to &quot;シグネチャにAndroidクラスを含むAPI&quot;">​</a></h2><p>Compose MultiplatformのAPIには、シグネチャに<code>android.*</code>や<code>androidx.*</code>（<code>androidx.compose.*</code>を除く）を使用しているものの、その動作が他のプラットフォームにも適用可能な部分があります。</p><ul><li><a href="https://developer.android.com/jetpack/compose/resources" target="_blank" rel="noreferrer">リソース管理</a>: <code>stringResource</code>、<code>animatedVectorResource</code>、<code>Font</code>、およびリソース管理用の<code>*.R</code>クラス。 詳細については、<a href="./compose-multiplatform-resources">画像とリソース</a>を参照してください。</li><li><a href="https://developer.android.com/jetpack/compose/navigation" target="_blank" rel="noreferrer">ナビゲーション</a>。 詳細については、<a href="./compose-navigation-routing">ナビゲーションとルーティング</a>を参照してください。</li><li><a href="https://developer.android.com/jetpack/compose/libraries#viewmodel" target="_blank" rel="noreferrer"><code>ViewModel</code></a> クラス。</li><li><a href="https://developer.android.com/jetpack/compose/libraries#paging" target="_blank" rel="noreferrer">Paging</a> ライブラリ。</li><li><a href="https://developer.android.com/reference/androidx/constraintlayout/widget/ConstraintLayout" target="_blank" rel="noreferrer"><code>ConstraintLayout</code></a> レイアウト。</li><li><a href="https://developer.android.com/jetpack/compose/libraries#maps" target="_blank" rel="noreferrer">Maps</a> ライブラリ。</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/tooling/preview/package-summary" target="_blank" rel="noreferrer">Preview</a>ツールと、<a href="https://plugins.jetbrains.com/plugin/16541-compose-multiplatform-ide-support" target="_blank" rel="noreferrer">デスクトップ</a>アプリケーションをプレビューするためのプラグイン。</li><li><a href="https://developer.android.com/reference/android/webkit/WebView" target="_blank" rel="noreferrer"><code>WebView</code></a> クラス。</li><li>Compose Multiplatformにまだ移植されていない他のJetpack Composeライブラリ。</li></ul><p>それらは将来、複雑さと需要に応じて<code>commonMain</code>に移植される可能性があります。</p><p>パーミッション、デバイス（Bluetooth、GPS、カメラ）、IO（ネットワーク、ファイル、データベース）など、アプリケーション開発時に頻繁に使用されるAPIは、Compose Multiplatformのスコープ外です。</p><h2 id="シグネチャにandroidクラスを含まないapi" tabindex="-1">シグネチャにAndroidクラスを含まないAPI <a class="header-anchor" href="#シグネチャにandroidクラスを含まないapi" aria-label="Permalink to &quot;シグネチャにAndroidクラスを含まないAPI&quot;">​</a></h2><p>APIの一部には、そのシグネチャに<code>android.*</code>や<code>androidx.*</code>クラスが含まれておらず、他のプラットフォームにも適用可能であるにもかかわらず、Androidターゲットでのみ利用できるものがあります。その理由は通常、実装が多くのプラットフォーム固有の要素を使用しており、他のプラットフォーム向けに別の実装を記述するのに時間がかかるためです。</p><p>通常、このようなAPIの一部は、Androidターゲット向けのJetpack Composeで導入された後、Compose Multiplatformに移植されます。</p><p>Compose Multiplatform 1.8.2では、以下のAPIは<code>commonMain</code>では<strong>利用できません</strong>。</p><ul><li><a href="https://github.com/androidx/androidx/blob/0e8dd4edd03f6e802303e5325ad11e89292c26c3/compose/foundation/foundation-layout/src/androidMain/kotlin/androidx/compose/foundation/layout/WindowInsetsConnection.android.kt" target="_blank" rel="noreferrer"><code>Modifier.imeNestedScroll()</code></a> 関数</li><li><a href="https://github.com/androidx/androidx/blob/0e8dd4edd03f6e802303e5325ad11e89292c26c3/compose/foundation/foundation/src/androidMain/kotlin/androidx/compose/foundation/SystemGestureExclusion.kt" target="_blank" rel="noreferrer"><code>Modifier.systemGestureExclusion()</code></a> 関数</li><li><a href="https://github.com/androidx/androidx/blob/41cb7d5c422180edd89efde4076f9dc724d3a313/compose/foundation/foundation/src/androidMain/kotlin/androidx/compose/foundation/Magnifier.kt" target="_blank" rel="noreferrer"><code>Modifier.magnifier()</code></a> 関数</li><li><a href="https://github.com/androidx/androidx/blob/41cb7d5c422180edd89efde4076f9dc724d3a313/compose/foundation/foundation/src/androidMain/kotlin/androidx/compose/foundation/OverscrollConfiguration.kt" target="_blank" rel="noreferrer"><code>LocalOverscrollConfiguration</code></a> 変数</li><li><a href="https://developer.android.com/jetpack/compose/resources#animated-vector-drawables" target="_blank" rel="noreferrer"><code>AnimatedImageVector.animatedVectorResource</code> API</a></li><li><a href="https://developer.android.com/jetpack/androidx/releases/compose-material3-adaptive" target="_blank" rel="noreferrer">material3-adaptive</a> ライブラリ</li><li><a href="https://developer.android.com/reference/kotlin/androidx/compose/material3/windowsizeclass/package-summary" target="_blank" rel="noreferrer">material3-window-size-class</a> ライブラリ</li></ul><h2 id="android-apiの移植リクエスト" tabindex="-1">Android APIの移植リクエスト <a class="header-anchor" href="#android-apiの移植リクエスト" aria-label="Permalink to &quot;Android APIの移植リクエスト&quot;">​</a></h2><p>Androidから移植可能な各APIについて、Compose Multiplatform YouTrackに<a href="https://youtrack.jetbrains.com/issues/CMP" target="_blank" rel="noreferrer">未解決のissue</a>があります。あるAPIがAndroidから移植され共通化できると思われる場合、それに対する既存のissueがない場合は、<a href="https://youtrack.jetbrains.com/newIssue?project=CMP" target="_blank" rel="noreferrer">新規作成</a>してください。</p>',19)]))}const h=o(i,[["render",t]]);export{f as __pageData,h as default};
