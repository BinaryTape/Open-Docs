import{_ as d,c as e,o,ag as a}from"./chunks/framework.Bksy39di.js";const m=JSON.parse('{"title":"Kotlin/Native 目標平台支援","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/native-target-support.md","filePath":"zh-Hant/kotlin/native-target-support.md","lastUpdated":1754307826000}'),r={name:"zh-Hant/kotlin/native-target-support.md"};function l(i,t,c,n,p,s){return o(),e("div",null,t[0]||(t[0]=[a('<h1 id="kotlin-native-目標平台支援" tabindex="-1">Kotlin/Native 目標平台支援 <a class="header-anchor" href="#kotlin-native-目標平台支援" aria-label="Permalink to &quot;Kotlin/Native 目標平台支援&quot;">​</a></h1><p>Kotlin/Native 編譯器支援大量不同的目標平台，儘管難以對所有這些平台提供相同程度的支援。本文件描述了 Kotlin/Native 支援哪些目標平台，並根據編譯器對其的支援程度將其劃分為數個層級。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>我們可以隨著進展調整層級數量、支援的目標平台清單及其功能。</p></div><p>請注意以下用於層級表格的術語：</p><ul><li><p><strong>Gradle 目標名稱</strong> 是用於 Kotlin 多平台 Gradle 外掛程式中以啟用目標平台的 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-dsl-reference.html#targets" target="_blank" rel="noreferrer">目標名稱</a>。</p></li><li><p><strong>目標三元組</strong> 是根據 <code>&lt;architecture&gt;-&lt;vendor&gt;-&lt;system&gt;-&lt;abi&gt;</code> 結構定義的目標名稱，常被 <a href="https://clang.llvm.org/docs/CrossCompilation.html#target-triple" target="_blank" rel="noreferrer">編譯器</a> 使用。</p></li><li><p><strong>執行測試</strong> 表示在 Gradle 和 IDE 中執行測試的開箱即用支援。</p><p>這僅適用於特定目標平台的原生主機。例如，您只能在 macOS x86-64 主機上執行 <code>macosX64</code> 和 <code>iosX64</code> 測試。</p></li></ul><h2 id="層級-1" tabindex="-1">層級 1 <a class="header-anchor" href="#層級-1" aria-label="Permalink to &quot;層級 1&quot;">​</a></h2><ul><li>該目標平台在 CI 上定期測試，以確保能夠編譯和執行。</li><li>我們提供 <a href="https://youtrack.jetbrains.com/issue/KT-42293" target="_blank" rel="noreferrer">編譯器版本之間</a> 的原始碼和二進位相容性。</li></ul><table tabindex="0"><thead><tr><th>Gradle 目標名稱</th><th>目標三元組</th><th>執行測試</th><th>描述</th></tr></thead><tbody><tr><td>僅限 Apple macOS 主機：</td><td></td><td></td><td></td></tr><tr><td><code>macosX64</code></td><td><code>x86_64-apple-macos</code></td><td>✅</td><td>在 x86_64 平台上的 Apple macOS</td></tr><tr><td><code>macosArm64</code></td><td><code>aarch64-apple-macos</code></td><td>✅</td><td>在 Apple Silicon 平台上的 Apple macOS</td></tr><tr><td><code>iosSimulatorArm64</code></td><td><code>aarch64-apple-ios-simulator</code></td><td>✅</td><td>在 Apple Silicon 平台上的 Apple iOS 模擬器</td></tr><tr><td><code>iosX64</code></td><td><code>x86_64-apple-ios-simulator</code></td><td>✅</td><td>在 x86-64 平台上的 Apple iOS 模擬器</td></tr><tr><td><code>iosArm64</code></td><td><code>aarch64-apple-ios</code></td><td></td><td>在 ARM64 平台上的 Apple iOS 和 iPadOS</td></tr></tbody></table><h2 id="層級-2" tabindex="-1">層級 2 <a class="header-anchor" href="#層級-2" aria-label="Permalink to &quot;層級 2&quot;">​</a></h2><ul><li>該目標平台在 CI 上定期測試以確保能夠編譯，但可能不會自動測試其執行能力。</li><li>我們盡力提供 <a href="https://youtrack.jetbrains.com/issue/KT-42293" target="_blank" rel="noreferrer">編譯器版本之間</a> 的原始碼和二進位相容性。</li></ul><table tabindex="0"><thead><tr><th>Gradle 目標名稱</th><th>目標三元組</th><th>執行測試</th><th>描述</th></tr></thead><tbody><tr><td><code>linuxX64</code></td><td><code>x86_64-unknown-linux-gnu</code></td><td>✅</td><td>在 x86_64 平台上的 Linux</td></tr><tr><td><code>linuxArm64</code></td><td><code>aarch64-unknown-linux-gnu</code></td><td></td><td>在 ARM64 平台上的 Linux</td></tr><tr><td>僅限 Apple macOS 主機：</td><td></td><td></td><td></td></tr><tr><td><code>watchosSimulatorArm64</code></td><td><code>aarch64-apple-watchos-simulator</code></td><td>✅</td><td>在 Apple Silicon 平台上的 Apple watchOS 模擬器</td></tr><tr><td><code>watchosX64</code></td><td><code>x86_64-apple-watchos-simulator</code></td><td>✅</td><td>在 x86_64 平台上的 Apple watchOS 64 位元模擬器</td></tr><tr><td><code>watchosArm32</code></td><td><code>armv7k-apple-watchos</code></td><td></td><td>在 ARM32 平台上的 Apple watchOS</td></tr><tr><td><code>watchosArm64</code></td><td><code>arm64_32-apple-watchos</code></td><td></td><td>在帶有 ILP32 的 ARM64 平台上的 Apple watchOS</td></tr><tr><td><code>tvosSimulatorArm64</code></td><td><code>aarch64-apple-tvos-simulator</code></td><td>✅</td><td>在 Apple Silicon 平台上的 Apple tvOS 模擬器</td></tr><tr><td><code>tvosX64</code></td><td><code>x86_64-apple-tvos-simulator</code></td><td>✅</td><td>在 x86_64 平台上的 Apple tvOS 模擬器</td></tr><tr><td><code>tvosArm64</code></td><td><code>aarch64-apple-tvos</code></td><td></td><td>在 ARM64 平台上的 Apple tvOS</td></tr></tbody></table><h2 id="層級-3" tabindex="-1">層級 3 <a class="header-anchor" href="#層級-3" aria-label="Permalink to &quot;層級 3&quot;">​</a></h2><ul><li>該目標平台不保證在 CI 上進行測試。</li><li>我們無法承諾不同編譯器版本之間的原始碼和二進位相容性，儘管這些目標平台的此類變更相當罕見。</li></ul><table tabindex="0"><thead><tr><th>Gradle 目標名稱</th><th>目標三元組</th><th>執行測試</th><th>描述</th></tr></thead><tbody><tr><td><code>androidNativeArm32</code></td><td><code>arm-unknown-linux-androideabi</code></td><td></td><td>在 ARM32 平台上的 <a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>androidNativeArm64</code></td><td><code>aarch64-unknown-linux-android</code></td><td></td><td>在 ARM64 平台上的 <a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>androidNativeX86</code></td><td><code>i686-unknown-linux-android</code></td><td></td><td>在 x86 平台上的 <a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>androidNativeX64</code></td><td><code>x86_64-unknown-linux-android</code></td><td></td><td>在 x86_64 平台上的 <a href="https://developer.android.com/ndk" target="_blank" rel="noreferrer">Android NDK</a></td></tr><tr><td><code>mingwX64</code></td><td><code>x86_64-pc-windows-gnu</code></td><td>✅</td><td>適用於使用 <a href="https://www.mingw-w64.org" target="_blank" rel="noreferrer">MinGW</a> 相容層的 64 位元 Windows 10 及更高版本</td></tr><tr><td>僅限 Apple macOS 主機：</td><td></td><td></td><td></td></tr><tr><td><code>watchosDeviceArm64</code></td><td><code>aarch64-apple-watchos</code></td><td></td><td>在 ARM64 平台上的 Apple watchOS</td></tr></tbody></table><div class="note custom-block"><p class="custom-block-title">NOTE</p><p><code>linuxArm32Hfp</code> 目標平台已棄用，並將在未來版本中移除。</p></div><h2 id="針對函式庫作者" tabindex="-1">針對函式庫作者 <a class="header-anchor" href="#針對函式庫作者" aria-label="Permalink to &quot;針對函式庫作者&quot;">​</a></h2><p>我們不建議函式庫作者測試比 Kotlin/Native 編譯器更多元的目標平台，或提供更嚴格的保證。在考慮支援原生目標平台時，您可以採用以下方法：</p><ul><li>支援層級 1、2 和 3 的所有目標平台。</li><li>定期測試層級 1 和 2 中支援開箱即用執行測試的目標平台。</li></ul><p>Kotlin 團隊在官方 Kotlin 函式庫中採用此方法，例如 <a href="/zh-Hant/kotlin/coroutines-guide">kotlinx.coroutines</a> 和 <a href="/zh-Hant/kotlin/serialization">kotlinx.serialization</a>。</p>',19)]))}const u=d(r,[["render",l]]);export{m as __pageData,u as default};
