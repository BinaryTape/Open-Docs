import{_ as t,a as l,b as e,c as n,d as r}from"./chunks/jvm-output-gradle.DaNbfMb_.js";import{_ as o,c as p,o as d,ag as i,j as a,a as h}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"GradleとKotlin/JVMを始めよう","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/get-started-with-jvm-gradle-project.md","filePath":"ja/kotlin/get-started-with-jvm-gradle-project.md","lastUpdated":1754307826000}'),k={name:"ja/kotlin/get-started-with-jvm-gradle-project.md"};function g(c,s,E,u,m,_){return d(),p("div",null,s[0]||(s[0]=[i('<h1 id="gradleとkotlin-jvmを始めよう" tabindex="-1">GradleとKotlin/JVMを始めよう <a class="header-anchor" href="#gradleとkotlin-jvmを始めよう" aria-label="Permalink to &quot;GradleとKotlin/JVMを始めよう&quot;">​</a></h1><p>このチュートリアルでは、IntelliJ IDEAとGradleを使用してJVMコンソールアプリケーションを作成する方法を説明します。</p><p>まず、<a href="https://www.jetbrains.com/idea/download/index.html" target="_blank" rel="noreferrer">IntelliJ IDEA</a>の最新バージョンをダウンロードしてインストールしてください。</p><h2 id="プロジェクトの作成" tabindex="-1">プロジェクトの作成 <a class="header-anchor" href="#プロジェクトの作成" aria-label="Permalink to &quot;プロジェクトの作成&quot;">​</a></h2><ol><li><p>IntelliJ IDEAで、<strong>File</strong> | <strong>New</strong> | <strong>Project</strong>を選択します。</p></li><li><p>左側のパネルで、<strong>Kotlin</strong>を選択します。</p></li><li><p>必要に応じて、新しいプロジェクトに名前を付け、場所を変更します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Create Git repository</strong>チェックボックスを選択すると、新しいプロジェクトをバージョン管理下に置くことができます。これはいつでも後で行うことができます。</p></div><p><img src="'+t+'" alt="Create a console application" width="700"></p></li><li><p><strong>Gradle</strong>ビルドシステムを選択します。</p></li><li><p><strong>JDK</strong>リストから、プロジェクトで使用したい<a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer">JDK</a>を選択します。</p><ul><li>JDKがお使いのコンピューターにインストールされているが、IDEで定義されていない場合は、<strong>Add JDK</strong>を選択し、JDKホームディレクトリへのパスを指定します。</li><li>必要なJDKがお使いのコンピューターにない場合は、<strong>Download JDK</strong>を選択します。</li></ul></li><li><p>Gradleの<strong>Kotlin</strong> DSLを選択します。</p></li><li><p><strong>Add sample code</strong>チェックボックスを選択すると、サンプルアプリケーション<code>&quot;Hello World!&quot;</code>を含むファイルが作成されます。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Generate code with onboarding tips</strong>オプションを有効にすると、サンプルコードに役立つコメントを追加できます。</p></div></li><li><p><strong>Create</strong>をクリックします。</p></li></ol><p>Gradleを使用したプロジェクトの作成に成功しました！</p>',6),a("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"プロジェクトのgradleバージョンを指定する",tabindex:"-1"},[h("プロジェクトのGradleバージョンを指定する "),a("a",{class:"header-anchor",href:"#プロジェクトのgradleバージョンを指定する","aria-label":'Permalink to "プロジェクトのGradleバージョンを指定する {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1),i('<p><strong>Advanced Settings</strong>セクションで、Gradle WrapperまたはGradleのローカルインストールを使用することで、プロジェクトのGradleバージョンを明示的に指定できます。</p><ul><li><strong>Gradle Wrapper:</strong><ol><li><strong>Gradle distribution</strong>リストから、<strong>Wrapper</strong>を選択します。</li><li><strong>Auto-select</strong>チェックボックスを無効にします。</li><li><strong>Gradle version</strong>リストから、使用するGradleバージョンを選択します。</li></ol></li><li><strong>ローカルインストール:</strong><ol><li><strong>Gradle distribution</strong>リストから、<strong>Local installation</strong>を選択します。</li><li><strong>Gradle location</strong>に、ローカルのGradleバージョンのパスを指定します。</li></ol></li></ul><p><img src="'+l+`" alt="Advanced settings" width="700"></p><h2 id="ビルドスクリプトを探索する" tabindex="-1">ビルドスクリプトを探索する <a class="header-anchor" href="#ビルドスクリプトを探索する" aria-label="Permalink to &quot;ビルドスクリプトを探索する&quot;">​</a></h2><p><code>build.gradle.kts</code>ファイルを開きます。これはGradle Kotlinビルドスクリプトで、Kotlin関連のアーティファクトとアプリケーションに必要なその他の部分が含まれています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.10&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 使用するKotlinのバージョン</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;org.example&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 例: \`org.jetbrains\`のような会社名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0-SNAPSHOT&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // ビルドされたアーティファクトに割り当てるバージョン</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 依存関係のソース。1️⃣参照</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mavenCentral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Maven Central Repository。2️⃣参照</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用したいすべてのライブラリ。3️⃣参照</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // リポジトリで依存関係の名前を見つけた後にコピーする</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    testImplementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Kotlinテストライブラリ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4️⃣参照</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    useJUnitPlatform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// テスト用のJUnitPlatform。5️⃣参照</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>1️⃣ <a href="https://docs.gradle.org/current/userguide/declaring_repositories.html" target="_blank" rel="noreferrer">依存関係のソース</a>について詳しく学ぶ。</li><li>2️⃣ <a href="https://central.sonatype.com/" target="_blank" rel="noreferrer">Maven Central Repository</a>。これは<a href="https://maven.google.com/" target="_blank" rel="noreferrer">GoogleのMavenリポジトリ</a>、または会社のプライベートリポジトリである場合もあります。</li><li>3️⃣ <a href="https://docs.gradle.org/current/userguide/declaring_dependencies.html" target="_blank" rel="noreferrer">依存関係の宣言</a>について詳しく学ぶ。</li><li>4️⃣ <a href="https://docs.gradle.org/current/dsl/org.gradle.api.Task.html" target="_blank" rel="noreferrer">タスク</a>について詳しく学ぶ。</li><li>5️⃣ <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/Test.html#useJUnitPlatform" target="_blank" rel="noreferrer">テスト用のJUnitPlatform</a>。</li></ul><p>ご覧のとおり、GradleビルドファイルにはいくつかのKotlin固有のアーティファクトが追加されています。</p><ol><li><p><code>plugins {}</code>ブロックには、<code>kotlin(&quot;jvm&quot;)</code>アーティファクトがあります。このプラグインは、プロジェクトで使用されるKotlinのバージョンを定義します。</p></li><li><p><code>dependencies {}</code>ブロックには、<code>testImplementation(kotlin(&quot;test&quot;))</code>があります。<a href="/ja/kotlin/gradle-configure-project#set-dependencies-on-test-libraries">テストライブラリの依存関係の設定</a>について詳しく学びましょう。</p></li></ol><h2 id="アプリケーションの実行" tabindex="-1">アプリケーションの実行 <a class="header-anchor" href="#アプリケーションの実行" aria-label="Permalink to &quot;アプリケーションの実行&quot;">​</a></h2><ol><li><strong>View</strong> | <strong>Tool Windows</strong> | <strong>Gradle</strong>を選択して、Gradleウィンドウを開きます。</li></ol><p><img src="`+e+'" alt="Main.kt with main fun" width="700"></p><ol start="2"><li><p><code>Tasks\\build\\</code>にある<strong>build</strong> Gradleタスクを実行します。<strong>Build</strong>ウィンドウに<code>BUILD SUCCESSFUL</code>が表示されます。これは、Gradleがアプリケーションを正常にビルドしたことを意味します。</p></li><li><p><code>src/main/kotlin</code>にある<code>Main.kt</code>ファイルを開きます。</p><ul><li><code>src</code>ディレクトリにはKotlinのソースファイルとリソースが含まれています。</li><li><code>Main.kt</code>ファイルには<code>Hello World!</code>を出力するサンプルコードが含まれています。</li></ul></li><li><p>ガターの緑色の<strong>Run</strong>アイコンをクリックし、**Run &#39;MainKt&#39;**を選択してアプリケーションを実行します。</p></li></ol><p><img src="'+n+'" alt="Running a console app" width="350"></p><p>結果は<strong>Run</strong>ツールウィンドウで確認できます。</p><p><img src="'+r+'" alt="Kotlin run output" width="600"></p><p>おめでとうございます！初めてのKotlinアプリケーションを実行しました。</p><h2 id="次のステップ" tabindex="-1">次のステップ <a class="header-anchor" href="#次のステップ" aria-label="Permalink to &quot;次のステップ&quot;">​</a></h2><p>詳細については、以下を参照してください。</p><ul><li><a href="https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#N14E9A" target="_blank" rel="noreferrer">Gradleビルドファイルのプロパティ</a>。</li><li><a href="/ja/kotlin/gradle-configure-project">異なるプラットフォームをターゲットにする方法とライブラリの依存関係の設定</a>。</li><li><a href="/ja/kotlin/gradle-compiler-options">コンパイラオプションとその渡し方</a>。</li><li><a href="/ja/kotlin/gradle-compilation-and-caches">増分コンパイル、キャッシュサポート、ビルドレポート、Kotlinデーモン</a>。</li></ul>',20)]))}const D=o(k,[["render",g]]);export{b as __pageData,D as default};
