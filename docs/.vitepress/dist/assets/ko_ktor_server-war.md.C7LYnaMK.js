import{_ as E,C as n,c as g,o as c,j as s,G as t,ag as k,a as i,w as e}from"./chunks/framework.Bksy39di.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-war.md","filePath":"ko/ktor/server-war.md","lastUpdated":1755457140000}'),y={name:"ko/ktor/server-war.md"};function u(v,a,m,b,f,F){const p=n("show-structure"),o=n("tldr"),d=n("link-summary"),r=n("code-block"),l=n("TabItem"),h=n("Tabs");return c(),g("div",null,[a[7]||(a[7]=s("h1",{id:"war",tabindex:"-1"},[i("WAR "),s("a",{class:"header-anchor",href:"#war","aria-label":'Permalink to "WAR"'},"​")],-1)),t(p,{for:"chapter",depth:"2"}),t(o,null,{default:e(()=>a[0]||(a[0]=[s("p",null,[s("b",null,"코드 예시"),i(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war"},"jetty-war"),i(", "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war"},"tomcat-war"),i(", "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war-ssl"},"tomcat-war-ssl")],-1)])),_:1}),t(d,null,{default:e(()=>a[1]||(a[1]=[i(" WAR 아카이브를 사용하여 서블릿 컨테이너 내에서 Ktor 애플리케이션을 실행하고 배포하는 방법을 알아보세요. ")])),_:1}),a[8]||(a[8]=k('<p>Ktor 애플리케이션은 Tomcat 및 Jetty를 포함한 서블릿 컨테이너 내에서 실행하고 배포할 수 있습니다. 서블릿 컨테이너 내에 배포하려면 WAR 아카이브를 생성한 다음, WAR을 지원하는 서버 또는 클라우드 서비스에 배포해야 합니다.</p><p>이 토픽에서는 다음 방법을 보여드립니다:</p><ul><li>서블릿 애플리케이션에서 Ktor를 사용하도록 구성하는 방법;</li><li>WAR 애플리케이션 실행 및 패키징을 위한 Gretty 및 War 플러그인을 적용하는 방법;</li><li>Ktor 서블릿 애플리케이션을 실행하는 방법;</li><li>WAR 아카이브를 생성하고 배포하는 방법.</li></ul><h2 id="configure-ktor" tabindex="-1">서블릿 애플리케이션에서 Ktor 구성 <a class="header-anchor" href="#configure-ktor" aria-label="Permalink to &quot;서블릿 애플리케이션에서 Ktor 구성 {id=&quot;configure-ktor&quot;}&quot;">​</a></h2><p>Ktor를 사용하면 애플리케이션 내에서 바로 원하는 엔진(Netty, Jetty 또는 Tomcat 등)으로 <a href="./server-create-and-configure">서버를 생성하고 시작</a>할 수 있습니다. 이 경우 애플리케이션은 엔진 설정, 연결 및 SSL 옵션을 제어할 수 있습니다.</p><p>위 접근 방식과 달리, 서블릿 컨테이너는 애플리케이션 라이프사이클 및 연결 설정을 제어해야 합니다. Ktor는 애플리케이션에 대한 제어 권한을 서블릿 컨테이너에 위임하는 특별한 <a href="https://api.ktor.io/ktor-server/ktor-server-servlet/io.ktor.server.servlet/-servlet-application-engine/index.html" target="_blank" rel="noreferrer">ServletApplicationEngine</a> 엔진을 제공합니다.</p><blockquote><p>참고: Ktor 애플리케이션이 서블릿 컨테이너 내에 배포될 때는 <a href="./server-configuration-file">연결 및 SSL 설정</a>이 적용되지 않습니다. <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war-ssl" target="_blank" rel="noreferrer">tomcat-war-ssl</a> 샘플은 Tomcat에서 SSL을 구성하는 방법을 보여줍니다.</p></blockquote><h3 id="add-dependencies" tabindex="-1">의존성 추가 <a class="header-anchor" href="#add-dependencies" aria-label="Permalink to &quot;의존성 추가 {id=&quot;add-dependencies&quot;}&quot;">​</a></h3><p>서블릿 애플리케이션에서 Ktor를 사용하려면 빌드 스크립트에 <code>ktor-server-servlet-jakarta</code> 아티팩트를 포함해야 합니다:</p>',9)),t(h,{group:"languages"},{default:e(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:e(()=>[t(r,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-servlet-jakarta:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:e(()=>[t(r,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-servlet-jakarta:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:e(()=>[t(r,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-servlet-jakarta-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),a[9]||(a[9]=k('<p>Tomcat/Jetty 9.x 또는 이전 버전을 사용하는 경우, 대신 <code>ktor-server-servlet</code> 아티팩트를 추가하세요.</p><blockquote><p>참고: Ktor 애플리케이션이 서블릿 컨테이너 내에 배포될 때는 별도의 <a href="./server-engines#dependencies">Jetty 또는 Tomcat 아티팩트</a>가 필요하지 않습니다.</p></blockquote><h3 id="configure-servlet" tabindex="-1">서블릿 구성 <a class="header-anchor" href="#configure-servlet" aria-label="Permalink to &quot;서블릿 구성 {id=&quot;configure-servlet&quot;}&quot;">​</a></h3><p>애플리케이션에 Ktor 서블릿을 등록하려면 <code>WEB-INF/web.xml</code> 파일을 열고 <code>servlet-class</code> 속성에 <code>ServletApplicationEngine</code>를 할당합니다:</p>',4)),t(h,null,{default:e(()=>[t(l,{title:"Tomcat/Jetty v10.x+"},{default:e(()=>a[2]||(a[2]=[s("div",{class:"language-xml vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"xml"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"display-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">KtorServlet</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"display-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">KtorServlet</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">io.ktor.server.servlet.jakarta.ServletApplicationEngine</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"init-param"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">io.ktor.ktor.config</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-value"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">application.conf</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-value"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    </"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"init-param"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"async-supported"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">true</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"async-supported"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")])])])],-1)])),_:1}),t(l,{title:"Tomcat/Jetty v9.x"},{default:e(()=>[t(r,{lang:"XML",code:`<servlet>
    <display-name>KtorServlet</display-name>
    <servlet-name>KtorServlet</servlet-name>
    <servlet-class>io.ktor.server.servlet.ServletApplicationEngine</servlet-class>
    <init-param>
        <param-name>io.ktor.ktor.config</param-name>
        <param-value>application.conf</param-value>
    </init-param>
    <async-supported>true</async-supported>
</servlet>`})]),_:1})]),_:1}),a[10]||(a[10]=k(`<p>그 다음, 이 서블릿의 URL 패턴을 구성합니다:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-mapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;KtorServlet&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url-pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;/&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url-pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-mapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="configure-gretty" tabindex="-1">Gretty 구성 <a class="header-anchor" href="#configure-gretty" aria-label="Permalink to &quot;Gretty 구성 {id=&quot;configure-gretty&quot;}&quot;">​</a></h2><p><a href="https://plugins.gradle.org/plugin/org.gretty" target="_blank" rel="noreferrer">Gretty</a> 플러그인을 사용하면 Jetty 및 Tomcat에서 서블릿 애플리케이션을 <a href="#run">실행</a>할 수 있습니다. 이 플러그인을 설치하려면 <code>build.gradle.kts</code> 파일을 열고 <code>plugins</code> 블록에 다음 코드를 추가하세요:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.gretty&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4.0.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>그런 다음, 다음과 같이 <code>gretty</code> 블록에서 이를 구성할 수 있습니다:</p>`,6)),t(h,null,{default:e(()=>[t(l,{title:"Jetty"},{default:e(()=>a[3]||(a[3]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"gretty {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    servletContainer "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "jetty11"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    contextPath "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "/"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    logbackConfigFile "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "src/main/resources/logback.xml"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(l,{title:"Tomcat"},{default:e(()=>a[4]||(a[4]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"gretty {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    servletContainer "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "tomcat10"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    contextPath "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "/"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    logbackConfigFile "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "src/main/resources/logback.xml"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[11]||(a[11]=k(`<p>마지막으로, <code>run</code> 태스크를 구성합니다:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">afterEvaluate {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getByName(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;run&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dependsOn(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;appRun&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configure-war" tabindex="-1">War 구성 <a class="header-anchor" href="#configure-war" aria-label="Permalink to &quot;War 구성 {id=&quot;configure-war&quot;}&quot;">​</a></h2><p>War 플러그인을 사용하면 WAR 아카이브를 <a href="#generate-war">생성</a>할 수 있습니다. <code>build.gradle.kts</code> 파일의 <code>plugins</code> 블록에 다음 줄을 추가하여 설치할 수 있습니다:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;war&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="run" tabindex="-1">애플리케이션 실행 <a class="header-anchor" href="#run" aria-label="Permalink to &quot;애플리케이션 실행 {id=&quot;run&quot;}&quot;">​</a></h2><p><a href="#configure-gretty">구성된 Gretty 플러그인</a>을 사용하여 <code>run</code> 태스크를 통해 서블릿 애플리케이션을 실행할 수 있습니다. 예를 들어, 다음 명령은 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war" target="_blank" rel="noreferrer">jetty-war</a> 예시를 실행합니다:</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :jetty-war:run</span></span></code></pre></div><h2 id="generate-war" tabindex="-1">WAR 아카이브 생성 및 배포 <a class="header-anchor" href="#generate-war" aria-label="Permalink to &quot;WAR 아카이브 생성 및 배포 {id=&quot;generate-war&quot;}&quot;">​</a></h2><p><a href="#configure-war">War</a> 플러그인을 사용하여 애플리케이션으로 WAR 파일을 생성하려면 <code>war</code> 태스크를 실행합니다. <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war" target="_blank" rel="noreferrer">jetty-war</a> 예시의 경우, 명령은 다음과 같습니다:</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :jetty-war:war</span></span></code></pre></div><p><code>jetty-war.war</code> 파일은 <code>build/libs</code> 디렉토리에 생성됩니다. 생성된 아카이브를 <code>jetty/webapps</code> 디렉토리로 복사하여 서블릿 컨테이너 내에 배포할 수 있습니다. 예를 들어, 아래 <code>Dockerfile</code>은 생성된 WAR을 Jetty 또는 Tomcat 서블릿 컨테이너 내에서 실행하는 방법을 보여줍니다:</p>`,12)),t(h,null,{default:e(()=>[t(l,{title:"Jetty"},{default:e(()=>a[5]||(a[5]=[s("div",{class:"language-Docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"Docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"FROM"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," jetty:11.0.25")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"EXPOSE"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," 8080:8080")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"COPY"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ./build/libs/jetty-war.war/ /var/lib/jetty/webapps")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"WORKDIR"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," /var/lib/jetty")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"CMD"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"java"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"-jar"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/usr/local/jetty/start.jar"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")])])])],-1)])),_:1}),t(l,{title:"Tomcat"},{default:e(()=>a[6]||(a[6]=[s("div",{class:"language-Docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"Docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"FROM"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," tomcat:10.1.41")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"EXPOSE"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," 8080:8080")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"COPY"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ./build/libs/tomcat-war.war/ /usr/local/tomcat/webapps")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"WORKDIR"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," /usr/local/tomcat")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"CMD"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"catalina.sh"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"run"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")])])])],-1)])),_:1})]),_:1}),a[12]||(a[12]=s("p",null,[i("전체 예시는 다음에서 찾을 수 있습니다: "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war",target:"_blank",rel:"noreferrer"},"jetty-war"),i(" 및 "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war",target:"_blank",rel:"noreferrer"},"tomcat-war"),i(".")],-1))])}const C=E(y,[["render",u]]);export{A as __pageData,C as default};
