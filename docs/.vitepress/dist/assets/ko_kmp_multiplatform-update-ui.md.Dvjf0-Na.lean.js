import{_ as h}from"./chunks/icon-1-done.B5D6C9SU.js";import{_ as k}from"./chunks/icon-2.D_3lm1kb.js";import{_ as o}from"./chunks/icon-3-todo.aEuKIG4W.js";import{_ as d}from"./chunks/icon-4-todo.DqbNYzPe.js";import{_ as E}from"./chunks/icon-5-todo.DJgVODZv.js";import{_ as g,a as c}from"./chunks/first-multiplatform-project-on-ios-2.CLUQ81d4.js";import{_ as y,C as t,c as u,o as m,j as i,G as n,ag as F,a,w as e}from"./chunks/framework.Bksy39di.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-update-ui.md","filePath":"ko/kmp/multiplatform-update-ui.md","lastUpdated":1755516278000}'),f={name:"ko/kmp/multiplatform-update-ui.md"};function C(b,s,A,B,v,S){const l=t("secondary-label"),p=t("Links"),r=t("tldr");return m(),u("div",null,[s[21]||(s[21]=i("h1",{id:"사용자-인터페이스-업데이트",tabindex:"-1"},[a("사용자 인터페이스 업데이트 "),i("a",{class:"header-anchor",href:"#사용자-인터페이스-업데이트","aria-label":'Permalink to "사용자 인터페이스 업데이트"'},"​")],-1)),n(l,{ref:"IntelliJ IDEA"},null,512),n(l,{ref:"Android Studio"},null,512),n(r,null,{default:e(()=>[s[18]||(s[18]=i("p",null,"이 튜토리얼은 IntelliJ IDEA를 사용하지만, Android Studio에서도 따라 할 수 있습니다. 두 IDE 모두 동일한 핵심 기능과 Kotlin Multiplatform 지원을 공유합니다.",-1)),s[19]||(s[19]=i("br",null,null,-1)),s[20]||(s[20]=i("p",null,[a("이것은 "),i("strong",null,"공유 로직과 네이티브 UI로 Kotlin Multiplatform 앱 만들기"),a(" 튜토리얼의 두 번째 파트입니다. 계속하기 전에 이전 단계를 완료했는지 확인하세요.")],-1)),i("p",null,[s[1]||(s[1]=i("img",{src:h,width:"20",alt:"첫 번째 단계"},null,-1)),s[2]||(s[2]=a()),n(p,{href:"/kmp/multiplatform-create-first-app",summary:"This tutorial uses IntelliJ IDEA, but you can also follow it in Android Studio – both IDEs share the same core functionality and Kotlin Multiplatform support. This is the first part of the Create a Kotlin Multiplatform app with shared logic and native UI tutorial. Create your Kotlin Multiplatform app Update the user interface Add dependencies Share more logic Wrap up your project"},{default:e(()=>s[0]||(s[0]=[a("Kotlin Multiplatform 앱 만들기")])),_:1}),s[3]||(s[3]=i("br",null,null,-1)),s[4]||(s[4]=i("img",{src:k,width:"20",alt:"두 번째 단계"},null,-1)),s[5]||(s[5]=a()),s[6]||(s[6]=i("strong",null,"사용자 인터페이스 업데이트",-1)),s[7]||(s[7]=i("br",null,null,-1)),s[8]||(s[8]=i("img",{src:o,width:"20",alt:"세 번째 단계"},null,-1)),s[9]||(s[9]=a(" 종속성 추가")),s[10]||(s[10]=i("br",null,null,-1)),s[11]||(s[11]=i("br",null,null,-1)),s[12]||(s[12]=i("img",{src:d,width:"20",alt:"네 번째 단계"},null,-1)),s[13]||(s[13]=a(" 더 많은 로직 공유")),s[14]||(s[14]=i("br",null,null,-1)),s[15]||(s[15]=i("img",{src:E,width:"20",alt:"다섯 번째 단계"},null,-1)),s[16]||(s[16]=a(" 프로젝트 마무리")),s[17]||(s[17]=i("br",null,null,-1))])]),_:1}),s[22]||(s[22]=F("",19))])}const K=y(f,[["render",C]]);export{P as __pageData,K as default};
