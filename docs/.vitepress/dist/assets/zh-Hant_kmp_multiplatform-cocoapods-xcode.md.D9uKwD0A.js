import{_ as n}from"./chunks/disable-sandboxing-cocoapods.CXTxy-d-.js";import{_ as p,C as t,c as e,o as h,j as s,G as o,ag as k,a,w as d}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"將 Kotlin 專案作為 CocoaPods 依賴項使用","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kmp/multiplatform-cocoapods-xcode.md","filePath":"zh-Hant/kmp/multiplatform-cocoapods-xcode.md","lastUpdated":1755516278000}'),r={name:"zh-Hant/kmp/multiplatform-cocoapods-xcode.md"};function E(c,i,g,y,F,u){const l=t("tldr");return h(),e("div",null,[i[1]||(i[1]=s("h1",{id:"將-kotlin-專案作為-cocoapods-依賴項使用",tabindex:"-1"},[a("將 Kotlin 專案作為 CocoaPods 依賴項使用 "),s("a",{class:"header-anchor",href:"#將-kotlin-專案作為-cocoapods-依賴項使用","aria-label":'Permalink to "將 Kotlin 專案作為 CocoaPods 依賴項使用"'},"​")],-1)),o(l,null,{default:d(()=>i[0]||(i[0]=[s("ul",null,[s("li",null,[a("在新增 Pod 依賴項之前，請"),s("a",{href:"./multiplatform-cocoapods-overview#set-up-an-environment-to-work-with-cocoapods"},"完成初始配置"),a("。")]),s("li",null,[a("您可以在我們的 "),s("a",{href:"https://github.com/Kotlin/kmp-with-cocoapods-multitarget-xcode-sample",target:"_blank",rel:"noreferrer"},"GitHub 儲存庫"),a("中找到一個範例專案。")])],-1)])),_:1}),i[2]||(i[2]=k('<p>您可以將整個 Kotlin 專案作為 Pod 依賴項使用。為此，您需要在專案的 Podfile 中包含此類依賴項，指定其名稱以及包含生成的 Podspec 的專案目錄的路徑。</p><p>此依賴項將隨此專案自動建置（並重新建置）。這種方法簡化了匯入 Xcode 的過程，無需手動編寫相應的 Gradle 任務和 Xcode 建置步驟。</p><p>您可以在 Kotlin 專案和具有一個或多個目標的 Xcode 專案之間新增依賴項。在 Kotlin 專案和多個 Xcode 專案之間新增依賴項也是可行的。然而，在這種情況下，您需要為每個 Xcode 專案手動呼叫 <code>pod install</code>。對於單個 Xcode 專案，此操作會自動完成。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><ul><li>為了將依賴項正確匯入 Kotlin/Native 模組，Podfile 必須包含 <a href="https://guides.cocoapods.org/syntax/podfile.html#use_modular_headers_bang" target="_blank" rel="noreferrer"><code>use_modular_headers!</code></a> 或 <a href="https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang" target="_blank" rel="noreferrer"><code>use_frameworks!</code></a> 指令之一。 * 如果您未指定最低部署目標版本，且某個依賴 Pod 需要更高的部署目標，您將會遇到錯誤。</li></ul></div><h2 id="具有單一目標的-xcode-專案" tabindex="-1">具有單一目標的 Xcode 專案 <a class="header-anchor" href="#具有單一目標的-xcode-專案" aria-label="Permalink to &quot;具有單一目標的 Xcode 專案&quot;">​</a></h2><p>若要將 Kotlin 專案作為 Pod 依賴項在具有單一目標的 Xcode 專案中使用：</p><ol><li><p>如果您沒有 Xcode 專案，請建立一個。</p></li><li><p>在 Xcode 中，請確保在應用程式目標的 <strong>建置選項 (Build Options)</strong> 下停用 <strong>使用者腳本沙盒 (User Script Sandboxing)</strong>：</p><p><img src="'+n+`" alt="停用 CocoaPods 沙盒"></p></li><li><p>在您的 Kotlin 專案的 iOS 部分中，建立一個 Podfile。</p></li><li><p>在共用模組的 <code>build.gradle(.kts)</code> 檔案中，使用 <code>podfile = project.file()</code> 新增 Podfile 的路徑。</p><p>這一步驟透過為您的 Podfile 呼叫 <code>pod install</code> 來幫助同步您的 Xcode 專案與 Kotlin 專案的依賴項。</p></li><li><p>指定 Pod 函式庫的最低部署目標版本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ios.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SDWebImage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5.20.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        podfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../ios-app/Podfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>在 Podfile 中，新增您想要包含在 Xcode 專案中的 Kotlin 專案的名稱和路徑：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ios-app&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Pods for iosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div></li><li><p>在您的專案目錄中執行 <code>pod install</code>。</p><p>當您第一次執行 <code>pod install</code> 時，它會建立 <code>.xcworkspace</code> 檔案。此檔案包含您原始的 <code>.xcodeproj</code> 和 CocoaPods 專案。</p></li><li><p>關閉您的 <code>.xcodeproj</code> 並改為開啟新的 <code>.xcworkspace</code> 檔案。這樣可以避免專案依賴問題。</p></li><li><p>在 IntelliJ IDEA 中執行 <strong>建置 (Build)</strong> | <strong>重新載入所有 Gradle 專案 (Reload All Gradle Projects)</strong>（或在 Android Studio 中執行 <strong>檔案 (File)</strong> | <strong>與 Gradle 檔案同步專案 (Sync Project with Gradle Files)</strong>）以重新匯入專案。</p></li></ol><h2 id="具有多個目標的-xcode-專案" tabindex="-1">具有多個目標的 Xcode 專案 <a class="header-anchor" href="#具有多個目標的-xcode-專案" aria-label="Permalink to &quot;具有多個目標的 Xcode 專案&quot;">​</a></h2><p>若要將 Kotlin 專案作為 Pod 依賴項在具有多個目標的 Xcode 專案中使用：</p><ol><li><p>如果您沒有 Xcode 專案，請建立一個。</p></li><li><p>在您的 Kotlin 專案的 iOS 部分中，建立一個 Podfile。</p></li><li><p>在共用模組的 <code>build.gradle(.kts)</code> 檔案中，使用 <code>podfile = project.file()</code> 新增專案 Podfile 的路徑。</p><p>這一步驟透過為您的 Podfile 呼叫 <code>pod install</code> 來幫助同步您的 Xcode 專案與 Kotlin 專案的依賴項。</p></li><li><p>使用 <code>pod()</code> 為您想在專案中使用的 Pod 函式庫新增依賴項。</p></li><li><p>對於每個目標，指定 Pod 函式庫的最低部署目標版本：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tvosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ios.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        tvos.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SDWebImage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5.20.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 指定 Podfile 的路徑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        podfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../severalTargetsXcodeProject/Podfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>在 Podfile 中，新增您想要包含在 Xcode 專案中的 Kotlin 專案的名稱和路徑：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;iosApp&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Pods for iosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TVosApp&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tvos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Pods for TVosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div></li><li><p>在您的專案目錄中執行 <code>pod install</code>。</p><p>當您第一次執行 <code>pod install</code> 時，它會建立 <code>.xcworkspace</code> 檔案。此檔案包含您原始的 <code>.xcodeproj</code> 和 CocoaPods 專案。</p></li><li><p>關閉您的 <code>.xcodeproj</code> 並改為開啟新的 <code>.xcworkspace</code> 檔案。這樣可以避免專案依賴問題。</p></li><li><p>在 IntelliJ IDEA 中執行 <strong>建置 (Build)</strong> | <strong>重新載入所有 Gradle 專案 (Reload All Gradle Projects)</strong>（或在 Android Studio 中執行 <strong>檔案 (File)</strong> | <strong>與 Gradle 檔案同步專案 (Sync Project with Gradle Files)</strong>）以重新匯入專案。</p></li></ol><h2 id="後續步驟" tabindex="-1">後續步驟 <a class="header-anchor" href="#後續步驟" aria-label="Permalink to &quot;後續步驟&quot;">​</a></h2><ul><li><a href="./multiplatform-cocoapods-libraries">在您的 Kotlin 專案中新增對 Pod 函式庫的依賴</a></li><li><a href="./multiplatform-direct-integration">了解如何將框架連接到您的 iOS 專案</a></li><li><a href="./multiplatform-cocoapods-dsl-reference">查看完整的 CocoaPods Gradle 外掛程式 DSL 參考</a></li></ul>`,12))])}const b=p(r,[["render",E]]);export{f as __pageData,b as default};
