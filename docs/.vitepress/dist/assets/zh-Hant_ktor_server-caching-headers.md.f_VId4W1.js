import{_ as u,C as t,c as y,o as C,G as a,ag as k,j as i,w as e,a as n}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-caching-headers.md","filePath":"zh-Hant/ktor/server-caching-headers.md","lastUpdated":1755457140000}'),F={name:"zh-Hant/ktor/server-caching-headers.md"};function m(v,s,f,b,A,_){const o=t("TopicTitle"),d=t("show-structure"),g=t("primary-label"),p=t("Links"),E=t("tldr"),l=t("code-block"),h=t("TabItem"),r=t("Tabs"),c=t("list");return C(),y("div",null,[a(o,{labelRef:"server-plugin",title:"快取標頭"}),a(d,{for:"chapter",depth:"2"}),a(g,{ref:"server-plugin"},null,512),a(E,null,{default:e(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依賴項"),n("："),i("code",null,"io.ktor:ktor-server-caching-headers")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"程式碼範例"),n("： "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/caching-headers"}," caching-headers ")],-1)),i("p",null,[i("b",null,[a(p,{href:"/ktor/server-native",summary:"Ktor 支持 Kotlin/Native 並允許您在沒有額外運行時或虛擬機器下運行伺服器。"},{default:e(()=>s[0]||(s[0]=[n("Native server")])),_:1}),s[1]||(s[1]=n(" 支援"))]),s[2]||(s[2]=n("：✅ "))])]),_:1}),s[17]||(s[17]=k('<p><a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-caching-headers/io.ktor.server.plugins.cachingheaders/-caching-headers.html" target="_blank" rel="noreferrer">CachingHeaders</a> 插件增加了配置用於 HTTP 快取的 <code>Cache-Control</code> 和 <code>Expires</code> 標頭的能力。您可以透過以下方式 <a href="#configure">配置快取</a>：</p><ul><li>為特定的內容類型配置不同的快取策略，例如圖片、CSS 和 JavaScript 檔案等。</li><li>在不同層級指定快取選項：應用程式層級的全域配置、路由層級的配置，或針對特定呼叫的配置。</li></ul><h2 id="add_dependencies" tabindex="-1">新增依賴項 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;新增依賴項 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p> 若要使用 <code>CachingHeaders</code>，您需要在建構腳本中包含 <code>ktor-server-caching-headers</code> 構件： </p>',4)),a(r,{group:"languages"},{default:e(()=>[a(h,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:e(()=>[a(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-caching-headers:$ktor_version")'})]),_:1}),a(h,{title:"Gradle (Groovy)","group-key":"groovy"},{default:e(()=>[a(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-caching-headers:$ktor_version"'})]),_:1}),a(h,{title:"Maven","group-key":"maven"},{default:e(()=>[a(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-caching-headers-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[18]||(s[18]=i("h2",{id:"install_plugin",tabindex:"-1"},[n("安裝 CachingHeaders "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安裝 CachingHeaders {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=n(" 若要將 ")),s[7]||(s[7]=i("code",null,"CachingHeaders",-1)),s[8]||(s[8]=n(" 插件")),s[9]||(s[9]=i("a",{href:"#install"},"安裝",-1)),s[10]||(s[10]=n("到應用程式， 請將其傳遞給指定")),a(p,{href:"/ktor/server-modules",summary:"模組允許您透過將路由分組來建構應用程式。"},{default:e(()=>s[5]||(s[5]=[n("模組")])),_:1}),s[11]||(s[11]=n("中的 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=n(" 函數。 以下程式碼片段展示了如何安裝 ")),s[14]||(s[14]=i("code",null,"CachingHeaders",-1)),s[15]||(s[15]=n(" ... "))]),a(c,null,{default:e(()=>s[16]||(s[16]=[i("li",null,[n(" ... 在 "),i("code",null,"embeddedServer"),n(" 函數呼叫內部。 ")],-1),i("li",null,[n(" ... 在明確定義的 "),i("code",null,"module"),n(" 內部，它是一個 "),i("code",null,"Application"),n(" 類別的擴充函數。 ")],-1)])),_:1}),a(r,null,{default:e(()=>[a(h,{title:"embeddedServer"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.cachingheaders.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(CachingHeaders)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),a(h,{title:"module"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.cachingheaders.*
            // ...
            fun Application.module() {
                install(CachingHeaders)
                // ...
            }`})]),_:1})]),_:1}),s[19]||(s[19]=k(`<p><code>CachingHeaders</code> 插件也可以<a href="#install-route">安裝到特定路由</a>。 如果您需要針對不同的應用程式資源使用不同的 <code>CachingHeaders</code> 配置，這可能會很有用。 </p><p>安裝 <code>CachingHeaders</code> 後，您可以 <a href="#configure">配置</a> 各種內容類型的快取設定。</p><h2 id="configure" tabindex="-1">配置快取 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置快取 {id=&quot;configure&quot;}&quot;">​</a></h2><p>若要配置 <code>CachingHeaders</code> 插件，您需要定義 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-caching-headers/io.ktor.server.plugins.cachingheaders/-caching-headers-config/options.html" target="_blank" rel="noreferrer">options</a> 函數，為給定的 <code>ApplicationCall</code> 和內容類型提供指定的快取選項。來自 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/caching-headers" target="_blank" rel="noreferrer">caching-headers</a> 範例的程式碼片段展示了如何為純文字和 HTML 新增帶有 <code>max-age</code> 選項的 <code>Cache-Control</code> 標頭：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CachingHeaders) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { call, content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (content.contentType?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withoutParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    ContentType.Text.Plain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CachingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CacheControl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MaxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(maxAgeSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    ContentType.Text.Html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CachingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CacheControl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MaxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(maxAgeSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a href="https://api.ktor.io/ktor-http/io.ktor.http.content/-caching-options/index.html" target="_blank" rel="noreferrer">CachingOptions</a> 物件接受 <code>Cache-Control</code> 和 <code>Expires</code> 標頭值作為參數：</p><ul><li><code>cacheControl</code> 參數接受一個 <a href="https://api.ktor.io/ktor-http/io.ktor.http/-cache-control/index.html" target="_blank" rel="noreferrer">CacheControl</a> 值。您可以使用 <code>CacheControl.MaxAge</code> 來指定 <code>max-age</code> 參數和相關設定，例如可見性、重新驗證選項等。您可以使用 <code>CacheControl.NoCache</code>/<code>CacheControl.NoStore</code> 來停用快取。</li><li><code>expires</code> 參數允許您將 <code>Expires</code> 標頭指定為 <code>GMTDate</code> 或 <code>ZonedDateTime</code> 值。</li></ul><h3 id="configure-route" tabindex="-1">路由層級 <a class="header-anchor" href="#configure-route" aria-label="Permalink to &quot;路由層級 {id=&quot;configure-route&quot;}&quot;">​</a></h3><p>您不僅可以全域安裝插件，還可以安裝到 <a href="./server-plugins#install-route">特定路由</a>。例如，以下範例展示了如何為 <code>/index</code> 路由新增指定的快取標頭：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CachingHeaders) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { call, content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CachingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CacheControl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MaxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(maxAgeSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Index page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="configure-call" tabindex="-1">呼叫層級 <a class="header-anchor" href="#configure-call" aria-label="Permalink to &quot;呼叫層級 {id=&quot;configure-call&quot;}&quot;">​</a></h3><p>如果您需要更精細的快取設定，您可以使用 <code>ApplicationCall.caching</code> 屬性在呼叫層級配置快取選項。以下範例展示了如何根據使用者是否登入來配置快取選項：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/profile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userLoggedIn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userLoggedIn) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.caching </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CachingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CacheControl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NoStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CacheControl.Visibility.Private))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Profile page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.caching </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CachingOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CacheControl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MaxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(maxAgeSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Login page&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>若要登入使用者，您可以使用 <a href="./server-auth">Authentication</a> 和 <a href="./server-sessions">Sessions</a> 插件。</p></blockquote>`,14))])}const T=u(F,[["render",m]]);export{B as __pageData,T as default};
