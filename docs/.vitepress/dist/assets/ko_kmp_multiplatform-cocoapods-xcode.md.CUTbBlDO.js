import{_ as n}from"./chunks/disable-sandboxing-cocoapods.CXTxy-d-.js";import{_ as p,C as t,c as e,o,j as s,G as h,ag as k,a,w as d}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"Kotlin 프로젝트를 CocoaPods 의존성으로 사용하기","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-cocoapods-xcode.md","filePath":"ko/kmp/multiplatform-cocoapods-xcode.md","lastUpdated":1755516278000}'),r={name:"ko/kmp/multiplatform-cocoapods-xcode.md"};function E(c,i,g,y,F,u){const l=t("tldr");return o(),e("div",null,[i[1]||(i[1]=s("h1",{id:"kotlin-프로젝트를-cocoapods-의존성으로-사용하기",tabindex:"-1"},[a("Kotlin 프로젝트를 CocoaPods 의존성으로 사용하기 "),s("a",{class:"header-anchor",href:"#kotlin-프로젝트를-cocoapods-의존성으로-사용하기","aria-label":'Permalink to "Kotlin 프로젝트를 CocoaPods 의존성으로 사용하기"'},"​")],-1)),h(l,null,{default:d(()=>i[0]||(i[0]=[s("ul",null,[s("li",null,[a("Pod 의존성을 추가하기 전에, "),s("a",{href:"./multiplatform-cocoapods-overview#set-up-an-environment-to-work-with-cocoapods"},"초기 구성을 완료하세요"),a(".")]),s("li",null,[a("샘플 프로젝트는 "),s("a",{href:"https://github.com/Kotlin/kmp-with-cocoapods-multitarget-xcode-sample",target:"_blank",rel:"noreferrer"},"GitHub 리포지토리"),a("에서 찾을 수 있습니다.")])],-1)])),_:1}),i[2]||(i[2]=k('<p>전체 Kotlin 프로젝트를 Pod 의존성으로 사용할 수 있습니다. 그렇게 하려면 프로젝트의 Podfile에 해당 의존성을 포함해야 하며, 그 이름과 생성된 Podspec이 있는 프로젝트 디렉토리의 경로를 지정해야 합니다.</p><p>이 의존성은 프로젝트와 함께 자동으로 빌드(및 재빌드)됩니다. 이러한 접근 방식은 해당 Gradle 태스크와 Xcode 빌드 단계를 수동으로 작성할 필요를 없애 Xcode로 가져오는 것을 간소화합니다.</p><p>Kotlin 프로젝트와 하나 또는 여러 개의 타겟을 가진 Xcode 프로젝트 간에 의존성을 추가할 수 있습니다. Kotlin 프로젝트와 여러 Xcode 프로젝트 간에 의존성을 추가하는 것도 가능합니다. 그러나 이 경우 각 Xcode 프로젝트에 대해 <code>pod install</code>을 수동으로 호출해야 합니다. 단일 Xcode 프로젝트의 경우 자동으로 처리됩니다.</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><ul><li>의존성을 Kotlin/Native 모듈로 올바르게 가져오려면 Podfile에 <a href="https://guides.cocoapods.org/syntax/podfile.html#use_modular_headers_bang" target="_blank" rel="noreferrer"><code>use_modular_headers!</code></a> 또는 <a href="https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang" target="_blank" rel="noreferrer"><code>use_frameworks!</code></a> 지시문이 포함되어야 합니다. * 최소 배포 타겟 버전을 지정하지 않고 의존성 Pod이 더 높은 배포 타겟을 요구하는 경우, 오류가 발생합니다.</li></ul></div><h2 id="단일-타겟을-가진-xcode-프로젝트" tabindex="-1">단일 타겟을 가진 Xcode 프로젝트 <a class="header-anchor" href="#단일-타겟을-가진-xcode-프로젝트" aria-label="Permalink to &quot;단일 타겟을 가진 Xcode 프로젝트&quot;">​</a></h2><p>단일 타겟을 가진 Xcode 프로젝트에서 Kotlin 프로젝트를 Pod 의존성으로 사용하려면:</p><ol><li><p>Xcode 프로젝트가 아직 없는 경우, 생성하세요.</p></li><li><p>Xcode에서 애플리케이션 타겟의 <strong>Build Options</strong> 아래에 있는 <strong>User Script Sandboxing</strong>을 비활성화했는지 확인하세요:</p><p><img src="'+n+`" alt="Disable sandboxing CocoaPods"></p></li><li><p>Kotlin 프로젝트의 iOS 부분에 Podfile을 생성하세요.</p></li><li><p>공유 모듈의 <code>build.gradle(.kts)</code> 파일에서 <code>podfile = project.file()</code>를 사용하여 Podfile 경로를 추가하세요.</p><p>이 단계는 Podfile에 대해 <code>pod install</code>을 호출하여 Xcode 프로젝트를 Kotlin 프로젝트 의존성과 동기화하는 데 도움이 됩니다.</p></li><li><p>Pod 라이브러리에 대한 최소 배포 타겟 버전을 지정하세요:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ios.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SDWebImage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5.20.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        podfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../ios-app/Podfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Podfile에 Xcode 프로젝트에 포함하려는 Kotlin 프로젝트의 이름과 경로를 추가하세요:</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ios-app&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Pods for iosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div></li><li><p>프로젝트 디렉토리에서 <code>pod install</code>을 실행하세요.</p><p><code>pod install</code>을 처음 실행하면 <code>.xcworkspace</code> 파일이 생성됩니다. 이 파일에는 원래의 <code>.xcodeproj</code>와 CocoaPods 프로젝트가 포함됩니다.</p></li><li><p>기존 <code>.xcodeproj</code>를 닫고 대신 새로 생성된 <code>.xcworkspace</code> 파일을 여세요. 이렇게 하면 프로젝트 의존성 관련 문제를 피할 수 있습니다.</p></li><li><p>IntelliJ IDEA에서 <strong>Build</strong> | <strong>Reload All Gradle Projects</strong>를 실행하거나 (또는 Android Studio에서 <strong>File</strong> | <strong>Sync Project with Gradle Files</strong>를 실행하여) 프로젝트를 다시 가져오세요.</p></li></ol><h2 id="여러-타겟을-가진-xcode-프로젝트" tabindex="-1">여러 타겟을 가진 Xcode 프로젝트 <a class="header-anchor" href="#여러-타겟을-가진-xcode-프로젝트" aria-label="Permalink to &quot;여러 타겟을 가진 Xcode 프로젝트&quot;">​</a></h2><p>여러 타겟을 가진 Xcode 프로젝트에서 Kotlin 프로젝트를 Pod 의존성으로 사용하려면:</p><ol><li><p>Xcode 프로젝트가 아직 없는 경우, 생성하세요.</p></li><li><p>Kotlin 프로젝트의 iOS 부분에 Podfile을 생성하세요.</p></li><li><p>공유 모듈의 <code>build.gradle(.kts)</code> 파일에서 <code>podfile = project.file()</code>를 사용하여 프로젝트의 Podfile 경로를 추가하세요.</p><p>이 단계는 Podfile에 대해 <code>pod install</code>을 호출하여 Xcode 프로젝트를 Kotlin 프로젝트 의존성과 동기화하는 데 도움이 됩니다.</p></li><li><p><code>pod()</code>를 사용하여 프로젝트에서 사용하려는 Pod 라이브러리에 의존성을 추가하세요.</p></li><li><p>각 타겟에 대해 Pod 라이브러리의 최소 배포 타겟 버전을 지정하세요:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    iosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tvosArm64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cocoapods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        summary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CocoaPods test library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        homepage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/JetBrains/kotlin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ios.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        tvos.deploymentTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;16.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        pod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SDWebImage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;5.20.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Specify the path to the Podfile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        podfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../severalTargetsXcodeProject/Podfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Podfile에 Xcode 프로젝트에 포함하려는 Kotlin 프로젝트의 이름과 경로를 추가하세요:</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;iosApp&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ios</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Pods for iosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TVosApp&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  use_frameworks!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  platform </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tvos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;16.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Pods for TVosApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pod </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kotlin_library&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../kotlin-library&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div></li><li><p>프로젝트 디렉토리에서 <code>pod install</code>을 실행하세요.</p><p><code>pod install</code>을 처음 실행하면 <code>.xcworkspace</code> 파일이 생성됩니다. 이 파일에는 원래의 <code>.xcodeproj</code>와 CocoaPods 프로젝트가 포함됩니다.</p></li><li><p>기존 <code>.xcodeproj</code>를 닫고 대신 새로 생성된 <code>.xcworkspace</code> 파일을 여세요. 이렇게 하면 프로젝트 의존성 관련 문제를 피할 수 있습니다.</p></li><li><p>IntelliJ IDEA에서 <strong>Build</strong> | <strong>Reload All Gradle Projects</strong>를 실행하거나 (또는 Android Studio에서 <strong>File</strong> | <strong>Sync Project with Gradle Files</strong>를 실행하여) 프로젝트를 다시 가져오세요.</p></li></ol><h2 id="다음-단계" tabindex="-1">다음 단계 <a class="header-anchor" href="#다음-단계" aria-label="Permalink to &quot;다음 단계&quot;">​</a></h2><ul><li><a href="./multiplatform-cocoapods-libraries">Kotlin 프로젝트에서 Pod 라이브러리에 의존성 추가</a></li><li><a href="./multiplatform-direct-integration">iOS 프로젝트에 프레임워크 연결 방법 보기</a></li><li><a href="./multiplatform-cocoapods-dsl-reference">CocoaPods Gradle 플러그인 DSL 참조 전체 보기</a></li></ul>`,12))])}const b=p(r,[["render",E]]);export{f as __pageData,b as default};
