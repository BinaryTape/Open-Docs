import{_ as d,c as i,o as a,ag as s}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/koog/model-capabilities.md","filePath":"zh-Hant/koog/model-capabilities.md","lastUpdated":1755146406000}'),l={name:"zh-Hant/koog/model-capabilities.md"};function e(h,t,n,p,r,o){return a(),i("div",null,t[0]||(t[0]=[s(`<p>Koog 提供了一組抽象和實作，用於以供應商無關 (provider-agnostic) 的方式使用來自各種大型語言模型 (LLM) 供應商的模型。這組類別包含以下內容：</p><ul><li><p><strong>LLMCapability</strong>: 一個類別層次結構，定義了 LLM 可以支援的各種功能，例如：</p><ul><li>用於控制回應隨機性的溫度調整</li><li>用於外部系統互動的工具整合</li><li>用於處理視覺資料的視覺處理</li><li>用於向量表示的嵌入生成</li><li>用於文本生成任務的完成</li><li>用於結構化資料的結構描述支援 (JSON，含簡易和完整變體)</li><li>用於探索性回應的推測</li></ul></li><li><p><strong>LLModel</strong>: 一個資料類別，表示一個特定的 LLM 及其供應商、唯一識別符和支援的功能。</p></li></ul><p>這為以統一方式與不同 LLM 供應商互動奠定了基礎，讓應用程式能夠使用各種模型，同時抽象化供應商特定的細節。</p><h2 id="llm-功能" tabindex="-1">LLM 功能 <a class="header-anchor" href="#llm-功能" aria-label="Permalink to &quot;LLM 功能&quot;">​</a></h2><p>LLM 功能代表大型語言模型可以支援的特定特性或功能。在 Koog 框架中，功能用於定義特定模型能做什麼以及如何配置。每個功能都表示為 <code>LLMCapability</code> 類別的子類別或資料物件。</p><p>在您的應用程式中配置 LLM 以供使用時，您透過在建立 <code>LLModel</code> 實例時將其新增到 <code>capabilities</code> 清單中，來指定它支援哪些功能。這讓框架能夠正確地與模型互動並適當地使用其特性。</p><h3 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h3><p>以下清單包含 Koog 框架中可用於模型的核心、LLM 特定功能：</p><ul><li><p><strong>推測</strong> (<code>LLMCapability.Speculation</code>): 讓模型生成具有不同程度可能性的推測性或探索性回應。對於需要更廣泛潛在結果的創意或假設性場景很有用。</p></li><li><p><strong>溫度</strong> (<code>LLMCapability.Temperature</code>): 允許調整模型回應的隨機性或創意程度。較高的溫度值會產生更多樣化的輸出，而較低的值會產生更集中且確定性的回應。</p></li><li><p><strong>工具</strong> (<code>LLMCapability.Tools</code>): 表示支援外部工具使用或整合。此功能讓模型執行特定工具或與外部系統互動。</p></li><li><p><strong>工具選擇</strong> (<code>LLMCapability.ToolChoice</code>): 配置工具呼叫與 LLM 的運作方式。根據模型，它可以配置為：</p><ul><li>自動在生成文本或工具呼叫之間選擇</li><li>僅生成工具呼叫，從不生成文本</li><li>僅生成文本，從不生成工具呼叫</li><li>強制呼叫定義工具中的特定工具</li></ul></li><li><p><strong>多重選擇</strong> (<code>LLMCapability.MultipleChoices</code>): 讓模型針對單一提示生成多個獨立的回覆選擇。</p></li></ul><h3 id="媒體處理功能" tabindex="-1">媒體處理功能 <a class="header-anchor" href="#媒體處理功能" aria-label="Permalink to &quot;媒體處理功能&quot;">​</a></h3><p>以下清單代表一套用於處理圖像或音訊等媒體內容的功能：</p><ul><li><p><strong>視覺</strong> (<code>LLMCapability.Vision</code>): 一個用於基於視覺的功能的類別，可處理、分析並推斷視覺資料中的見解。 支援以下類型的視覺資料：</p><ul><li><strong>圖像</strong> (<code>LLMCapability.Vision.Image</code>): 處理圖像相關的視覺任務，例如圖像分析、識別和解讀。</li><li><strong>視訊</strong> (<code>LLMCapability.Vision.Video</code>): 處理視訊資料，包括分析和理解視訊內容。</li></ul></li><li><p><strong>音訊</strong> (<code>LLMCapability.Audio</code>): 提供音訊相關功能，例如轉錄、音訊生成或基於音訊的互動。</p></li><li><p><strong>文件</strong> (<code>LLMCapability.Document</code>): 啟用對基於文件的輸入和輸出的處理。</p></li></ul><h3 id="文本處理功能" tabindex="-1">文本處理功能 <a class="header-anchor" href="#文本處理功能" aria-label="Permalink to &quot;文本處理功能&quot;">​</a></h3><p>以下功能清單代表文本生成和處理功能：</p><ul><li><p><strong>嵌入</strong> (<code>LLMCapability.Embed</code>): 讓模型從輸入文本生成向量嵌入，從而實現相似性比較、分群和其他基於向量的分析。</p></li><li><p><strong>完成</strong> (<code>LLMCapability.Completion</code>): 包括根據給定輸入上下文生成文本或內容，例如完成句子、生成建議或產生與輸入資料一致的內容。</p></li><li><p><strong>提示快取</strong> (<code>LLMCapability.PromptCaching</code>): 支援提示的快取功能，潛在地提高重複或相似查詢的效能。</p></li><li><p><strong>調節</strong> (<code>LLMCapability.Moderation</code>): 讓模型分析文本中潛在的有害內容，並根據騷擾、仇恨言論、自殘、性內容、暴力等各種類別進行分類。</p></li></ul><h3 id="結構描述功能" tabindex="-1">結構描述功能 <a class="header-anchor" href="#結構描述功能" aria-label="Permalink to &quot;結構描述功能&quot;">​</a></h3><p>以下清單指示與處理結構化資料相關的功能：</p><ul><li><strong>結構描述</strong> (<code>LLMCapability.Schema</code>): 一個用於結構化結構描述功能的類別，與使用特定格式的資料互動和編碼相關。 包含對以下格式的支援： <ul><li><strong>JSON</strong> (<code>LLMCapability.Schema.JSON</code>): JSON 結構描述支援，具有不同級別： <ul><li><strong>基本</strong> (<code>LLMCapability.Schema.JSON.Basic</code>): 提供輕量級或基本 JSON 處理功能。</li><li><strong>標準</strong> (<code>LLMCapability.Schema.JSON.Standard</code>): 提供全面的 JSON 結構描述支援，用於複雜資料結構。</li></ul></li></ul></li></ul><h2 id="建立模型-llmodel-配置" tabindex="-1">建立模型 (LLModel) 配置 <a class="header-anchor" href="#建立模型-llmodel-配置" aria-label="Permalink to &quot;建立模型 (LLModel) 配置&quot;">​</a></h2><p>若要以通用、供應商無關的方式定義模型，請建立 <code>LLModel</code> 類別的實例作為模型配置，並使用以下參數：</p><table tabindex="0"><thead><tr><th>名稱</th><th>資料類型</th><th>必要</th><th>預設</th><th>說明</th></tr></thead><tbody><tr><td><code>provider</code></td><td>LLMProvider</td><td>是</td><td></td><td>LLM 的供應商，例如 Google 或 OpenAI。這用於識別建立或託管模型的公司或組織。</td></tr><tr><td><code>id</code></td><td>String</td><td>是</td><td></td><td>LLM 實例的唯一識別符。這通常表示特定的模型版本或名稱。例如，<code>gpt-4-turbo</code>、<code>claude-3-opus</code>、<code>llama-3-2</code>。</td></tr><tr><td><code>capabilities</code></td><td>List&lt;LLMCapability&gt;</td><td>是</td><td></td><td>LLM 支援的功能清單，例如溫度調整、工具使用或基於結構描述的任務。這些功能定義了模型能做什麼以及如何配置它。</td></tr><tr><td><code>contextLength</code></td><td>Long</td><td>是</td><td></td><td>LLM 的上下文長度。這是 LLM 可處理的最大 Token 數。</td></tr><tr><td><code>maxOutputTokens</code></td><td>Long</td><td>否</td><td><code>null</code></td><td>供應商可為 LLM 生成的最大 Token 數。</td></tr></tbody></table><h3 id="範例" tabindex="-1">範例 <a class="header-anchor" href="#範例" aria-label="Permalink to &quot;範例&quot;">​</a></h3><p>本節提供了使用不同功能建立 <code>LLModel</code> 實例的詳細範例。</p><p>以下程式碼表示具有核心功能的基礎 LLM 配置：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.OpenAI,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt-4-turbo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Tools,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Schema.JSON.Standard</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 128_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>以下模型配置是一個具有視覺能力的多模態 LLM：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> visionModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.OpenAI,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt-4-vision&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Vision.Image,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.MultipleChoices</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1_047_576</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxOutputTokens </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32_768</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>一個具有音訊處理能力的 LLM：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> audioModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.Anthropic,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;claude-3-opus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Audio,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.PromptCaching</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>除了建立 <code>LLModel</code> 實例並必須指定所有相關參數之外，Koog 還包含預定義模型及其支援功能的配置集合。 若要使用預定義的 Ollama 模型，請如下指定：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metaModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OllamaModels.Meta.LLAMA_3_2</span></span></code></pre></div><p>若要檢查模型是否支援特定功能，請使用 <code>contains</code> 方法檢查 <code>capabilities</code> 清單中是否存在該功能：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Check if models support specific capabilities</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> supportsTools </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LLMCapability.Tools) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> supportsVideo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> visionModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LLMCapability.Vision.Video) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Check for schema capabilities</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsonCapability </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterIsInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LLMCapability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firstOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hasFullJsonSupport </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsonCapability </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMCapability.Schema.JSON.Standard </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h3 id="各模型支援的-llm-功能" tabindex="-1">各模型支援的 LLM 功能 <a class="header-anchor" href="#各模型支援的-llm-功能" aria-label="Permalink to &quot;各模型支援的 LLM 功能&quot;">​</a></h3><p>本參考資料顯示了不同供應商的每個模型支援哪些 LLM 功能。</p><p>在下表中：</p><ul><li><code>✓</code> 表示模型支援該功能</li><li><code>-</code> 表示模型不支援該功能</li><li>對於 JSON Schema，<code>Full</code> 或 <code>Simple</code> 表示模型支援的 JSON Schema 變體</li></ul><h4 id="google-模型" tabindex="-1">Google 模型 <a class="header-anchor" href="#google-模型" aria-label="Permalink to &quot;Google 模型&quot;">​</a></h4><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>完成</th><th>多重選擇</th><th>工具</th><th>工具選擇</th><th>視覺 (圖像)</th><th>視覺 (視訊)</th><th>音訊</th></tr></thead><tbody><tr><td>Gemini2_5Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_5Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0Flash001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0FlashLite</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0FlashLite001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5ProLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Pro002</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5FlashLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash002</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8B001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8BLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="openai-模型" tabindex="-1">OpenAI 模型 <a class="header-anchor" href="#openai-模型" aria-label="Permalink to &quot;OpenAI 模型&quot;">​</a></h4><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>完成</th><th>多重選擇</th><th>工具</th><th>工具選擇</th><th>視覺 (圖像)</th><th>視覺 (視訊)</th><th>音訊</th><th>推測</th><th>調節</th></tr></thead><tbody><tr><td>Reasoning.GPT4oMini</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O3Mini</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O1Mini</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O3</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O1</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Chat.GPT4o</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Chat.GPT4_1</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Audio.GPT4oMiniAudio</td><td>✓</td><td>-</td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td></tr><tr><td>Audio.GPT4oAudio</td><td>✓</td><td>-</td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td></tr><tr><td>Moderation.Omni</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr><tr><td>Moderation.Text</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr></tbody></table><h4 id="anthropic-模型" tabindex="-1">Anthropic 模型 <a class="header-anchor" href="#anthropic-模型" aria-label="Permalink to &quot;Anthropic 模型&quot;">​</a></h4><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>完成</th><th>工具</th><th>工具選擇</th><th>視覺 (圖像)</th></tr></thead><tbody><tr><td>Opus_4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_3_7</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Haiku_3_5</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_3_5</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Haiku_3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Opus_3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="ollama-模型" tabindex="-1">Ollama 模型 <a class="header-anchor" href="#ollama-模型" aria-label="Permalink to &quot;Ollama 模型&quot;">​</a></h4><h5 id="meta-模型" tabindex="-1">Meta 模型 <a class="header-anchor" href="#meta-模型" aria-label="Permalink to &quot;Meta 模型&quot;">​</a></h5><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>工具</th><th>調節</th></tr></thead><tbody><tr><td>LLAMA_3_2_3B</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_3_2</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_4</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_GUARD_3</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr></tbody></table><h5 id="阿里巴巴模型" tabindex="-1">阿里巴巴模型 <a class="header-anchor" href="#阿里巴巴模型" aria-label="Permalink to &quot;阿里巴巴模型&quot;">​</a></h5><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>工具</th></tr></thead><tbody><tr><td>QWEN_2_5_05B</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWEN_3_06B</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWQ</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWEN_CODER_2_5_32B</td><td>✓</td><td>Simple</td><td>✓</td></tr></tbody></table><h5 id="groq-模型" tabindex="-1">Groq 模型 <a class="header-anchor" href="#groq-模型" aria-label="Permalink to &quot;Groq 模型&quot;">​</a></h5><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>工具</th></tr></thead><tbody><tr><td>LLAMA_3_GROK_TOOL_USE_8B</td><td>✓</td><td>Full</td><td>✓</td></tr><tr><td>LLAMA_3_GROK_TOOL_USE_70B</td><td>✓</td><td>Full</td><td>✓</td></tr></tbody></table><h5 id="granite-模型" tabindex="-1">Granite 模型 <a class="header-anchor" href="#granite-模型" aria-label="Permalink to &quot;Granite 模型&quot;">​</a></h5><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>工具</th><th>視覺 (圖像)</th></tr></thead><tbody><tr><td>GRANITE_3_2_VISION</td><td>✓</td><td>Simple</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="openrouter-模型" tabindex="-1">OpenRouter 模型 <a class="header-anchor" href="#openrouter-模型" aria-label="Permalink to &quot;OpenRouter 模型&quot;">​</a></h4><table tabindex="0"><thead><tr><th>模型</th><th>溫度</th><th>JSON Schema</th><th>完成</th><th>推測</th><th>工具</th><th>工具選擇</th><th>視覺 (圖像)</th></tr></thead><tbody><tr><td>Phi4Reasoning</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Claude3Opus</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3Sonnet</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3Haiku</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>GPT4o</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT4Turbo</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT35Turbo</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Gemini15Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini15Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Llama3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Llama3Instruct</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Mistral7B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Mixtral8x7B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Claude3VisionSonnet</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3VisionOpus</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3VisionHaiku</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table>`,54)]))}const E=d(l,[["render",e]]);export{c as __pageData,E as default};
