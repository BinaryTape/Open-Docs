import{_ as h,a as r,b as o,c as d}from"./chunks/test-failed.BxM9HXpM.js";import{_ as E}from"./chunks/create-test.CrrH3ADr.js";import{_ as g,C as p,c,o as y,ag as k,j as s,a as i,G as t,w as l}from"./chunks/framework.Bksy39di.js";const D=JSON.parse('{"title":"使用 JUnit 在 JVM 中測試程式碼 – 教學","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/jvm-test-using-junit.md","filePath":"zh-Hant/kotlin/jvm-test-using-junit.md","lastUpdated":1754307826000}'),u={name:"zh-Hant/kotlin/jvm-test-using-junit.md"};function F(m,a,C,b,v,B){const n=p("tab"),e=p("tabs");return y(),c("div",null,[a[8]||(a[8]=k('<h1 id="使用-junit-在-jvm-中測試程式碼-–-教學" tabindex="-1">使用 JUnit 在 JVM 中測試程式碼 – 教學 <a class="header-anchor" href="#使用-junit-在-jvm-中測試程式碼-–-教學" aria-label="Permalink to &quot;使用 JUnit 在 JVM 中測試程式碼 – 教學&quot;">​</a></h1><p>本教學將向您展示如何在 Kotlin/JVM 專案中編寫一個簡單的單元測試，並使用 Gradle 建構工具執行它。</p><p>在此專案中，您將使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/index.html" target="_blank" rel="noreferrer"><code>kotlin.test</code></a> 函式庫，並使用 JUnit 執行測試。如果您正在開發多平台應用程式，請參閱 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-run-tests.html" target="_blank" rel="noreferrer">Kotlin 多平台教學</a>。</p><p>若要開始，請先下載並安裝最新版本的 <a href="https://www.jetbrains.com/idea/download/index.html" target="_blank" rel="noreferrer">IntelliJ IDEA</a>。</p><h2 id="新增依賴項" tabindex="-1">新增依賴項 <a class="header-anchor" href="#新增依賴項" aria-label="Permalink to &quot;新增依賴項&quot;">​</a></h2>',5)),s("ol",null,[a[7]||(a[7]=s("li",null,[s("p",null,[i("在 IntelliJ IDEA 中開啟 Kotlin 專案。如果您沒有專案，請"),s("a",{href:"https://www.jetbrains.com/help/idea/create-your-first-kotlin-app.html#create-project",target:"_blank",rel:"noreferrer"},"建立一個"),i("。")])],-1)),s("li",null,[a[2]||(a[2]=s("p",null,[i("開啟 "),s("code",null,"build.gradle(.kts)"),i(" 檔案並檢查 "),s("code",null,"testImplementation"),i(" 依賴項是否存在。此依賴項允許您使用 "),s("code",null,"kotlin.test"),i(" 和 "),s("code",null,"JUnit"),i("：")],-1)),t(e,{group:"build-script"},{default:l(()=>[t(n,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[0]||(a[0]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependencies"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 其他依賴項。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    testImplementation"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"test"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(n,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[1]||(a[1]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"dependencies {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Other dependencies.")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    testImplementation "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'org.jetbrains.kotlin:kotlin-test'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})]),s("li",null,[a[5]||(a[5]=s("p",null,[i("將 "),s("code",null,"test"),i(" 任務新增到 "),s("code",null,"build.gradle(.kts)"),i(" 檔案中：")],-1)),t(e,{group:"build-script"},{default:l(()=>[t(n,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[3]||(a[3]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"tasks."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"test"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    useJUnitPlatform"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(n,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[4]||(a[4]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"test {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    useJUnitPlatform()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[6]||(a[6]=s("div",{class:"note custom-block"},[s("p",{class:"custom-block-title"},"NOTE"),s("p",null,[i("如果您在建構腳本中使用 "),s("code",null,"useJUnitPlatform()"),i(" 函式， "),s("code",null,"kotlin-test"),i(" 函式庫會自動將 JUnit 5 作為依賴項包含進來。 此設定允許在僅限 JVM 的專案和 Kotlin 多平台 (KMP) 專案的 JVM 測試中存取所有 JUnit 5 API，以及 "),s("code",null,"kotlin-test"),i(" API。")])],-1))])]),a[9]||(a[9]=k(`<p>以下是 <code>build.gradle.kts</code> 的完整程式碼：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.10&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;org.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0-SNAPSHOT&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mavenCentral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    testImplementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    useJUnitPlatform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="新增要測試的程式碼" tabindex="-1">新增要測試的程式碼 <a class="header-anchor" href="#新增要測試的程式碼" aria-label="Permalink to &quot;新增要測試的程式碼&quot;">​</a></h2><ol><li><p>開啟 <code>src/main/kotlin</code> 中的 <code>Main.kt</code> 檔案。</p><p><code>src</code> 目錄包含 Kotlin 原始檔和資源。 <code>Main.kt</code> 檔案包含列印 <code>Hello, World!</code> 的範例程式碼。</p></li><li><p>建立包含 <code>sum()</code> 函式的 <code>Sample</code> 類別，該函式將兩個整數相加：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h2 id="建立測試" tabindex="-1">建立測試 <a class="header-anchor" href="#建立測試" aria-label="Permalink to &quot;建立測試&quot;">​</a></h2><ol><li><p>在 IntelliJ IDEA 中，為 <code>Sample</code> 類別選擇 <strong>Code</strong> | <strong>Generate</strong> | <strong>Test...</strong>：</p><p><img src="`+h+'" alt="Generate a test"></p></li><li><p>指定測試類別的名稱。例如，<code>SampleTest</code>：</p><p><img src="'+E+`" alt="Create a test"></p><p>IntelliJ IDEA 會在 <code>test</code> 目錄中建立 <code>SampleTest.kt</code> 檔案。 此目錄包含 Kotlin 測試原始檔和資源。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>您也可以在 <code>src/test/kotlin</code> 中手動為測試建立 <code>*.kt</code> 檔案。</p></div></li><li><p>在 <code>SampleTest.kt</code> 中為 <code>sum()</code> 函式新增測試程式碼：</p><ul><li>使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/-test/index.html" target="_blank" rel="noreferrer"><code>@Test</code> 註解</a> 定義 <code>testSum()</code> 測試函式。</li><li>透過使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/kotlin.test/assert-equals.html" target="_blank" rel="noreferrer"><code>assertEquals()</code></a> 函式，檢查 <code>sum()</code> 函式是否回傳預期值。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.example.Sample</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.junit.jupiter.api.Assertions.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlin.test.Test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SampleTest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> testSample: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Sample</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> testSum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        assertEquals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(expected, testSample.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h2 id="執行測試" tabindex="-1">執行測試 <a class="header-anchor" href="#執行測試" aria-label="Permalink to &quot;執行測試&quot;">​</a></h2><ol><li><p>使用邊欄圖示執行測試：</p><p><img src="`+r+'" alt="Run the test"></p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>您也可以透過命令列介面使用 <code>./gradlew check</code> 命令執行所有專案測試。</p></div></li><li><p>在 <strong>Run</strong> 工具視窗中檢查結果：</p><p><img src="'+o+`" alt="檢查測試結果。測試已成功通過"></p><p>測試函式已成功執行。</p></li><li><p>透過將 <code>expected</code> 變數的值更改為 43，確保測試正常運作：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> testSum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 43</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    assertEquals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(expected, classForTesting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>再次執行測試並檢查結果：</p><p><img src="`+d+'" alt="檢查測試結果。測試已失敗"></p><p>測試執行失敗。</p></li></ol><h2 id="接下來" tabindex="-1">接下來 <a class="header-anchor" href="#接下來" aria-label="Permalink to &quot;接下來&quot;">​</a></h2><p>完成第一個測試後，您可以：</p><ul><li>使用其他 <a href="https://kotlinlang.org/api/latest/kotlin.test/kotlin.test/" target="_blank" rel="noreferrer"><code>kotlin.test</code></a> 函式編寫更多測試。 例如，使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/kotlin.test/assert-not-equals.html" target="_blank" rel="noreferrer"><code>assertNotEquals()</code></a> 函式。</li><li>使用 <a href="/zh-Hant/kotlin/power-assert">Kotlin Power-assert 編譯器外掛程式</a>改進您的測試輸出。 該外掛程式以環境資訊豐富了測試輸出。</li><li>使用 Kotlin 和 Spring Boot <a href="/zh-Hant/kotlin/jvm-get-started-spring-boot">建立您的第一個伺服器端應用程式</a>。</li></ul>',11))])}const x=g(u,[["render",F]]);export{D as __pageData,x as default};
