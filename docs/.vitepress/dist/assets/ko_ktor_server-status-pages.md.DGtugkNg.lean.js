import{_ as c,C as n,c as y,o as F,G as a,j as i,ag as m,w as e,a as t}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-status-pages.md","filePath":"ko/ktor/server-status-pages.md","lastUpdated":1755457140000}'),v={name:"ko/ktor/server-status-pages.md"};function b(f,s,C,S,x,P){const k=n("TopicTitle"),h=n("show-structure"),d=n("primary-label"),r=n("Links"),u=n("tldr"),g=n("link-summary"),l=n("code-block"),p=n("TabItem"),o=n("Tabs"),E=n("list");return F(),y("div",null,[a(k,{labelRef:"server-plugin",title:"상태 페이지"}),a(h,{for:"chapter",depth:"2"}),a(d,{ref:"server-plugin"},null,512),a(u,null,{default:e(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"필수 종속성"),t(": "),i("code",null,"io.ktor:ktor-server-status-pages")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"코드 예시"),t(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/status-pages"}," status-pages ")],-1)),i("p",null,[i("b",null,[a(r,{href:"/ktor/server-native",summary:"Ktor는 Kotlin/Native를 지원하며 추가 런타임이나 가상 머신 없이 서버를 실행할 수 있게 합니다."},{default:e(()=>s[0]||(s[0]=[t("네이티브 서버")])),_:1}),s[1]||(s[1]=t(" 지원"))]),s[2]||(s[2]=t(": ✅ "))])]),_:1}),a(g,null,{default:e(()=>s[5]||(s[5]=[t(" StatusPages는 Ktor 애플리케이션이 발생한 예외 또는 상태 코드에 따라 모든 실패 상태에 적절하게 응답하도록 허용합니다. ")])),_:1}),s[17]||(s[17]=i("p",null,[i("a",{href:"https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-status-pages/io.ktor.server.plugins.statuspages/-status-pages.html",target:"_blank",rel:"noreferrer"},"StatusPages"),t(" 플러그인은 Ktor 애플리케이션이 발생한 예외 또는 상태 코드에 따라 모든 실패 상태에 적절하게 "),i("a",{href:"./server-responses"},"응답"),t("하도록 허용합니다.")],-1)),s[18]||(s[18]=i("h2",{id:"add_dependencies",tabindex:"-1"},[t("종속성 추가 "),i("a",{class:"header-anchor",href:"#add_dependencies","aria-label":'Permalink to "종속성 추가 {id="add_dependencies"}"'},"​")],-1)),s[19]||(s[19]=i("p",null,[i("code",null,"StatusPages"),t("를 사용하려면 "),i("code",null,"ktor-server-status-pages"),t(" 아티팩트를 빌드 스크립트에 포함해야 합니다: ")],-1)),a(o,{group:"languages"},{default:e(()=>[a(p,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:e(()=>[a(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-status-pages:$ktor_version")'})]),_:1}),a(p,{title:"Gradle (Groovy)","group-key":"groovy"},{default:e(()=>[a(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-status-pages:$ktor_version"'})]),_:1}),a(p,{title:"Maven","group-key":"maven"},{default:e(()=>[a(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-status-pages-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[20]||(s[20]=i("h2",{id:"install_plugin",tabindex:"-1"},[t("StatusPages 설치 "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "StatusPages 설치 {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[7]||(s[7]=i("code",null,"StatusPages",-1)),s[8]||(s[8]=t(" 플러그인을 애플리케이션에 ")),s[9]||(s[9]=i("a",{href:"#install"},"설치",-1)),s[10]||(s[10]=t("하려면, 지정된 ")),a(r,{href:"/ktor/server-modules",summary:"모듈을 사용하면 라우트를 그룹화하여 애플리케이션을 구조화할 수 있습니다."},{default:e(()=>s[6]||(s[6]=[t("모듈")])),_:1}),s[11]||(s[11]=t("의 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=t(" 함수에 전달하세요. 아래 코드 스니펫은 ")),s[14]||(s[14]=i("code",null,"StatusPages",-1)),s[15]||(s[15]=t("을 설치하는 방법을 보여줍니다... "))]),a(E,null,{default:e(()=>s[16]||(s[16]=[i("li",null,[t(" ... "),i("code",null,"embeddedServer"),t(" 함수 호출 내부. ")],-1),i("li",null,[t(" ... "),i("code",null,"Application"),t(" 클래스의 확장 함수인 명시적으로 정의된 "),i("code",null,"module"),t(" 내부. ")],-1)])),_:1}),a(o,null,{default:e(()=>[a(p,{title:"embeddedServer"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.plugins.statuspages.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(StatusPages)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),a(p,{title:"module"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.plugins.statuspages.*
            // ...
            fun Application.module() {
                install(StatusPages)
                // ...
            }`})]),_:1})]),_:1}),s[21]||(s[21]=m("",16))])}const T=c(v,[["render",b]]);export{B as __pageData,T as default};
