import{_ as v,C as n,c as K,o as w,G as r,w as e,j as s,a as o}from"./chunks/framework.Bksy39di.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{"aside":false},"headers":[],"relativePath":"ko/ktor/welcome.md","filePath":"ko/ktor/welcome.md","lastUpdated":1755457140000}'),S={name:"ko/ktor/welcome.md"};function T(M,t,R,A,P,b){const d=n("description"),u=n("card"),a=n("spotlight"),k=n("primary"),l=n("Links"),m=n("group"),f=n("links"),i=n("cards"),p=n("misc"),y=n("section-starting-page"),g=n("topic");return w(),K("div",null,[r(g,{"xsi:noNamespaceSchemaLocation":"https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd","xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance",title:"환영합니다",id:"welcome"},{default:e(()=>[r(y,null,{default:e(()=>[t[76]||(t[76]=s("title",null,"Ktor 문서",-1)),r(d,null,{default:e(()=>t[0]||(t[0]=[o(" Ktor는 비동기 서버 측 및 클라이언트 측 애플리케이션을 쉽게 구축하기 위한 프레임워크입니다. ")])),_:1}),r(a,null,{default:e(()=>[r(u,{href:"/ktor/server-create-a-new-project",summary:"Ktor로 서버 애플리케이션을 생성, 실행 및 테스트하는 방법을 알아보세요."},{default:e(()=>t[1]||(t[1]=[o(" Ktor 서버 시작하기 ")])),_:1}),r(u,{href:"/ktor/client-create-new-application",summary:"Ktor로 클라이언트 애플리케이션을 생성, 실행 및 테스트하는 방법을 알아보세요."},{default:e(()=>t[2]||(t[2]=[o(" Ktor 클라이언트 시작하기 ")])),_:1})]),_:1}),r(k,null,{default:e(()=>[t[8]||(t[8]=s("title",null,"Ktor 서버",-1)),r(u,{href:"/ktor/server-requests-and-responses",summary:"Task Manager 애플리케이션을 생성하여 Ktor에서 라우팅과 요청이 어떻게 작동하는지 알아보세요."},{default:e(()=>t[3]||(t[3]=[o(" 요청 처리 및 응답 생성 ")])),_:1}),r(u,{href:"/ktor/server-create-restful-apis",summary:"Ktor로 RESTful API를 구축하는 방법을 알아보세요. 이 튜토리얼은 실제 예제를 통해 설정, 라우팅 및 테스트를 다룹니다."},{default:e(()=>t[4]||(t[4]=[o("RESTful API 생성")])),_:1}),r(u,{href:"/ktor/server-create-website",summary:"Ktor와 Thymeleaf 템플릿을 사용하여 Kotlin으로 웹사이트를 구축하는 방법을 알아보세요."},{default:e(()=>t[5]||(t[5]=[o("웹사이트 생성")])),_:1}),r(u,{href:"/ktor/server-create-websocket-application",summary:"웹소켓의 기능을 활용하여 콘텐츠를 송수신하는 방법을 알아보세요."},{default:e(()=>t[6]||(t[6]=[o(" WebSocket 애플리케이션 생성 ")])),_:1}),r(u,{href:"/ktor/server-integrate-database",summary:"Exposed SQL 라이브러리를 사용하여 Ktor 서비스를 데이터베이스 저장소에 연결하는 과정을 알아보세요."},{default:e(()=>t[7]||(t[7]=[o("데이터베이스 통합")])),_:1})]),_:1}),r(p,null,{default:e(()=>[r(f,{narrow:"true"},{default:e(()=>[r(m,null,{default:e(()=>[t[15]||(t[15]=s("title",null,"서버 구성",-1)),r(l,{href:"/ktor/server-create-a-new-project",summary:"Ktor로 서버 애플리케이션을 열고, 실행하고, 테스트하는 방법을 알아보세요."},{default:e(()=>t[9]||(t[9]=[o("새 Ktor 프로젝트 생성, 열기 및 실행")])),_:1}),r(l,{href:"/ktor/server-dependencies",summary:"기존 Gradle/Maven 프로젝트에 Ktor 서버 종속성을 추가하는 방법을 알아보세요."},{default:e(()=>t[10]||(t[10]=[o("서버 종속성 추가")])),_:1}),r(l,{href:"/ktor/server-create-and-configure",summary:"애플리케이션 배포 요구사항에 따라 서버를 생성하는 방법을 알아보세요."},{default:e(()=>t[11]||(t[11]=[o("서버 생성")])),_:1}),r(l,{href:"/ktor/server-configuration-code",summary:"코드에서 다양한 서버 파라미터를 구성하는 방법을 알아보세요."},{default:e(()=>t[12]||(t[12]=[o("코드 구성")])),_:1}),r(l,{href:"/ktor/server-configuration-file",summary:"구성 파일에서 다양한 서버 파라미터를 구성하는 방법을 알아보세요."},{default:e(()=>t[13]||(t[13]=[o("파일 구성")])),_:1}),r(l,{href:"/ktor/server-plugins",summary:"플러그인은 직렬화, 콘텐츠 인코딩, 압축 등과 같은 공통 기능을 제공합니다."},{default:e(()=>t[14]||(t[14]=[o("서버 플러그인")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[22]||(t[22]=s("title",null,"라우팅",-1)),r(l,{href:"/ktor/server-routing",summary:"라우팅은 서버 애플리케이션에서 수신 요청을 처리하는 핵심 플러그인입니다."},{default:e(()=>t[16]||(t[16]=[o("라우팅")])),_:1}),r(l,{href:"/ktor/server-resources",summary:"Resources 플러그인을 사용하면 타입 안전 라우팅을 구현할 수 있습니다."},{default:e(()=>t[17]||(t[17]=[o("타입 안전 라우팅")])),_:1}),r(l,{href:"/ktor/server-application-structure",summary:"애플리케이션이 성장함에 따라 유지보수할 수 있도록 애플리케이션을 구조화하는 방법을 알아보세요."},{default:e(()=>t[18]||(t[18]=[o("애플리케이션 구조")])),_:1}),r(l,{href:"/ktor/server-requests",summary:"경로 핸들러 내에서 수신 요청을 처리하는 방법을 알아보세요."},{default:e(()=>t[19]||(t[19]=[o("요청 처리")])),_:1}),r(l,{href:"/ktor/server-responses",summary:"다양한 유형의 응답을 보내는 방법을 알아보세요."},{default:e(()=>t[20]||(t[20]=[o("응답 전송")])),_:1}),r(l,{href:"/ktor/server-static-content",summary:"스타일시트, 스크립트, 이미지 등과 같은 정적 콘텐츠를 제공하는 방법을 알아보세요."},{default:e(()=>t[21]||(t[21]=[o("정적 콘텐츠 제공")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[32]||(t[32]=s("title",null,"플러그인",-1)),r(l,{href:"/ktor/server-serialization",summary:"ContentNegotiation 플러그인은 클라이언트와 서버 간 미디어 타입 협상 및 특정 형식으로 콘텐츠 직렬화/역직렬화라는 두 가지 주요 목적을 제공합니다."},{default:e(()=>t[23]||(t[23]=[o("Ktor 서버의 콘텐츠 협상 및 직렬화")])),_:1}),r(l,{href:"/ktor/server-templating",summary:"HTML/CSS 또는 JVM 템플릿 엔진으로 구축된 뷰를 사용하는 방법을 알아보세요."},{default:e(()=>t[24]||(t[24]=[o("템플릿")])),_:1}),r(l,{href:"/ktor/server-auth",summary:"Authentication 플러그인은 Ktor에서 인증 및 권한 부여를 처리합니다."},{default:e(()=>t[25]||(t[25]=[o("Ktor 서버의 인증 및 권한 부여")])),_:1}),r(l,{href:"/ktor/server-sessions",summary:"Sessions 플러그인은 다른 HTTP 요청 간에 데이터를 유지하는 메커니즘을 제공합니다."},{default:e(()=>t[26]||(t[26]=[o("세션")])),_:1}),r(l,{href:"/ktor/server-websockets",summary:"Websockets 플러그인을 사용하면 서버와 클라이언트 간의 다방향 통신 세션을 생성할 수 있습니다."},{default:e(()=>t[27]||(t[27]=[o("Ktor 서버의 웹소켓")])),_:1}),r(l,{href:"/ktor/server-server-sent-events",summary:"SSE 플러그인을 사용하면 서버가 HTTP 연결을 통해 클라이언트에 이벤트 기반 업데이트를 보낼 수 있습니다."},{default:e(()=>t[28]||(t[28]=[o("Ktor 서버의 서버 센트 이벤트")])),_:1}),r(l,{href:"/ktor/server-swagger-ui",summary:"SwaggerUI 플러그인을 사용하면 프로젝트에 대한 Swagger UI를 생성할 수 있습니다."},{default:e(()=>t[29]||(t[29]=[o("Swagger UI")])),_:1}),t[33]||(t[33]=o(" / ")),r(l,{href:"/ktor/server-openapi",summary:"OpenAPI 플러그인을 사용하면 프로젝트에 대한 OpenAPI 문서를 생성할 수 있습니다."},{default:e(()=>t[30]||(t[30]=[o("OpenAPI")])),_:1}),r(l,{href:"/ktor/server-custom-plugins",summary:"자신만의 사용자 지정 플러그인을 생성하는 방법을 알아보세요."},{default:e(()=>t[31]||(t[31]=[o("사용자 지정 서버 플러그인")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[37]||(t[37]=s("title",null,"실행, 디버그 및 테스트",-1)),r(l,{href:"/ktor/server-run",summary:"서버 Ktor 애플리케이션을 실행하는 방법을 알아보세요."},{default:e(()=>t[34]||(t[34]=[o("실행")])),_:1}),r(l,{href:"/ktor/server-auto-reload",summary:"코드 변경 시 애플리케이션 클래스를 다시 로드하는 Auto-reload를 사용하는 방법을 알아보세요."},{default:e(()=>t[35]||(t[35]=[o("자동 재로드")])),_:1}),r(l,{href:"/ktor/server-testing",summary:"특수 테스트 엔진을 사용하여 서버 애플리케이션을 테스트하는 방법을 알아보세요."},{default:e(()=>t[36]||(t[36]=[o("Ktor 서버 테스트")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[44]||(t[44]=s("title",null,"배포",-1)),r(l,{href:"/ktor/server-fatjar",summary:"Ktor Gradle 플러그인을 사용하여 실행 가능한 Fat JAR를 생성하고 실행하는 방법을 알아보세요."},{default:e(()=>t[38]||(t[38]=[o("Fat JAR 생성")])),_:1}),r(l,{href:"/ktor/server-war",summary:"WAR 아카이브를 사용하여 서블릿 컨테이너 내에서 Ktor 애플리케이션을 실행하고 배포하는 방법을 알아보세요."},{default:e(()=>t[39]||(t[39]=[o("WAR")])),_:1}),r(l,{href:"/ktor/graalvm",summary:"다양한 플랫폼에서 네이티브 이미지에 GraalVM을 사용하는 방법을 알아보세요."},{default:e(()=>t[40]||(t[40]=[o("GraalVM")])),_:1}),r(l,{href:"/ktor/docker",summary:"애플리케이션을 Docker 컨테이너에 배포하는 방법을 알아보세요."},{default:e(()=>t[41]||(t[41]=[o("Docker")])),_:1}),r(l,{href:"/ktor/google-app-engine",summary:"Google App Engine 표준 환경에 프로젝트를 배포하는 방법을 알아보세요."},{default:e(()=>t[42]||(t[42]=[o("Google App Engine")])),_:1}),r(l,{href:"/ktor/heroku",summary:"Ktor 애플리케이션을 Heroku에 준비하고 배포하는 방법을 알아보세요."},{default:e(()=>t[43]||(t[43]=[o("Heroku")])),_:1})]),_:1})]),_:1}),r(i,null,{default:e(()=>[t[47]||(t[47]=s("title",null,"Ktor 클라이언트",-1)),r(u,{href:"/ktor/client-create-new-application",summary:"Ktor로 클라이언트 애플리케이션을 생성합니다."},{default:e(()=>t[45]||(t[45]=[o(" 클라이언트 애플리케이션 생성 ")])),_:1}),r(u,{href:"/ktor/client-create-multiplatform-application",summary:"Kotlin Multiplatform Mobile 애플리케이션을 생성하고 Ktor 클라이언트로 요청을 보내고 응답을 받는 방법을 알아보세요."},{default:e(()=>t[46]||(t[46]=[o(" 크로스 플랫폼 모바일 애플리케이션 생성 ")])),_:1})]),_:1}),r(f,{narrow:"true"},{default:e(()=>[r(m,null,{default:e(()=>[t[53]||(t[53]=s("title",null,"클라이언트 설정",-1)),r(l,{href:"/ktor/client-create-new-application",summary:"요청을 보내고 응답을 받는 첫 번째 클라이언트 애플리케이션을 생성하세요."},{default:e(()=>t[48]||(t[48]=[o("클라이언트 애플리케이션 생성")])),_:1}),r(l,{href:"/ktor/client-dependencies",summary:"기존 프로젝트에 클라이언트 종속성을 추가하는 방법을 알아보세요."},{default:e(()=>t[49]||(t[49]=[o("클라이언트 종속성 추가")])),_:1}),r(l,{href:"/ktor/client-create-and-configure",summary:"Ktor 클라이언트를 생성하고 구성하는 방법을 알아보세요."},{default:e(()=>t[50]||(t[50]=[o("클라이언트 생성 및 구성")])),_:1}),r(l,{href:"/ktor/client-engines",summary:"네트워크 요청을 처리하는 엔진에 대해 알아보세요."},{default:e(()=>t[51]||(t[51]=[o("클라이언트 엔진")])),_:1}),r(l,{href:"/ktor/client-plugins",summary:"로깅, 직렬화, 권한 부여 등과 같은 공통 기능을 제공하는 플러그인에 대해 알아보세요."},{default:e(()=>t[52]||(t[52]=[o("클라이언트 플러그인")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[58]||(t[58]=s("title",null,"요청",-1)),r(l,{href:"/ktor/client-requests",summary:"요청을 만들고 요청 URL, HTTP 메서드, 헤더 및 요청 본문과 같은 다양한 요청 파라미터를 지정하는 방법을 알아보세요."},{default:e(()=>t[54]||(t[54]=[o("요청 만들기")])),_:1}),r(l,{href:"/ktor/client-resources",summary:"Resources 플러그인을 사용하여 타입 안전 요청을 만드는 방법을 알아보세요."},{default:e(()=>t[55]||(t[55]=[o("타입 안전 요청")])),_:1}),r(l,{href:"/ktor/client-default-request",summary:"DefaultRequest 플러그인을 사용하면 모든 요청에 대한 기본 파라미터를 구성할 수 있습니다."},{default:e(()=>t[56]||(t[56]=[o("기본 요청")])),_:1}),r(l,{href:"/ktor/client-request-retry",summary:"HttpRequestRetry 플러그인을 사용하면 실패한 요청에 대한 재시도 정책을 구성할 수 있습니다."},{default:e(()=>t[57]||(t[57]=[o("실패한 요청 재시도")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[61]||(t[61]=s("title",null,"응답",-1)),r(l,{href:"/ktor/client-responses",summary:"응답을 받고, 응답 본문을 얻고, 응답 파라미터를 가져오는 방법을 알아보세요."},{default:e(()=>t[59]||(t[59]=[o("응답 받기")])),_:1}),r(l,{href:"/ktor/client-response-validation",summary:"응답의 상태 코드에 따라 응답을 유효성 검사하는 방법을 알아보세요."},{default:e(()=>t[60]||(t[60]=[o("응답 유효성 검사")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[70]||(t[70]=s("title",null,"플러그인",-1)),r(l,{href:"/ktor/client-auth",summary:"Auth 플러그인은 클라이언트 애플리케이션에서 인증 및 권한 부여를 처리합니다."},{default:e(()=>t[62]||(t[62]=[o("Ktor 클라이언트의 인증 및 권한 부여")])),_:1}),r(l,{href:"/ktor/client-cookies",summary:"HttpCookies 플러그인은 쿠키를 자동으로 처리하고 저장소에서 호출 간에 유지합니다."},{default:e(()=>t[63]||(t[63]=[o("쿠키")])),_:1}),r(l,{href:"/ktor/client-content-encoding",summary:"ContentEncoding 플러그인을 사용하면 지정된 압축 알고리즘('gzip', 'deflate' 등)을 활성화하고 설정을 구성할 수 있습니다."},{default:e(()=>t[64]||(t[64]=[o("콘텐츠 인코딩")])),_:1}),r(l,{href:"/ktor/client-bom-remover",summary:"BOMRemover 플러그인을 사용하면 응답 본문에서 Byte Order Mark (BOM)을 제거할 수 있습니다."},{default:e(()=>t[65]||(t[65]=[o("BOM 제거")])),_:1}),r(l,{href:"/ktor/client-caching",summary:"HttpCache 플러그인을 사용하면 이전에 가져온 리소스를 인메모리 또는 영구 캐시에 저장할 수 있습니다."},{default:e(()=>t[66]||(t[66]=[o("캐싱")])),_:1}),r(l,{href:"/ktor/client-websockets",summary:"Websockets 플러그인을 사용하면 서버와 클라이언트 간의 다방향 통신 세션을 생성할 수 있습니다."},{default:e(()=>t[67]||(t[67]=[o("Ktor 클라이언트의 웹소켓")])),_:1}),r(l,{href:"/ktor/client-server-sent-events",summary:"SSE 플러그인을 사용하면 클라이언트가 HTTP 연결을 통해 서버로부터 이벤트 기반 업데이트를 받을 수 있습니다."},{default:e(()=>t[68]||(t[68]=[o("Ktor 클라이언트의 서버 센트 이벤트")])),_:1}),r(l,{href:"/ktor/client-custom-plugins",summary:"자신만의 사용자 지정 클라이언트 플러그인을 생성하는 방법을 알아보세요."},{default:e(()=>t[69]||(t[69]=[o("사용자 지정 클라이언트 플러그인")])),_:1})]),_:1}),r(m,null,{default:e(()=>[t[72]||(t[72]=s("title",null,"테스트",-1)),r(l,{href:"/ktor/client-testing",summary:"MockEngine을 사용하여 HTTP 호출을 시뮬레이션함으로써 클라이언트를 테스트하는 방법을 알아보세요."},{default:e(()=>t[71]||(t[71]=[o("Ktor 클라이언트 테스트")])),_:1})]),_:1})]),_:1}),r(i,null,{default:e(()=>[t[75]||(t[75]=s("title",null,"통합",-1)),r(u,{href:"/ktor//ktor/full-stack-development-with-kotlin-multiplatform",summary:"Kotlin과 Ktor로 크로스 플랫폼 풀 스택 애플리케이션을 개발하는 방법을 알아보세요."},{default:e(()=>t[73]||(t[73]=[o("Kotlin Multiplatform으로 풀 스택 애플리케이션 구축")])),_:1}),r(u,{href:"/ktor//ktor/tutorial-first-steps-with-kotlin-rpc",summary:"Kotlin RPC와 Ktor로 첫 번째 애플리케이션을 생성하는 방법을 알아보세요."},{default:e(()=>t[74]||(t[74]=[o("Kotlin RPC의 첫 단계")])),_:1})]),_:1})]),_:1})]),_:1})]),_:1})])}const C=v(S,[["render",T]]);export{x as __pageData,C as default};
