import{_ as E,C as n,c as u,o as y,G as s,ag as p,j as t,w as a,a as e}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/client-content-encoding.md","filePath":"ktor/client-content-encoding.md","lastUpdated":1755457140000}'),F={name:"ktor/client-content-encoding.md"};function _(C,i,m,b,f,B){const k=n("TopicTitle"),h=n("primary-label"),r=n("tldr"),d=n("link-summary"),l=n("code-block"),o=n("TabItem"),c=n("Tabs"),g=n("Links");return y(),u("div",null,[s(k,{labelRef:"client-plugin",title:"内容编码"}),s(h,{ref:"client-plugin"},null,512),s(r,null,{default:a(()=>i[0]||(i[0]=[t("p",null,[t("b",null,"所需依赖项"),e(": "),t("code",null,"io.ktor:ktor-client-encoding")],-1),t("p",null,[t("b",null,"代码示例"),e(": "),t("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-content-encoding"}," client-content-encoding ")],-1)])),_:1}),s(d,null,{default:a(()=>i[1]||(i[1]=[e(" ContentEncoding 插件允许你启用指定的压缩算法（例如 'gzip' 和 'deflate'）并配置其设置。 ")])),_:1}),i[5]||(i[5]=p("",4)),s(c,{group:"languages"},{default:a(()=>[s(o,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[s(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-client-encoding:$ktor_version")'})]),_:1}),s(o,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[s(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-client-encoding:$ktor_version"'})]),_:1}),s(o,{title:"Maven","group-key":"maven"},{default:a(()=>[s(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-client-encoding-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),t("p",null,[i[3]||(i[3]=e(" 你可以从 ")),s(g,{href:"/ktor/client-dependencies",summary:"了解如何将客户端依赖项添加到现有项目中。"},{default:a(()=>i[2]||(i[2]=[e("添加客户端依赖项")])),_:1}),i[4]||(i[4]=e(" 中了解更多关于 Ktor 客户端所需 artifact 的信息。 "))]),i[6]||(i[6]=p("",10))])}const A=E(F,[["render",_]]);export{q as __pageData,A as default};
