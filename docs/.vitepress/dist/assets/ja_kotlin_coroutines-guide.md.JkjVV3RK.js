import{_ as o,c as a,o as i,ag as t}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"コルーチンガイド","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/coroutines-guide.md","filePath":"ja/kotlin/coroutines-guide.md","lastUpdated":1754307826000}'),r={name:"ja/kotlin/coroutines-guide.md"};function l(n,e,c,s,d,u){return i(),a("div",null,e[0]||(e[0]=[t('<h1 id="コルーチンガイド" tabindex="-1">コルーチンガイド <a class="header-anchor" href="#コルーチンガイド" aria-label="Permalink to &quot;コルーチンガイド&quot;">​</a></h1><p>Kotlinは、他のライブラリがコルーチンを利用できるように、標準ライブラリには最小限の低レベルAPIしか提供していません。同様の機能を備えた他の多くの言語とは異なり、<code>async</code>や<code>await</code>はKotlinではキーワードではなく、標準ライブラリの一部でもありません。さらに、Kotlinの_サスペンド関数_の概念は、Future (フューチャー) やPromise (プロミス) よりも、非同期処理に対してより安全でエラーになりにくい抽象化を提供します。</p><p><code>kotlinx.coroutines</code>は、JetBrainsによって開発されたコルーチンのための豊富なライブラリです。このガイドで取り上げる、<code>launch</code>や<code>async</code>などの高レベルなコルーチン対応プリミティブを多数含んでいます。</p><p>これは、<code>kotlinx.coroutines</code>の主要な機能について、一連の例を交え、さまざまなトピックに分けて解説するガイドです。</p><p>コルーチンを使用し、このガイドの例に沿って進めるには、<a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/README.md#using-in-your-projects" target="_blank" rel="noreferrer">プロジェクトのREADME</a>で説明されているように、<code>kotlinx-coroutines-core</code>モジュールへの依存関係を追加する必要があります。</p><h2 id="目次" tabindex="-1">目次 <a class="header-anchor" href="#目次" aria-label="Permalink to &quot;目次&quot;">​</a></h2><ul><li><a href="/ja/kotlin/coroutines-basics">コルーチンの基本</a></li><li><a href="/ja/kotlin/coroutines-and-channels">チュートリアル: コルーチンとチャネルの概要</a></li><li><a href="/ja/kotlin/cancellation-and-timeouts">キャンセルとタイムアウト</a></li><li><a href="/ja/kotlin/composing-suspending-functions">サスペンド関数の構成</a></li><li><a href="/ja/kotlin/coroutine-context-and-dispatchers">コルーチンコンテキストとディスパッチャ</a></li><li><a href="/ja/kotlin/flow">非同期Flow</a></li><li><a href="/ja/kotlin/channels">チャネル</a></li><li><a href="/ja/kotlin/exception-handling">コルーチンの例外処理</a></li><li><a href="/ja/kotlin/shared-mutable-state-and-concurrency">共有可能なミュータブルな状態と並行処理</a></li><li><a href="/ja/kotlin/select-expression">Select式 (実験的)</a></li><li><a href="/ja/kotlin/debug-coroutines-with-idea">チュートリアル: IntelliJ IDEA を使用したコルーチンのデバッグ</a></li><li><a href="/ja/kotlin/debug-flow-with-idea">チュートリアル: IntelliJ IDEA を使用したKotlin Flowのデバッグ</a></li></ul><h2 id="その他の参考資料" tabindex="-1">その他の参考資料 <a class="header-anchor" href="#その他の参考資料" aria-label="Permalink to &quot;その他の参考資料&quot;">​</a></h2><ul><li><a href="https://github.com/Kotlin/kotlinx.coroutines/blob/master/ui/coroutines-guide-ui.md" target="_blank" rel="noreferrer">コルーチンを使ったUIプログラミングガイド</a></li><li><a href="https://github.com/Kotlin/KEEP/blob/master/proposals/coroutines.md" target="_blank" rel="noreferrer">コルーチンの設計ドキュメント (KEEP)</a></li><li><a href="https://kotlinlang.org/api/kotlinx.coroutines/" target="_blank" rel="noreferrer">kotlinx.coroutines APIリファレンス</a></li><li><a href="https://developer.android.com/kotlin/coroutines/coroutines-best-practices" target="_blank" rel="noreferrer">Androidにおけるコルーチンのベストプラクティス</a></li><li><a href="https://developer.android.com/kotlin/coroutines/additional-resources" target="_blank" rel="noreferrer">KotlinコルーチンとFlowに関する追加のAndroidリソース</a></li></ul>',9)]))}const p=o(r,[["render",l]]);export{f as __pageData,p as default};
