import{_ as p,a as d,b as o}from"./chunks/manual-hierarchical-structure.BFgQV1II.js";import{_ as r,C as k,c as E,o as c,ag as t,G as l,j as i,w as n,a as s}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"階層型プロジェクト構造","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/multiplatform-hierarchy.md","filePath":"ja/kmp/multiplatform-hierarchy.md","lastUpdated":1755516278000}'),g={name:"ja/kmp/multiplatform-hierarchy.md"};function y(u,a,m,F,A,v){const e=k("TabItem"),h=k("Tabs");return c(),E("div",null,[a[12]||(a[12]=t('<h1 id="階層型プロジェクト構造" tabindex="-1">階層型プロジェクト構造 <a class="header-anchor" href="#階層型プロジェクト構造" aria-label="Permalink to &quot;階層型プロジェクト構造&quot;">​</a></h1><p>Kotlinマルチプラットフォームプロジェクトは、階層的なソースセット構造をサポートしています。 これにより、一部の<a href="./multiplatform-dsl-reference#targets">サポートされているターゲット</a>間で共通コードを共有するための中間ソースセットの階層を構成できます。中間ソースセットを使用すると、以下のことが可能になります。</p><ul><li>特定のターゲット向けのAPIを提供する。例えば、ライブラリはKotlin/Nativeターゲット向けの中間ソースセットでネイティブ固有のAPIを追加できますが、Kotlin/JVM向けには追加しません。</li><li>特定のターゲット向けのAPIを利用する。例えば、中間ソースセットを形成する一部のターゲットにKotlinマルチプラットフォームライブラリが提供する豊富なAPIから恩恵を受けることができます。</li><li>プロジェクトでプラットフォーム依存のライブラリを使用する。例えば、中間iOSソースセットからiOS固有の依存関係にアクセスできます。</li></ul><p>Kotlinツールチェーンは、各ソースセットが、そのソースセットがコンパイルされるすべてのターゲットで利用可能なAPIのみにアクセスできるようにします。これにより、Windows固有のAPIを使用してからmacOSにコンパイルするといった、リンケージエラーや実行時の未定義の動作につながるケースを防ぎます。</p><p>ソースセットの階層を設定する推奨される方法は、<a href="#default-hierarchy-template">デフォルト階層テンプレート</a>を使用することです。 このテンプレートは、最も一般的なケースをカバーしています。より高度なプロジェクトの場合は、<a href="#manual-configuration">手動で設定</a>できます。 これはより低レベルなアプローチであり、より柔軟ですが、より多くの労力と知識を必要とします。</p><h2 id="デフォルト階層テンプレート" tabindex="-1">デフォルト階層テンプレート <a class="header-anchor" href="#デフォルト階層テンプレート" aria-label="Permalink to &quot;デフォルト階層テンプレート&quot;">​</a></h2><p>Kotlin Gradleプラグインには、ビルトインのデフォルト<a href="#see-the-full-hierarchy-template">階層テンプレート</a>が用意されています。 これには、いくつかの一般的なユースケース向けの事前定義された中間ソースセットが含まれています。 プラグインは、プロジェクトで指定されたターゲットに基づいて、これらのソースセットを自動的に設定します。</p><p>共有コードを含むプロジェクトのモジュールにある次の<code>build.gradle(.kts)</code>ファイルを検討してください。</p>',8)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[0]||(a[0]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    androidTarget"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosSimulatorArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[1]||(a[1]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    androidTarget()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosSimulatorArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[13]||(a[13]=t('<p>コードで<code>androidTarget</code>、<code>iosArm64</code>、<code>iosSimulatorArm64</code>ターゲットを宣言すると、Kotlin Gradleプラグインはテンプレートから適切な共有ソースセットを見つけ、それらを作成します。結果の階層は次のようになります。</p><p><img src="'+p+'" alt="An example of using the default hierarchy template"></p><p>色付きのソースセットは実際に作成されプロジェクトに存在しますが、デフォルトテンプレートからの灰色のソースセットは無視されます。例えば、Kotlin Gradleプラグインは、プロジェクトにwatchOSターゲットがないため、<code>watchos</code>ソースセットを作成しませんでした。</p><p><code>watchosArm64</code>のようなwatchOSターゲットを追加すると、<code>watchos</code>ソースセットが作成され、<code>apple</code>、<code>native</code>、および<code>common</code>ソースセットからのコードも<code>watchosArm64</code>にコンパイルされます。</p><p>Kotlin Gradleプラグインは、デフォルト階層テンプレートのすべてのソースセットに対して型安全な静的アクセサを提供しているため、<a href="#manual-configuration">手動設定</a>と比較して<code>by getting</code>や<code>by creating</code>のような構成を使用せずに参照できます。</p><p>対応するターゲットを最初に宣言せずに共有モジュールの<code>build.gradle(.kts)</code>ファイルでソースセットにアクセスしようとすると、警告が表示されます。</p>',6)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[2]||(a[2]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    androidTarget"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosSimulatorArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    sourceSets"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        iosMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependencies"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            implementation"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Warning: accessing source set without declaring the target")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        linuxX64Main"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[3]||(a[3]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    androidTarget()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosSimulatorArm64()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sourceSets {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        iosMain {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependencies {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                implementation "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Warning: accessing source set without declaring the target")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        linuxX64Main { }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[14]||(a[14]=t(`<div class="note custom-block"><p class="custom-block-title">NOTE</p><p>この例では、<code>apple</code>と<code>native</code>ソースセットは<code>iosArm64</code>と<code>iosSimulatorArm64</code>ターゲットにのみコンパイルされます。 それらの名前にもかかわらず、これらは完全なiOS APIにアクセスできます。 これは、<code>native</code>のようなソースセットにとっては直感的ではないかもしれません。というのも、このソースセットではすべてのネイティブターゲットで利用可能なAPIのみがアクセス可能であると期待されるからです。この動作は将来変更される可能性があります。</p></div><h3 id="追加の設定" tabindex="-1">追加の設定 <a class="header-anchor" href="#追加の設定" aria-label="Permalink to &quot;追加の設定&quot;">​</a></h3><p>デフォルト階層テンプレートを調整する必要がある場合があります。以前に<code>dependsOn</code>呼び出しで中間ソースを<a href="#manual-configuration">手動で</a>導入している場合、それはデフォルト階層テンプレートの使用をキャンセルし、以下の警告につながります。</p><div class="language-none vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">none</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>The Default Kotlin Hierarchy Template was not applied to &#39;&lt;project-name&gt;&#39;:</span></span>
<span class="line"><span>Explicit .dependsOn() edges were configured for the following source sets:</span></span>
<span class="line"><span>[&lt;... names of the source sets with manually configured dependsOn-edges...&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Consider removing dependsOn-calls or disabling the default template by adding</span></span>
<span class="line"><span>    &#39;kotlin.mpp.applyDefaultHierarchyTemplate=false&#39;</span></span>
<span class="line"><span>to your gradle.properties</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Learn more about hierarchy templates: https://kotl.in/hierarchy-template</span></span></code></pre></div><p>この問題を解決するには、以下のいずれかの方法でプロジェクトを設定してください。</p><ul><li><a href="#replacing-a-manual-configuration">手動設定をデフォルト階層テンプレートに置き換える</a></li><li><a href="#creating-additional-source-sets">デフォルト階層テンプレートにソースセットを追加する</a></li><li><a href="#modifying-source-sets">デフォルト階層テンプレートによって作成されたソースセットを変更する</a></li></ul><h4 id="手動設定の置き換え" tabindex="-1">手動設定の置き換え <a class="header-anchor" href="#手動設定の置き換え" aria-label="Permalink to &quot;手動設定の置き換え&quot;">​</a></h4><p><strong>ケース</strong>。すべての中間ソースセットが、現在デフォルト階層テンプレートでカバーされている場合。</p><p><strong>解決策</strong>。共有モジュールの<code>build.gradle(.kts)</code>ファイルから、すべての手動の<code>dependsOn()</code>呼び出しと<code>by creating</code>構築を持つソースセットを削除します。すべてのデフォルトソースセットのリストを確認するには、<a href="#see-the-full-hierarchy-template">フル階層テンプレート</a>を参照してください。</p><h4 id="追加ソースセットの作成" tabindex="-1">追加ソースセットの作成 <a class="header-anchor" href="#追加ソースセットの作成" aria-label="Permalink to &quot;追加ソースセットの作成&quot;">​</a></h4><p><strong>ケース</strong>。デフォルト階層テンプレートがまだ提供していないソースセットを追加したい場合。例えば、macOSターゲットとJVMターゲットの間にソースセットを追加する場合。</p><p><strong>解決策</strong>：</p>`,12)),i("ol",null,[a[7]||(a[7]=i("li",null,[i("p",null,[s("共有モジュールの"),i("code",null,"build.gradle(.kts)"),s("ファイルで、"),i("code",null,"applyDefaultHierarchyTemplate()"),s("を明示的に呼び出してテンプレートを再適用します。")])],-1)),i("li",null,[a[6]||(a[6]=i("p",null,[i("code",null,"dependsOn()"),s("を使用して、追加のソースセットを"),i("a",{href:"#manual-configuration"},"手動で"),s("設定します。")],-1)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[4]||(a[4]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    jvm"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    macosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    iosSimulatorArm64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Apply the default hierarchy again. It'll create, for example, the iosMain source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    applyDefaultHierarchyTemplate"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    sourceSets"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Create an additional jvmAndMacos source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," jvmAndMacos "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"by"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," creating"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(commonMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosArm64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(jvmAndMacos)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        jvmMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(jvmAndMacos)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[5]||(a[5]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    jvm()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    macosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosArm64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    iosSimulatorArm64()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Apply the default hierarchy again. It'll create, for example, the iosMain source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    applyDefaultHierarchyTemplate()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sourceSets {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"        // Create an additional jvmAndMacos source set:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        jvmAndMacos {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(commonMain"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosArm64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(jvmAndMacos"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        jvmMain {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(jvmAndMacos"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    } ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})])]),a[15]||(a[15]=t('<h4 id="ソースセットの変更" tabindex="-1">ソースセットの変更 <a class="header-anchor" href="#ソースセットの変更" aria-label="Permalink to &quot;ソースセットの変更&quot;">​</a></h4><p><strong>ケース</strong>。テンプレートによって生成されたものとまったく同じ名前のソースセットが既にあり、それらがプロジェクト内の異なるターゲットセット間で共有されている場合。例えば、<code>nativeMain</code>ソースセットがデスクトップ固有のターゲット（<code>linuxX64</code>、<code>mingwX64</code>、および<code>macosX64</code>）の間でのみ共有されている場合。</p><p><strong>解決策</strong>。現在、テンプレートのソースセット間のデフォルトの<code>dependsOn</code>関係を変更する方法はありません。 また、<code>nativeMain</code>のようなソースセットの実装と意味がすべてのプロジェクトで同じであることが重要です。</p><p>ただし、以下のいずれかを実行することは可能です。</p><ul><li>目的のために、デフォルト階層テンプレート内にある、または手動で作成された異なるソースセットを見つける。</li><li><code>gradle.properties</code>ファイルに<code>kotlin.mpp.applyDefaultHierarchyTemplate=false</code>を追加してテンプレートから完全にオプトアウトし、すべてのソースセットを手動で設定する。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>現在、独自の階層テンプレートを作成するためのAPIに取り組んでいます。これは、その階層設定がデフォルトテンプレートと大きく異なるプロジェクトにとって役立つでしょう。 このAPIはまだ準備ができていませんが、試してみたい場合は、 <code>applyHierarchyTemplate {}</code>ブロックと<code>KotlinHierarchyTemplate.default</code>の宣言を例として参照してください。 このAPIはまだ開発中であることに注意してください。テストされていない可能性があり、今後のリリースで変更される可能性があります。</p></div>',6)),a[16]||(a[16]=i("h4",{"initial-collapse-state":"collapsed",collapsible:"true",id:"フル階層テンプレートを見る",tabindex:"-1"},[s("フル階層テンプレートを見る "),i("a",{class:"header-anchor",href:"#フル階層テンプレートを見る","aria-label":'Permalink to "フル階層テンプレートを見る {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),a[17]||(a[17]=t('<p>プロジェクトがコンパイルするターゲットを宣言すると、 プラグインはテンプレートから指定されたターゲットに基づいて共有ソースセットを選択し、それらをプロジェクト内に作成します。</p><p><img src="'+d+'" alt="Default hierarchy template"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>この例は、プロジェクトのプロダクション部分のみを示しており、<code>Main</code>サフィックスは省略されています （例えば、<code>commonMain</code>の代わりに<code>common</code>を使用しています）。ただし、すべて<code>*Test</code>ソースについても同様です。</p></div><h2 id="手動設定" tabindex="-1">手動設定 <a class="header-anchor" href="#手動設定" aria-label="Permalink to &quot;手動設定&quot;">​</a></h2><p>ソースセット構造に中間ソースを手動で導入できます。 これは、複数のターゲット間で共有されるコードを保持します。</p><p>例えば、ネイティブLinux、Windows、macOSターゲット（<code>linuxX64</code>、<code>mingwX64</code>、および<code>macosX64</code>）間でコードを共有したい場合の対処法は次のとおりです。</p>',6)),i("ol",null,[a[11]||(a[11]=i("li",null,[i("p",null,[s("共有モジュールの"),i("code",null,"build.gradle(.kts)"),s("ファイルで、これらのターゲットの共有ロジックを保持する中間ソースセット"),i("code",null,"desktopMain"),s("を追加します。")])],-1)),i("li",null,[a[10]||(a[10]=i("p",null,[i("code",null,"dependsOn"),s("関係を使用して、ソースセットの階層を設定します。"),i("code",null,"commonMain"),s("を"),i("code",null,"desktopMain"),s("に接続し、次に"),i("code",null,"desktopMain"),s("を各ターゲットソースセットに接続します。")],-1)),l(h,{group:"build-script"},{default:n(()=>[l(e,{title:"Kotlin","group-key":"kotlin"},{default:n(()=>a[8]||(a[8]=[i("div",{class:"language-kotlin vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"kotlin"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    linuxX64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    mingwX64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    macosX64"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    sourceSets"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        val"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," desktopMain "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"by"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," creating"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(commonMain."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        linuxX64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        mingwX64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosX64Main."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependsOn"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(e,{title:"Groovy","group-key":"groovy"},{default:n(()=>a[9]||(a[9]=[i("div",{class:"language-groovy vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"groovy"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"kotlin {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    linuxX64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    mingwX64()")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    macosX64()")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sourceSets {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        desktopMain {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(commonMain"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"get())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        linuxX64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        mingwX64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        macosX64Main {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dependsOn(desktopMain)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})])]),a[18]||(a[18]=t('<p>結果の階層構造は次のようになります。</p><p><img src="'+o+'" alt="Manually configured hierarchical structure"></p><p>以下のターゲットの組み合わせに対して、共有ソースセットを持つことができます。</p><ul><li>JVMまたはAndroid + JS + Native</li><li>JVMまたはAndroid + Native</li><li>JS + Native</li><li>JVMまたはAndroid + JS</li><li>Native</li></ul><p>Kotlinは現在、以下の組み合わせでのソースセット共有をサポートしていません。</p><ul><li>複数のJVMターゲット</li><li>JVM + Androidターゲット</li><li>複数のJSターゲット</li></ul><p>共有ネイティブソースセットからプラットフォーム固有のAPIにアクセスする必要がある場合、IntelliJ IDEAは共有ネイティブコードで使用できる共通の宣言を検出するのに役立ちます。 その他のケースでは、Kotlinの<a href="./multiplatform-expect-actual"><code>expect</code>/<code>actual</code>宣言</a>のメカニズムを使用してください。</p>',7))])}const _=r(g,[["render",y]]);export{C as __pageData,_ as default};
