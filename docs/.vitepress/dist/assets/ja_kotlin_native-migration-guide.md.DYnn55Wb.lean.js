import{_ as s,C as n,c as f,o as p,ag as i,G as a,w as l,j as e,a as r}from"./chunks/framework.Bksy39di.js";const j=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/native-migration-guide.md","filePath":"ja/kotlin/native-migration-guide.md","lastUpdated":1755514048000}'),u={name:"ja/kotlin/native-migration-guide.md"};function k(h,t,g,m,b,v){const d=n("list"),o=n("def"),c=n("deflist");return p(),f("div",null,[t[5]||(t[5]=i("",11)),a(c,{style:{}},{default:l(()=>[a(o,{title:"kotlinx.coroutines"},{default:l(()=>[t[1]||(t[1]=e("p",null,[r("バージョン1.6.0以降に更新してください。"),e("code",null,"native-mt"),r("サフィックスの付いたバージョンは使用しないでください。")],-1)),t[2]||(t[2]=e("p",null,"また、新しいメモリーマネージャーには、考慮すべきいくつかの詳細があります。",-1)),a(d,null,{default:l(()=>t[0]||(t[0]=[e("li",null,"フリーズが不要になったため、すべての一般的なプリミティブ（チャネル、フロー、コルーチン）はWorker境界を越えて機能します。",-1),e("li",null,[e("code",null,"Dispatchers.Default"),r("は、LinuxとWindowsではWorkerのプールによって、Appleターゲットではグローバルキューによって支えられています。")],-1),e("li",null,[e("code",null,"newSingleThreadContext"),r("を使用して、Workerによって支えられたコルーチンディスパッチャーを作成してください。")],-1),e("li",null,[e("code",null,"newFixedThreadPoolContext"),r("を使用して、"),e("code",null,"N"),r("個のWorkerのプールによって支えられたコルーチンディスパッチャーを作成してください。")],-1),e("li",null,[e("code",null,"Dispatchers.Main"),r("は、Darwinではメインキューによって、その他のプラットフォームではスタンドアロンWorkerによって支えられています。")],-1)])),_:1})]),_:1}),a(o,{title:"Ktor"},{default:l(()=>t[3]||(t[3]=[r(" バージョン2.0以降に更新してください。 ")])),_:1}),a(o,{title:"その他の依存関係"},{default:l(()=>t[4]||(t[4]=[e("p",null,"ほとんどのライブラリは変更なしで動作するはずですが、例外があるかもしれません。",-1),e("p",null,"依存関係を最新バージョンに更新し、従来のメモリーマネージャーと新しいメモリーマネージャーでライブラリのバージョンに違いがないことを確認してください。",-1)])),_:1})]),_:1}),t[6]||(t[6]=i("",5))])}const x=s(u,[["render",k]]);export{j as __pageData,x as default};
