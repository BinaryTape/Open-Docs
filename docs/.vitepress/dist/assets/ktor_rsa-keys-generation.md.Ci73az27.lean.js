import{_ as r,C as p,c,o as u,j as i,G as e,ag as n,a,w as t}from"./chunks/framework.Bksy39di.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/rsa-keys-generation.md","filePath":"ktor/rsa-keys-generation.md","lastUpdated":1755457140000}'),g={name:"ktor/rsa-keys-generation.md"};function F(y,s,b,C,E,_){const k=p("show-structure"),h=p("tldr"),o=p("warning"),l=p("code-block"),d=p("note");return u(),c("div",null,[s[6]||(s[6]=i("h1",{id:"rsa-密钥生成",tabindex:"-1"},[a("RSA 密钥生成 "),i("a",{class:"header-anchor",href:"#rsa-密钥生成","aria-label":'Permalink to "RSA 密钥生成"'},"​")],-1)),e(k,{for:"chapter",depth:"2"}),e(h,null,{default:t(()=>s[0]||(s[0]=[i("p",null,[i("b",null,"代码示例"),a(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-jwt-rs256"}," auth-jwt-rs256 ")],-1)])),_:1}),s[7]||(s[7]=i("p",null,[i("a",{href:"https://en.wikipedia.org/wiki/RSA_(cryptosystem)",target:"_blank",rel:"noreferrer"},"RSA (Rivest–Shamir–Adleman)"),a(" 是一种广泛使用的公钥密码系统，它支持安全数据传输、数字签名和密钥交换。")],-1)),s[8]||(s[8]=i("p",null,"RS256 作为 RSA 加密算法的一部分，利用 SHA-256 进行散列以及一个密钥（通常为 2048 位、4096 位或更高）来保护数字通信安全。",-1)),s[9]||(s[9]=i("p",null,[a("在 "),i("a",{href:"https://jwt.io/",target:"_blank",rel:"noreferrer"},"JSON Web Token"),a(" 认证领域中，RS256 扮演着关键角色，因为 JWT 的完整性和真实性可以通过签名机制（例如 RS256）进行验证，其中采用了公钥/私钥对。这确保了令牌中包含的信息防篡改且可信。")],-1)),s[10]||(s[10]=i("p",null,[a("在本节中，你将学习这些密钥是如何生成并与 Ktor 提供的 "),i("a",{href:"./server-jwt"},"Authentication JWT"),a(" 插件一同使用的。")],-1)),e(o,null,{default:t(()=>s[1]||(s[1]=[i("p",null,[a(" 对于生产环境使用，建议你选择更现代的替代方案，例如基于比 RSA 更高效、更安全的密码学的 "),i("a",{href:"https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm"},"ES256"),a("。 ")],-1)])),_:1}),s[11]||(s[11]=i("h2",{id:"生成-rsa-私钥",tabindex:"-1"},[a("生成 RSA 私钥 "),i("a",{class:"header-anchor",href:"#生成-rsa-私钥","aria-label":'Permalink to "生成 RSA 私钥"'},"​")],-1)),s[12]||(s[12]=i("p",null,[a("要生成私钥，你可以使用 OpenSSL、"),i("code",null,"ssh-keygen"),a(" 或你选择的其他工具来创建认证密钥对。为演示目的，此处将使用 OpenSSL。")],-1)),s[13]||(s[13]=i("p",null,"在新终端窗口中，运行以下命令：",-1)),e(l,{lang:"shell",code:"openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 &gt; ktor.pk8"}),s[14]||(s[14]=n("",6)),e(l,{lang:"shell",code:"openssl rsa -in ktor.pk8 -pubout | tee ktor.spki"}),s[15]||(s[15]=n("",6)),e(l,{lang:"shell",code:"openssl pkey -in ktor.spki -pubin -noout -text"}),s[16]||(s[16]=n("",3)),e(o,null,{default:t(()=>s[2]||(s[2]=[i("p",null," 请注意，在此示例中，公钥使用 512 位，这是不安全的。理想情况下，你应该选择 2048 位或 4096 位密钥。 ",-1)])),_:1}),s[17]||(s[17]=n("",4)),e(l,{lang:"shell",code:"echo 010001 | xxd -p -r | base64 "}),s[18]||(s[18]=n("",1)),e(d,null,{default:t(()=>s[3]||(s[3]=[i("p",null," 请注意，通过在左侧添加一个额外的 0，使用了偶数位十六进制数字。 ",-1)])),_:1}),s[19]||(s[19]=n("",5)),e(l,{lang:"shell",code:`echo "b5:f2:5a:2e:bc:d7:20:b5:20:d5:4d:cd:d4:a5:
    7c:c8:9a:fd:d8:61:e7:e4:eb:58:65:1e:ea:5a:4d:
    4c:73:87:32:e0:91:a3:92:56:2e:a7:bc:1e:32:30:
    43:f5:fd:db:05:5a:08:b2:25:15:5f:ac:4d:71:82:
    2b:d0:87:b4:01" | tr -d ": 
" | xxd -p -r | base64 | tr +/ -_ | tr -d "=
"`}),e(d,null,{default:t(()=>s[4]||(s[4]=[i("p",null," 请注意，前导 00 字节已被省略。模数中的前导 00 字节与 RSA 公钥的 ASN.1 编码相关。在整数的 ASN.1 DER 编码中，如果整数的最高有效位是 0，则会移除前导零字节。这是 ASN.1 编码规则的标准部分。在 RSA 公钥的上下文中，模数是一个大端整数，当在 DER 编码中表示时，它遵循这些规则。移除前导零字节是为了确保根据 DER 规则正确解释整数。 ",-1)])),_:1}),s[20]||(s[20]=n("",15)),e(o,null,{default:t(()=>s[5]||(s[5]=[i("p",null,[a(" 你的私钥被视为敏感信息，不应直接存储在代码中。考虑使用环境变量或 "),i("a",{href:"https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"},"秘密存储"),a(" 来存放敏感数据。 ")],-1)])),_:1})])}const f=r(g,[["render",F]]);export{B as __pageData,f as default};
