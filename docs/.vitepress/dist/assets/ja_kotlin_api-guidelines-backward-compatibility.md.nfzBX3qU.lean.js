import{_ as e,C as l,c as p,o as h,j as s,ag as a,G as k,a as t}from"./chunks/framework.Bksy39di.js";const u=JSON.parse('{"title":"ライブラリ作成者向け後方互換性ガイドライン","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kotlin/api-guidelines-backward-compatibility.md","filePath":"ja/kotlin/api-guidelines-backward-compatibility.md","lastUpdated":1754307826000}'),d={name:"ja/kotlin/api-guidelines-backward-compatibility.md"};function r(o,i,c,g,E,y){const n=l("TopicTitle");return h(),p("div",null,[i[0]||(i[0]=s("h1",{id:"ライブラリ作成者向け後方互換性ガイドライン",tabindex:"-1"},[t("ライブラリ作成者向け後方互換性ガイドライン "),s("a",{class:"header-anchor",href:"#ライブラリ作成者向け後方互換性ガイドライン","aria-label":'Permalink to "ライブラリ作成者向け後方互換性ガイドライン"'},"​")],-1)),i[1]||(i[1]=s("p",null,"ライブラリを作成する最も一般的な動機は、より幅広いコミュニティに機能を提供することです。 このコミュニティは、単一のチーム、企業、特定の業界、またはテクノロジープラットフォームである可能性があります。 どのような場合でも、後方互換性は重要な考慮事項となります。 コミュニティが広がるほど、ユーザーが誰であり、どのような制約の中で作業しているかを把握しにくくなるため、後方互換性はより重要になります。",-1)),i[2]||(i[2]=s("p",null,"後方互換性とは単一の用語ではなく、バイナリ、ソース、および振る舞いの各レベルで定義できます。 これらのタイプに関する詳細は、このセクションで説明します。",-1)),i[3]||(i[3]=s("p",null,"次の点に注意してください。",-1)),i[4]||(i[4]=s("ul",null,[s("li",null,"ソース互換性を損なわずにバイナリ互換性を損なうこと、またその逆も可能です。"),s("li",null,"ソース互換性を保証することは望ましいですが、非常に困難です。ライブラリ作成者は、ライブラリのユーザーが関数または型を呼び出し、あるいはインスタンス化するあらゆる可能な方法を考慮しなければなりません。 ソース互換性は通常、目標であり、約束ではありません。")],-1)),i[5]||(i[5]=s("p",null,"このセクションの残りの部分では、さまざまな種類の互換性を確保するのに役立つアクションとツールについて説明します。",-1)),i[6]||(i[6]=s("h2",{"initial-collapse-state":"collapsed",collapsible:"true",id:"互換性の種類",tabindex:"-1"},[t("互換性の種類 "),s("a",{class:"header-anchor",href:"#互換性の種類","aria-label":'Permalink to "互換性の種類 {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[7]||(i[7]=a("",10)),k(n,{id:"kotlin-gradleプラグインにおけるバイナリ互換性検証",level:"3",title:"Kotlin Gradleプラグインにおけるバイナリ互換性検証",labelRef:"experimental-general"}),i[8]||(i[8]=a("",23)),i[9]||(i[9]=s("h3",{"initial-collapse-state":"collapsed",collapsible:"true",id:"互換性維持のためオーバーロードを使用する",tabindex:"-1"},[t("互換性維持のためオーバーロードを使用する "),s("a",{class:"header-anchor",href:"#互換性維持のためオーバーロードを使用する","aria-label":'Permalink to "互換性維持のためオーバーロードを使用する {initial-collapse-state="collapsed" collapsible="true"}"'},"​")],-1)),i[10]||(i[10]=a("",54))])}const F=e(d,[["render",r]]);export{u as __pageData,F as default};
