import{_ as l,c as a,o,ag as r}from"./chunks/framework.Bksy39di.js";const h=JSON.parse('{"title":"支持平台稳定性","description":"","frontmatter":{},"headers":[],"relativePath":"kmp/supported-platforms.md","filePath":"kmp/supported-platforms.md","lastUpdated":1755516278000}'),e={name:"kmp/supported-platforms.md"};function i(n,t,d,p,s,m){return o(),a("div",null,t[0]||(t[0]=[r('<h1 id="支持平台稳定性" tabindex="-1">支持平台稳定性 <a class="header-anchor" href="#支持平台稳定性" aria-label="Permalink to &quot;支持平台稳定性&quot;">​</a></h1><p>Kotlin Multiplatform 允许您为各种平台创建应用程序，并在这些平台之间共享代码，从而让您触达用户喜爱的设备。不同平台可能具有不同的稳定性级别，这取决于核心 Kotlin Multiplatform 代码共享技术和 Compose Multiplatform UI 框架对它们的支持。</p><p>本页面包含的信息旨在帮助您确定哪些平台符合您的项目需求，并详细说明其稳定性级别。</p><h2 id="通用-kotlin-稳定性级别" tabindex="-1">通用 Kotlin 稳定性级别 <a class="header-anchor" href="#通用-kotlin-稳定性级别" aria-label="Permalink to &quot;通用 Kotlin 稳定性级别&quot;">​</a></h2><p>以下是 Kotlin 中稳定性级别及其含义的快速指南：</p><p><strong>Experimental</strong> 意味着“仅在玩具项目中尝试”：</p><ul><li>我们只是在尝试一个想法，希望一些用户试用并提供反馈。如果行不通，我们随时可能放弃它。</li></ul><p><strong>Alpha</strong> 意味着“风险自担，预期会遇到迁移问题”：</p><ul><li>我们打算将此想法产品化，但它尚未达到最终形态。</li></ul><p><strong>Beta</strong> 意味着“您可以使用它，我们将尽力为您最大限度地减少迁移问题”：</p><ul><li>它已接近完成，用户反馈现在尤为重要。</li><li>尽管如此，它还不是 100% 完成，因此仍有可能进行更改（包括基于您自身反馈的更改）。</li><li>请提前留意废弃警告，以获得最佳更新体验。</li></ul><p>我们将 <em>Experimental</em>、<em>Alpha</em> 和 <em>Beta</em> 统称为<strong>预稳定</strong>级别。</p><p><strong>Stable</strong> 意味着“即使在最保守的场景中也可以使用它”：</p><ul><li>它已完成。我们将根据严格的<a href="https://kotlinfoundation.org/language-committee-guidelines/" target="_blank" rel="noreferrer">向后兼容性规则</a>对其进行演进。</li></ul><h3 id="核心-kotlin-multiplatform-技术的当前平台稳定性级别" tabindex="-1">核心 Kotlin Multiplatform 技术的当前平台稳定性级别 <a class="header-anchor" href="#核心-kotlin-multiplatform-技术的当前平台稳定性级别" aria-label="Permalink to &quot;核心 Kotlin Multiplatform 技术的当前平台稳定性级别&quot;">​</a></h3><p>以下是核心 Kotlin Multiplatform 技术的当前平台稳定性级别：</p><table tabindex="0"><thead><tr><th>平台</th><th>稳定性级别</th></tr></thead><tbody><tr><td>Android</td><td>Stable</td></tr><tr><td>iOS</td><td>Stable</td></tr><tr><td>Desktop (JVM)</td><td>Stable</td></tr><tr><td>Server-side (JVM)</td><td>Stable</td></tr><tr><td>Web based on Kotlin/Wasm</td><td>Alpha</td></tr><tr><td>Web based on Kotlin/JS</td><td>Stable</td></tr><tr><td>watchOS</td><td>Beta</td></tr><tr><td>tvOS</td><td>Beta</td></tr></tbody></table><ul><li>Kotlin Multiplatform 支持比此处列出更多的原生平台。要了解对每个平台的支持级别，请参见<a href="https://kotlinlang.org/docs/native-target-support.html" target="_blank" rel="noreferrer">Kotlin/Native 目标平台支持</a>。</li><li>有关 Kotlin Multiplatform 等 Kotlin 组件的稳定性级别的更多信息，请参见<a href="https://kotlinlang.org/docs/components-stability.html#current-stability-of-kotlin-components" target="_blank" rel="noreferrer">Kotlin 组件的当前稳定性</a>。</li></ul><h2 id="compose-multiplatform-ui-框架稳定性级别" tabindex="-1">Compose Multiplatform UI 框架稳定性级别 <a class="header-anchor" href="#compose-multiplatform-ui-框架稳定性级别" aria-label="Permalink to &quot;Compose Multiplatform UI 框架稳定性级别&quot;">​</a></h2><p>以下是 Compose Multiplatform UI 框架的平台稳定性级别及其含义的快速指南：</p><p><strong>Experimental</strong> 意味着“正在开发中”：</p><ul><li>某些特性可能尚未可用，而已有的特性可能存在性能问题或缺陷。</li><li>将来可能会有更改，并且破坏性更改可能频繁发生。</li></ul><p><strong>Alpha</strong> 意味着“风险自担，预期会遇到迁移问题”：</p><ul><li>我们已决定将平台支持产品化，但它尚未达到最终形态。</li></ul><p><strong>Beta</strong> 意味着“您可以使用它，我们将尽力为您最大限度地减少迁移问题”：</p><ul><li>它已接近完成，因此用户反馈现在尤为重要。</li><li>它还不是 100% 完成，因此仍有可能进行更改（包括基于您自身反馈的更改）。</li></ul><p>我们将 <strong>Experimental</strong>、<strong>Alpha</strong> 和 <strong>Beta</strong> 统称为<strong>预稳定</strong>级别。</p><p><strong>Stable</strong> 意味着“即使在最保守的场景中也可以使用它”：</p><ul><li>该框架提供了一个全面的 API 表面，使您能够编写美观、可用于生产的应用程序，而不会遇到框架本身的性能或其他问题。</li><li>API 破坏性更改只能在正式废弃公告发布 2 个版本后进行。</li></ul><h3 id="compose-multiplatform-ui-框架的当前平台稳定性级别" tabindex="-1">Compose Multiplatform UI 框架的当前平台稳定性级别 <a class="header-anchor" href="#compose-multiplatform-ui-框架的当前平台稳定性级别" aria-label="Permalink to &quot;Compose Multiplatform UI 框架的当前平台稳定性级别&quot;">​</a></h3><table tabindex="0"><thead><tr><th>平台</th><th>稳定性级别</th></tr></thead><tbody><tr><td>Android</td><td>Stable</td></tr><tr><td>iOS</td><td>Stable</td></tr><tr><td>Desktop (JVM)</td><td>Stable</td></tr><tr><td>Web based on Kotlin/Wasm</td><td>Alpha</td></tr></tbody></table><h2 id="后续步骤" tabindex="-1">后续步骤 <a class="header-anchor" href="#后续步骤" aria-label="Permalink to &quot;后续步骤&quot;">​</a></h2><p>请参见<a href="./recommended-ides">推荐的 IDE</a> 以了解哪种 IDE 更适合您跨不同平台组合的代码共享场景。</p>',33)]))}const f=l(e,[["render",i]]);export{h as __pageData,f as default};
