import{_ as u,C as n,c as m,o as y,G as a,j as i,ag as F,w as t,a as e}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-freemarker.md","filePath":"ko/ktor/server-freemarker.md","lastUpdated":1755457140000}'),c={name:"ko/ktor/server-freemarker.md"};function f(v,s,b,C,_,B){const o=n("TopicTitle"),h=n("show-structure"),d=n("primary-label"),p=n("Links"),E=n("tldr"),l=n("code-block"),r=n("TabItem"),k=n("Tabs"),g=n("list");return y(),m("div",null,[a(o,{labelRef:"server-plugin",title:"FreeMarker"}),a(h,{for:"chapter",depth:"2"}),a(d,{ref:"server-plugin"},null,512),a(E,null,{default:t(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"필수 의존성"),e(": "),i("code",null,"io.ktor:ktor-server-freemarker")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"코드 예시"),e(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/freemarker"}," freemarker ")],-1)),i("p",null,[i("b",null,[a(p,{href:"/ktor/server-native",summary:"Ktor는 Kotlin/Native를 지원하며 추가 런타임이나 가상 머신 없이 서버를 실행할 수 있게 합니다."},{default:t(()=>s[0]||(s[0]=[e("네이티브 서버")])),_:1}),s[1]||(s[1]=e(" 지원"))]),s[2]||(s[2]=e(": ✖️ "))])]),_:1}),s[17]||(s[17]=i("p",null,[e("Ktor를 사용하면 "),i("a",{href:"https://freemarker.apache.org/",target:"_blank",rel:"noreferrer"},"FreeMarker 템플릿"),e("을 애플리케이션 내 뷰로 "),i("a",{href:"https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-freemarker/io.ktor.server.freemarker/-free-marker",target:"_blank",rel:"noreferrer"},"FreeMarker"),e(" 플러그인을 설치하여 사용할 수 있습니다.")],-1)),s[18]||(s[18]=i("h2",{id:"add_dependencies",tabindex:"-1"},[e("의존성 추가 "),i("a",{class:"header-anchor",href:"#add_dependencies","aria-label":'Permalink to "의존성 추가 {id="add_dependencies"}"'},"​")],-1)),s[19]||(s[19]=i("p",null,[i("code",null,"FreeMarker"),e("을(를) 사용하려면 빌드 스크립트에 "),i("code",null,"ktor-server-freemarker"),e(" 아티팩트를 포함해야 합니다: ")],-1)),a(k,{group:"languages"},{default:t(()=>[a(r,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:t(()=>[a(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-freemarker:$ktor_version")'})]),_:1}),a(r,{title:"Gradle (Groovy)","group-key":"groovy"},{default:t(()=>[a(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-freemarker:$ktor_version"'})]),_:1}),a(r,{title:"Maven","group-key":"maven"},{default:t(()=>[a(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-freemarker-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[20]||(s[20]=i("h2",{id:"install_plugin",tabindex:"-1"},[e("FreeMarker 설치 "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "FreeMarker 설치 {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[6]||(s[6]=e(" 애플리케이션에 ")),s[7]||(s[7]=i("code",null,"FreeMarker",-1)),s[8]||(s[8]=e(" 플러그인을 ")),s[9]||(s[9]=i("a",{href:"#install"},"설치",-1)),s[10]||(s[10]=e("하려면, 지정된 ")),a(p,{href:"/ktor/server-modules",summary:"모듈을 사용하면 경로를 그룹화하여 애플리케이션을 구조화할 수 있습니다."},{default:t(()=>s[5]||(s[5]=[e("모듈")])),_:1}),s[11]||(s[11]=e("의 ")),s[12]||(s[12]=i("code",null,"install",-1)),s[13]||(s[13]=e(" 함수에 전달하면 됩니다. 아래 코드 스니펫은 ")),s[14]||(s[14]=i("code",null,"FreeMarker",-1)),s[15]||(s[15]=e("을(를) 설치하는 방법을 보여줍니다. "))]),a(g,null,{default:t(()=>s[16]||(s[16]=[i("li",null,[e(" ... "),i("code",null,"embeddedServer"),e(" 함수 호출 내부. ")],-1),i("li",null,[e(" ... 명시적으로 정의된 "),i("code",null,"module"),e(" 내부, 이는 "),i("code",null,"Application"),e(" 클래스의 확장 함수입니다. ")],-1)])),_:1}),a(k,null,{default:t(()=>[a(r,{title:"embeddedServer"},{default:t(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.freemarker.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(FreeMarker)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),a(r,{title:"module"},{default:t(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.freemarker.*
            // ...
            fun Application.module() {
                install(FreeMarker)
                // ...
            }`})]),_:1})]),_:1}),s[21]||(s[21]=F(`<p><code>install</code> 블록 내에서 FreeMarker 템플릿 로드를 위한 원하는 <a href="https://freemarker.apache.org/docs/pgui_config_templateloading.html" target="_blank" rel="noreferrer">TemplateLoader</a>를 <a href="#configure">구성</a>할 수 있습니다.</p><h2 id="configure" tabindex="-1">FreeMarker 구성 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;FreeMarker 구성 {id=&quot;configure&quot;}&quot;">​</a></h2><h3 id="template_loading" tabindex="-1">템플릿 로드 구성 <a class="header-anchor" href="#template_loading" aria-label="Permalink to &quot;템플릿 로드 구성 {id=&quot;template_loading&quot;}&quot;">​</a></h3><p>템플릿을 로드하려면 원하는 <a href="https://freemarker.apache.org/docs/pgui_config_templateloading.html" target="_blank" rel="noreferrer">TemplateLoader</a> 유형을 <code>templateLoader</code> 속성에 할당해야 합니다. 예를 들어, 아래 코드 스니펫은 Ktor가 현재 클래스패스를 기준으로 <code>templates</code> 패키지에서 템플릿을 찾을 수 있도록 합니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> freemarker.cache.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.freemarker.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FreeMarker) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        templateLoader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClassTemplateLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.java.classLoader, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;templates&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="use_template" tabindex="-1">응답으로 템플릿 전송 <a class="header-anchor" href="#use_template" aria-label="Permalink to &quot;응답으로 템플릿 전송 {id=&quot;use_template&quot;}&quot;">​</a></h3><p><code>resources/templates</code>에 <code>index.ftl</code> 템플릿이 있다고 가정해 보세요:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello, \${user.name}!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>사용자 데이터 모델은 다음과 같습니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>지정된 <a href="./server-routing">경로</a>에 템플릿을 사용하려면, 다음과 같이 <code>FreeMarkerContent</code>를 <code>call.respond</code> 메서드에 전달합니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sampleUser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FreeMarkerContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.ftl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mapOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to sampleUser)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12))])}const D=u(c,[["render",f]]);export{q as __pageData,D as default};
