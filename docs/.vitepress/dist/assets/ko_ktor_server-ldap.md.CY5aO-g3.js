import{_ as c,C as e,c as E,o as u,j as a,G as i,ag as p,a as t,w as n}from"./chunks/framework.Bksy39di.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-ldap.md","filePath":"ko/ktor/server-ldap.md","lastUpdated":1755457140000}'),g={name:"ko/ktor/server-ldap.md"};function y(v,s,F,b,m,f){const h=e("show-structure"),k=e("Links"),o=e("tldr"),l=e("code-block"),r=e("TabItem"),d=e("Tabs");return u(),E("div",null,[s[5]||(s[5]=a("h1",{id:"ldap",tabindex:"-1"},[t("LDAP "),a("a",{class:"header-anchor",href:"#ldap","aria-label":'Permalink to "LDAP"'},"​")],-1)),i(h,{for:"chapter",depth:"2"}),i(o,null,{default:n(()=>[s[3]||(s[3]=a("p",null,[a("b",null,"필수 의존성"),t(": "),a("code",null,"io.ktor:ktor-server-auth"),t(", "),a("code",null,"io.ktor:ktor-server-auth-ldap")],-1)),s[4]||(s[4]=a("p",null,[a("b",null,"코드 예시"),t(": "),a("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-ldap"}," auth-ldap ")],-1)),a("p",null,[a("b",null,[i(k,{href:"/ktor/server-native",summary:"Ktor는 Kotlin/Native를 지원하며 추가 런타임이나 가상 머신 없이 서버를 실행할 수 있게 해줍니다."},{default:n(()=>s[0]||(s[0]=[t("네이티브 서버")])),_:1}),s[1]||(s[1]=t(" 지원"))]),s[2]||(s[2]=t(": ✖️ "))])]),_:1}),s[6]||(s[6]=p('<p>LDAP는 사용자 정보를 저장할 수 있는 다양한 디렉터리 서비스와 연동하기 위한 프로토콜입니다. Ktor를 사용하면 <a href="./server-basic-auth">basic</a>, <a href="./server-digest-auth">digest</a>, 또는 <a href="./server-form-based-auth">폼 기반(form-based)</a> 인증 스킴을 사용하여 LDAP 사용자를 인증할 수 있습니다.</p><blockquote><p>Ktor의 인증 및 권한 부여에 대한 일반적인 정보는 <a href="./server-auth">Ktor 서버의 인증 및 권한 부여</a> 섹션에서 확인할 수 있습니다.</p></blockquote><h2 id="add_dependencies" tabindex="-1">의존성 추가 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;의존성 추가 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>LDAP</code> 인증을 활성화하려면 빌드 스크립트에 <code>ktor-server-auth</code> 및 <code>ktor-server-auth-ldap</code> 아티팩트를 포함해야 합니다.</p>',4)),i(d,{group:"languages"},{default:n(()=>[i(r,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[i(l,{lang:"Kotlin",title:"Sample",code:`            implementation("io.ktor:ktor-server-auth:$ktor_version")
            implementation("io.ktor:ktor-server-auth-ldap:$ktor_version")`})]),_:1}),i(r,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[i(l,{lang:"Groovy",title:"Sample",code:`            implementation "io.ktor:ktor-server-auth:$ktor_version"
            implementation "io.ktor:ktor-server-auth-ldap:$ktor_version"`})]),_:1}),i(r,{title:"Maven","group-key":"maven"},{default:n(()=>[i(l,{lang:"XML",title:"Sample",code:`&lt;dependency&gt;
&lt;groupId&gt;io.ktor&lt;/groupId&gt;
&lt;artifactId&gt;ktor-server-auth&lt;/artifactId&gt;
&lt;version&gt;\${ktor_version}&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
&lt;groupId&gt;io.ktor&lt;/groupId&gt;
&lt;artifactId&gt;ktor-server-auth-ldap&lt;/artifactId&gt;
&lt;version&gt;\${ktor_version}&lt;/version&gt;
&lt;/dependency&gt;`})]),_:1})]),_:1}),s[7]||(s[7]=p(`<h2 id="configure" tabindex="-1">LDAP 구성 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;LDAP 구성 {id=&quot;configure&quot;}&quot;">​</a></h2><h3 id="choose-auth" tabindex="-1">1단계: 인증 프로바이더 선택 <a class="header-anchor" href="#choose-auth" aria-label="Permalink to &quot;1단계: 인증 프로바이더 선택 {id=&quot;choose-auth&quot;}&quot;">​</a></h3><p>LDAP 사용자를 인증하려면 먼저 사용자 이름과 비밀번호 유효성 검사를 위한 인증 프로바이더를 선택해야 합니다. Ktor에서는 이를 위해 <a href="./server-basic-auth">basic</a>, <a href="./server-digest-auth">digest</a>, 또는 <a href="./server-form-based-auth">폼 기반(form-based)</a> 프로바이더를 사용할 수 있습니다. 예를 들어, <code>basic</code> 인증 프로바이더를 사용하려면 <code>install</code> 블록 내에서 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/basic.html" target="_blank" rel="noreferrer">basic</a> 함수를 호출합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.auth.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.auth.ldap.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { credentials </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Authenticate an LDAP user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>validate</code> 함수는 사용자 자격 증명을 확인하는 데 사용됩니다.</p><h3 id="authenticate" tabindex="-1">2단계: LDAP 사용자 인증 <a class="header-anchor" href="#authenticate" aria-label="Permalink to &quot;2단계: LDAP 사용자 인증 {id=&quot;authenticate&quot;}&quot;">​</a></h3><p>LDAP 사용자를 인증하려면 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth-ldap/io.ktor.server.auth.ldap/ldap-authenticate.html" target="_blank" rel="noreferrer">ldapAuthenticate</a> 함수를 호출해야 합니다. 이 함수는 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-user-password-credential/index.html" target="_blank" rel="noreferrer">UserPasswordCredential</a>을 허용하고 지정된 LDAP 서버에 대해 유효성을 검사합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-ldap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { credentials </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ldapAuthenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(credentials, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ldap://0.0.0.0:389&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cn=%s,dc=ktor,dc=io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>validate</code> 함수는 인증 성공 시 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-user-id-principal/index.html" target="_blank" rel="noreferrer">UserIdPrincipal</a>을 반환하고, 인증 실패 시 <code>null</code>을 반환합니다.</p><p>선택적으로, 인증된 사용자에 대한 추가 유효성 검사를 추가할 수 있습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-ldap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { credentials </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ldapAuthenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(credentials, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ldap://localhost:389&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cn=%s,dc=ktor,dc=io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (it.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it.password) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    UserIdPrincipal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(it.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="authenticate-route" tabindex="-1">3단계: 특정 리소스 보호 <a class="header-anchor" href="#authenticate-route" aria-label="Permalink to &quot;3단계: 특정 리소스 보호 {id=&quot;authenticate-route&quot;}&quot;">​</a></h3><p>LDAP를 구성한 후, <strong><a href="./server-auth#authenticate-route">authenticate</a></strong> 함수를 사용하여 애플리케이션의 특정 리소스를 보호할 수 있습니다. 인증에 성공하면 라우트 핸들러 내에서 <code>call.principal</code> 함수를 사용하여 인증된 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-user-id-principal/index.html" target="_blank" rel="noreferrer">UserIdPrincipal</a>을 검색하고 인증된 사용자의 이름을 가져올 수 있습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-ldap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, \${call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">principal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UserIdPrincipal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;()?.name}!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>완전한 실행 가능한 예시는 다음에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-ldap" target="_blank" rel="noreferrer">auth-ldap</a>.</p><blockquote><p>현재 LDAP 구현은 동기(synchronous) 방식임을 명심하십시오.</p></blockquote>`,16))])}const q=c(g,[["render",y]]);export{_ as __pageData,q as default};
