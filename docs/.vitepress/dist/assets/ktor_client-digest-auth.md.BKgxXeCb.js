import{_ as e,C as n,c as l,o as p,j as s,G as o,ag as r,a,w as h}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/client-digest-auth.md","filePath":"ktor/client-digest-auth.md","lastUpdated":1755457140000}'),c={name:"ktor/client-digest-auth.md"};function d(k,t,u,g,E,b){const i=n("tldr");return p(),l("div",null,[t[1]||(t[1]=s("h1",{id:"ktor-客户端中的摘要认证",tabindex:"-1"},[a("Ktor 客户端中的摘要认证 "),s("a",{class:"header-anchor",href:"#ktor-客户端中的摘要认证","aria-label":'Permalink to "Ktor 客户端中的摘要认证"'},"​")],-1)),o(i,null,{default:h(()=>t[0]||(t[0]=[s("p",null,[s("b",null,"必需的依赖项"),a(": "),s("code",null,"io.ktor:ktor-client-auth")],-1),s("p",null,[s("b",null,"代码示例"),a(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-digest"}," client-auth-digest ")],-1)])),_:1}),t[2]||(t[2]=r(`<p>在摘要认证方案中，散列函数在将用户名和密码通过网络发送之前应用于它们。</p><blockquote><p>在服务器端，Ktor 提供了 <a href="./server-digest-auth">Authentication</a> 插件用于处理摘要认证。</p></blockquote><h2 id="flow" tabindex="-1">摘要认证流程 <a class="header-anchor" href="#flow" aria-label="Permalink to &quot;摘要认证流程 {id=&quot;flow&quot;}&quot;">​</a></h2><p>摘要认证流程如下：</p><ol><li><p>客户端向服务器应用程序中的特定资源发出不带 <code>Authorization</code> 头部信息的请求。</p></li><li><p>服务器向客户端响应 401（未授权）响应状态，并使用 <code>WWW-Authenticate</code> 响应头部提供信息，表明该路由受摘要认证方案保护。典型的 <code>WWW-Authenticate</code> 头部如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>WWW-Authenticate: Digest</span></span>
<span class="line"><span>        realm=&quot;Access to the &#39;/&#39; path&quot;,</span></span>
<span class="line"><span>        nonce=&quot;e4549c0548886bc2&quot;,</span></span>
<span class="line"><span>        algorithm=&quot;MD5&quot;</span></span></code></pre></div></li><li><p>通常，客户端会显示一个登录对话框，用户可以在其中输入凭据。然后，客户端会发出带有以下 <code>Authorization</code> 头部信息的请求：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Authorization: Digest username=&quot;jetbrains&quot;,</span></span>
<span class="line"><span>        realm=&quot;Access to the &#39;/&#39; path&quot;,</span></span>
<span class="line"><span>        nonce=&quot;e4549c0548886bc2&quot;,</span></span>
<span class="line"><span>        uri=&quot;/&quot;,</span></span>
<span class="line"><span>        algorithm=MD5,</span></span>
<span class="line"><span>        response=&quot;6299988bb4f05c0d8ad44295873858cf&quot;</span></span></code></pre></div><p><code>response</code> 值的生成方式如下：</p><p>a. <code>HA1 = MD5(username:realm:password)</code></p><p>b. <code>HA2 = MD5(method:digestURI)</code></p><p>c. <code>response = MD5(HA1:nonce:HA2)</code></p></li><li><p>服务器验证客户端发送的凭据并响应请求的内容。</p></li></ol><h2 id="configure" tabindex="-1">配置摘要认证 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;配置摘要认证 {id=&quot;configure&quot;}&quot;">​</a></h2><p>要在 <code>Authorization</code> 头部中使用 <code>Digest</code> 方案发送用户凭据，您需要按如下方式配置 <code>digest</code> 认证提供者：</p><ol><li>在 <code>install</code> 代码块内调用 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/digest.html" target="_blank" rel="noreferrer">digest</a> 函数。</li><li>使用 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-digest-auth-credentials/index.html" target="_blank" rel="noreferrer">DigestAuthCredentials</a> 提供所需的凭据，并将此对象传递给 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-digest-auth-config/credentials.html" target="_blank" rel="noreferrer">credentials</a> 函数。</li><li>可选地，使用 <code>realm</code> 属性配置 realm。</li></ol><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Auth) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                DigestAuthCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;jetbrains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foobar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            realm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Access to the &#39;/&#39; path&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>您可以在此处找到完整示例：<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-digest" target="_blank" rel="noreferrer">client-auth-digest</a>。</p></blockquote>`,10))])}const f=e(c,[["render",d]]);export{q as __pageData,f as default};
