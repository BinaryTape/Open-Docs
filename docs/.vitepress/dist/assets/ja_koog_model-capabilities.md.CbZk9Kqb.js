import{_ as d,c as i,o as a,ag as s}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/koog/model-capabilities.md","filePath":"ja/koog/model-capabilities.md","lastUpdated":1755146406000}'),l={name:"ja/koog/model-capabilities.md"};function e(n,t,h,p,r,o){return a(),i("div",null,t[0]||(t[0]=[s(`<p>Koogは、さまざまなLLMプロバイダーの大規模言語モデル（LLM）とプロバイダーに依存しない方法で連携するための、一連の抽象化と実装を提供します。このセットには、以下のクラスが含まれます。</p><ul><li><p><strong>LLMCapability</strong>: LLMがサポートできるさまざまな機能を定義するクラス階層。例えば、以下のような機能があります。</p><ul><li>応答のランダム性を制御するための温度調整</li><li>外部システム連携のためのツール統合</li><li>視覚データ処理のための視覚処理</li><li>ベクトル表現のための埋め込み生成</li><li>テキスト生成タスクのための補完</li><li>構造化データ（SimpleおよびFullバリアントのJSON）のためのスキーマ対応</li><li>探索的な応答のための推測</li></ul></li><li><p><strong>LLModel</strong>: プロバイダー、一意の識別子、サポートされる機能を持つ特定のLLMを表すデータクラス。</p></li></ul><p>これは、異なるLLMプロバイダーと統一された方法で連携するための基盤となり、アプリケーションがプロバイダー固有の詳細を抽象化しながら、さまざまなモデルと連携することを可能にします。</p><h2 id="llm機能" tabindex="-1">LLM機能 <a class="header-anchor" href="#llm機能" aria-label="Permalink to &quot;LLM機能&quot;">​</a></h2><p>LLM機能は、大規模言語モデルがサポートできる特定の特徴や機能を表します。Koogフレームワークでは、機能は特定のモデルができることと、どのように構成できるかを定義するために使用されます。各機能は、<code>LLMCapability</code> クラスのサブクラスまたはデータオブジェクトとして表されます。</p><p>アプリケーションでLLMを使用するために構成する際、<code>LLModel</code> インスタンスを作成するときに、サポートする機能を <code>capabilities</code> リストに追加して指定します。これにより、フレームワークはモデルと適切に連携し、その機能を適切に使用できます。</p><h3 id="コア機能" tabindex="-1">コア機能 <a class="header-anchor" href="#コア機能" aria-label="Permalink to &quot;コア機能&quot;">​</a></h3><p>以下のリストには、Koogフレームワークでモデルが利用できる、コアとなるLLM固有の機能が含まれています。</p><ul><li><p><strong>Speculation</strong> (<code>LLMCapability.Speculation</code>): モデルが、さまざまな確度で推測的または探索的な応答を生成できるようにします。より広範な潜在的結果が望まれるクリエイティブなシナリオや仮説的なシナリオで役立ちます。</p></li><li><p><strong>Temperature</strong> (<code>LLMCapability.Temperature</code>): モデルの応答のランダム性または創造性のレベルを調整できます。高い温度値はより多様な出力を生成し、低い値はより焦点を絞った決定論的な応答につながります。</p></li><li><p><strong>Tools</strong> (<code>LLMCapability.Tools</code>): 外部ツールの利用または統合をサポートすることを示します。この機能により、モデルは特定のツールを実行したり、外部システムと連携したりできます。</p></li><li><p><strong>Tool choice</strong> (<code>LLMCapability.ToolChoice</code>): LLMでのツール呼び出しの動作を構成します。モデルに応じて、以下のように構成できます。</p><ul><li>テキスト生成とツール呼び出しのどちらかを自動的に選択する</li><li>テキストではなくツール呼び出しのみを生成する</li><li>ツール呼び出しではなくテキストのみを生成する</li><li>定義されたツールの中から特定のツールを強制的に呼び出す</li></ul></li><li><p><strong>Multiple choices</strong> (<code>LLMCapability.MultipleChoices</code>): モデルが単一のプロンプトに対して複数の独立した応答選択肢を生成できるようにします。</p></li></ul><h3 id="メディア処理機能" tabindex="-1">メディア処理機能 <a class="header-anchor" href="#メディア処理機能" aria-label="Permalink to &quot;メディア処理機能&quot;">​</a></h3><p>以下のリストは、画像や音声などのメディアコンテンツを処理するための一連の機能を表します。</p><ul><li><p><strong>Vision</strong> (<code>LLMCapability.Vision</code>): 視覚データを処理、分析し、そこから洞察を推測する、視覚ベースの機能のためのクラスです。 以下の種類の視覚データをサポートします。</p><ul><li><strong>Image</strong> (<code>LLMCapability.Vision.Image</code>): 画像分析、認識、解釈などの画像関連の視覚タスクを処理します。</li><li><strong>Video</strong> (<code>LLMCapability.Vision.Video</code>): ビデオコンテンツの分析と理解を含むビデオデータを処理します。</li></ul></li><li><p><strong>Audio</strong> (<code>LLMCapability.Audio</code>): 転写（文字起こし）、音声生成、音声ベースのインタラクションなどの音声関連機能を提供します。</p></li><li><p><strong>Document</strong> (<code>LLMCapability.Document</code>): ドキュメントベースの入出力を処理することを可能にします。</p></li></ul><h3 id="テキスト処理機能" tabindex="-1">テキスト処理機能 <a class="header-anchor" href="#テキスト処理機能" aria-label="Permalink to &quot;テキスト処理機能&quot;">​</a></h3><p>以下の機能リストは、テキスト生成および処理機能を表します。</p><ul><li><p><strong>Embedding</strong> (<code>LLMCapability.Embed</code>): モデルが入力テキストからベクトル埋め込みを生成できるようにし、類似性比較、クラスタリング、その他のベクトルベースの分析を可能にします。</p></li><li><p><strong>Completion</strong> (<code>LLMCapability.Completion</code>): 与えられた入力コンテキストに基づいてテキストまたはコンテンツを生成することを含みます。例えば、文の補完、提案の生成、または入力データに合わせたコンテンツの作成などです。</p></li><li><p><strong>Prompt caching</strong> (<code>LLMCapability.PromptCaching</code>): プロンプトのキャッシング機能をサポートし、繰り返しまたは類似のクエリのパフォーマンスを潜在的に向上させます。</p></li><li><p><strong>Moderation</strong> (<code>LLMCapability.Moderation</code>): モデルが潜在的に有害なコンテンツのためにテキストを分析し、ハラスメント、ヘイトスピーチ、自傷行為、性的コンテンツ、暴力などのさまざまなカテゴリに基づいて分類できるようにします。</p></li></ul><h3 id="スキーマ機能" tabindex="-1">スキーマ機能 <a class="header-anchor" href="#スキーマ機能" aria-label="Permalink to &quot;スキーマ機能&quot;">​</a></h3><p>以下のリストは、構造化データの処理に関連する機能を示します。</p><ul><li><strong>Schema</strong> (<code>LLMCapability.Schema</code>): 特定の形式を使用したデータインタラクションとエンコーディングに関連する構造化スキーマ機能のためのクラスです。 以下の形式をサポートします。 <ul><li><strong>JSON</strong> (<code>LLMCapability.Schema.JSON</code>): さまざまなレベルのJSONスキーマサポート: <ul><li><strong>Basic</strong> (<code>LLMCapability.Schema.JSON.Basic</code>): 軽量または基本的なJSON処理機能を提供します。</li><li><strong>Standard</strong> (<code>LLMCapability.Schema.JSON.Standard</code>): 複雑なデータ構造に対する包括的なJSONスキーマサポートを提供します。</li></ul></li></ul></li></ul><h2 id="モデル-llmodel-設定の作成" tabindex="-1">モデル (LLModel) 設定の作成 <a class="header-anchor" href="#モデル-llmodel-設定の作成" aria-label="Permalink to &quot;モデル (LLModel) 設定の作成&quot;">​</a></h2><p>モデルを普遍的でプロバイダー非依存な方法で定義するには、<code>LLModel</code> クラスのインスタンスとして以下のパラメータでモデル設定を作成します。</p><table tabindex="0"><thead><tr><th>名前</th><th>データ型</th><th>必須</th><th>デフォルト</th><th>説明</th></tr></thead><tbody><tr><td><code>provider</code></td><td>LLMProvider</td><td>はい</td><td></td><td>LLMのプロバイダー（GoogleやOpenAIなど）。これはモデルを作成またはホストしている企業や組織を識別します。</td></tr><tr><td><code>id</code></td><td>String</td><td>はい</td><td></td><td>LLMインスタンスの一意の識別子。通常、これは特定のモデルバージョンまたは名前を表します。例えば、<code>gpt-4-turbo</code>、<code>claude-3-opus</code>、<code>llama-3-2</code>など。</td></tr><tr><td><code>capabilities</code></td><td>List&lt;LLMCapability&gt;</td><td>はい</td><td></td><td>LLMがサポートする機能のリスト（温度調整、ツール使用、スキーマベースのタスクなど）。これらの機能は、モデルができることと、どのように構成できるかを定義します。</td></tr><tr><td><code>contextLength</code></td><td>Long</td><td>はい</td><td></td><td>LLMのコンテキスト長。これはLLMが処理できる最大トークン数です。</td></tr><tr><td><code>maxOutputTokens</code></td><td>Long</td><td>いいえ</td><td><code>null</code></td><td>LLMのプロバイダーによって生成できる最大トークン数。</td></tr></tbody></table><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><p>このセクションでは、さまざまな機能を持つ<code>LLModel</code>インスタンスを作成する詳細な例を示します。</p><p>以下のコードは、コア機能を持つ基本的なLLM構成を表しています。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.OpenAI,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt-4-turbo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Tools,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Schema.JSON.Standard</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 128_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>以下のモデル構成は、視覚機能を備えたマルチモーダルLLMです。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> visionModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.OpenAI,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt-4-vision&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Vision.Image,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.MultipleChoices</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1_047_576</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxOutputTokens </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32_768</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>音声処理機能を備えたLLM:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> audioModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.Anthropic,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;claude-3-opus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Audio,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.PromptCaching</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>LLModel</code> インスタンスとしてモデルを作成し、関連するすべてのパラメータを指定する必要があるだけでなく、Koogには、サポートされる機能を持つ事前定義されたモデルとその構成のコレクションが含まれています。 事前定義されたOllamaモデルを使用するには、次のように指定します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metaModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OllamaModels.Meta.LLAMA_3_2</span></span></code></pre></div><p>モデルが特定の機能をサポートしているかどうかを確認するには、<code>contains</code> メソッドを使用して <code>capabilities</code> リストにその機能が存在するかをチェックします。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Check if models support specific capabilities</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> supportsTools </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LLMCapability.Tools) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> supportsVideo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> visionModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LLMCapability.Vision.Video) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Check for schema capabilities</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsonCapability </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterIsInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LLMCapability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firstOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hasFullJsonSupport </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsonCapability </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMCapability.Schema.JSON.Standard </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h3 id="モデルごとのllm機能" tabindex="-1">モデルごとのLLM機能 <a class="header-anchor" href="#モデルごとのllm機能" aria-label="Permalink to &quot;モデルごとのLLM機能&quot;">​</a></h3><p>このリファレンスは、さまざまなプロバイダーの各モデルでどのLLM機能がサポートされているかを示しています。</p><p>以下の表では:</p><ul><li><code>✓</code> は、モデルがその機能をサポートしていることを示します。</li><li><code>-</code> は、モデルがその機能をサポートしていないことを示します。</li><li>JSONスキーマについては、<code>Full</code> または <code>Simple</code> が、モデルがサポートするJSONスキーマ機能のどのバリアントであるかを示します。</li></ul><h4 id="googleモデル" tabindex="-1">Googleモデル <a class="header-anchor" href="#googleモデル" aria-label="Permalink to &quot;Googleモデル&quot;">​</a></h4><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>補完</th><th>複数選択肢</th><th>ツール</th><th>ツール選択</th><th>視覚 (画像)</th><th>視覚 (ビデオ)</th><th>音声</th></tr></thead><tbody><tr><td>Gemini2_5Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_5Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0Flash001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0FlashLite</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0FlashLite001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5ProLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Pro002</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5FlashLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash002</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8B001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8BLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="openaiモデル" tabindex="-1">OpenAIモデル <a class="header-anchor" href="#openaiモデル" aria-label="Permalink to &quot;OpenAIモデル&quot;">​</a></h4><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>補完</th><th>複数選択肢</th><th>ツール</th><th>ツール選択</th><th>視覚 (画像)</th><th>視覚 (ビデオ)</th><th>音声</th><th>推測</th><th>モデレーション</th></tr></thead><tbody><tr><td>Reasoning.GPT4oMini</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O3Mini</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O1Mini</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O3</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O1</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Chat.GPT4o</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Chat.GPT4_1</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Audio.GPT4oMiniAudio</td><td>✓</td><td>-</td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td></tr><tr><td>Audio.GPT4oAudio</td><td>✓</td><td>-</td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td></tr><tr><td>Moderation.Omni</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr><tr><td>Moderation.Text</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr></tbody></table><h4 id="anthropicモデル" tabindex="-1">Anthropicモデル <a class="header-anchor" href="#anthropicモデル" aria-label="Permalink to &quot;Anthropicモデル&quot;">​</a></h4><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>補完</th><th>ツール</th><th>ツール選択</th><th>視覚 (画像)</th></tr></thead><tbody><tr><td>Opus_4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_3_7</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Haiku_3_5</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_3_5</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Haiku_3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Opus_3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="ollamaモデル" tabindex="-1">Ollamaモデル <a class="header-anchor" href="#ollamaモデル" aria-label="Permalink to &quot;Ollamaモデル&quot;">​</a></h4><h5 id="metaモデル" tabindex="-1">Metaモデル <a class="header-anchor" href="#metaモデル" aria-label="Permalink to &quot;Metaモデル&quot;">​</a></h5><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>ツール</th><th>モデレーション</th></tr></thead><tbody><tr><td>LLAMA_3_2_3B</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_3_2</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_4</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_GUARD_3</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr></tbody></table><h5 id="alibabaモデル" tabindex="-1">Alibabaモデル <a class="header-anchor" href="#alibabaモデル" aria-label="Permalink to &quot;Alibabaモデル&quot;">​</a></h5><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>ツール</th></tr></thead><tbody><tr><td>QWEN_2_5_05B</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWEN_3_06B</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWQ</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWEN_CODER_2_5_32B</td><td>✓</td><td>Simple</td><td>✓</td></tr></tbody></table><h5 id="groqモデル" tabindex="-1">Groqモデル <a class="header-anchor" href="#groqモデル" aria-label="Permalink to &quot;Groqモデル&quot;">​</a></h5><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>ツール</th></tr></thead><tbody><tr><td>LLAMA_3_GROK_TOOL_USE_8B</td><td>✓</td><td>Full</td><td>✓</td></tr><tr><td>LLAMA_3_GROK_TOOL_USE_70B</td><td>✓</td><td>Full</td><td>✓</td></tr></tbody></table><h5 id="graniteモデル" tabindex="-1">Graniteモデル <a class="header-anchor" href="#graniteモデル" aria-label="Permalink to &quot;Graniteモデル&quot;">​</a></h5><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>ツール</th><th>視覚 (画像)</th></tr></thead><tbody><tr><td>GRANITE_3_2_VISION</td><td>✓</td><td>Simple</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="openrouterモデル" tabindex="-1">OpenRouterモデル <a class="header-anchor" href="#openrouterモデル" aria-label="Permalink to &quot;OpenRouterモデル&quot;">​</a></h4><table tabindex="0"><thead><tr><th>モデル</th><th>温度</th><th>JSONスキーマ</th><th>補完</th><th>推測</th><th>ツール</th><th>ツール選択</th><th>視覚 (画像)</th></tr></thead><tbody><tr><td>Phi4Reasoning</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Claude3Opus</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3Sonnet</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3Haiku</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>GPT4o</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT4Turbo</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT35Turbo</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Gemini15Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini15Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Llama3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Llama3Instruct</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Mistral7B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Mixtral8x7B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Claude3VisionSonnet</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3VisionOpus</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3VisionHaiku</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table>`,54)]))}const E=d(l,[["render",e]]);export{c as __pageData,E as default};
