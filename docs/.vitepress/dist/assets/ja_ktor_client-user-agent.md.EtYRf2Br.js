import{_ as t,C as i,c as l,o as p,G as a,ag as h}from"./chunks/framework.Bksy39di.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/client-user-agent.md","filePath":"ja/ktor/client-user-agent.md","lastUpdated":1755457140000}'),r={name:"ja/ktor/client-user-agent.md"};function k(o,s,d,c,g,E){const e=i("TopicTitle"),n=i("primary-label");return p(),l("div",null,[a(e,{labelRef:"client-plugin",title:"ユーザーエージェント"}),a(n,{ref:"client-plugin"},null,512),s[0]||(s[0]=h(`<p><a href="https://api.ktor.io/ktor-client/ktor-client-core/io.ktor.client.plugins/-user-agent" target="_blank" rel="noreferrer">UserAgent</a>プラグインは、すべての<a href="./client-requests">リクエスト</a>に<code>User-Agent</code>ヘッダーを追加します。</p><h2 id="add_dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p><code>UserAgent</code>は<a href="./client-dependencies">ktor-client-core</a>アーティファクトのみ必要とし、特定の依存関係は必要ありません。</p><h2 id="install_plugin" tabindex="-1">UserAgentのインストールと設定 <a class="header-anchor" href="#install_plugin" aria-label="Permalink to &quot;UserAgentのインストールと設定 {id=&quot;install_plugin&quot;}&quot;">​</a></h2><p><code>UserAgent</code>をインストールするには、<a href="./client-create-and-configure#configure-client">クライアント設定ブロック</a>内で<code>install</code>関数に渡します。その後、<code>agent</code>プロパティを使用して<code>User-Agent</code>値を指定します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.engine.cio.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.client.plugins.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UserAgent) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Ktor client&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Ktorでは、対応する関数を使用して、ブラウザライクまたはcurlライクな<code>User-Agent</code>値を追加することもできます。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    BrowserUserAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ... or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CurlUserAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,8))])}const F=t(r,[["render",k]]);export{y as __pageData,F as default};
