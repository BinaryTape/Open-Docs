import{_ as p}from"./chunks/gradle-reload-button.3MKk9eU8.js";import{_ as r,C as h,c as d,o as E,ag as k,G as l,w as t,j as s,a as i}from"./chunks/framework.Bksy39di.js";const v=JSON.parse('{"title":"Dokka Gradle 플러그인 v2로 마이그레이션","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/dokka-migration.md","filePath":"ko/kotlin/dokka-migration.md","lastUpdated":1754307826000}'),o={name:"ko/kotlin/dokka-migration.md"};function g(c,a,y,u,F,b){const n=h("tab"),e=h("tabs");return E(),d("div",null,[a[6]||(a[6]=k(`<h1 id="dokka-gradle-플러그인-v2로-마이그레이션" tabindex="-1">Dokka Gradle 플러그인 v2로 마이그레이션 <a class="header-anchor" href="#dokka-gradle-플러그인-v2로-마이그레이션" aria-label="Permalink to &quot;Dokka Gradle 플러그인 v2로 마이그레이션&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>Dokka Gradle 플러그인 v2는 <a href="https://kotlinlang.org/docs/components-stability.html#stability-levels-explained" target="_blank" rel="noreferrer">실험적</a> 기능입니다. 언제든지 변경될 수 있습니다. <a href="https://github.com/Kotlin/dokka/issues" target="_blank" rel="noreferrer">GitHub</a>에 대한 여러분의 피드백에 감사드립니다.</p></div><p>Dokka Gradle 플러그인(DGP)은 Gradle로 빌드된 Kotlin 프로젝트를 위한 포괄적인 API 문서를 생성하는 도구입니다.</p><p>DGP는 Kotlin의 KDoc 주석과 Java의 Javadoc 주석을 모두 원활하게 처리하여 정보를 추출하고 <a href="#select-documentation-output-format">HTML 또는 Javadoc</a> 형식으로 구조화된 문서를 생성합니다.</p><p>Dokka 2.0.0부터 DGP의 새로운 버전인 Dokka Gradle 플러그인 v2를 사용해 볼 수 있습니다. Dokka 2.0.0에서는 Dokka Gradle 플러그인을 v1 또는 v2 모드에서 사용할 수 있습니다.</p><p>DGP v2는 Gradle 모범 사례와 더 밀접하게 일치하도록 DGP에 상당한 개선 사항을 도입했습니다.</p><ul><li>Gradle 타입을 채택하여 성능이 향상됩니다.</li><li>저수준의 태스크 기반 설정 대신 직관적인 최상위 DSL 구성(top-level DSL configuration)을 사용하여 빌드 스크립트(build scripts)와 가독성을 단순화합니다.</li><li>문서 집계에 대한 선언적인 접근 방식을 채택하여 다중 프로젝트 문서 관리를 더 쉽게 만듭니다.</li><li>타입 안전(type-safe) 플러그인 구성을 사용하여 빌드 스크립트의 안정성과 유지 보수성을 향상시킵니다.</li><li>Gradle <a href="https://docs.gradle.org/current/userguide/configuration_cache.html" target="_blank" rel="noreferrer">구성 캐시</a> 및 <a href="https://docs.gradle.org/current/userguide/build_cache.html" target="_blank" rel="noreferrer">빌드 캐시</a>를 완벽하게 지원하여 성능을 향상시키고 빌드 작업을 단순화합니다.</li></ul><h2 id="시작하기-전에" tabindex="-1">시작하기 전에 <a class="header-anchor" href="#시작하기-전에" aria-label="Permalink to &quot;시작하기 전에&quot;">​</a></h2><p>마이그레이션을 시작하기 전에 다음 단계를 완료하세요.</p><h3 id="지원되는-버전-확인" tabindex="-1">지원되는 버전 확인 <a class="header-anchor" href="#지원되는-버전-확인" aria-label="Permalink to &quot;지원되는 버전 확인&quot;">​</a></h3><p>프로젝트가 최소 버전 요구 사항을 충족하는지 확인하세요.</p><table tabindex="0"><thead><tr><th style="text-align:left;"><strong>도구</strong></th><th style="text-align:left;"><strong>버전</strong></th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://docs.gradle.org/current/userguide/upgrading_version_8.html" target="_blank" rel="noreferrer">Gradle</a></td><td style="text-align:left;">7.6 이상</td></tr><tr><td style="text-align:left;"><a href="https://developer.android.com/build/agp-upgrade-assistant" target="_blank" rel="noreferrer">Android Gradle plugin</a></td><td style="text-align:left;">7.0 이상</td></tr><tr><td style="text-align:left;"><a href="https://kotlinlang.org/docs/gradle-configure-project.html" target="_blank" rel="noreferrer">Kotlin Gradle plugin</a></td><td style="text-align:left;">1.9 이상</td></tr></tbody></table><h3 id="dgp-v2-활성화" tabindex="-1">DGP v2 활성화 <a class="header-anchor" href="#dgp-v2-활성화" aria-label="Permalink to &quot;DGP v2 활성화&quot;">​</a></h3><p>프로젝트의 <code>build.gradle.kts</code> 파일에 있는 <code>plugins {}</code> 블록에서 Dokka 버전을 2.0.0으로 업데이트하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.1.10&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.dokka&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>또는 <a href="https://docs.gradle.org/current/userguide/platforms.html#sub:version-catalog" target="_blank" rel="noreferrer">버전 카탈로그</a>를 사용하여 Dokka Gradle 플러그인 v2를 활성화할 수 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>기본적으로 DGP v2는 HTML 형식으로 문서를 생성합니다. Javadoc 또는 HTML과 Javadoc 형식을 모두 생성하려면 적절한 플러그인을 추가하세요. 플러그인에 대한 자세한 내용은 <a href="#select-documentation-output-format">문서 출력 형식 선택</a>을 참조하세요.</p></div><h3 id="마이그레이션-도우미-활성화" tabindex="-1">마이그레이션 도우미 활성화 <a class="header-anchor" href="#마이그레이션-도우미-활성화" aria-label="Permalink to &quot;마이그레이션 도우미 활성화&quot;">​</a></h3><p>프로젝트의 <code>gradle.properties</code> 파일에서 다음 Gradle 속성을 설정하여 도우미와 함께 DGP v2를 활성화하세요.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>org.jetbrains.dokka.experimental.gradle.pluginMode=V2EnabledWithHelpers</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>프로젝트에 <code>gradle.properties</code> 파일이 없으면 프로젝트의 루트 디렉터리에 생성하세요.</p></div><p>이 속성은 마이그레이션 도우미와 함께 DGP v2 플러그인을 활성화합니다. 이 도우미는 빌드 스크립트가 DGP v2에서 더 이상 사용할 수 없는 DGP v1의 태스크를 참조할 때 컴파일 오류를 방지합니다.</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>마이그레이션 도우미가 마이그레이션을 적극적으로 돕지는 않습니다. 이는 새로운 API로 전환하는 동안 빌드 스크립트가 중단되지 않도록 할 뿐입니다.</p></div><p>마이그레이션이 완료되면 <a href="#set-the-opt-in-flag">마이그레이션 도우미를 비활성화</a>하세요.</p><h3 id="프로젝트를-gradle과-동기화" tabindex="-1">프로젝트를 Gradle과 동기화 <a class="header-anchor" href="#프로젝트를-gradle과-동기화" aria-label="Permalink to &quot;프로젝트를 Gradle과 동기화&quot;">​</a></h3><p>DGP v2 및 마이그레이션 도우미를 활성화한 후 프로젝트를 Gradle과 동기화하여 DGP v2가 올바르게 적용되었는지 확인하세요.</p><ul><li>IntelliJ IDEA를 사용하는 경우 Gradle 도구 창에서 <strong>모든 Gradle 프로젝트 다시 로드</strong> <img src="`+p+`" alt="Reload button" width="30" type="joined"> 버튼을 클릭하세요.</li><li>Android Studio를 사용하는 경우 <strong>파일</strong> | <strong>Gradle 파일과 프로젝트 동기화</strong>를 선택하세요.</li></ul><h2 id="프로젝트-마이그레이션" tabindex="-1">프로젝트 마이그레이션 <a class="header-anchor" href="#프로젝트-마이그레이션" aria-label="Permalink to &quot;프로젝트 마이그레이션&quot;">​</a></h2><p>Dokka Gradle 플러그인을 v2로 업데이트한 후, 프로젝트에 해당하는 마이그레이션 단계를 따르세요.</p><h3 id="구성-옵션-조정" tabindex="-1">구성 옵션 조정 <a class="header-anchor" href="#구성-옵션-조정" aria-label="Permalink to &quot;구성 옵션 조정&quot;">​</a></h3><p>DGP v2는 <a href="/ko/kotlin/dokka-gradle#configuration-options">Gradle 구성 옵션</a>에 일부 변경 사항을 도입했습니다. <code>build.gradle.kts</code> 파일에서 프로젝트 설정에 따라 구성 옵션을 조정하세요.</p><h4 id="dgp-v2의-최상위-dsl-구성" tabindex="-1">DGP v2의 최상위 DSL 구성 <a class="header-anchor" href="#dgp-v2의-최상위-dsl-구성" aria-label="Permalink to &quot;DGP v2의 최상위 DSL 구성&quot;">​</a></h4><p>DGP v1의 구성 구문을 DGP v2의 최상위 <code>dokka {}</code> DSL 구성으로 대체하세요.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DokkaTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">configureEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    suppressInheritedMembers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    failOnWarning.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokkaSourceSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        named</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            moduleName.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Project Name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            includes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;README.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            sourceLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                localDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main/kotlin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                remoteUrl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                remoteLineSuffix.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#L&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokkaHtml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pluginConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DokkaBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DokkaBaseConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        customStyleSheets.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;styles.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        customAssets.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;logo.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        footerMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(c) Your Company&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>DGP v2에서의 구성:</p><p><code>build.gradle.kts</code> 파일의 구문은 Gradle의 Kotlin DSL이 타입 안전(type-safe) 접근자를 사용하기 때문에 일반 <code>.kt</code> 파일(예: 사용자 지정 Gradle 플러그인에 사용되는 파일)과 다릅니다.</p>`,37)),l(e,{group:"dokka-configuration"},{default:t(()=>[l(n,{title:"Gradle 구성 파일","group-key":"gradle"},{default:t(()=>a[0]||(a[0]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// build.gradle.kts")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dokka"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    moduleName."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Project Name"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    dokkaPublications."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"html"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        suppressInheritedMembers."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        failOnWarning."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    dokkaSourceSets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"main"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        includes."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"README.md"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        sourceLink"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            localDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"file"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"src/main/kotlin"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            remoteUrl"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"https://example.com/src"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            remoteLineSuffix."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"#L"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    pluginsConfiguration."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"html"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        customStyleSheets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"styles.css"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        customAssets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"logo.png"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        footerMessage."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"(c) Your Company"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(n,{title:"Kotlin 파일","group-key":"kotlin"},{default:t(()=>a[1]||(a[1]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// CustomPlugin.kt")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.gradle.api.Plugin")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.gradle.api.Project")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.jetbrains.dokka.gradle.DokkaExtension")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.jetbrains.dokka.gradle.engine.plugins.DokkaHtmlPluginParameters")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"abstract"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," CustomPlugin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," : "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Plugin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Project"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    override"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," apply"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project: "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Project"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        project.plugins."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"apply"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.dokka"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        project.extensions."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"configure"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(DokkaExtension::"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".java) { dokka "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dokka.dokkaPublications."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"named"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"html"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") { publication "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                publication.suppressInheritedMembers."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                publication.failOnWarning."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            }")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dokka.dokkaSourceSets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"named"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"main"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") { dss "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                dss.includes."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"README.md"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                dss."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"sourceLink"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    it.localDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"file"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"src/main/kotlin"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    it."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"remoteUrl"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"https://example.com/src"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    it.remoteLineSuffix."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"#L"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            }")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dokka.pluginsConfiguration."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"named"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"html"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", DokkaHtmlPluginParameters::"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".java) { html "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                html.customStyleSheets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"styles.css"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                html.customAssets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"logo.png"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                html.footerMessage."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"(c) Your Company"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[7]||(a[7]=k(`<h4 id="가시성-설정" tabindex="-1">가시성 설정 <a class="header-anchor" href="#가시성-설정" aria-label="Permalink to &quot;가시성 설정&quot;">​</a></h4><p><code>documentedVisibilities</code> 속성을 <code>Visibility.PUBLIC</code>에서 <code>VisibilityModifier.Public</code>으로 설정하세요.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.jetbrains.dokka.DokkaConfiguration.Visibility</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">documentedVisibilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Visibility.PUBLIC)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>DGP v2에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.jetbrains.dokka.gradle.engine.parameters.VisibilityModifier</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">documentedVisibilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(VisibilityModifier.Public)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// OR</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">documentedVisibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(VisibilityModifier.Public)</span></span></code></pre></div><p>또한 DGP v2의 <a href="https://github.com/Kotlin/dokka/blob/v2.0.0/dokka-runners/dokka-gradle-plugin/src/main/kotlin/engine/parameters/HasConfigurableVisibilityModifiers.kt#L14-L16" target="_blank" rel="noreferrer">유틸리티 함수</a>를 사용하여 문서화된 가시성을 추가하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> documentedVisibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vararg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> visibilities: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VisibilityModifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    documentedVisibilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(visibilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><h4 id="소스-링크" tabindex="-1">소스 링크 <a class="header-anchor" href="#소스-링크" aria-label="Permalink to &quot;소스 링크&quot;">​</a></h4><p>생성된 문서에서 원격 저장소의 해당 소스 코드로 탐색할 수 있도록 소스 링크를 구성하세요. 이 구성을 위해 <code>dokkaSourceSets.main{}</code> 블록을 사용하세요.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DokkaTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">configureEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokkaSourceSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        named</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            sourceLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                localDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main/kotlin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                remoteUrl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/your-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                remoteLineSuffix.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#L&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>DGP v2에서의 구성:</p><p><code>build.gradle.kts</code> 파일의 구문은 Gradle의 Kotlin DSL이 타입 안전(type-safe) 접근자를 사용하기 때문에 일반 <code>.kt</code> 파일(예: 사용자 지정 Gradle 플러그인에 사용되는 파일)과 다릅니다.</p>`,14)),l(e,{group:"dokka-configuration"},{default:t(()=>[l(n,{title:"Gradle 구성 파일","group-key":"gradle"},{default:t(()=>a[2]||(a[2]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// build.gradle.kts")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dokka"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    dokkaSourceSets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"main"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        sourceLink"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            localDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"file"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"src/main/kotlin"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"            remoteUrl"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"https://github.com/your-repo"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            remoteLineSuffix."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"#L"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(n,{title:"Kotlin 파일","group-key":"kotlin"},{default:t(()=>a[3]||(a[3]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// CustomPlugin.kt")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.gradle.api.Plugin")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.gradle.api.Project")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.jetbrains.dokka.gradle.DokkaExtension")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"abstract"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," CustomPlugin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," : "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Plugin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Project"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    override"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," apply"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project: "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Project"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        project.plugins."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"apply"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.dokka"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        project.extensions."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"configure"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(DokkaExtension::"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".java) { dokka "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dokka.dokkaSourceSets."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"named"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"main"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") { dss "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                dss.includes."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"README.md"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                dss."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"sourceLink"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    it.localDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"file"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"src/main/kotlin"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    it."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"remoteUrl"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"https://example.com/src"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    it.remoteLineSuffix."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"#L"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[8]||(a[8]=k(`<p>소스 링크 구성이 <a href="https://docs.gradle.org/current/userguide/upgrading_version_8.html#deprecated_invalid_url_decoding" target="_blank" rel="noreferrer">변경</a>되었으므로, 원격 URL을 지정하려면 <code>URL</code> 클래스 대신 <code>URI</code> 클래스를 사용하세요.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteUrl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/your-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>DGP v2에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteUrl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/your-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remoteUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/your-repo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>또한 DGP v2에는 URL을 설정하기 위한 두 가지 <a href="https://github.com/Kotlin/dokka/blob/220922378e6c68eb148fda2ec80528a1b81478c9/dokka-runners/dokka-gradle-plugin/src/main/kotlin/engine/parameters/DokkaSourceLinkSpec.kt#L82-L96" target="_blank" rel="noreferrer">유틸리티 함수</a>가 있습니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remoteUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http-url-reference&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    remoteUrl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// and</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remoteUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Provider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    remoteUrl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h4 id="외부-문서-링크" tabindex="-1">외부 문서 링크 <a class="header-anchor" href="#외부-문서-링크" aria-label="Permalink to &quot;외부 문서 링크&quot;">​</a></h4><p><code>register()</code> 메서드를 사용하여 각 링크를 정의하는 외부 문서 링크를 등록하세요. <code>externalDocumentationLinks</code> API는 Gradle DSL 규칙에 맞춰 이 메서드를 사용합니다.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokkaHtml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokkaSourceSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        configureEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            externalDocumentationLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/docs/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                packageListUrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/package-list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toURI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>DGP v2에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dokkaSourceSets.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">configureEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        externalDocumentationLinks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example-docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/docs/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            packageListUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com/docs/package-list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="사용자-정의-애셋" tabindex="-1">사용자 정의 애셋 <a class="header-anchor" href="#사용자-정의-애셋" aria-label="Permalink to &quot;사용자 정의 애셋&quot;">​</a></h4><p>파일 컬렉션(<a href="https://docs.gradle.org/8.10/userguide/lazy_configuration.html#working_with_files_in_lazy_properties" target="_blank" rel="noreferrer"><code>FileCollection</code>)</a>을 사용하여 <a href="/ko/kotlin/dokka-html#customize-assets"><code>customAssets</code></a> 속성을 사용하고, 목록(<code>var List&lt;File&gt;</code>) 대신 사용하세요.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">customAssets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example2.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>DGP v2에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">customAssets.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example2.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="출력-디렉터리" tabindex="-1">출력 디렉터리 <a class="header-anchor" href="#출력-디렉터리" aria-label="Permalink to &quot;출력 디렉터리&quot;">​</a></h4><p>생성된 Dokka 문서의 출력 디렉터리를 지정하려면 <code>dokka {}</code> 블록을 사용하세요.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokkaHtml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    outputDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layout.buildDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dokkaDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>DGP v2에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dokkaPublications.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        outputDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layout.buildDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dokkaDir&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="추가-파일의-출력-디렉터리" tabindex="-1">추가 파일의 출력 디렉터리 <a class="header-anchor" href="#추가-파일의-출력-디렉터리" aria-label="Permalink to &quot;추가 파일의 출력 디렉터리&quot;">​</a></h4><p><code>dokka {}</code> 블록 내에서 단일 모듈 및 다중 모듈 프로젝트 모두에 대한 출력 디렉터리를 지정하고 추가 파일을 포함하세요.</p><p>DGP v2에서는 단일 모듈 및 다중 모듈 프로젝트에 대한 구성이 통합되었습니다. <code>dokkaHtml</code> 및 <code>dokkaHtmlMultiModule</code> 태스크를 개별적으로 구성하는 대신, <code>dokka {}</code> 블록 내의 <code>dokkaPublications.html {}</code>에서 설정을 지정하세요.</p><p>다중 모듈 프로젝트의 경우, 루트 프로젝트의 구성에서 출력 디렉터리를 설정하고 추가 파일(예: <code>README.md</code>)을 포함하세요.</p><p>DGP v1에서의 구성:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokkaHtmlMultiModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    outputDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rootDir.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docs/api/0.x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    includes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.layout.projectDirectory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;README.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>DGP v2에서의 구성:</p><p><code>build.gradle.kts</code> 파일의 구문은 Gradle의 Kotlin DSL이 타입 안전(type-safe) 접근자를 사용하기 때문에 일반 <code>.kt</code> 파일(예: 사용자 지정 Gradle 플러그인에 사용되는 파일)과 다릅니다.</p>`,33)),l(e,{group:"dokka-configuration"},{default:t(()=>[l(n,{title:"Gradle 구성 파일","group-key":"gradle"},{default:t(()=>a[4]||(a[4]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// build.gradle.kts")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dokka"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    dokkaPublications."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"html"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        outputDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(rootDir."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"resolve"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"docs/api/0.x"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        includes."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project.layout.projectDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"file"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"README.md"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),l(n,{title:"Kotlin 파일","group-key":"kotlin"},{default:t(()=>a[5]||(a[5]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// CustomPlugin.kt")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.gradle.api.Plugin")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.gradle.api.Project")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," org.jetbrains.dokka.gradle.DokkaExtension")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"abstract"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," CustomPlugin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," : "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Plugin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Project"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    override"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," fun"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," apply"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project: "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Project"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        project.plugins."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"apply"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"org.jetbrains.dokka"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        project.extensions."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"configure"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(DokkaExtension::"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".java) { dokka "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            dokka.dokkaPublications."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"named"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"html"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") { html "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                html.outputDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"set"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project.rootDir."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"resolve"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"docs/api/0.x"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                html.includes."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"from"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(project.layout.projectDirectory."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"file"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"README.md"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[9]||(a[9]=k(`<h3 id="dokka-플러그인-구성" tabindex="-1">Dokka 플러그인 구성 <a class="header-anchor" href="#dokka-플러그인-구성" aria-label="Permalink to &quot;Dokka 플러그인 구성&quot;">​</a></h3><p>JSON으로 내장 Dokka 플러그인을 구성하는 방식은 타입 안전(type-safe) DSL을 선호하여 더 이상 사용되지 않습니다. 이 변경 사항은 Gradle의 증분 빌드 시스템과의 호환성을 개선하고 태스크 입력 추적을 향상시킵니다.</p><p>DGP v1에서의 구성:</p><p>DGP v1에서는 Dokka 플러그인이 JSON을 사용하여 수동으로 구성되었습니다. 이 접근 방식은 Gradle 최신 상태 확인을 위한 <a href="https://docs.gradle.org/current/userguide/incremental_build.html" target="_blank" rel="noreferrer">태스크 입력 등록</a>에서 문제를 일으켰습니다.</p><p>다음은 <a href="https://kotl.in/dokka-versioning-plugin" target="_blank" rel="noreferrer">Dokka 버전 관리 플러그인</a>에 대한 더 이상 사용되지 않는 JSON 기반 구성의 예입니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokkaHtmlMultiModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pluginsMapConfiguration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        mapOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;org.jetbrains.dokka.versioning.VersioningPlugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                { &quot;version&quot;: &quot;1.2&quot;, &quot;olderVersionsDir&quot;: &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$projectDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/dokka-docs&quot; }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trimIndent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>DGP v2에서의 구성:</p><p>DGP v2에서는 Dokka 플러그인이 타입 안전(type-safe) DSL을 사용하여 구성됩니다. 타입 안전(type-safe) 방식으로 Dokka 플러그인을 구성하려면 <code>pluginsConfiguration{}</code> 블록을 사용하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pluginsConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        versioning</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            version.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            olderVersionsDir.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(projectDir.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dokka-docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>DGP v2 구성의 예시는 <a href="https://github.com/Kotlin/dokka/tree/master/examples/gradle-v2/versioning-multimodule-example" target="_blank" rel="noreferrer">Dokka의 버전 관리 플러그인</a>을 참조하세요.</p><p>Dokka 2.0.0은 <a href="https://github.com/Kotlin/dokka/blob/ae3840edb4e4afd7b3e3768a5fddfe8ec0e08f31/examples/gradle-v2/custom-dokka-plugin-example/demo-library/build.gradle.kts" target="_blank" rel="noreferrer">사용자 지정 플러그인을 구성</a>하여 기능을 확장할 수 있도록 합니다. 사용자 지정 플러그인은 문서 생성 프로세스에 추가 처리 또는 수정을 가능하게 합니다.</p><h3 id="모듈-간-dokka-구성-공유" tabindex="-1">모듈 간 Dokka 구성 공유 <a class="header-anchor" href="#모듈-간-dokka-구성-공유" aria-label="Permalink to &quot;모듈 간 Dokka 구성 공유&quot;">​</a></h3><p>DPG v2는 모듈 간에 구성을 공유하기 위해 <code>subprojects {}</code> 또는 <code>allprojects {}</code>를 사용하는 방식에서 벗어납니다. 향후 Gradle 버전에서는 이러한 접근 방식이 <a href="https://docs.gradle.org/current/userguide/isolated_projects.html" target="_blank" rel="noreferrer">오류로 이어질</a> 것입니다.</p><p>아래 단계를 따라 <a href="#multi-module-projects-with-convention-plugins">기존 컨벤션 플러그인을 사용하는</a> 또는 <a href="#multi-module-projects-without-convention-plugins">컨벤션 플러그인이 없는</a> 다중 모듈 프로젝트에서 Dokka 구성을 올바르게 공유하세요.</p><p>Dokka 구성을 공유한 후에는 여러 모듈의 문서를 단일 출력으로 집계할 수 있습니다. 자세한 내용은 <a href="#update-documentation-aggregation-in-multi-module-projects">다중 모듈 프로젝트에서 문서 집계 업데이트</a>를 참조하세요.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>다중 모듈 프로젝트 예시는 <a href="https://github.com/Kotlin/dokka/tree/master/examples/gradle-v2/multimodule-example" target="_blank" rel="noreferrer">Dokka GitHub 저장소</a>를 참조하세요.</p></div><h4 id="컨벤션-플러그인이-없는-다중-모듈-프로젝트" tabindex="-1">컨벤션 플러그인이 없는 다중 모듈 프로젝트 <a class="header-anchor" href="#컨벤션-플러그인이-없는-다중-모듈-프로젝트" aria-label="Permalink to &quot;컨벤션 플러그인이 없는 다중 모듈 프로젝트&quot;">​</a></h4><p>프로젝트에서 컨벤션 플러그인을 사용하지 않는 경우에도 각 모듈을 직접 구성하여 Dokka 구성을 공유할 수 있습니다. 여기에는 각 모듈의 <code>build.gradle.kts</code> 파일에 공유 구성을 수동으로 설정하는 것이 포함됩니다. 이 접근 방식은 덜 중앙 집중적이지만, 컨벤션 플러그인과 같은 추가 설정이 필요하지 않습니다.</p><p>그렇지 않고 프로젝트에서 컨벤션 플러그인을 사용하는 경우, <code>buildSrc</code> 디렉터리에 컨벤션 플러그인을 생성한 다음 모듈(하위 프로젝트)에 플러그인을 적용하여 다중 모듈 프로젝트에서 Dokka 구성을 공유할 수도 있습니다.</p><h5 id="buildsrc-디렉터리-설정" tabindex="-1">buildSrc 디렉터리 설정 <a class="header-anchor" href="#buildsrc-디렉터리-설정" aria-label="Permalink to &quot;buildSrc 디렉터리 설정&quot;">​</a></h5><ol><li><p>프로젝트 루트에 다음 두 파일이 포함된 <code>buildSrc</code> 디렉터리를 생성하세요.</p><ul><li><code>settings.gradle.kts</code></li><li><code>build.gradle.kts</code></li></ul></li><li><p><code>buildSrc/settings.gradle.kts</code> 파일에 다음 스니펫을 추가하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rootProject.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;buildSrc&quot;</span></span></code></pre></div></li><li><p><code>buildSrc/build.gradle.kts</code> 파일에 다음 스니펫을 추가하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    \`kotlin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dsl\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mavenCentral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    gradlePluginPortal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.dokka:dokka-gradle-plugin:2.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h5 id="dokka-컨벤션-플러그인-설정" tabindex="-1">Dokka 컨벤션 플러그인 설정 <a class="header-anchor" href="#dokka-컨벤션-플러그인-설정" aria-label="Permalink to &quot;Dokka 컨벤션 플러그인 설정&quot;">​</a></h5><p><code>buildSrc</code> 디렉터리를 설정한 후:</p><ol><li><p><a href="https://docs.gradle.org/current/userguide/custom_plugins.html#sec:convention_plugins" target="_blank" rel="noreferrer">컨벤션 플러그인</a>을 호스팅할 <code>buildSrc/src/main/kotlin/dokka-convention.gradle.kts</code> 파일을 생성하세요.</p></li><li><p><code>dokka-convention.gradle.kts</code> 파일에 다음 스니펫을 추가하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.dokka&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // The shared configuration goes here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>모든 하위 프로젝트에 공통된 공유 Dokka <a href="#adjust-configuration-options">구성</a>을 <code>dokka {}</code> 블록 내에 추가해야 합니다. 또한 Dokka 버전을 지정할 필요가 없습니다. 버전은 <code>buildSrc/build.gradle.kts</code> 파일에 이미 설정되어 있습니다.</p></li></ol><h5 id="모듈에-컨벤션-플러그인-적용" tabindex="-1">모듈에 컨벤션 플러그인 적용 <a class="header-anchor" href="#모듈에-컨벤션-플러그인-적용" aria-label="Permalink to &quot;모듈에 컨벤션 플러그인 적용&quot;">​</a></h5><p>각 하위 프로젝트의 <code>build.gradle.kts</code> 파일에 추가하여 Dokka 컨벤션 플러그인을 모듈(하위 프로젝트) 전체에 적용하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dokka-convention&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="컨벤션-플러그인을-사용하는-다중-모듈-프로젝트" tabindex="-1">컨벤션 플러그인을 사용하는 다중 모듈 프로젝트 <a class="header-anchor" href="#컨벤션-플러그인을-사용하는-다중-모듈-프로젝트" aria-label="Permalink to &quot;컨벤션 플러그인을 사용하는 다중 모듈 프로젝트&quot;">​</a></h4><p>이미 컨벤션 플러그인을 가지고 있다면, <a href="https://docs.gradle.org/current/userguide/custom_plugins.html#sec:convention_plugins" target="_blank" rel="noreferrer">Gradle 문서</a>를 따라 전용 Dokka 컨벤션 플러그인을 생성하세요.</p><p>그런 다음 <a href="#set-up-the-dokka-convention-plugin">Dokka 컨벤션 플러그인 설정</a> 및 <a href="#apply-the-convention-plugin-to-your-modules">모듈 전체에 적용</a>하는 단계를 따르세요.</p><h3 id="다중-모듈-프로젝트에서-문서-집계-업데이트" tabindex="-1">다중 모듈 프로젝트에서 문서 집계 업데이트 <a class="header-anchor" href="#다중-모듈-프로젝트에서-문서-집계-업데이트" aria-label="Permalink to &quot;다중 모듈 프로젝트에서 문서 집계 업데이트&quot;">​</a></h3><p>Dokka는 여러 모듈(하위 프로젝트)의 문서를 단일 출력 또는 발행물로 집계할 수 있습니다.</p><p><a href="#apply-the-convention-plugin-to-your-modules">설명된 바와 같이</a>, 문서를 집계하기 전에 모든 문서화 가능한 하위 프로젝트에 Dokka 플러그인을 적용하세요.</p><p>DGP v2의 집계는 태스크 대신 <code>dependencies {}</code> 블록을 사용하며, 모든 <code>build.gradle.kts</code> 파일에 추가할 수 있습니다.</p><p>DGP v1에서는 집계가 루트 프로젝트에 암묵적으로 생성되었습니다. DGP v2에서 이 동작을 재현하려면 루트 프로젝트의 <code>build.gradle.kts</code> 파일에 <code>dependencies {}</code> 블록을 추가하세요.</p><p>DGP v1에서의 집계:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokkaHtmlMultiModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p>DGP v2에서의 집계:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">project</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:some-subproject:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">project</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;:another-subproject:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="집계된-문서의-디렉터리-변경" tabindex="-1">집계된 문서의 디렉터리 변경 <a class="header-anchor" href="#집계된-문서의-디렉터리-변경" aria-label="Permalink to &quot;집계된 문서의 디렉터리 변경&quot;">​</a></h3><p>DGP가 모듈을 집계할 때, 각 하위 프로젝트는 집계된 문서 내에 자체 하위 디렉터리를 가집니다.</p><p>DGP v2에서는 집계 메커니즘이 Gradle 규칙과 더 잘 일치하도록 업데이트되었습니다. DGP v2는 이제 어떤 위치에서든 문서를 집계할 때 충돌을 방지하기 위해 전체 하위 프로젝트 디렉터리를 보존합니다.</p><p>DGP v1에서의 집계 디렉터리:</p><p>DGP v1에서는 집계된 문서가 축소된 디렉터리 구조에 배치되었습니다. 예를 들어, <code>:turbo-lib</code>에 집계가 있고 중첩된 하위 프로젝트 <code>:turbo-lib:maths</code>가 있는 프로젝트의 경우 생성된 문서는 다음 위치에 배치되었습니다.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>turbo-lib/build/dokka/html/maths/</span></span></code></pre></div><p>DGP v2에서의 집계 디렉터리:</p><p>DGP v2는 전체 프로젝트 구조를 유지함으로써 각 하위 프로젝트가 고유한 디렉터리를 갖도록 보장합니다. 이제 동일한 집계된 문서는 이 구조를 따릅니다.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>turbo-lib/build/dokka/html/turbo-lib/maths/</span></span></code></pre></div><p>이 변경 사항은 이름이 같은 하위 프로젝트가 충돌하는 것을 방지합니다. 그러나 디렉터리 구조가 변경되었으므로 외부 링크가 오래되어 <code>404</code> 오류가 발생할 수 있습니다.</p><h4 id="dgp-v1-디렉터리-동작으로-되돌리기" tabindex="-1">DGP v1 디렉터리 동작으로 되돌리기 <a class="header-anchor" href="#dgp-v1-디렉터리-동작으로-되돌리기" aria-label="Permalink to &quot;DGP v1 디렉터리 동작으로 되돌리기&quot;">​</a></h4><p>프로젝트가 DGP v1에서 사용된 디렉터리 구조에 의존하는 경우, 모듈 디렉터리를 수동으로 지정하여 이 동작을 되돌릴 수 있습니다. 각 하위 프로젝트의 <code>build.gradle.kts</code> 파일에 다음 구성을 추가하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// /turbo-lib/maths/build.gradle.kts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.dokka&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Overrides the module directory to match the V1 structure</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modulePath.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;maths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="업데이트된-태스크로-문서-생성" tabindex="-1">업데이트된 태스크로 문서 생성 <a class="header-anchor" href="#업데이트된-태스크로-문서-생성" aria-label="Permalink to &quot;업데이트된 태스크로 문서 생성&quot;">​</a></h3><p>DGP v2는 API 문서를 생성하는 Gradle 태스크의 이름을 변경했습니다.</p><p>DGP v1에서의 태스크:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./gradlew dokkaHtml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// or</span></span>
<span class="line"><span></span></span>
<span class="line"><span>./gradlew dokkaHtmlMultiModule</span></span></code></pre></div><p>DGP v2에서의 태스크:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./gradlew :dokkaGenerate</span></span></code></pre></div><p><code>dokkaGenerate</code> 태스크는 <code>build/dokka/</code> 디렉터리에 API 문서를 생성합니다.</p><p>DGP v2 버전에서 <code>dokkaGenerate</code> 태스크 이름은 단일 및 다중 모듈 프로젝트 모두에서 작동합니다. HTML, Javadoc 또는 HTML과 Javadoc 모두로 출력을 생성하기 위해 다른 태스크를 사용할 수 있습니다. 자세한 내용은 <a href="#select-documentation-output-format">문서 출력 형식 선택</a>을 참조하세요.</p><h3 id="문서-출력-형식-선택" tabindex="-1">문서 출력 형식 선택 <a class="header-anchor" href="#문서-출력-형식-선택" aria-label="Permalink to &quot;문서 출력 형식 선택&quot;">​</a></h3><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Javadoc 출력 형식은 <a href="https://kotlinlang.org/docs/components-stability.html#stability-levels-explained" target="_blank" rel="noreferrer">알파</a> 버전입니다. 이를 사용할 때 버그를 발견하고 마이그레이션 문제가 발생할 수 있습니다. Javadoc을 입력으로 받아들이는 도구와의 성공적인 통합은 보장되지 않습니다. 자신의 책임 하에 사용하세요.</p></div><p>DGP v2의 기본 출력 형식은 HTML입니다. 그러나 API 문서를 HTML, Javadoc 또는 두 가지 형식 모두로 동시에 생성하도록 선택할 수 있습니다.</p><ol><li><p>프로젝트의 <code>build.gradle.kts</code> 파일의 <code>plugins {}</code> 블록에 해당 플러그인 <code>id</code>를 배치하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Generates HTML documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.dokka&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.0.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Generates Javadoc documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.jetbrains.dokka-javadoc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.0.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Keeping both plugin IDs generates both formats</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>해당 Gradle 태스크를 실행하세요.</p></li></ol><p>다음은 각 형식에 해당하는 플러그인 <code>id</code> 및 Gradle 태스크 목록입니다.</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"><strong>HTML</strong></th><th style="text-align:left;"><strong>Javadoc</strong></th><th style="text-align:left;"><strong>모두</strong></th></tr></thead><tbody><tr><td style="text-align:left;">플러그인 <code>id</code></td><td style="text-align:left;"><code>id(&quot;org.jetbrains.dokka&quot;)</code></td><td style="text-align:left;"><code>id(&quot;org.jetbrains.dokka-javadoc&quot;)</code></td><td style="text-align:left;">HTML 및 Javadoc 플러그인 모두 사용</td></tr><tr><td style="text-align:left;">Gradle 태스크</td><td style="text-align:left;"><code>./gradlew :dokkaGeneratePublicationHtml</code></td><td style="text-align:left;"><code>./gradlew :dokkaGeneratePublicationJavadoc</code></td><td style="text-align:left;"><code>./gradlew :dokkaGenerate</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>dokkaGenerate</code> 태스크는 적용된 플러그인에 따라 사용 가능한 모든 형식으로 문서를 생성합니다. HTML 및 Javadoc 플러그인이 모두 적용된 경우, <code>dokkaGeneratePublicationHtml</code> 태스크를 실행하여 HTML만 생성하거나 <code>dokkaGeneratePublicationJavadoc</code> 태스크를 실행하여 Javadoc만 생성하도록 선택할 수 있습니다.</p></div><h3 id="사용-중단-및-제거-사항-처리" tabindex="-1">사용 중단 및 제거 사항 처리 <a class="header-anchor" href="#사용-중단-및-제거-사항-처리" aria-label="Permalink to &quot;사용 중단 및 제거 사항 처리&quot;">​</a></h3><ul><li><strong>출력 형식 지원:</strong> Dokka 2.0.0은 HTML 및 Javadoc 출력만 지원합니다. Markdown 및 Jekyll과 같은 실험적 형식은 더 이상 지원되지 않습니다.</li><li><strong>Collector 태스크:</strong> <code>DokkaCollectorTask</code>가 제거되었습니다. 이제 각 하위 프로젝트에 대해 별도로 문서를 생성한 다음 필요한 경우 <a href="#update-documentation-aggregation-in-multi-module-projects">문서를 집계</a>해야 합니다.</li></ul><h2 id="마이그레이션-마무리" tabindex="-1">마이그레이션 마무리 <a class="header-anchor" href="#마이그레이션-마무리" aria-label="Permalink to &quot;마이그레이션 마무리&quot;">​</a></h2><p>프로젝트를 마이그레이션한 후, 이 단계를 수행하여 마이그레이션을 마무리하고 성능을 개선하세요.</p><h3 id="옵트인-opt-in-플래그-설정" tabindex="-1">옵트인(opt-in) 플래그 설정 <a class="header-anchor" href="#옵트인-opt-in-플래그-설정" aria-label="Permalink to &quot;옵트인(opt-in) 플래그 설정&quot;">​</a></h3><p>마이그레이션이 성공적으로 완료되면 프로젝트의 <code>gradle.properties</code> 파일에 다음 옵트인(opt-in) 플래그를 도우미 없이 설정하세요.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>org.jetbrains.dokka.experimental.gradle.pluginMode=V2Enabled</span></span></code></pre></div><p>DGP v2에서 더 이상 사용할 수 없는 DGP v1의 Gradle 태스크에 대한 참조를 제거했다면, 이와 관련된 컴파일 오류가 발생하지 않을 것입니다.</p><h3 id="빌드-캐시-및-구성-캐시-활성화" tabindex="-1">빌드 캐시 및 구성 캐시 활성화 <a class="header-anchor" href="#빌드-캐시-및-구성-캐시-활성화" aria-label="Permalink to &quot;빌드 캐시 및 구성 캐시 활성화&quot;">​</a></h3><p>DGP v2는 이제 Gradle 빌드 캐시와 구성 캐시를 지원하여 빌드 성능을 향상시킵니다.</p><ul><li>빌드 캐시를 활성화하려면 <a href="https://docs.gradle.org/current/userguide/build_cache.html#sec:build_cache_enable" target="_blank" rel="noreferrer">Gradle 빌드 캐시 문서</a>의 지침을 따르세요.</li><li>구성 캐시를 활성화하려면 <a href="https://docs.gradle.org/current/userguide/configuration_cache.html#config_cache:usage:enable" target="_blank" rel="noreferrer">Gradle 구성 캐시 문서</a>의 지침을 따르세요.</li></ul><h2 id="문제-해결" tabindex="-1">문제 해결 <a class="header-anchor" href="#문제-해결" aria-label="Permalink to &quot;문제 해결&quot;">​</a></h2><p>대규모 프로젝트에서 Dokka는 문서를 생성하기 위해 상당한 양의 메모리를 소비할 수 있습니다. 이는 특히 대량의 데이터를 처리할 때 Gradle의 메모리 한도를 초과할 수 있습니다.</p><p>Dokka 생성이 메모리 부족으로 실행되면 빌드가 실패하고 Gradle은 <code>java.lang.OutOfMemoryError: Metaspace</code>와 같은 예외를 throw할 수 있습니다.</p><p>일부 제한 사항은 Gradle에서 비롯되지만, Dokka의 성능을 개선하기 위한 적극적인 노력이 진행 중입니다.</p><p>메모리 문제가 발생하는 경우 다음 해결 방법을 시도해 보세요.</p><ul><li><a href="#increase-heap-space">힙 공간 늘리기</a></li><li><a href="#run-dokka-within-the-gradle-process">Gradle 프로세스 내에서 Dokka 실행</a></li></ul><h3 id="힙-공간-늘리기" tabindex="-1">힙 공간 늘리기 <a class="header-anchor" href="#힙-공간-늘리기" aria-label="Permalink to &quot;힙 공간 늘리기&quot;">​</a></h3><p>메모리 문제를 해결하는 한 가지 방법은 Dokka 생성기 프로세스에 대한 Java 힙 메모리 양을 늘리는 것입니다. <code>build.gradle.kts</code> 파일에서 다음 구성 옵션을 조정하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Dokka generates a new process managed by Gradle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dokkaGeneratorIsolation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ProcessIsolation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Configures heap size</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            maxHeapSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;4g&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p>이 예시에서는 최대 힙 크기가 4GB(<code>&quot;4g&quot;</code>)로 설정됩니다. 빌드에 대한 최적의 설정을 찾기 위해 값을 조정하고 테스트하세요.</p><p>Dokka가 Gradle 자체 메모리 사용량보다 훨씬 더 많은 힙 크기를 필요로 한다면, 예를 들어 상당한 수준으로 확장된 힙 크기가 필요하다면, <a href="https://kotl.in/dokka-issues" target="_blank" rel="noreferrer">Dokka의 GitHub 저장소에 이슈를 생성</a>해 주세요.</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>이 구성을 각 하위 프로젝트에 적용해야 합니다. 모든 하위 프로젝트에 적용되는 컨벤션 플러그인에서 Dokka를 구성하는 것이 좋습니다.</p></div><h3 id="gradle-프로세스-내에서-dokka-실행" tabindex="-1">Gradle 프로세스 내에서 Dokka 실행 <a class="header-anchor" href="#gradle-프로세스-내에서-dokka-실행" aria-label="Permalink to &quot;Gradle 프로세스 내에서 Dokka 실행&quot;">​</a></h3><p>Gradle 빌드와 Dokka 생성이 모두 많은 메모리를 필요로 할 때, 이들은 별도의 프로세스로 실행되어 단일 머신에서 상당한 메모리를 소비할 수 있습니다.</p><p>메모리 사용량을 최적화하려면 Dokka를 별도의 프로세스로 실행하는 대신 동일한 Gradle 프로세스 내에서 실행할 수 있습니다. 이렇게 하면 각 프로세스에 대해 별도로 메모리를 할당하는 대신 Gradle에 대한 메모리를 한 번만 구성할 수 있습니다.</p><p>Dokka를 동일한 Gradle 프로세스 내에서 실행하려면 <code>build.gradle.kts</code> 파일에서 다음 구성 옵션을 조정하세요.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dokka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Runs Dokka in the current Gradle process</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dokkaGeneratorIsolation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClassLoaderIsolation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p><a href="#increase-heap-space">힙 공간 늘리기</a>와 마찬가지로, 이 구성이 프로젝트에 잘 작동하는지 확인하기 위해 테스트하세요.</p><p>Gradle의 JVM 메모리 구성에 대한 자세한 내용은 <a href="https://docs.gradle.org/current/userguide/config_gradle.html#sec:configuring_jvm_memory" target="_blank" rel="noreferrer">Gradle 문서</a>를 참조하세요.</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Gradle의 Java 옵션을 변경하면 새로운 Gradle 데몬이 시작되며, 이 데몬은 오랫동안 활성 상태를 유지할 수 있습니다. 다른 Gradle 프로세스를 <a href="https://docs.gradle.org/current/userguide/gradle_daemon.html#sec:stopping_an_existing_daemon" target="_blank" rel="noreferrer">수동으로 중지</a>할 수 있습니다. 또한 <code>ClassLoaderIsolation()</code> 구성과 관련된 Gradle 이슈가 <a href="https://github.com/gradle/gradle/issues/18313" target="_blank" rel="noreferrer">메모리 누수를 유발</a>할 수 있습니다.</p></div><h2 id="다음-단계" tabindex="-1">다음 단계 <a class="header-anchor" href="#다음-단계" aria-label="Permalink to &quot;다음 단계&quot;">​</a></h2><ul><li><a href="https://github.com/Kotlin/dokka/tree/master/examples/gradle-v2" target="_blank" rel="noreferrer">더 많은 DGP v2 프로젝트 예시 살펴보기</a>.</li><li><a href="/ko/kotlin/dokka-get-started">Dokka 시작하기</a>.</li><li><a href="/ko/kotlin/dokka-plugins">Dokka 플러그인에 대해 더 알아보기</a>.</li></ul>`,100))])}const B=r(o,[["render",g]]);export{v as __pageData,B as default};
