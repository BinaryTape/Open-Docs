import{_ as S,a as C,b as L,c as R,d as D,e as H,f as P,g as J,h as O,i as N,j as W,k as G,l as M,m as U,n as $,o as q,p as B,q as Y,r as z,s as F,t as V,u as X,v as Z}from"./chunks/server_get_started_register_error_handler_output.Dqrb0DZY.js";import{_ as A}from"./chunks/server_get_started_ktor_sample_app_output.BqyRKElU.js";import{_ as Q}from"./chunks/intellij_idea_gradle_icon.dCXxPOpm.js";import{_ as b}from"./chunks/intellij_idea_rerun_icon.tlG8QH6A.js";import{_,C as p,c as h,o as c,G as u,w as o,j as n,a as t}from"./chunks/framework.Bksy39di.js";const ml=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-create-a-new-project.md","filePath":"zh-Hant/ktor/server-create-a-new-project.md","lastUpdated":1755457140000}'),ll={name:"zh-Hant/ktor/server-create-a-new-project.md"};function tl(nl,l,ul,ol,rl,il){const I=p("show-structure"),a=p("tldr"),T=p("link-summary"),E=p("web-summary"),s=p("Links"),K=p("list"),r=p("step"),i=p("control"),d=p("Path"),v=p("emphasis"),m=p("procedure"),f=p("chapter"),k=p("ui-path"),e=p("code-block"),g=p("tab"),y=p("tabs"),w=p("shortcut"),j=p("tip"),x=p("topic");return c(),h("div",null,[u(x,{"xsi:noNamespaceSchemaLocation":"https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd","xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance",title:"建立、開啟及執行新的 Ktor 專案",id:"server-create-a-new-project","help-id":"server_create_a_new_project"},{default:o(()=>[u(I,{for:"chapter",depth:"2"}),u(a,null,{default:o(()=>l[0]||(l[0]=[n("p",null,[n("b",null,"程式碼範例"),t(": "),n("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tutorial-server-get-started"}," tutorial-server-get-started ")],-1)])),_:1}),u(T,null,{default:o(()=>l[1]||(l[1]=[t(" 學習如何使用 Ktor 開啟、執行及測試伺服器應用程式。 ")])),_:1}),u(E,null,{default:o(()=>l[2]||(l[2]=[t(" 開始建置您的第一個 Ktor 伺服器應用程式。在本教學中，您將學習如何建立、開啟及執行新的 Ktor 專案。 ")])),_:1}),l[378]||(l[378]=n("p",null," 在本教學中，您將學習如何建立、開啟及執行您的第一個 Ktor 伺服器專案。一旦啟動並運行，您可以嘗試一系列任務來熟悉 Ktor。 ",-1)),l[379]||(l[379]=n("p",null," 這是系列教學中的第一個，旨在協助您開始 使用 Ktor 建置伺服器應用程式。您可以獨立完成每個教學， 但是，我們強烈建議您遵循建議的順序： ",-1)),u(K,{type:"decimal"},{default:o(()=>[l[13]||(l[13]=n("li",null,"建立、開啟及執行新的 Ktor 專案。",-1)),n("li",null,[u(s,{href:"/ktor/server-requests-and-responses",summary:"透過建置任務管理器應用程式，使用 Kotlin 和 Ktor 學習路由、處理請求和參數的基礎知識。"},{default:o(()=>l[3]||(l[3]=[t("處理請求並產生回應")])),_:1}),l[4]||(l[4]=t("。"))]),n("li",null,[u(s,{href:"/ktor/server-create-restful-apis",summary:"學習如何使用 Kotlin 和 Ktor 建置後端服務，其中包含一個產生 JSON 檔案的 RESTful API 範例。"},{default:o(()=>l[5]||(l[5]=[t("建立產生 JSON 的 RESTful API")])),_:1}),l[6]||(l[6]=t("。"))]),n("li",null,[u(s,{href:"/ktor/server-create-website",summary:"學習如何使用 Kotlin 和 Ktor 以及 Thymeleaf 模板建置網站。"},{default:o(()=>l[7]||(l[7]=[t("使用 Thymeleaf 模板建立網站")])),_:1}),l[8]||(l[8]=t("。"))]),n("li",null,[u(s,{href:"/ktor/server-create-websocket-application",summary:"學習如何利用 WebSocket 的強大功能來傳送和接收內容。"},{default:o(()=>l[9]||(l[9]=[t("建立 WebSocket 應用程式")])),_:1}),l[10]||(l[10]=t("。"))]),n("li",null,[u(s,{href:"/ktor/server-integrate-database",summary:"學習使用 Exposed SQL Library 將 Ktor 服務連接到資料庫儲存庫的過程。"},{default:o(()=>l[11]||(l[11]=[t("整合資料庫與 Exposed")])),_:1}),l[12]||(l[12]=t("。"))])]),_:1}),u(f,{id:"create-project",title:"建立新的 Ktor 專案"},{default:o(()=>[l[155]||(l[155]=n("p",null,[t(" 建立新的 Ktor 專案最快的方法之一是"),n("a",{href:"#create-project-with-the-ktor-project-generator"},"使用 基於網頁的 Ktor 專案產生器"),t("。 ")],-1)),l[156]||(l[156]=n("p",null,[t(" 或者，您可以 "),n("a",{href:"#create_project_with_intellij"},"使用 IntelliJ IDEA Ultimate 專用的 Ktor 外掛程式"),t(" 或 "),n("a",{href:"#create_project_with_ktor_cli_tool"},"Ktor CLI 工具"),t("產生專案。 ")],-1)),u(f,{title:"使用 Ktor 專案產生器",id:"create-project-with-the-ktor-project-generator"},{default:o(()=>[l[61]||(l[61]=n("p",null," 要使用 Ktor 專案產生器建立新專案，請遵循以下步驟： ",-1)),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>l[14]||(l[14]=[n("p",null,[t("導覽至 "),n("a",{href:"https://start.ktor.io/"},"Ktor 專案產生器"),t("。")],-1)])),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[17]||(l[17]=t("在 ")),u(i,null,{default:o(()=>l[15]||(l[15]=[t("Project artifact")])),_:1}),l[18]||(l[18]=t(" 欄位中，輸入 ")),u(d,null,{default:o(()=>l[16]||(l[16]=[t("com.example.ktor-sample-app")])),_:1}),l[19]||(l[19]=t(" 作為您的專案成品名稱。 ")),l[20]||(l[20]=n("img",{src:S,alt:"Ktor 專案產生器，專案成品名稱為 org.example.ktor-sample-app","border-effect":"line",style:{},width:"706"},null,-1))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[22]||(l[22]=t("點擊 ")),u(i,null,{default:o(()=>l[21]||(l[21]=[t("Configure")])),_:1}),l[23]||(l[23]=t(" 以開啟設定下拉式選單： ")),l[24]||(l[24]=n("img",{src:C,style:{},alt:"Ktor 專案設定的展開視圖","border-effect":"line",width:"706"},null,-1))]),l[47]||(l[47]=n("p",null," 以下設定可用： ",-1)),u(K,null,{default:o(()=>[n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[25]||(l[25]=[t("Build System")])),_:1}),l[29]||(l[29]=t(" ： 選擇所需的")),u(s,{href:"/ktor/server-dependencies",summary:"學習如何將 Ktor 伺服器依賴項新增到現有 Gradle/Maven 專案。"},{default:o(()=>l[26]||(l[26]=[t("建置系統")])),_:1}),l[30]||(l[30]=t("。 這可以是 ")),u(v,null,{default:o(()=>l[27]||(l[27]=[t("Gradle")])),_:1}),l[31]||(l[31]=t(" 使用 Kotlin 或 Groovy DSL，或者 ")),u(v,null,{default:o(()=>l[28]||(l[28]=[t("Maven")])),_:1}),l[32]||(l[32]=t(" 。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[33]||(l[33]=[t("Ktor version")])),_:1}),l[34]||(l[34]=t(" ： 選擇所需的 Ktor 版本。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[35]||(l[35]=[t("Engine")])),_:1}),l[37]||(l[37]=t(" ： 選擇用於執行伺服器的")),u(s,{href:"/ktor/server-engines",summary:"了解處理網路請求的引擎。"},{default:o(()=>l[36]||(l[36]=[t("引擎")])),_:1}),l[38]||(l[38]=t("。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[39]||(l[39]=[t("Configuration")])),_:1}),l[42]||(l[42]=t(" ： 選擇是 在")),u(s,{href:"/ktor/server-configuration-file",summary:"學習如何在設定檔中配置各種伺服器參數。"},{default:o(()=>l[40]||(l[40]=[t("YAML 或 HOCON 檔案中")])),_:1}),l[43]||(l[43]=t("指定伺服器參數，還是 ")),u(s,{href:"/ktor/server-configuration-code",summary:"學習如何在程式碼中配置各種伺服器參數。"},{default:o(()=>l[41]||(l[41]=[t("在程式碼中")])),_:1}),l[44]||(l[44]=t("指定。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[45]||(l[45]=[t("Include samples")])),_:1}),l[46]||(l[46]=t(" ： 保持此選項啟用以新增外掛程式範例程式碼。 "))])])]),_:1}),l[48]||(l[48]=n("p",null,"對於本教學，您可以將這些設定保留為預設值。",-1))]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[50]||(l[50]=t("點擊 ")),u(i,null,{default:o(()=>l[49]||(l[49]=[t("Done")])),_:1}),l[51]||(l[51]=t(" 以儲存設定並關閉選單。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[53]||(l[53]=t("下方您會找到一組可新增至專案的")),u(s,{href:"/ktor/server-plugins",summary:"外掛程式提供通用功能，例如序列化、內容編碼、壓縮等。"},{default:o(()=>l[52]||(l[52]=[t("外掛程式")])),_:1}),l[54]||(l[54]=t("。外掛程式是建置區塊，在 Ktor 應用程式中提供通用功能， 例如認證、序列化和內容編碼、壓縮、Cookie 支援等。 "))]),l[55]||(l[55]=n("p",null,"對於本教學，您目前無需新增任何外掛程式。",-1))]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[57]||(l[57]=t(" 點擊 ")),u(i,null,{default:o(()=>l[56]||(l[56]=[t("Download")])),_:1}),l[58]||(l[58]=t(" 按鈕以產生並下載您的 Ktor 專案。 ")),l[59]||(l[59]=n("img",{src:L,alt:"Ktor 專案產生器下載按鈕","border-effect":"line",style:{},width:"706"},null,-1))])]),_:1}),l[60]||(l[60]=n("p",null,"您的下載應該會自動開始。",-1))]),_:1}),l[62]||(l[62]=n("p",null,[t("既然您已產生了一個新專案，請繼續"),n("a",{href:"#unpacking"},"解壓縮並執行您的 Ktor 專案"),t("。")],-1))]),_:1}),u(f,{title:"使用 IntelliJ IDEA Ultimate 的 Ktor 外掛程式",id:"create_project_with_intellij",collapsible:"true"},{default:o(()=>[l[125]||(l[125]=n("p",null,[t(" 本節介紹如何使用 IntelliJ IDEA Ultimate 的 "),n("a",{href:"https://plugins.jetbrains.com/plugin/16008-ktor"},"Ktor 外掛程式"),t("進行專案設定。 ")],-1)),l[126]||(l[126]=n("p",null,[t(" 要建立新的 Ktor 專案， "),n("a",{href:"https://www.jetbrains.com/help/idea/run-for-the-first-time.html"},"開啟 IntelliJ IDEA"),t("，並 遵循以下步驟： ")],-1)),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>[n("p",null,[l[64]||(l[64]=t(" 在歡迎畫面，點擊 ")),u(i,null,{default:o(()=>l[63]||(l[63]=[t("New Project")])),_:1}),l[65]||(l[65]=t("。 "))]),n("p",null,[l[67]||(l[67]=t(" 否則，從主選單中選擇 ")),u(k,null,{default:o(()=>l[66]||(l[66]=[t("File | New | Project")])),_:1}),l[68]||(l[68]=t("。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[71]||(l[71]=t(" 在 ")),u(i,null,{default:o(()=>l[69]||(l[69]=[t("New Project")])),_:1}),l[72]||(l[72]=t(" 精靈中，從左側列表中選擇 ")),u(i,null,{default:o(()=>l[70]||(l[70]=[t("Ktor")])),_:1}),l[73]||(l[73]=t(" 。 "))])]),_:1}),u(r,null,{default:o(()=>[l[90]||(l[90]=n("p",null," 在右側窗格中，您可以指定以下設定： ",-1)),l[91]||(l[91]=n("img",{src:R,alt:"Ktor 專案設定",width:"706","border-effect":"rounded"},null,-1)),u(K,null,{default:o(()=>[n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[74]||(l[74]=[t("Name")])),_:1}),l[76]||(l[76]=t(" ： 指定專案名稱。輸入 ")),u(d,null,{default:o(()=>l[75]||(l[75]=[t("ktor-sample-app")])),_:1}),l[77]||(l[77]=t(" 作為您的專案名稱。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[78]||(l[78]=[t("Location")])),_:1}),l[79]||(l[79]=t(" ： 指定專案的目錄。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[80]||(l[80]=[t("Website")])),_:1}),l[81]||(l[81]=t(" ： 指定用於產生套件名稱的網域。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[82]||(l[82]=[t("Artifact")])),_:1}),l[83]||(l[83]=t(" ： 此欄位顯示產生的成品名稱。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[84]||(l[84]=[t("Engine")])),_:1}),l[86]||(l[86]=t(" ： 選擇用於執行伺服器的")),u(s,{href:"/ktor/server-engines",summary:"了解處理網路請求的引擎。"},{default:o(()=>l[85]||(l[85]=[t("引擎")])),_:1}),l[87]||(l[87]=t("。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[88]||(l[88]=[t("Include samples")])),_:1}),l[89]||(l[89]=t(" ： 保持此選項啟用以新增外掛程式範例程式碼。 "))])])]),_:1})]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[93]||(l[93]=t(" 點擊 ")),u(i,null,{default:o(()=>l[92]||(l[92]=[t("Advanced Settings")])),_:1}),l[94]||(l[94]=t(" 以展開 附加設定選單： "))]),l[111]||(l[111]=n("img",{src:D,alt:"Ktor 專案進階設定",width:"706","border-effect":"rounded"},null,-1)),l[112]||(l[112]=n("p",null," 以下設定可用： ",-1)),u(K,null,{default:o(()=>[n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[95]||(l[95]=[t("Build System")])),_:1}),l[99]||(l[99]=t(" ： 選擇所需的")),u(s,{href:"/ktor/server-dependencies",summary:"學習如何將 Ktor 伺服器依賴項新增到現有 Gradle/Maven 專案。"},{default:o(()=>l[96]||(l[96]=[t("建置系統")])),_:1}),l[100]||(l[100]=t("。 這可以是 ")),u(v,null,{default:o(()=>l[97]||(l[97]=[t("Gradle")])),_:1}),l[101]||(l[101]=t(" 使用 Kotlin 或 Groovy DSL，或者 ")),u(v,null,{default:o(()=>l[98]||(l[98]=[t("Maven")])),_:1}),l[102]||(l[102]=t(" 。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[103]||(l[103]=[t("Ktor version")])),_:1}),l[104]||(l[104]=t(" ： 選擇所需的 Ktor 版本。 "))])]),n("li",null,[n("p",null,[u(i,null,{default:o(()=>l[105]||(l[105]=[t("Configuration")])),_:1}),l[108]||(l[108]=t(" ： 選擇是 在")),u(s,{href:"/ktor/server-configuration-file",summary:"學習如何在設定檔中配置各種伺服器參數。"},{default:o(()=>l[106]||(l[106]=[t("YAML 或 HOCON 檔案中")])),_:1}),l[109]||(l[109]=t("指定伺服器參數，還是 ")),u(s,{href:"/ktor/server-configuration-code",summary:"學習如何在程式碼中配置各種伺服器參數。"},{default:o(()=>l[107]||(l[107]=[t("在程式碼中")])),_:1}),l[110]||(l[110]=t("指定。 "))])])]),_:1}),l[113]||(l[113]=n("p",null,"對於本教學，您可以將這些設定保留為預設值。",-1))]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[115]||(l[115]=t(" 點擊 ")),u(i,null,{default:o(()=>l[114]||(l[114]=[t("Next")])),_:1}),l[116]||(l[116]=t(" 以進入下一頁。 "))]),l[120]||(l[120]=n("img",{src:H,alt:"Ktor 外掛程式",width:"706","border-effect":"rounded"},null,-1)),n("p",null,[l[118]||(l[118]=t(" 在此頁面，您可以選擇一組")),u(s,{href:"/ktor/server-plugins",summary:"外掛程式提供通用功能，例如序列化、內容編碼、壓縮等。"},{default:o(()=>l[117]||(l[117]=[t("外掛程式")])),_:1}),l[119]||(l[119]=t(" - 提供 Ktor 應用程式通用功能的建置區塊，例如 認證、序列化和內容編碼、壓縮、Cookie 支援等。 "))]),l[121]||(l[121]=n("p",null,"對於本教學，您目前無需新增任何外掛程式。",-1))]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[123]||(l[123]=t(" 點擊 ")),u(i,null,{default:o(()=>l[122]||(l[122]=[t("Create")])),_:1}),l[124]||(l[124]=t(" 並等待 IntelliJ IDEA 產生專案並 安裝依賴項。 "))])]),_:1})]),_:1}),l[127]||(l[127]=n("p",null,[t(" 現在您已經建立了一個新專案，請繼續學習如何"),n("a",{href:"#open-explore-run"},"開啟、 探索及執行"),t("應用程式。 ")],-1))]),_:1}),u(f,{title:"使用 Ktor CLI 工具",id:"create_project_with_ktor_cli_tool",collapsible:"true"},{default:o(()=>[l[153]||(l[153]=n("p",null,[t(" 本節介紹如何使用 "),n("a",{href:"https://github.com/ktorio/ktor-cli"},"Ktor CLI 工具"),t("進行專案設定。 ")],-1)),l[154]||(l[154]=n("p",null," 要建立新的 Ktor 專案，請開啟您選擇的終端機並 遵循以下步驟： ",-1)),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>[l[128]||(l[128]=t(" 使用以下其中一個命令安裝 Ktor CLI 工具： ")),u(y,null,{default:o(()=>[u(g,{title:"macOS/Linux",id:"macos-linux"},{default:o(()=>[u(e,{lang:"console",code:"                                brew install ktor"})]),_:1}),u(g,{title:"Windows",id:"windows"},{default:o(()=>[u(e,{lang:"console",code:"                                winget install JetBrains.KtorCLI"})]),_:1})]),_:1})]),_:1}),u(r,null,{default:o(()=>[l[129]||(l[129]=t(" 要在互動模式下產生新專案，請使用以下命令： ")),u(e,{lang:"console",code:"                      ktor new"})]),_:1}),u(r,null,{default:o(()=>[l[134]||(l[134]=t(" 輸入 ")),u(d,null,{default:o(()=>l[130]||(l[130]=[t("ktor-sample-app")])),_:1}),l[135]||(l[135]=t(" 作為您的專案名稱： ")),l[136]||(l[136]=n("img",{src:P,alt:"在互動模式下使用 Ktor CLI 工具","border-effect":"rounded",style:{},width:"706"},null,-1)),n("p",null,[l[132]||(l[132]=t(" (選用) 您也可以透過編輯專案名稱下方的 ")),u(k,null,{default:o(()=>l[131]||(l[131]=[t("Location")])),_:1}),l[133]||(l[133]=t(" 路徑來更改專案儲存的位置。 "))])]),_:1}),u(r,null,{default:o(()=>[l[138]||(l[138]=t(" 按下 ")),u(w,null,{default:o(()=>l[137]||(l[137]=[t("Enter")])),_:1}),l[139]||(l[139]=t(" 以繼續。 "))]),_:1}),u(r,null,{default:o(()=>[l[141]||(l[141]=t(" 在下一步中，您可以搜尋並新增")),u(s,{href:"/ktor/server-plugins",summary:"外掛程式提供通用功能，例如序列化、內容編碼、壓縮等。"},{default:o(()=>l[140]||(l[140]=[t("外掛程式")])),_:1}),l[142]||(l[142]=t("至您的 專案。外掛程式是建置區塊，在 Ktor 應用程式中提供通用功能， 例如認證、序列化和內容編碼、壓縮、Cookie 支援等。 ")),l[143]||(l[143]=n("img",{src:J,alt:"使用 Ktor CLI 工具為專案新增外掛程式","border-effect":"rounded",style:{},width:"706"},null,-1)),l[144]||(l[144]=n("p",null,"對於本教學，您目前無需新增任何外掛程式。",-1))]),_:1}),u(r,null,{default:o(()=>[l[151]||(l[151]=t(" 按下 ")),u(w,null,{default:o(()=>l[145]||(l[145]=[t("CTRL+G")])),_:1}),l[152]||(l[152]=t(" 以產生專案。 ")),n("p",null,[l[148]||(l[148]=t(" 或者，您可以透過選擇 ")),u(i,null,{default:o(()=>l[146]||(l[146]=[t("CREATE PROJECT (CTRL+G)")])),_:1}),l[149]||(l[149]=t(" 並按下 ")),u(w,null,{default:o(()=>l[147]||(l[147]=[t("Enter")])),_:1}),l[150]||(l[150]=t(" 來產生專案。 "))])]),_:1})]),_:1})]),_:1})]),_:1}),u(f,{title:"解壓縮並執行您的 Ktor 專案",id:"unpacking"},{default:o(()=>[l[175]||(l[175]=n("p",null," 在本節中，您將學習如何從命令列解壓縮、建置並執行專案。以下描述 假設： ",-1)),u(K,{type:"bullet"},{default:o(()=>[n("li",null,[l[158]||(l[158]=t("您已建立並下載了一個名為 ")),u(d,null,{default:o(()=>l[157]||(l[157]=[t("ktor-sample-app")])),_:1}),l[159]||(l[159]=t(" 的專案。 "))]),n("li",null,[l[161]||(l[161]=t("它已放置在您主目錄中一個名為 ")),u(d,null,{default:o(()=>l[160]||(l[160]=[t("myprojects")])),_:1}),l[162]||(l[162]=t(" 的資料夾中。 "))])]),_:1}),l[176]||(l[176]=n("p",null,"如有必要，請更改名稱和路徑以符合您自己的設定。",-1)),l[177]||(l[177]=n("p",null,"開啟您選擇的命令列工具並遵循以下步驟：",-1)),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>[l[163]||(l[163]=n("p",null,"在終端機中，導覽至您下載專案的資料夾：",-1)),u(e,{lang:"console",code:"                    cd ~/myprojects"})]),_:1}),u(r,null,{default:o(()=>[l[164]||(l[164]=n("p",null,"將 ZIP 壓縮檔解壓縮到同名資料夾中：",-1)),u(y,null,{default:o(()=>[u(g,{title:"macOS","group-key":"macOS"},{default:o(()=>[u(e,{lang:"console",code:"                            unzip ktor-sample-app.zip -d ktor-sample-app"})]),_:1}),u(g,{title:"Windows","group-key":"windows"},{default:o(()=>[u(e,{lang:"console",code:"                            tar -xf ktor-sample-app.zip"})]),_:1})]),_:1}),l[165]||(l[165]=n("p",null,"您的目錄現在將包含 ZIP 壓縮檔和解壓縮的資料夾。",-1))]),_:1}),u(r,null,{default:o(()=>[l[166]||(l[166]=n("p",null,"從目錄中，導覽至新建立的資料夾：",-1)),u(e,{lang:"console",code:"                    cd ktor-sample-app"})]),_:1}),u(r,null,{default:o(()=>[l[167]||(l[167]=n("p",null,[t("在 macOS/UNIX 系統上，您需要使 gradlew Gradle 輔助腳本可執行。為此，請使用 "),n("code",null,"chmod"),t(" 命令：")],-1)),u(y,null,{default:o(()=>[u(g,{title:"macOS","group-key":"macOS"},{default:o(()=>[u(e,{lang:"console",code:"                            chmod +x ./gradlew"})]),_:1})]),_:1})]),_:1}),u(r,null,{default:o(()=>[l[168]||(l[168]=n("p",null,"要建置專案，請使用以下命令：",-1)),u(y,null,{default:o(()=>[u(g,{title:"macOS","group-key":"macOS"},{default:o(()=>[u(e,{lang:"console",code:"                            ./gradlew build"})]),_:1}),u(g,{title:"Windows","group-key":"windows"},{default:o(()=>[u(e,{lang:"console",code:"                            gradlew build"})]),_:1})]),_:1}),l[169]||(l[169]=n("p",null,"如果您看到建置成功，則可以再次透過 Gradle 執行專案。",-1))]),_:1}),u(r,null,{default:o(()=>[l[170]||(l[170]=n("p",null,"要執行專案，請使用以下命令：",-1)),u(y,null,{default:o(()=>[u(g,{title:"macOS","group-key":"macOS"},{default:o(()=>[u(e,{lang:"console",code:"                            ./gradlew run"})]),_:1}),u(g,{title:"Windows","group-key":"windows"},{default:o(()=>[u(e,{lang:"console",code:"                            gradlew run"})]),_:1})]),_:1})]),_:1}),u(r,null,{default:o(()=>l[171]||(l[171]=[n("p",null,[t("要驗證專案是否正在運行，請在輸出中提及的 URL ("),n("a",{href:"http://0.0.0.0:8080"},[n("a",{href:"http://0.0.0.0:8080",target:"_blank",rel:"noreferrer"},"http://0.0.0.0:8080")]),t(") 開啟瀏覽器。 您應該會在螢幕上看到「Hello World!」訊息：")],-1),n("img",{src:A,alt:"產生的 Ktor 專案輸出","border-effect":"line",width:"706"},null,-1)])),_:1})]),_:1}),l[178]||(l[178]=n("p",null,"恭喜！您已成功啟動您的 Ktor 專案。",-1)),n("p",null,[l[173]||(l[173]=t("請注意，命令列無回應，因為底層程序正在忙於運行 Ktor 應用程式。您可以按下 ")),u(w,null,{default:o(()=>l[172]||(l[172]=[t("CTRL+C")])),_:1}),l[174]||(l[174]=t(" 以終止應用程式。 "))])]),_:1}),u(f,{title:"在 IntelliJ IDEA 中開啟、探索並執行您的 Ktor 專案",id:"open-explore-run"},{default:o(()=>[u(f,{title:"開啟專案",id:"open"},{default:o(()=>[l[187]||(l[187]=n("p",null,[t("如果您已安裝 "),n("a",{href:"https://www.jetbrains.com/idea/"},"IntelliJ IDEA"),t("，您可以輕鬆地從命令列開啟 專案。 ")],-1)),l[188]||(l[188]=n("p",null,[t(" 請確保您位於專案資料夾中，然後輸入 "),n("code",null,"idea"),t(" 命令，後跟一個句點以表示當前 資料夾： ")],-1)),u(e,{lang:"Bash",code:"                idea ."}),l[189]||(l[189]=n("p",null," 或者，要手動開啟專案，請啟動 IntelliJ IDEA。 ",-1)),n("p",null,[l[182]||(l[182]=t(" 如果歡迎畫面開啟，請點擊 ")),u(i,null,{default:o(()=>l[179]||(l[179]=[t("Open")])),_:1}),l[183]||(l[183]=t(" 。否則，從主選單中進入 ")),u(k,null,{default:o(()=>l[180]||(l[180]=[t("File | Open")])),_:1}),l[184]||(l[184]=t(" 並選擇 ")),u(d,null,{default:o(()=>l[181]||(l[181]=[t("ktor-sample-app")])),_:1}),l[185]||(l[185]=t(" 資料夾以開啟它。 "))]),u(j,null,{default:o(()=>l[186]||(l[186]=[t(" 有關管理專案的更多詳細資訊， 請參閱"),n("a",{href:"https://www.jetbrains.com/help/idea/creating-and-managing-projects.html"},"IntelliJ IDEA 文件",-1),t("。 ")])),_:1})]),_:1}),u(f,{title:"探索專案",id:"explore"},{default:o(()=>[l[214]||(l[214]=n("p",null,"無論您選擇哪種選項，專案都應如下圖所示開啟：",-1)),l[215]||(l[215]=n("img",{src:O,alt:"IDE 中產生的 Ktor 專案視圖",width:"706"},null,-1)),n("p",null,[l[192]||(l[192]=t(" 為了說明專案佈局，我們在 ")),u(i,null,{default:o(()=>l[190]||(l[190]=[t("Project")])),_:1}),l[193]||(l[193]=t(" 視圖中展開了結構，並選擇了 ")),u(d,null,{default:o(()=>l[191]||(l[191]=[t("settings-gradle.kts")])),_:1}),l[194]||(l[194]=t(" 檔案。 "))]),n("p",null,[l[200]||(l[200]=t(" 您將看到執行應用程式的程式碼位於 ")),u(d,null,{default:o(()=>l[195]||(l[195]=[t("src/main/kotlin")])),_:1}),l[201]||(l[201]=t(" 下的套件中。預設套件名為 ")),u(d,null,{default:o(()=>l[196]||(l[196]=[t("com.example")])),_:1}),l[202]||(l[202]=t(" 並包含一個名為 ")),u(d,null,{default:o(()=>l[197]||(l[197]=[t("plugins")])),_:1}),l[203]||(l[203]=t(" 的子套件。 這兩個套件中已建立兩個檔案，名為 ")),u(d,null,{default:o(()=>l[198]||(l[198]=[t("Application.kt")])),_:1}),l[204]||(l[204]=t(" 和 ")),u(d,null,{default:o(()=>l[199]||(l[199]=[t("Routing.kt")])),_:1})]),l[216]||(l[216]=n("img",{src:N,alt:"Ktor 專案 src 資料夾結構",width:"400"},null,-1)),n("p",null,[l[206]||(l[206]=t("專案的名稱在 ")),u(d,null,{default:o(()=>l[205]||(l[205]=[t("settings-gradle.kts")])),_:1}),l[207]||(l[207]=t(" 中配置。 "))]),l[217]||(l[217]=n("img",{src:W,alt:"settings.gradle.kt 的內容",width:"706"},null,-1)),n("p",null,[l[209]||(l[209]=t(" 設定檔和其他類型內容位於 ")),u(d,null,{default:o(()=>l[208]||(l[208]=[t("src/main/resources")])),_:1}),l[210]||(l[210]=t(" 資料夾中。 "))]),l[218]||(l[218]=n("img",{src:G,alt:"Ktor 專案 resources 資料夾結構",width:"400"},null,-1)),n("p",null,[l[212]||(l[212]=t(" 在 ")),u(d,null,{default:o(()=>l[211]||(l[211]=[t("src/test/kotlin")])),_:1}),l[213]||(l[213]=t(" 下的一個套件中已建立一個骨架測試。 "))]),l[219]||(l[219]=n("img",{src:M,alt:"Ktor 專案 test 資料夾結構",width:"400"},null,-1))]),_:1}),u(f,{title:"執行專案",id:"run"},{default:o(()=>[u(m,null,{default:o(()=>[l[233]||(l[233]=n("p",null,"要從 IntelliJ IDEA 內部執行專案：",-1)),u(r,null,{default:o(()=>l[220]||(l[220]=[n("p",null,[t("透過點擊右側邊欄上的 Gradle 圖示（"),n("img",{alt:"intelliJ IDEA gradle icon",src:Q,width:"16",height:"26"}),t("） 開啟"),n("a",{href:"https://www.jetbrains.com/help/idea/jetgradle-tool-window.html"},"Gradle 工具視窗"),t(" 。")],-1),n("img",{src:U,alt:"IntelliJ IDEA 中的 Gradle 標籤","border-effect":"line",width:"706"},null,-1)])),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[223]||(l[223]=t("在此工具視窗內導覽至 ")),u(k,null,{default:o(()=>l[221]||(l[221]=[t("Tasks | application")])),_:1}),l[224]||(l[224]=t(" 並雙擊 ")),u(i,null,{default:o(()=>l[222]||(l[222]=[t("run")])),_:1}),l[225]||(l[225]=t(" 任務。 "))]),l[226]||(l[226]=n("img",{src:$,alt:"IntelliJ IDEA 中的 Gradle 標籤","border-effect":"line",width:"450"},null,-1))]),_:1}),u(r,null,{default:o(()=>[l[230]||(l[230]=n("p",null,[t("您的 Ktor 應用程式將在 IDE 底部的"),n("a",{href:"https://www.jetbrains.com/help/idea/run-tool-window.html"},"執行工具視窗"),t("中啟動：")],-1)),l[231]||(l[231]=n("img",{src:q,alt:"專案在終端機中執行",width:"706"},null,-1)),n("p",null,[l[228]||(l[228]=t("之前在命令列上顯示的相同訊息現在將在 ")),u(k,null,{default:o(()=>l[227]||(l[227]=[t("Run")])),_:1}),l[229]||(l[229]=t(" 工具視窗中可見。 "))])]),_:1}),u(r,null,{default:o(()=>l[232]||(l[232]=[n("p",null,[t("要確認專案正在運行，請在指定的 URL ("),n("a",{href:"http://0.0.0.0:8080"},[n("a",{href:"http://0.0.0.0:8080",target:"_blank",rel:"noreferrer"},"http://0.0.0.0:8080")]),t(") 開啟瀏覽器。")],-1),n("p",null,"您應該會再次在螢幕上看到「Hello World!」訊息：",-1),n("img",{src:A,alt:"瀏覽器畫面中的 Hello World",width:"706"},null,-1)])),_:1})]),_:1}),n("p",null,[l[235]||(l[235]=t(" 您可以透過 ")),u(k,null,{default:o(()=>l[234]||(l[234]=[t("Run")])),_:1}),l[236]||(l[236]=t(" 工具視窗管理應用程式。 "))]),u(K,{type:"bullet"},{default:o(()=>l[237]||(l[237]=[n("li",null,[t(" 要終止應用程式，請點擊停止按鈕 "),n("img",{src:B,style:{},height:"16",width:"16",alt:"intelliJ IDEA terminate icon"})],-1),n("li",null,[t(" 要重新啟動程序，請點擊重新執行按鈕 "),n("img",{src:b,style:{},height:"16",width:"16",alt:"intelliJ IDEA rerun icon"})],-1)])),_:1}),l[238]||(l[238]=n("p",null,[t(" 這些選項在"),n("a",{href:"https://www.jetbrains.com/help/idea/run-tool-window.html#run-toolbar"},"IntelliJ IDEA 執行 工具視窗文件"),t("中有進一步解釋。 ")],-1))]),_:1})]),_:1}),u(f,{title:"要嘗試的其他任務",id:"additional-tasks"},{default:o(()=>[l[371]||(l[371]=n("p",null,"以下是一些您可能希望嘗試的其他任務：",-1)),u(K,{type:"decimal"},{default:o(()=>l[239]||(l[239]=[n("li",null,[n("a",{href:"#change-the-default-port"},"更改預設埠。")],-1),n("li",null,[n("a",{href:"#change-the-port-via-yaml"},"透過 YAML 更改埠。")],-1),n("li",null,[n("a",{href:"#add-a-new-http-endpoint"},"新增一個 HTTP 端點。")],-1),n("li",null,[n("a",{href:"#configure-static-content"},"配置靜態內容。")],-1),n("li",null,[n("a",{href:"#write-an-integration-test"},"撰寫整合測試。")],-1),n("li",null,[n("a",{href:"#register-error-handlers"},"註冊錯誤處理程式。")],-1)])),_:1}),l[372]||(l[372]=n("p",null," 這些任務彼此獨立，但複雜度逐漸增加。按聲明的順序嘗試它們是 逐步學習的最簡單方法。為了簡化並避免重複，以下描述 假設您按順序嘗試這些任務。 ",-1)),l[373]||(l[373]=n("p",null," 需要編碼時，我們已指定了程式碼和相應的匯入。IDE 可能會自動為您 新增這些匯入。 ",-1)),u(f,{title:"更改預設埠",id:"change-the-default-port"},{default:o(()=>[n("p",null,[l[242]||(l[242]=t(" 在 ")),u(k,null,{default:o(()=>l[240]||(l[240]=[t("Project")])),_:1}),l[243]||(l[243]=t(" 視圖中，導覽至 ")),u(d,null,{default:o(()=>l[241]||(l[241]=[t("src/main/kotlin")])),_:1}),l[244]||(l[244]=t(" 資料夾，然後進入為您建立的單一套件，並遵循以下步驟： "))]),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>[n("p",null,[l[246]||(l[246]=t("開啟 ")),u(d,null,{default:o(()=>l[245]||(l[245]=[t("Application.kt")])),_:1}),l[247]||(l[247]=t(" 檔案。您應該會找到類似以下的程式碼： "))]),u(e,{lang:"kotlin",code:`                        fun main() {
                            embeddedServer(
                                Netty,
                                port = 8080, // This is the port on which Ktor is listening
                                host = "0.0.0.0",
                                module = Application::module
                            ).start(wait = true)
                        }

                        fun Application.module() {
                            configureRouting()
                        }`})]),_:1}),u(r,null,{default:o(()=>[l[248]||(l[248]=n("p",null,[t("在 "),n("code",null,"embeddedServer()"),t(" 函數中，將 "),n("code",null,"port"),t(" 參數更改 為您選擇的另一個數字，例如「9292」。")],-1)),u(e,{lang:"kotlin",code:`                        fun main() {
                            embeddedServer(
                                Netty,
                                port = 9292,
                                host = "0.0.0.0",
                                module = Application::module
                            ).start(wait = true)
                        }`})]),_:1}),u(r,null,{default:o(()=>l[249]||(l[249]=[n("p",null,[t("點擊重新執行按鈕（"),n("img",{alt:"intelliJ IDEA rerun button icon",src:b,height:"16",width:"16"}),t("） 以重新啟動應用程式。")],-1)])),_:1}),u(r,null,{default:o(()=>l[250]||(l[250]=[n("p",null,[t("要驗證您的應用程式是否在新的埠號下運行，您可以在新的 URL ("),n("a",{href:"http://0.0.0.0:9292"},[n("a",{href:"http://0.0.0.0:9292",target:"_blank",rel:"noreferrer"},"http://0.0.0.0:9292")]),t(") 開啟瀏覽器，或者 "),n("a",{href:"https://www.jetbrains.com/help/idea/http-client-in-product-code-editor.html#creating-http-request-files"},"在 IntelliJ IDEA 中建立一個新的 HTTP 請求檔案"),t("：")],-1),n("img",{src:Y,alt:"在 IntelliJ IDEA 中使用 HTTP 請求檔案測試埠更改",width:"706"},null,-1)])),_:1})]),_:1})]),_:1}),u(f,{title:"透過 YAML 更改埠",id:"change-the-port-via-yaml"},{default:o(()=>[l[257]||(l[257]=n("p",null," 建立新的 Ktor 專案時，您可以選擇將配置外部儲存，可以是 YAML 或 HOCON 檔案： ",-1)),l[258]||(l[258]=n("img",{src:z,width:"400",alt:"Ktor 專案產生器配置選項"},null,-1)),n("p",null,[l[252]||(l[252]=t(" 如果您選擇外部儲存配置，那麼 ")),u(d,null,{default:o(()=>l[251]||(l[251]=[t("Application.kt")])),_:1}),l[253]||(l[253]=t(" 中的程式碼將是： "))]),u(e,{lang:"kotlin",code:`                fun main(args: Array<String>): Unit =
                    io.ktor.server.netty.EngineMain.main(args)

                @Suppress("unused")
                fun Application.module() {
                    configureRouting()
                }`}),n("p",null,[l[255]||(l[255]=t(" 這些將是儲存在 ")),u(d,null,{default:o(()=>l[254]||(l[254]=[t("src/main/resources/")])),_:1}),l[256]||(l[256]=t(" 中設定檔中的值： "))]),u(y,null,{default:o(()=>[u(g,{title:"application.yaml (YAML)","group-key":"yaml"},{default:o(()=>[u(e,{lang:"yaml",code:`                        ktor:
                            application:
                                modules:
                                    - com.example.ApplicationKt.module
                            deployment:
                                port: 8080`})]),_:1}),u(g,{title:"application.conf (HOCON)","group-key":"hocon"},{default:o(()=>[u(e,{lang:"json",code:`                        ktor {
                            deployment {
                                port = 8080
                                port = \${?PORT}
                            }
                            application {
                                modules = [ com.example.ApplicationKt.module ]
                            }
                        }`})]),_:1})]),_:1}),l[259]||(l[259]=n("p",null,[t(" 在這種情況下，您無需更改任何程式碼即可更改埠號。只需更改 YAML 或 HOCON 檔案中的值並重新啟動應用程式即可。更改可以與上方"),n("a",{href:"#change-the-default-port"},"更改預設埠"),t(" 相同的方式進行驗證。 ")],-1))]),_:1}),u(f,{title:"新增一個 HTTP 端點",id:"add-a-new-http-endpoint"},{default:o(()=>[l[282]||(l[282]=n("p",null,"接下來，您將建立一個新的 HTTP 端點，它將回應 GET 請求。",-1)),n("p",null,[l[262]||(l[262]=t(" 在 ")),u(k,null,{default:o(()=>l[260]||(l[260]=[t("Project")])),_:1}),l[263]||(l[263]=t(" 工具視窗中，導覽至 ")),u(d,null,{default:o(()=>l[261]||(l[261]=[t("src/main/kotlin/com/example")])),_:1}),l[264]||(l[264]=t(" 資料夾並遵循以下步驟： "))]),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>[n("p",null,[l[266]||(l[266]=t("開啟 ")),u(d,null,{default:o(()=>l[265]||(l[265]=[t("Application.kt")])),_:1}),l[267]||(l[267]=t(" 檔案並找到 ")),l[268]||(l[268]=n("code",null,"configureRouting()",-1)),l[269]||(l[269]=t(" 函數。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[271]||(l[271]=t("在 IntelliJ IDEA 中，將游標置於函數名稱上並按下 ")),u(w,null,{default:o(()=>l[270]||(l[270]=[t("⌘Cmd+B")])),_:1}),l[272]||(l[272]=t(" ，導覽至 ")),l[273]||(l[273]=n("code",null,"configureRouting()",-1)),l[274]||(l[274]=t(" 函數。 "))]),l[275]||(l[275]=n("p",null,[t("或者，您可以透過開啟 "),n("code",null,"Routing.kt"),t(" 檔案導覽至該函數。")],-1)),l[276]||(l[276]=n("p",null,"這是您應該看到的程式碼：",-1)),u(e,{lang:"Kotlin",validate:"true",code:`                        fun Application.configureRouting() {
                            routing {
                                get("/") {
                                    call.respondText("Hello World!")
                                }
                            }
                        }`})]),_:1}),u(r,null,{default:o(()=>[l[277]||(l[277]=n("p",null,"要建立一個新端點，請插入以下額外五行程式碼：",-1)),u(e,{lang:"kotlin",code:`fun Application.configureRouting() {
    routing {
        get("/") {
            call.respondText("Hello World!")
        }

        get("/test1") {
            val text = "<h1>Hello From Ktor</h1>"
            val type = ContentType.parse("text/html")
            call.respondText(text, type)
        }
    }
}`}),l[278]||(l[278]=n("p",null,[t("請注意，您可以將 "),n("code",null,"/test1"),t(" URL 更改為您喜歡的任何內容。")],-1))]),_:1}),u(r,null,{default:o(()=>[l[279]||(l[279]=n("p",null,[t("為了使用 "),n("code",null,"ContentType"),t("，請新增以下匯入：")],-1)),u(e,{lang:"kotlin",code:"                        import io.ktor.http.*"})]),_:1}),u(r,null,{default:o(()=>l[280]||(l[280]=[n("p",null,[t("點擊重新執行按鈕（"),n("img",{alt:"intelliJ IDEA rerun button icon",src:b,height:"16",width:"16"}),t("） 以重新啟動應用程式。")],-1)])),_:1}),u(r,null,{default:o(()=>l[281]||(l[281]=[n("p",null,[t("在瀏覽器中請求新的 URL ("),n("a",{href:"http://0.0.0.0:9292/test1"},[n("a",{href:"http://0.0.0.0:9292/test1",target:"_blank",rel:"noreferrer"},"http://0.0.0.0:9292/test1")]),t(")。您應該使用的埠號將取決於您是否已嘗試第一個任務（"),n("a",{href:"#change-the-default-port"},"更改預設埠"),t("）。您應該會看到 如下圖所示的輸出：")],-1),n("img",{src:F,alt:"顯示「Hello from Ktor」的瀏覽器畫面",width:"706"},null,-1),n("p",null,"如果您已建立 HTTP 請求檔案，您也可以在那裡驗證新端點：",-1),n("img",{src:V,alt:"IntelliJ IDEA 中的 HTTP 請求檔案",width:"450"},null,-1),n("p",null,"請注意，需要一行包含三個井字號 (###) 來分隔不同的請求。",-1)])),_:1})]),_:1})]),_:1}),u(f,{title:"配置靜態內容",id:"configure-static-content"},{default:o(()=>[n("p",null,[l[285]||(l[285]=t("在 ")),u(k,null,{default:o(()=>l[283]||(l[283]=[t("Project")])),_:1}),l[286]||(l[286]=t(" 工具視窗中，導覽至 ")),u(d,null,{default:o(()=>l[284]||(l[284]=[t("src/main/kotlin/com/example/plugins")])),_:1}),l[287]||(l[287]=t(" 資料夾並遵循以下步驟： "))]),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>[l[288]||(l[288]=n("p",null,[t("開啟 "),n("code",null,"Routing.kt"),t(" 檔案。")],-1)),l[289]||(l[289]=n("p",null,"這應該是預設內容：",-1)),u(e,{lang:"kotlin",code:`                        fun Application.configureRouting() {
                            routing {
                                get("/") {
                                    call.respondText("Hello World!")
                                }
                            }
                        }`}),l[290]||(l[290]=n("p",null,[t("對於此任務，無論您是否已插入 "),n("a",{href:"#add-a-new-http-endpoint"},"新增 HTTP 端點"),t("中指定 的額外端點內容，都無關緊要。")],-1))]),_:1}),u(r,null,{default:o(()=>[l[292]||(l[292]=n("p",null,"在路由區段中新增以下行：",-1)),u(e,{lang:"kotlin",code:`                        fun Application.configureRouting() {
                            routing {
                                // Add the line below
                                staticResources("/content", "mycontent")

                                get("/") {
                                    call.respondText("Hello World!")
                                }
                            }
                        }`}),l[293]||(l[293]=n("p",null,"這行的含義如下：",-1)),u(K,{type:"bullet"},{default:o(()=>l[291]||(l[291]=[n("li",null,[t("呼叫 "),n("code",null,"staticResources()"),t(" 告訴 Ktor 我們希望應用程式能夠提供標準網站內容，例如 HTML 和 JavaScript 檔案。儘管這些內容可能在瀏覽器中執行，但從 伺服器的角度來看，它被認為是靜態的。 ")],-1),n("li",null,[t("URL "),n("code",null,"/content"),t(" 指定應用程式應該用於獲取此內容的路徑。 ")],-1),n("li",null,[t("路徑 "),n("code",null,"mycontent"),t(" 是靜態內容將所在的資料夾名稱。Ktor 將在 "),n("code",null,"resources"),t(" 目錄中尋找此資料夾。 ")],-1)])),_:1})]),_:1}),u(r,null,{default:o(()=>[l[294]||(l[294]=n("p",null,"新增以下匯入：",-1)),u(e,{lang:"kotlin",code:"                        import io.ktor.server.http.content.*"})]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[297]||(l[297]=t("在 ")),u(i,null,{default:o(()=>l[295]||(l[295]=[t("Project")])),_:1}),l[298]||(l[298]=t(" 工具視窗中，右鍵點擊 ")),l[299]||(l[299]=n("code",null,"src/main/resources",-1)),l[300]||(l[300]=t(" 資料夾並選擇 ")),u(i,null,{default:o(()=>l[296]||(l[296]=[t("New | Directory")])),_:1}),l[301]||(l[301]=t(" 。 "))]),n("p",null,[l[304]||(l[304]=t("或者，選擇 ")),l[305]||(l[305]=n("code",null,"src/main/resources",-1)),l[306]||(l[306]=t(" 資料夾，按下 ")),u(w,null,{default:o(()=>l[302]||(l[302]=[t("⌘Cmd+N")])),_:1}),l[307]||(l[307]=t(" ，然後點擊 ")),u(i,null,{default:o(()=>l[303]||(l[303]=[t("Directory")])),_:1}),l[308]||(l[308]=t(" 。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[310]||(l[310]=t("將新目錄命名為 ")),l[311]||(l[311]=n("code",null,"mycontent",-1)),l[312]||(l[312]=t(" 並按下 ")),u(w,null,{default:o(()=>l[309]||(l[309]=[t("↩Enter")])),_:1}),l[313]||(l[313]=t(" 。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[315]||(l[315]=t("右鍵點擊新建立的資料夾並點擊 ")),u(i,null,{default:o(()=>l[314]||(l[314]=[t("New | File")])),_:1}),l[316]||(l[316]=t(" 。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[318]||(l[318]=t("將新檔案命名為「sample.html」並按下 ")),u(w,null,{default:o(()=>l[317]||(l[317]=[t("↩Enter")])),_:1}),l[319]||(l[319]=t(" 。 "))])]),_:1}),u(r,null,{default:o(()=>[l[320]||(l[320]=n("p",null,"使用有效的 HTML 填充新建立的檔案頁面，例如：",-1)),u(e,{lang:"html",code:`<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <title>My sample</title>
    </head>
    <body>
        <h1>This page is built with:</h1>
    <ol>
        <li>Ktor</li>
        <li>Kotlin</li>
        <li>HTML</li>
    </ol>
    </body>
</html>`})]),_:1}),u(r,null,{default:o(()=>l[321]||(l[321]=[n("p",null,[t("點擊重新執行按鈕（"),n("img",{alt:"intelliJ IDEA rerun button icon",src:b,height:"16",width:"16"}),t("） 以重新啟動應用程式。")],-1)])),_:1}),u(r,null,{default:o(()=>l[322]||(l[322]=[n("p",null,[t("當您在 "),n("a",{href:"http://0.0.0.0:9292/content/sample.html"},[n("a",{href:"http://0.0.0.0:9292/content/sample.html",target:"_blank",rel:"noreferrer"},"http://0.0.0.0:9292/content/sample.html")]),t(" 開啟瀏覽器時，您樣本頁面的內容應該會顯示：")],-1),n("img",{src:X,alt:"瀏覽器中靜態頁面的輸出",width:"706"},null,-1)])),_:1})]),_:1})]),_:1}),u(f,{title:"撰寫整合測試",id:"write-an-integration-test"},{default:o(()=>[n("p",null,[l[324]||(l[324]=t(" Ktor 提供對")),u(s,{href:"/ktor/server-testing",summary:"學習如何使用特殊的測試引擎測試您的伺服器應用程式。"},{default:o(()=>l[323]||(l[323]=[t("建立整合測試")])),_:1}),l[325]||(l[325]=t("的支援，並且您產生的 專案捆綁了此功能。 "))]),l[340]||(l[340]=n("p",null,"要使用此功能，請遵循以下步驟：",-1)),u(m,null,{default:o(()=>[u(r,null,{default:o(()=>[n("p",null,[l[327]||(l[327]=t(" 在 ")),u(d,null,{default:o(()=>l[326]||(l[326]=[t("src")])),_:1}),l[328]||(l[328]=t(" 下建立一個名為「test」的新目錄，並在其中建立一個名為「kotlin」的子目錄。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[330]||(l[330]=t("在 ")),u(d,null,{default:o(()=>l[329]||(l[329]=[t("src/test/kotlin")])),_:1}),l[331]||(l[331]=t(" 內建立一個名為「com.example」的新套件。 "))])]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[333]||(l[333]=t(" 在 ")),u(d,null,{default:o(()=>l[332]||(l[332]=[t("src/test/kotlin/com.example")])),_:1}),l[334]||(l[334]=t(" 內建立一個名為「ApplicationTest.kt」的新檔案。 "))])]),_:1}),u(r,null,{default:o(()=>[l[335]||(l[335]=n("p",null,[t("開啟 "),n("code",null,"ApplicationTest.kt"),t(" 檔案並新增以下程式碼：")],-1)),u(e,{lang:"kotlin",code:`                        class ApplicationTest {

                            @Test
                            fun testRoot() = testApplication {
                                application {
                                    module()
                                }
                                val response = client.get("/")

                                assertEquals(HttpStatusCode.OK, response.status)
                                assertEquals("Hello World!", response.bodyAsText())
                            }
                        }`}),l[336]||(l[336]=n("p",null,[n("code",null,"testApplication()"),t(" 方法建立一個新的 Ktor 實例。此實例在測試環境中運行， 而不是像 Netty 這樣的伺服器。")],-1)),l[337]||(l[337]=n("p",null,[t("然後，您可以使用 "),n("code",null,"application()"),t(" 方法調用與從 "),n("code",null,"embeddedServer()"),t(" 呼叫的相同設定。")],-1)),l[338]||(l[338]=n("p",null,[t("最後，您可以使用內建的 "),n("code",null,"client"),t(" 物件和 JUnit 斷言來發送範例請求並檢查回應。")],-1))]),_:1}),u(r,null,{default:o(()=>[l[339]||(l[339]=n("p",null,"新增以下所需匯入：",-1)),u(e,{lang:"kotlin",code:`                        import io.ktor.client.request.*
                        import io.ktor.client.statement.*
                        import io.ktor.http.*
                        import io.ktor.server.testing.*
                        import org.junit.Assert.assertEquals
                        import org.junit.Test`})]),_:1})]),_:1}),l[341]||(l[341]=n("p",null," 測試可以在 IntelliJ IDEA 中執行測試的任何標準方式運行。請注意，因為 您正在運行 Ktor 的新實例，所以測試的成功或失敗不取決於您的應用程式是否正在 0.0.0.0 運行。 ",-1)),l[342]||(l[342]=n("p",null,[t(" 如果您已成功完成"),n("a",{href:"#add-a-new-http-endpoint"},"新增 HTTP 端點"),t("， 您應該能夠新增此額外測試： ")],-1)),u(e,{lang:"Kotlin",code:`                @Test
                fun testNewEndpoint() = testApplication {
                    application {
                        module()
                    }

                    val response = client.get("/test1")

                    assertEquals(HttpStatusCode.OK, response.status)
                    assertEquals("html", response.contentType()?.contentSubtype)
                    assertContains(response.bodyAsText(), "Hello From Ktor")
                }`}),l[343]||(l[343]=n("p",null,"需要以下額外匯入：",-1)),u(e,{lang:"Kotlin",code:"                import kotlin.test.assertContains"})]),_:1}),u(f,{title:"註冊錯誤處理程式",id:"register-error-handlers"},{default:o(()=>[n("p",null,[l[345]||(l[345]=t(" 您可以使用")),u(s,{href:"/ktor/server-status-pages",summary:"%plugin_name% 允許 Ktor 應用程式根據拋出的異常或狀態碼適當地回應任何失敗狀態。"},{default:o(()=>l[344]||(l[344]=[t("StatusPages 外掛程式")])),_:1}),l[346]||(l[346]=t("在 Ktor 應用程式中處理錯誤。 "))]),n("p",null,[l[348]||(l[348]=t(" 此外掛程式預設不包含在您的專案中。您可以透過 Ktor 專案產生器中的")),u(k,null,{default:o(()=>l[347]||(l[347]=[t("Plugins")])),_:1}),l[349]||(l[349]=t(" 部分，或 IntelliJ IDEA 中的專案精靈將其新增到您的專案中。由於您已建立專案，在接下來的步驟中 您將學習如何手動新增和配置該外掛程式。 "))]),l[369]||(l[369]=n("p",null," 為此有四個步驟： ",-1)),u(K,{type:"decimal"},{default:o(()=>l[350]||(l[350]=[n("li",null,[n("a",{href:"#add-dependency"},"在 Gradle 建置檔案中新增依賴項。")],-1),n("li",null,[n("a",{href:"#install-plugin-and-specify-handler"},"安裝外掛程式並指定異常 處理程式。")],-1),n("li",null,[n("a",{href:"#write-sample-code"},"撰寫範例程式碼以觸發處理程式。")],-1),n("li",null,[n("a",{href:"#restart-and-invoke"},"重新啟動並呼叫範例程式碼。")],-1)])),_:1}),u(m,{title:"新增依賴項",id:"add-dependency"},{default:o(()=>[n("p",null,[l[352]||(l[352]=t("在 ")),u(i,null,{default:o(()=>l[351]||(l[351]=[t("Project")])),_:1}),l[353]||(l[353]=t(" 工具視窗中，導覽至專案根資料夾並遵循以下步驟： "))]),u(r,null,{default:o(()=>l[354]||(l[354]=[n("p",null,[t("開啟 "),n("code",null,"build.gradle.kts"),t(" 檔案。")],-1)])),_:1}),u(r,null,{default:o(()=>[l[355]||(l[355]=n("p",null,"在依賴項部分中新增額外依賴項，如下所示：",-1)),u(e,{lang:"kotlin",code:`                        dependencies {
                            // The new dependency to be added
                            implementation("io.ktor:ktor-server-status-pages:$ktor_version")
                            // The existing dependencies
                            implementation("io.ktor:ktor-server-core-jvm:$ktor_version")
                            implementation("io.ktor:ktor-server-netty-jvm:$ktor_version")
                            implementation("ch.qos.logback:logback-classic:$logback_version")
                            testImplementation("io.ktor:ktor-server-test-host-jvm:$ktor_version")
                            testImplementation("org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version")
                        }`}),l[356]||(l[356]=n("p",null,"完成此操作後，您需要重新載入專案以載入此新依賴項。",-1))]),_:1}),u(r,null,{default:o(()=>[n("p",null,[l[359]||(l[359]=t("在 macOS 上按 ")),u(w,null,{default:o(()=>l[357]||(l[357]=[t("Shift+⌘Cmd+I")])),_:1}),l[360]||(l[360]=t(" 或在 Windows 上按 ")),u(w,null,{default:o(()=>l[358]||(l[358]=[t("Ctrl+Shift+O")])),_:1}),l[361]||(l[361]=t(" 以重新載入專案。 "))])]),_:1})]),_:1}),u(m,{title:"安裝外掛程式並指定異常處理程式",id:"install-plugin-and-specify-handler"},{default:o(()=>[u(r,null,{default:o(()=>[l[362]||(l[362]=n("p",null,[t("導覽至 "),n("code",null,"Routing.kt"),t(" 中的 "),n("code",null,"configureRouting()"),t(" 方法並新增以下程式碼行：")],-1)),u(e,{lang:"kotlin",code:`fun Application.configureRouting() {
    install(StatusPages) {
        exception<IllegalStateException> { call, cause ->
            call.respondText("App in illegal state as \${cause.message}")
        }
    }
    routing {
        get("/") {
            call.respondText("Hello World!")
        }
    }
}`}),l[363]||(l[363]=n("p",null,[t("這些行安裝 "),n("code",null,"StatusPages"),t(" 外掛程式並指定當拋出 "),n("code",null,"IllegalStateException"),t(" 類型的異常時要執行的動作。")],-1))]),_:1}),u(r,null,{default:o(()=>[l[364]||(l[364]=n("p",null,"新增以下匯入：",-1)),u(e,{lang:"kotlin",code:"                        import io.ktor.server.plugins.statuspages.*"})]),_:1})]),_:1}),l[370]||(l[370]=n("p",null," 請注意，HTTP 錯誤代碼通常會在回應中設定，但為了 本任務的目的，輸出直接顯示在瀏覽器中。 ",-1)),u(m,{title:"撰寫範例程式碼以觸發處理程式",id:"write-sample-code"},{default:o(()=>[u(r,null,{default:o(()=>[l[365]||(l[365]=n("p",null,[t("仍在 "),n("code",null,"configureRouting()"),t(" 方法中，新增以下額外行：")],-1)),u(e,{lang:"kotlin",code:`fun Application.configureRouting() {
    install(StatusPages) {
        exception<IllegalStateException> { call, cause ->
            call.respondText("App in illegal state as \${cause.message}")
        }
    }
    routing {
        get("/") {
            call.respondText("Hello World!")
        }
        get("/error-test") {
            throw IllegalStateException("Too Busy")
        }
    }
}`}),l[366]||(l[366]=n("p",null,[t("您現在已新增一個 URL 為 "),n("code",null,"/error-test"),t(" 的端點。當此端點被觸發時，將拋出一個 與處理程式中使用的類型相同的異常。")],-1))]),_:1})]),_:1}),u(m,{title:"重新啟動並呼叫範例程式碼",id:"restart-and-invoke"},{default:o(()=>[u(r,null,{default:o(()=>l[367]||(l[367]=[n("p",null,[t("點擊重新執行按鈕（"),n("img",{alt:"intelliJ IDEA rerun button icon",src:b,height:"16",width:"16"}),t("） 以重新啟動應用程式。")],-1)])),_:1}),u(r,null,{default:o(()=>l[368]||(l[368]=[n("p",null,[t("在您的瀏覽器中，導覽至 URL "),n("a",{href:"http://0.0.0.0:9292/error-test"},[n("a",{href:"http://0.0.0.0:9292/error-test",target:"_blank",rel:"noreferrer"},"http://0.0.0.0:9292/error-test")]),t("。 您應該會看到如下圖所示的錯誤訊息：")],-1),n("img",{src:Z,alt:"顯示訊息「App in illegal state as Too Busy」的瀏覽器畫面",width:"706"},null,-1)])),_:1})]),_:1})]),_:1})]),_:1}),u(f,{title:"後續步驟",id:"next_steps"},{default:o(()=>[l[377]||(l[377]=n("p",null," 如果您已完成這些額外任務，您現在應該已掌握配置 Ktor 伺服器、整合 Ktor 外掛程式以及實作新路由。然而，這僅僅是個開始。要更深入地 探索 Ktor 的基礎概念，請繼續本指南中的下一個教學。 ",-1)),n("p",null,[l[375]||(l[375]=t(" 接下來，您將學習如何")),u(s,{href:"/ktor/server-requests-and-responses",summary:"透過建置任務管理器應用程式，使用 Kotlin 和 Ktor 學習路由、處理請求和參數的基礎知識。"},{default:o(()=>l[374]||(l[374]=[t("透過建立任務管理器應用程式來處理請求並 產生回應")])),_:1}),l[376]||(l[376]=t("。 "))])]),_:1})]),_:1})])}const gl=_(ll,[["render",tl]]);export{ml as __pageData,gl as default};
