import{_ as E,C as n,c as g,o as c,j as s,G as t,ag as k,a as i,w as e}from"./chunks/framework.Bksy39di.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-war.md","filePath":"ja/ktor/server-war.md","lastUpdated":1755457140000}'),y={name:"ja/ktor/server-war.md"};function u(v,a,m,b,f,F){const p=n("show-structure"),o=n("tldr"),d=n("link-summary"),r=n("code-block"),l=n("TabItem"),h=n("Tabs");return c(),g("div",null,[a[7]||(a[7]=s("h1",{id:"war",tabindex:"-1"},[i("WAR "),s("a",{class:"header-anchor",href:"#war","aria-label":'Permalink to "WAR"'},"​")],-1)),t(p,{for:"chapter",depth:"2"}),t(o,null,{default:e(()=>a[0]||(a[0]=[s("p",null,[s("b",null,"コード例"),i(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war"},"jetty-war"),i(", "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war"},"tomcat-war"),i(", "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war-ssl"},"tomcat-war-ssl")],-1)])),_:1}),t(d,null,{default:e(()=>a[1]||(a[1]=[i(" WARアーカイブを使用して、サーブレットコンテナ内でKtorアプリケーションを実行およびデプロイする方法を学びます。 ")])),_:1}),a[8]||(a[8]=k('<p>Ktorアプリケーションは、TomcatやJettyを含むサーブレットコンテナ内で実行およびデプロイできます。サーブレットコンテナ内にデプロイするには、WARアーカイブを生成し、それをWARをサポートするサーバーまたはクラウドサービスにデプロイする必要があります。</p><p>このトピックでは、以下の方法について説明します。</p><ul><li>サーブレットアプリケーションでKtorを使用するように設定する。</li><li>WARアプリケーションの実行とパッケージングのためにGrettyとWarプラグインを適用する。</li><li>Ktorサーブレットアプリケーションを実行する。</li><li>WARアーカイブを生成してデプロイする。</li></ul><h2 id="configure-ktor" tabindex="-1">サーブレットアプリケーションでのKtorの設定 <a class="header-anchor" href="#configure-ktor" aria-label="Permalink to &quot;サーブレットアプリケーションでのKtorの設定 {id=&quot;configure-ktor&quot;}&quot;">​</a></h2><p>Ktorは、<a href="./server-create-and-configure">必要なエンジン</a>（Netty、Jetty、Tomcatなど）を使って、アプリケーション内でサーバーを<a href="./server-create-and-configure">作成および起動</a>することを可能にします。この場合、アプリケーションはエンジンの設定、接続、SSLオプションを制御できます。</p><p>上記のアプローチとは対照的に、サーブレットコンテナがアプリケーションのライフサイクルと接続設定を制御する必要があります。Ktorは、アプリケーションの制御をサーブレットコンテナに委譲する特別な<a href="https://api.ktor.io/ktor-server/ktor-server-servlet/io.ktor.server.servlet/-servlet-application-engine/index.html" target="_blank" rel="noreferrer">ServletApplicationEngine</a>エンジンを提供します。</p><blockquote><p><a href="./server-configuration-file">接続とSSLの設定</a>は、Ktorアプリケーションがサーブレットコンテナ内にデプロイされている場合、有効にならないことに注意してください。 <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war-ssl" target="_blank" rel="noreferrer">tomcat-war-ssl</a>サンプルは、TomcatでSSLを設定する方法を示しています。</p></blockquote><h3 id="add-dependencies" tabindex="-1">依存関係の追加 <a class="header-anchor" href="#add-dependencies" aria-label="Permalink to &quot;依存関係の追加 {id=&quot;add-dependencies&quot;}&quot;">​</a></h3><p>サーブレットアプリケーションでKtorを使用するには、<code>ktor-server-servlet-jakarta</code>アーティファクトをビルドスクリプトに含める必要があります。</p>',9)),t(h,{group:"languages"},{default:e(()=>[t(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:e(()=>[t(r,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-servlet-jakarta:$ktor_version")'})]),_:1}),t(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:e(()=>[t(r,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-servlet-jakarta:$ktor_version"'})]),_:1}),t(l,{title:"Maven","group-key":"maven"},{default:e(()=>[t(r,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-servlet-jakarta-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),a[9]||(a[9]=k('<p>Tomcat/Jettyの9.x以前のバージョンを使用している場合は、代わりに<code>ktor-server-servlet</code>アーティファクトを追加してください。</p><blockquote><p>Ktorアプリケーションがサーブレットコンテナ内にデプロイされている場合、個別の<a href="./server-engines#dependencies">JettyまたはTomcatのアーティファクト</a>は必要ないことに注意してください。</p></blockquote><h3 id="configure-servlet" tabindex="-1">サーブレットの設定 <a class="header-anchor" href="#configure-servlet" aria-label="Permalink to &quot;サーブレットの設定 {id=&quot;configure-servlet&quot;}&quot;">​</a></h3><p>アプリケーションにKtorサーブレットを登録するには、<code>WEB-INF/web.xml</code>ファイルを開き、<code>ServletApplicationEngine</code>を<code>servlet-class</code>属性に割り当てます。</p>',4)),t(h,null,{default:e(()=>[t(l,{title:"Tomcat/Jetty v10.x以上"},{default:e(()=>a[2]||(a[2]=[s("div",{class:"language-xml vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"xml"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"display-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">KtorServlet</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"display-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">KtorServlet</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">io.ktor.server.servlet.jakarta.ServletApplicationEngine</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet-class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"init-param"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">io.ktor.ktor.config</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-value"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">application.conf</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"param-value"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    </"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"init-param"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"async-supported"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">true</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"async-supported"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"</"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"servlet"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")])])])],-1)])),_:1}),t(l,{title:"Tomcat/Jetty v9.x"},{default:e(()=>[t(r,{lang:"XML",code:`<servlet>
    <display-name>KtorServlet</display-name>
    <servlet-name>KtorServlet</servlet-name>
    <servlet-class>io.ktor.server.servlet.ServletApplicationEngine</servlet-class>
    <init-param>
        <param-name>io.ktor.ktor.config</param-name>
        <param-value>application.conf</param-value>
    </init-param>
    <async-supported>true</async-supported>
</servlet>`})]),_:1})]),_:1}),a[10]||(a[10]=k(`<p>次に、このサーブレットのURLパターンを設定します。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-mapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;KtorServlet&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url-pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;/&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url-pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servlet-mapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="configure-gretty" tabindex="-1">Grettyの設定 <a class="header-anchor" href="#configure-gretty" aria-label="Permalink to &quot;Grettyの設定 {id=&quot;configure-gretty&quot;}&quot;">​</a></h2><p><a href="https://plugins.gradle.org/plugin/org.gretty" target="_blank" rel="noreferrer">Gretty</a>プラグインを使用すると、JettyおよびTomcatでサーブレットアプリケーションを<a href="#run">実行</a>できます。このプラグインをインストールするには、<code>build.gradle.kts</code>ファイルを開き、<code>plugins</code>ブロックに以下のコードを追加します。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;org.gretty&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4.0.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>次に、<code>gretty</code>ブロックで以下のように設定できます。</p>`,6)),t(h,null,{default:e(()=>[t(l,{title:"Jetty"},{default:e(()=>a[3]||(a[3]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"gretty {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    servletContainer "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "jetty11"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    contextPath "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "/"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    logbackConfigFile "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "src/main/resources/logback.xml"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(l,{title:"Tomcat"},{default:e(()=>a[4]||(a[4]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"gretty {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    servletContainer "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "tomcat10"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    contextPath "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "/"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    logbackConfigFile "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "src/main/resources/logback.xml"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[11]||(a[11]=k(`<p>最後に、<code>run</code>タスクを設定します。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">afterEvaluate {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getByName(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;run&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dependsOn(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;appRun&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configure-war" tabindex="-1">Warの設定 <a class="header-anchor" href="#configure-war" aria-label="Permalink to &quot;Warの設定 {id=&quot;configure-war&quot;}&quot;">​</a></h2><p>Warプラグインを使用すると、WARアーカイブを<a href="#generate-war">生成</a>できます。<code>build.gradle.kts</code>ファイルの<code>plugins</code>ブロックに以下の行を追加することでインストールできます。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;war&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="run" tabindex="-1">アプリケーションの実行 <a class="header-anchor" href="#run" aria-label="Permalink to &quot;アプリケーションの実行 {id=&quot;run&quot;}&quot;">​</a></h2><p><a href="#configure-gretty">設定済みのGrettyプラグイン</a>を使用して、<code>run</code>タスクを使ってサーブレットアプリケーションを実行できます。例えば、以下のコマンドは<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war" target="_blank" rel="noreferrer">jetty-war</a>の例を実行します。</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :jetty-war:run</span></span></code></pre></div><h2 id="generate-war" tabindex="-1">WARアーカイブの生成とデプロイ <a class="header-anchor" href="#generate-war" aria-label="Permalink to &quot;WARアーカイブの生成とデプロイ {id=&quot;generate-war&quot;}&quot;">​</a></h2><p><a href="#configure-war">War</a>プラグインを使用してアプリケーションのWARファイルを生成するには、<code>war</code>タスクを実行します。<a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war" target="_blank" rel="noreferrer">jetty-war</a>の例では、コマンドは以下のようになります。</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :jetty-war:war</span></span></code></pre></div><p><code>jetty-war.war</code>は<code>build/libs</code>ディレクトリに作成されます。生成されたアーカイブは、<code>jetty/webapps</code>ディレクトリにコピーすることで、サーブレットコンテナ内にデプロイできます。例えば、以下の<code>Dockerfile</code>は、作成されたWARをJettyまたはTomcatサーブレットコンテナ内で実行する方法を示しています。</p>`,12)),t(h,null,{default:e(()=>[t(l,{title:"Jetty"},{default:e(()=>a[5]||(a[5]=[s("div",{class:"language-Docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"Docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"FROM"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," jetty:11.0.25")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"EXPOSE"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," 8080:8080")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"COPY"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ./build/libs/jetty-war.war/ /var/lib/jetty/webapps")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"WORKDIR"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," /var/lib/jetty")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"CMD"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"java"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"-jar"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/usr/local/jetty/start.jar"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")])])])],-1)])),_:1}),t(l,{title:"Tomcat"},{default:e(()=>a[6]||(a[6]=[s("div",{class:"language-Docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"Docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"FROM"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," tomcat:10.1.41")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"EXPOSE"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," 8080:8080")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"COPY"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ./build/libs/tomcat-war.war/ /usr/local/tomcat/webapps")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"WORKDIR"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," /usr/local/tomcat")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"CMD"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"catalina.sh"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"run"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")])])])],-1)])),_:1})]),_:1}),a[12]||(a[12]=s("p",null,[i("完全な例はこちらで確認できます: "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/jetty-war",target:"_blank",rel:"noreferrer"},"jetty-war"),i(" および "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/tomcat-war",target:"_blank",rel:"noreferrer"},"tomcat-war"),i("。")],-1))])}const C=E(y,[["render",u]]);export{A as __pageData,C as default};
