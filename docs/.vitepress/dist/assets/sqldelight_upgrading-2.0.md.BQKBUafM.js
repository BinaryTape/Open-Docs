import{_ as i,c as a,o as e,ag as l}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"升级到 2.0","description":"","frontmatter":{},"headers":[],"relativePath":"sqldelight/upgrading-2.0.md","filePath":"sqldelight/upgrading-2.0.md","lastUpdated":1748443437000}'),t={name:"sqldelight/upgrading-2.0.md"};function n(p,s,h,d,k,r){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="升级到-2-0" tabindex="-1">升级到 2.0 <a class="header-anchor" href="#升级到-2-0" aria-label="Permalink to &quot;升级到 2.0&quot;">​</a></h1><p>SQLDelight 2.0 对 Gradle 插件和运行时 API 进行了一些破坏性变更。</p><p>本页面列出了这些破坏性变更及其在 2.0 中的新对应项。有关新功能和更多变更的完整列表，请参阅<a href="/sqldelight/changelog">更新日志</a>。</p><h2 id="新包名和-artifact-组" tabindex="-1">新包名和 Artifact 组 <a class="header-anchor" href="#新包名和-artifact-组" aria-label="Permalink to &quot;新包名和 Artifact 组&quot;">​</a></h2><p>所有 <code>com.squareup.sqldelight</code> 实例都需要替换为 <code>app.cash.sqldelight</code>。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar">Gradle 依赖</div><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  id(&quot;com.squareup.sqldelight&quot;) version &quot;2.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  id(&quot;app.cash.sqldelight&quot;) version &quot;2.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  implementation(&quot;com.squareup.sqldelight:sqlite-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  implementation(&quot;app.cash.sqldelight:sqlite-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">对于纯 Android 的 SqlDelight 1.x 项目，请使用 android-driver 和 coroutine-extensions-jvm：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  implementation(&quot;com.squareup.sqldelight:android-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  implementation(&quot;app.cash.sqldelight:android-driver:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  implementation(&quot;com.squareup.sqldelight:coroutines-extensions:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  implementation(&quot;app.cash.sqldelight:coroutines-extensions-jvm:2.1.0&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><div class="vp-code-block-title"><div class="vp-code-block-title-bar">在代码中</div><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-import com.squareup.sqldelight.db.SqlDriver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+import app.cash.sqldelight.db.SqlDriver</span></span></code></pre></div></div><h2 id="gradle-配置变更" tabindex="-1">Gradle 配置变更 <a class="header-anchor" href="#gradle-配置变更" aria-label="Permalink to &quot;Gradle 配置变更&quot;">​</a></h2><ul><li><p>SQLDelight 2.0 要求 Java 11 进行构建，Java 8 用于运行时。</p></li><li><p>SQLDelight 配置 API 现在为数据库使用托管属性 (<code>managed properties</code>) 和 <code>DomainObjectCollection</code>。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-pO-8_" id="tab-rF60GDh" checked><label data-title="Kotlin" for="tab-rF60GDh">Kotlin</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqldelight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  databases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (1)!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Database&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (2)!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><pre><code>1.  新的 \`DomainObjectCollection\` 包装器。
2.  现在是一个 \`Property&lt;String&gt;\`。
</code></pre><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-DK0h0" id="tab-u_RCrvk" checked><label data-title="Groovy" for="tab-u_RCrvk">Groovy</label></div><div class="blocks"><div class="language-kotlin vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sqldelight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  databases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (1)!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><pre><code>1.  新的 \`DomainObjectCollection\` 包装器。
</code></pre></li><li><p><code>sourceFolders</code> 设置已重命名为 <code>srcDirs</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-5Wf2G" id="tab-YmS5m4D" checked><label data-title="Kotlin" for="tab-YmS5m4D">Kotlin</label><input type="radio" name="group-5Wf2G" id="tab-_Izvy1c"><label data-title="Groovy" for="tab-_Izvy1c">Groovy</label></div><div class="blocks"><div class="language-groovy vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    create(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyDatabase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      srcDirs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setFrom(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main/sqldelight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    MyDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      srcDirs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/main/sqldelight&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div></li><li><p>数据库的 SQL 变体现在通过 Gradle 依赖指定。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-_aZBg" id="tab--Qy_U4b" checked><label data-title="Kotlin" for="tab--Qy_U4b">Kotlin</label><input type="radio" name="group-_aZBg" id="tab-wjJo7Bz"><label data-title="Groovy" for="tab-wjJo7Bz">Groovy</label></div><div class="blocks"><div class="language-groovy vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    create(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyDatabase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.cash.sqldelight:mysql-dialect:2.1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 版本目录 (Version catalogs) 也适用！</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect(libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dialects</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  databases {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    MyDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      packageName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;com.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.cash.sqldelight:mysql-dialect:2.1.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 版本目录 (Version catalogs) 也适用！</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dialect libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sqldelight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dialects</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>目前支持的变体有 <code>mysql-dialect</code>、<code>postgresql-dialect</code>、<code>hsql-dialect</code>、<code>sqlite-3-18-dialect</code>、<code>sqlite-3-24-dialect</code>、<code>sqlite-3-25-dialect</code>、<code>sqlite-3-30-dialect</code>、<code>sqlite-3-35-dialect</code> 和 <code>sqlite-3-38-dialect</code>。</p></li></ul><h2 id="运行时变更" tabindex="-1">运行时变更 <a class="header-anchor" href="#运行时变更" aria-label="Permalink to &quot;运行时变更&quot;">​</a></h2><ul><li><p>基本类型现在必须导入到 <code>.sq</code> 和 <code>.sqm</code> 文件中。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+import kotlin.Boolean;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CREATE TABLE HockeyPlayer (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name TEXT NOT NULL,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  good INTEGER </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">AS Boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>一些以前支持的类型现在需要适配器 (adapter)。基本类型的适配器可在 <code>app.cash.sqldelight:primitive-adapters:2.1.0</code> artifact 中获取。例如，用于执行 <code>INTEGER As kotlin.Int</code> 转换的 <code>IntColumnAdapter</code>。</p></li><li><p><code>AfterVersionWithDriver</code> 类型已移除，取而代之的是 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-after-version" target="_blank" rel="noreferrer"><code>AfterVersion</code></a>，后者现在始终包含驱动，并且 <code>migrateWithCallbacks</code> 扩展函数已移除，取而代之的是现在接受回调的主 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-schema/#-775472427%2FFunctions%2F-2112917107" target="_blank" rel="noreferrer"><code>migrate</code></a> 方法。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Database.Schema.</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">migrate</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">WithCallbacks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  driver = driver,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  oldVersion = 1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  newVersion = Database.Schema.version,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  AfterVersionWithDriver(3) { driver -&gt;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    driver.execute(null, &quot;INSERT INTO test (value) VALUES(&#39;hello&#39;)&quot;, 0)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  }</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  AfterVersion(3) { driver -&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    driver.execute(null, &quot;INSERT INTO test (value) VALUES(&#39;hello&#39;)&quot;, 0)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p><code>Schema</code> 类型不再是 <code>SqlDriver</code> 的嵌套类型，现在称为 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-schema" target="_blank" rel="noreferrer"><code>SqlSchema</code></a>。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-val schema: SqlDriver.Schema</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+val schema: SqlSchema</span></span></code></pre></div></li><li><p><a href="https://sqldelight.github.io/sqldelight/latest/2.x/extensions/androidx-paging3/app.cash.sqldelight.paging3/" target="_blank" rel="noreferrer">Paging3 扩展 API</a> 已更改为仅允许 <code>int</code> 类型用于计数。</p></li><li><p><a href="https://sqldelight.github.io/sqldelight/latest/2.x/extensions/coroutines-extensions/app.cash.sqldelight.coroutines/" target="_blank" rel="noreferrer">协程扩展 API</a> 现在要求显式传入调度器 (dispatcher)。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">val players: Flow&lt;List&lt;HockeyPlayer&gt;&gt; =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  playerQueries.selectAll()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .asFlow()</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+   .mapToList(Dispatchers.IO)</span></span></code></pre></div></li><li><p>一些驱动方法，如 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-driver/execute" target="_blank" rel="noreferrer"><code>execute()</code></a>、<a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-driver/execute-query" target="_blank" rel="noreferrer"><code>executeQuery()</code></a>、<code>newTransaction()</code> 和 <code>endTransaction()</code> 现在返回一个 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-query-result" target="_blank" rel="noreferrer"><code>QueryResult</code></a> 对象。使用 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-query-result/value" target="_blank" rel="noreferrer"><code>QueryResult.value</code></a> 访问返回的值。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-driver.executeQuery(null, &quot;PRAGMA user_version&quot;, { /*...*/ })</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+driver.executeQuery(null, &quot;PRAGMA user_version&quot;, { /*...*/ }).value</span></span></code></pre></div><p>此更改使驱动实现能够基于非阻塞 API，其中返回的值可以使用挂起 (suspending) 的 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-query-result/await" target="_blank" rel="noreferrer"><code>QueryResult.await()</code></a> 方法访问。</p><ul><li><code>SqlCursor</code> 接口上的 <a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-cursor/next" target="_blank" rel="noreferrer"><code>next()</code></a> 方法也已更改为返回 <code>QueryResult</code>，以便为异步驱动提供更好的游标支持。</li></ul></li><li><p><a href="https://sqldelight.github.io/sqldelight/latest/2.x/runtime/app.cash.sqldelight.db/-sql-schema" target="_blank" rel="noreferrer"><code>SqlSchema</code></a> 接口现在具有一个泛型 <code>QueryResult</code> 类型参数。这用于区分为了与异步驱动配合使用而生成的 schema 运行时，这些运行时可能与同步驱动不直接兼容。 这仅与同时使用同步和异步驱动的项目相关，例如具有 JS 目标的多平台项目。有关更多详细信息，请参阅“<a href="/sqldelight/js_sqlite/multiplatform.md">使用 Web Worker 驱动的多平台设置</a>”。</p></li><li><p><code>SqlSchema.Version</code> 的类型从 <code>Int</code> 更改为 <code>Long</code>，以允许服务器环境利用时间戳作为版本。现有设置可以安全地在 <code>Int</code> 和 <code>Long</code> 之间进行类型转换，而要求版本范围为 <code>Int</code> 的驱动将在数据库创建之前因版本超出范围而崩溃。</p></li></ul>`,11)]))}const E=i(t,[["render",n]]);export{c as __pageData,E as default};
