import{_ as e,C as n,c as l,o,j as s,G as p,ag as r,a,w as h}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/client-digest-auth.md","filePath":"ko/ktor/client-digest-auth.md","lastUpdated":1755457140000}'),c={name:"ko/ktor/client-digest-auth.md"};function d(k,t,u,g,E,b){const i=n("tldr");return o(),l("div",null,[t[1]||(t[1]=s("h1",{id:"ktor-클라이언트의-다이제스트-인증",tabindex:"-1"},[a("Ktor 클라이언트의 다이제스트 인증 "),s("a",{class:"header-anchor",href:"#ktor-클라이언트의-다이제스트-인증","aria-label":'Permalink to "Ktor 클라이언트의 다이제스트 인증"'},"​")],-1)),p(i,null,{default:h(()=>t[0]||(t[0]=[s("p",null,[s("b",null,"필수 의존성"),a(": "),s("code",null,"io.ktor:ktor-client-auth")],-1),s("p",null,[s("b",null,"코드 예시"),a(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-digest"}," client-auth-digest ")],-1)])),_:1}),t[2]||(t[2]=r(`<p>다이제스트 인증 방식(Digest authentication scheme)에서, 사용자 이름과 비밀번호는 네트워크를 통해 전송되기 전에 해시 함수가 적용됩니다.</p><blockquote><p>서버 측에서는 Ktor가 다이제스트 인증 처리를 위한 <a href="./server-digest-auth">Authentication</a> 플러그인을 제공합니다.</p></blockquote><h2 id="flow" tabindex="-1">다이제스트 인증 흐름 <a class="header-anchor" href="#flow" aria-label="Permalink to &quot;다이제스트 인증 흐름 {id=&quot;flow&quot;}&quot;">​</a></h2><p>다이제스트 인증 흐름은 다음과 같습니다:</p><ol><li><p>클라이언트는 서버 애플리케이션 내의 특정 리소스에 <code>Authorization</code> 헤더 없이 요청을 보냅니다.</p></li><li><p>서버는 클라이언트에 <code>401</code> (권한 없음) 응답 상태로 응답하며, <code>WWW-Authenticate</code> 응답 헤더를 사용하여 다이제스트 인증 방식이 라우트를 보호하는 데 사용된다는 정보를 제공합니다. 일반적인 <code>WWW-Authenticate</code> 헤더는 다음과 같습니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>WWW-Authenticate: Digest</span></span>
<span class="line"><span>        realm=&quot;Access to the &#39;/&#39; path&quot;,</span></span>
<span class="line"><span>        nonce=&quot;e4549c0548886bc2&quot;,</span></span>
<span class="line"><span>        algorithm=&quot;MD5&quot;</span></span></code></pre></div></li><li><p>일반적으로 클라이언트는 사용자가 자격 증명을 입력할 수 있는 로그인 대화 상자를 표시합니다. 그런 다음, 클라이언트는 다음 <code>Authorization</code> 헤더와 함께 요청을 보냅니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Authorization: Digest username=&quot;jetbrains&quot;,</span></span>
<span class="line"><span>        realm=&quot;Access to the &#39;/&#39; path&quot;,</span></span>
<span class="line"><span>        nonce=&quot;e4549c0548886bc2&quot;,</span></span>
<span class="line"><span>        uri=&quot;/&quot;,</span></span>
<span class="line"><span>        algorithm=MD5,</span></span>
<span class="line"><span>        response=&quot;6299988bb4f05c0d8ad44295873858cf&quot;</span></span></code></pre></div><p><code>response</code> 값은 다음 방식으로 생성됩니다:</p><p>a. <code>HA1 = MD5(username:realm:password)</code></p><p>b. <code>HA2 = MD5(method:digestURI)</code></p><p>c. <code>response = MD5(HA1:nonce:HA2)</code></p></li><li><p>서버는 클라이언트가 보낸 자격 증명을 검증하고 요청된 콘텐츠로 응답합니다.</p></li></ol><h2 id="configure" tabindex="-1">다이제스트 인증 구성 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;다이제스트 인증 구성 {id=&quot;configure&quot;}&quot;">​</a></h2><p><code>Digest</code> 방식을 사용하여 <code>Authorization</code> 헤더에 사용자 자격 증명을 보내려면, <code>digest</code> 인증 제공자(provider)를 다음과 같이 구성해야 합니다:</p><ol><li><code>install</code> 블록 내에서 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/digest.html" target="_blank" rel="noreferrer">digest</a> 함수를 호출합니다.</li><li><a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-digest-auth-credentials/index.html" target="_blank" rel="noreferrer">DigestAuthCredentials</a>를 사용하여 필요한 자격 증명을 제공하고, 이 객체를 <a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-digest-auth-config/credentials.html" target="_blank" rel="noreferrer">credentials</a> 함수에 전달합니다.</li><li>선택적으로, <code>realm</code> 속성을 사용하여 realm을 구성합니다.</li></ol><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Auth) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                DigestAuthCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;jetbrains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foobar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            realm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Access to the &#39;/&#39; path&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>전체 예시는 여기에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-digest" target="_blank" rel="noreferrer">client-auth-digest</a>.</p></blockquote>`,10))])}const f=e(c,[["render",d]]);export{q as __pageData,f as default};
