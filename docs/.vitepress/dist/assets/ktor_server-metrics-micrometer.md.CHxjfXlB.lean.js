import{_ as u,C as r,c as y,o as v,G as e,ag as k,j as i,w as a,a as t}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ktor/server-metrics-micrometer.md","filePath":"ktor/server-metrics-micrometer.md","lastUpdated":1755457140000}'),F={name:"ktor/server-metrics-micrometer.md"};function f(b,s,_,C,M,B){const h=r("TopicTitle"),d=r("show-structure"),c=r("primary-label"),o=r("Links"),E=r("tldr"),m=r("link-summary"),n=r("code-block"),l=r("TabItem"),p=r("Tabs"),g=r("list");return v(),y("div",null,[e(h,{labelRef:"server-plugin",title:"Micrometer 指标"}),e(d,{for:"chapter",depth:"2"}),e(c,{ref:"server-plugin"},null,512),e(E,null,{default:a(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依赖项"),t(": "),i("code",null,"io.ktor:ktor-server-metrics-micrometer")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"代码示例"),t(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/micrometer-metrics"}," micrometer-metrics ")],-1)),i("p",null,[i("b",null,[e(o,{href:"/ktor/server-native",summary:"Ktor 支持 Kotlin/Native，允许您在没有额外运行时或虚拟机的情况下运行服务器。"},{default:a(()=>s[0]||(s[0]=[t("原生服务器")])),_:1}),s[1]||(s[1]=t(" 支持"))]),s[2]||(s[2]=t(": ✖️ "))])]),_:1}),e(m,null,{default:a(()=>s[5]||(s[5]=[t("MicrometerMetrics 插件在您的 Ktor 服务器应用程序中启用 Micrometer 指标，并允许您选择所需的监控系统，例如 Prometheus、JMX、Elastic 等。")])),_:1}),s[21]||(s[21]=k("",3)),i("ul",null,[i("li",null,[s[6]||(s[6]=i("p",null,[t("添加 "),i("code",null,"ktor-server-metrics-micrometer"),t(" 依赖项：")],-1)),e(p,{group:"languages"},{default:a(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(n,{lang:"Kotlin",code:'              implementation("io.ktor:ktor-server-metrics-micrometer:$ktor_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(n,{lang:"Groovy",code:'              implementation "io.ktor:ktor-server-metrics-micrometer:$ktor_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:a(()=>[e(n,{lang:"XML",code:`              <dependency>
                  <groupId>io.ktor</groupId>
                  <artifactId>ktor-server-metrics-micrometer-jvm</artifactId>
                  <version>\${ktor_version}</version>
              </dependency>`})]),_:1})]),_:1})]),i("li",null,[s[7]||(s[7]=i("p",null,"添加监控系统所需的依赖项。下面的示例展示了如何为 Prometheus 添加构件：",-1)),e(p,{group:"languages"},{default:a(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(n,{lang:"Kotlin",code:'              implementation("io.micrometer:micrometer-registry-prometheus:$prometheus_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(n,{lang:"Groovy",code:'              implementation "io.micrometer:micrometer-registry-prometheus:$prometheus_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:a(()=>[e(n,{lang:"XML",code:`              <dependency>
                  <groupId>io.micrometer</groupId>
                  <artifactId>micrometer-registry-prometheus</artifactId>
                  <version>\${prometheus_version}</version>
              </dependency>`})]),_:1})]),_:1}),s[8]||(s[8]=i("p",null,[t("您可以将 "),i("code",null,"$prometheus_version"),t(" 替换为 "),i("code",null,"micrometer-registry-prometheus"),t(" 构件的所需版本，例如 "),i("code",null,"1.10.3"),t("。")],-1))])]),s[22]||(s[22]=i("h2",{id:"install_plugin",tabindex:"-1"},[t("安装 MicrometerMetrics "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "安装 MicrometerMetrics {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[10]||(s[10]=t(" 要将 ")),s[11]||(s[11]=i("code",null,"MicrometerMetrics",-1)),s[12]||(s[12]=t(" 插件")),s[13]||(s[13]=i("a",{href:"#install"},"安装",-1)),s[14]||(s[14]=t("到应用程序中， 请将其传递给指定")),e(o,{href:"/ktor/server-modules",summary:"模块允许您通过对路由进行分组来组织应用程序。"},{default:a(()=>s[9]||(s[9]=[t("模块")])),_:1}),s[15]||(s[15]=t("中的 ")),s[16]||(s[16]=i("code",null,"install",-1)),s[17]||(s[17]=t(" 函数。 下面的代码片段展示了如何安装 ")),s[18]||(s[18]=i("code",null,"MicrometerMetrics",-1)),s[19]||(s[19]=t(" ... "))]),e(g,null,{default:a(()=>s[20]||(s[20]=[i("li",null,[t(" ... 在 "),i("code",null,"embeddedServer"),t(" 函数调用内部。 ")],-1),i("li",null,[t(" ... 在显式定义的 "),i("code",null,"module"),t(" 内部，它是 "),i("code",null,"Application"),t(" 类的扩展函数。 ")],-1)])),_:1}),e(p,null,{default:a(()=>[e(l,{title:"embeddedServer"},{default:a(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.metrics.micrometer.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(MicrometerMetrics)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),e(l,{title:"module"},{default:a(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.metrics.micrometer.*
            // ...
            fun Application.module() {
                install(MicrometerMetrics)
                // ...
            }`})]),_:1})]),_:1}),s[23]||(s[23]=k("",24))])}const P=u(F,[["render",f]]);export{T as __pageData,P as default};
