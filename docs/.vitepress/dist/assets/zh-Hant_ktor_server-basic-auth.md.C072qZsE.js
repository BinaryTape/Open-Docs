import{_ as c,C as e,c as E,o as u,j as i,G as a,ag as p,a as t,w as n}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/ktor/server-basic-auth.md","filePath":"zh-Hant/ktor/server-basic-auth.md","lastUpdated":1755457140000}'),g={name:"zh-Hant/ktor/server-basic-auth.md"};function y(F,s,b,v,m,f){const r=e("show-structure"),k=e("Links"),o=e("tldr"),l=e("code-block"),h=e("TabItem"),d=e("Tabs");return u(),E("div",null,[s[5]||(s[5]=i("h1",{id:"ktor-伺服器中的基本認證",tabindex:"-1"},[t("Ktor 伺服器中的基本認證 "),i("a",{class:"header-anchor",href:"#ktor-伺服器中的基本認證","aria-label":'Permalink to "Ktor 伺服器中的基本認證"'},"​")],-1)),a(r,{for:"chapter",depth:"2"}),a(o,null,{default:n(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"所需依賴項"),t(": "),i("code",null,"io.ktor:ktor-server-auth")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"程式碼範例"),t(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-basic"},"auth-basic"),t(", "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/auth-basic-hash-table"},"auth-basic-hash-table")],-1)),i("p",null,[i("b",null,[a(k,{href:"/ktor/server-native",summary:"Ktor 支援 Kotlin/Native，讓您無需額外的執行時或虛擬機器即可執行伺服器。"},{default:n(()=>s[0]||(s[0]=[t("原生伺服器")])),_:1}),s[1]||(s[1]=t(" 支援"))]),s[2]||(s[2]=t(": ✅ "))])]),_:1}),s[6]||(s[6]=p('<p>基本認證方案是 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication" target="_blank" rel="noreferrer">HTTP 框架</a> 的一部分，用於存取控制與認證。在此方案中，使用者憑證以 Base64 編碼的使用者名稱/密碼對形式傳輸。</p><p>Ktor 允許您使用基本認證來登入使用者並保護特定的 <a href="./server-routing">路由</a>。您可以在 <a href="./server-auth">Ktor 伺服器中的認證與授權</a> 區段中取得關於 Ktor 認證的一般資訊。</p><blockquote><p>鑑於基本認證以明文傳輸使用者名稱和密碼，您需要使用 <a href="./server-ssl">HTTPS/TLS</a> 來保護敏感資訊。</p></blockquote><h2 id="add_dependencies" tabindex="-1">新增依賴項 <a class="header-anchor" href="#add_dependencies" aria-label="Permalink to &quot;新增依賴項 {id=&quot;add_dependencies&quot;}&quot;">​</a></h2><p>若要啟用 <code>basic</code> 認證，您需要在建置腳本中包含 <code>ktor-server-auth</code> artifact：</p>',5)),a(d,{group:"languages"},{default:n(()=>[a(h,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:n(()=>[a(l,{lang:"Kotlin",code:'            implementation("io.ktor:ktor-server-auth:$ktor_version")'})]),_:1}),a(h,{title:"Gradle (Groovy)","group-key":"groovy"},{default:n(()=>[a(l,{lang:"Groovy",code:'            implementation "io.ktor:ktor-server-auth:$ktor_version"'})]),_:1}),a(h,{title:"Maven","group-key":"maven"},{default:n(()=>[a(l,{lang:"XML",code:`            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-server-auth-jvm</artifactId>
                <version>\${ktor_version}</version>
            </dependency>`})]),_:1})]),_:1}),s[7]||(s[7]=p(`<h2 id="flow" tabindex="-1">基本認證流程 <a class="header-anchor" href="#flow" aria-label="Permalink to &quot;基本認證流程 {id=&quot;flow&quot;}&quot;">​</a></h2><p>基本認證流程如下：</p><ol><li><p>用戶端向伺服器應用程式中的特定 <a href="./server-routing">路由</a> 發出不帶 <code>Authorization</code> 標頭的請求。</p></li><li><p>伺服器以 <code>401</code> (未授權) 回應狀態回應用戶端，並使用 <code>WWW-Authenticate</code> 回應標頭提供資訊，表明基本認證方案用於保護路由。典型的 <code>WWW-Authenticate</code> 標頭如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>WWW-Authenticate: Basic realm=&quot;Access to the &#39;/&#39; path&quot;, charset=&quot;UTF-8&quot;</span></span></code></pre></div><p>在 Ktor 中，您可以在 <a href="#configure-provider">設定</a> <code>basic</code> 認證供應器時，使用相應的屬性來指定 realm 和 charset。</p></li><li><p>通常，用戶端會顯示一個登入對話框，使用者可以在其中輸入憑證。然後，用戶端發出包含以 Base64 編碼的使用者名稱和密碼對的 <code>Authorization</code> 標頭的請求，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Authorization: Basic amV0YnJhaW5zOmZvb2Jhcg</span></span></code></pre></div></li><li><p>伺服器 <a href="#configure-provider">驗證</a> 用戶端發送的憑證，並回應所請求的內容。</p></li></ol><h2 id="install" tabindex="-1">安裝基本認證 <a class="header-anchor" href="#install" aria-label="Permalink to &quot;安裝基本認證 {id=&quot;install&quot;}&quot;">​</a></h2><p>若要安裝 <code>basic</code> 認證供應器，請在 <code>install</code> 區塊內呼叫 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/basic.html" target="_blank" rel="noreferrer">basic</a> 函數：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.application.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> io.ktor.server.auth.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 設定基本認證</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您可以選擇性地指定一個 <a href="./server-auth#provider-name">供應器名稱</a>，該名稱可用於 <a href="#authenticate-route">認證指定的路由</a>。</p><h2 id="configure" tabindex="-1">設定基本認證 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;設定基本認證 {id=&quot;configure&quot;}&quot;">​</a></h2><p>若要了解如何在 Ktor 中設定不同的認證供應器，請參閱 <a href="./server-auth#configure">設定認證</a>。在本節中，我們將看到 <code>basic</code> 認證供應器的特定設定。</p><h3 id="configure-provider" tabindex="-1">步驟 1：設定基本供應器 <a class="header-anchor" href="#configure-provider" aria-label="Permalink to &quot;步驟 1：設定基本供應器 {id=&quot;configure-provider&quot;}&quot;">​</a></h3><p><code>basic</code> 認證供應器透過 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-basic-authentication-provider/-config/index.html" target="_blank" rel="noreferrer">BasicAuthenticationProvider.Configuration</a> 類別公開其設定。在下面的範例中，指定了以下設定：</p><ul><li><code>realm</code> 屬性設定要在 <code>WWW-Authenticate</code> 標頭中傳遞的 realm。</li><li><code>validate</code> 函數驗證使用者名稱和密碼。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-basic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        realm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Access to the &#39;/&#39; path&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { credentials </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (credentials.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;jetbrains&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> credentials.password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foobar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                UserIdPrincipal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(credentials.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>validate</code> 函數檢查 <code>UserPasswordCredential</code>，並在認證成功時返回 <code>UserIdPrincipal</code>，如果認證失敗則返回 <code>null</code>。</p><blockquote><p>您也可以使用 <a href="#validate-user-hash">UserHashedTableAuth</a> 來驗證儲存在記憶體內表格中的使用者，該表格會儲存使用者名稱和密碼雜湊。</p></blockquote><h3 id="authenticate-route" tabindex="-1">步驟 2：保護特定資源 <a class="header-anchor" href="#authenticate-route" aria-label="Permalink to &quot;步驟 2：保護特定資源 {id=&quot;authenticate-route&quot;}&quot;">​</a></h3><p>設定 <code>basic</code> 供應器後，您可以使用 <strong><a href="./server-auth#authenticate-route">authenticate</a></strong> 函數保護應用程式中的特定資源。在成功認證的情況下，您可以使用 <code>call.principal</code> 函數在路由處理常式中擷取已認證的 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-user-id-principal/index.html" target="_blank" rel="noreferrer">UserIdPrincipal</a>，並取得已認證使用者的名稱。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-basic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, \${call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">principal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UserIdPrincipal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;()?.name}!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="validate-user-hash" tabindex="-1">使用 UserHashedTableAuth 驗證 <a class="header-anchor" href="#validate-user-hash" aria-label="Permalink to &quot;使用 UserHashedTableAuth 驗證 {id=&quot;validate-user-hash&quot;}&quot;">​</a></h2><p>Ktor 允許您使用 <a href="#validate-user-hash">UserHashedTableAuth</a> 來 <a href="#configure-provider">驗證</a> 儲存在記憶體內表格中的使用者，該表格會儲存使用者名稱和密碼雜湊。這讓您可以避免在資料來源洩露時危及使用者密碼。</p><p>若要使用 <code>UserHashedTableAuth</code> 驗證使用者，請按照以下步驟操作：</p><ol><li><p>使用 <a href="https://api.ktor.io/ktor-utils/io.ktor.util/get-digest-function.html" target="_blank" rel="noreferrer">getDigestFunction</a> 函數，建立具有指定演算法和鹽值供應器的摘要函數：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> digestFunction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getDigestFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SHA-256&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ktor\${it.length}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div></li><li><p>初始化 <code>UserHashedTableAuth</code> 的新實例，並指定以下屬性：</p><ul><li>使用 <code>table</code> 屬性提供一個使用者名稱和雜湊密碼的表格。</li><li>將摘要函數指派給 <code>digester</code> 屬性。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hashedUserTable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UserHashedTableAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mapOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;jetbrains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">digestFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foobar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">digestFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    digester </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> digestFunction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>在 <code>validate</code> 函數內部，呼叫 <a href="https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-auth/io.ktor.server.auth/-user-hashed-table-auth/authenticate.html" target="_blank" rel="noreferrer">UserHashedTableAuth.authenticate</a> 函數來認證使用者，並在憑證有效時返回 <code>UserIdPrincipal</code> 的實例：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth-basic-hashed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        realm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Access to the &#39;/&#39; path&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { credentials </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            hashedUserTable.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(credentials)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol>`,22))])}const A=c(g,[["render",y]]);export{q as __pageData,A as default};
