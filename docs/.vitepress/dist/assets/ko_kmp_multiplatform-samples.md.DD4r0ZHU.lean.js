import{_ as r,C as e,c as s,o as p,j as l,G as t,ag as m,a as o,w as i}from"./chunks/framework.Bksy39di.js";const w=JSON.parse('{"title":"Kotlin 멀티플랫폼 샘플","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kmp/multiplatform-samples.md","filePath":"ko/kmp/multiplatform-samples.md","lastUpdated":1755516278000}'),a={name:"ko/kmp/multiplatform-samples.md"};function f(k,n,g,b,S,x){const d=e("show-structure"),u=e("list");return p(),s("div",null,[n[88]||(n[88]=l("h1",{id:"kotlin-멀티플랫폼-샘플",tabindex:"-1"},[o("Kotlin 멀티플랫폼 샘플 "),l("a",{class:"header-anchor",href:"#kotlin-멀티플랫폼-샘플","aria-label":'Permalink to "Kotlin 멀티플랫폼 샘플"'},"​")],-1)),t(d,{for:"none"}),n[89]||(n[89]=m("",5)),l("table",null,[n[20]||(n[20]=l("tr",null,[l("td",null,"이름"),l("td",null,"설명"),l("td",null,"무엇을 공유하나요?"),l("td",null,"주목할 만한 라이브러리"),l("td",null,"사용자 인터페이스")],-1)),l("tr",null,[n[3]||(n[3]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/JetBrains/compose-multiplatform/tree/master/examples/imageviewer"},"Image Viewer")])],-1)),n[4]||(n[4]=l("td",null,"사진을 캡처, 보고 저장하는 애플리케이션입니다. 지도 지원이 포함됩니다. UI에 Compose 멀티플랫폼을 사용합니다. [KotlinConf 2023](https://www.youtube.com/watch?v=FWVi4aV36d8)에서 소개되었습니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[0]||(n[0]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"애니메이션",-1),l("li",null,"데이터 저장",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[1]||(n[1]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"play-services-maps")],-1),l("li",null,[l("code",null,"play-services-locations")],-1),l("li",null,[l("code",null,"android-maps-compose")],-1),l("li",null,[l("code",null,"accompanist-permissions")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[2]||(n[2]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[7]||(n[7]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/JetBrains/compose-multiplatform/tree/master/examples/chat"},"Chat")])],-1)),n[8]||(n[8]=l("td",null,"SwiftUI 인터페이스 내에 Compose 멀티플랫폼 컴포넌트를 삽입하는 방법을 보여주는 데모입니다. 사용 사례는 온라인 메시징입니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[5]||(n[5]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"네트워킹",-1)])),_:1})]),n[9]||(n[9]=l("td",null,null,-1)),l("td",null,[t(u,null,{default:i(()=>n[6]||(n[6]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1),l("li",null,"iOS의 SwiftUI",-1)])),_:1})])]),l("tr",null,[n[13]||(n[13]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/Kotlin/kmm-production-sample"},"KMM RSS Reader")])],-1)),n[14]||(n[14]=l("td",null,"프로덕션 환경에서 Kotlin 멀티플랫폼을 사용하는 방법을 보여주기 위해 설계된 RSS 피드 소비 샘플 애플리케이션입니다. UI는 네이티브로 구현되었지만, iOS 및 데스크톱에서 Compose 멀티플랫폼이 어떻게 사용될 수 있는지 보여주는 실험적 브랜치도 있습니다. 네트워킹은 [Ktor HTTP 클라이언트](https://ktor.io/docs/create-client.html)를 사용하여 수행되며, XML 파싱은 네이티브로 구현됩니다. UI 상태 공유에는 Redux 아키텍처가 사용됩니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[10]||(n[10]=[l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"UI 상태",-1),l("li",null,"데이터 저장",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[11]||(n[11]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"voyager")],-1),l("li",null,[l("code",null,"coil")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"napier")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[12]||(n[12]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS 및 데스크톱의 Compose 멀티플랫폼 (실험적 브랜치)",-1),l("li",null,"iOS의 SwiftUI",-1)])),_:1})])]),l("tr",null,[n[16]||(n[16]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/Kotlin/kmm-basic-sample"},"Kotlin Multiplatform Sample")])],-1)),n[17]||(n[17]=l("td",null,[o("간단한 계산기 애플리케이션입니다. "),l("code",null,"expected"),o(" 및 "),l("code",null,"actual"),o(" 선언을 사용하여 Kotlin과 네이티브 코드를 통합하는 방법을 보여줍니다. ")],-1)),n[18]||(n[18]=l("td",null,[l("p",null,"알고리즘")],-1)),n[19]||(n[19]=l("td",null,null,-1)),l("td",null,[t(u,null,{default:i(()=>n[15]||(n[15]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"SwiftUI",-1)])),_:1})])])]),n[90]||(n[90]=l("h3",{id:"추천-샘플",tabindex:"-1"},[o("추천 샘플 "),l("a",{class:"header-anchor",href:"#추천-샘플","aria-label":'Permalink to "추천 샘플"'},"​")],-1)),l("table",null,[n[41]||(n[41]=l("tr",null,[l("td",null,"이름"),l("td",null,"설명"),l("td",null,"무엇을 공유하나요?"),l("td",null,"주목할 만한 라이브러리"),l("td",null,"사용자 인터페이스")],-1)),l("tr",null,[n[24]||(n[24]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/joreilly/Confetti"},"Confetti")])],-1)),n[25]||(n[25]=l("td",null,"Kotlin 멀티플랫폼과 Compose 멀티플랫폼의 다양한 측면을 보여주는 프로젝트입니다. 사용 사례는 컨퍼런스 일정에 대한 정보를 가져오고 표시하는 애플리케이션입니다. Wear 및 Auto 플랫폼을 지원합니다. 클라이언트-서버 통신에 GraphQL을 사용합니다. 아키텍처는 [KotlinConf 2023](https://www.youtube.com/watch?v=uATlWUBSx8Q)에서 심층적으로 논의되었습니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[21]||(n[21]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"데이터 저장",-1),l("li",null,"내비게이션",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[22]||(n[22]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"decompose")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"jsonpathkt-kotlinx")],-1),l("li",null,[l("code",null,"horologist")],-1),l("li",null,[l("code",null,"google-cloud")],-1),l("li",null,[l("code",null,"firebase")],-1),l("li",null,[l("code",null,"bare-graphql")],-1),l("li",null,[l("code",null,"apollo")],-1),l("li",null,[l("code",null,"accompanist")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[23]||(n[23]=[l("li",null,"Android, Auto 및 Wear의 Jetpack Compose",-1),l("li",null,"iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[29]||(n[29]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/joreilly/PeopleInSpace"},"People In Space")])],-1)),n[30]||(n[30]=l("td",null,"Kotlin 멀티플랫폼이 실행될 수 있는 다양한 플랫폼을 보여주는 프로젝트입니다. 사용 사례는 현재 우주에 있는 사람들의 수와 국제 우주 정거장(International Space Station)의 위치를 보여주는 것입니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[26]||(n[26]=[l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"데이터 저장",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[27]||(n[27]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[28]||(n[28]=[l("li",null,"Android 및 Wear OS의 Jetpack Compose",-1),l("li",null,"iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1),l("li",null,"iOS 및 macOS의 SwiftUI",-1)])),_:1})])]),l("tr",null,[n[34]||(n[34]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/touchlab/DroidconKotlin"},"Sessionize / Droidcon")])],-1)),n[35]||(n[35]=l("td",null,"Sessionize API를 사용하여 Droidcon 이벤트의 의제를 볼 수 있는 애플리케이션입니다. Sessionize에 강연을 저장하는 모든 이벤트에 맞게 사용자 정의할 수 있습니다. Firebase와 통합되므로 실행하려면 Firebase 계정이 필요합니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[31]||(n[31]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"데이터 저장",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[32]||(n[32]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"firebase")],-1),l("li",null,[l("code",null,"kermit")],-1),l("li",null,[l("code",null,"accompanist")],-1),l("li",null,[l("code",null,"hyperdrive-multiplatformx")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[33]||(n[33]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[39]||(n[39]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/touchlab/KaMPKit"},"KaMPKit")])],-1)),n[40]||(n[40]=l("td",null,"Kotlin 멀티플랫폼 개발을 위한 코드 및 도구 모음입니다. Kotlin 멀티플랫폼 애플리케이션을 구축할 때 라이브러리, 아키텍처 선택 및 모범 사례를 보여주기 위해 설계되었습니다. 사용 사례는 개 품종에 대한 정보를 다운로드하고 표시하는 것입니다. 이 [비디오 튜토리얼](https://www.youtube.com/watch?v=EJVq_QWaWXE)에서 소개되었습니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[36]||(n[36]=[l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"ViewModel",-1),l("li",null,"데이터 저장",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[37]||(n[37]=[l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"kermit")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[38]||(n[38]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS의 SwiftUI",-1)])),_:1})])])]),n[91]||(n[91]=l("h3",{id:"기타-커뮤니티-샘플",tabindex:"-1"},[o("기타 커뮤니티 샘플 "),l("a",{class:"header-anchor",href:"#기타-커뮤니티-샘플","aria-label":'Permalink to "기타 커뮤니티 샘플"'},"​")],-1)),l("table",null,[n[87]||(n[87]=l("tr",null,[l("td",null,"이름"),l("td",null,"설명"),l("td",null,"무엇을 공유하나요?"),l("td",null,"주목할 만한 라이브러리"),l("td",null,"사용자 인터페이스")],-1)),l("tr",null,[n[45]||(n[45]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/xxfast/NYTimes-KMP"},"NYTimes KMP")])],-1)),n[46]||(n[46]=l("td",null,"뉴욕 타임즈 애플리케이션의 Compose 멀티플랫폼 기반 버전입니다. 사용자가 기사를 찾아보고 읽을 수 있습니다. 참고로 애플리케이션을 빌드하고 실행하려면 [뉴욕 타임즈에서 API 키](https://developer.nytimes.com/)가 필요합니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[42]||(n[42]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"네트워킹",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[43]||(n[43]=[l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"molecule")],-1),l("li",null,[l("code",null,"decompose")],-1),l("li",null,[l("code",null,"horologist")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[44]||(n[44]=[l("li",null,"Android 및 Wear의 Jetpack Compose",-1),l("li",null,"iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[50]||(n[50]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/JoelKanyi/FocusBloom"},"Focus Bloom")])],-1)),n[51]||(n[51]=l("td",null,"생산성 및 시간 관리 애플리케이션입니다. 사용자가 작업을 예약하고 성과에 대한 피드백을 제공할 수 있습니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[47]||(n[47]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"애니메이션",-1),l("li",null,"데이터 저장",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[48]||(n[48]=[l("li",null,[l("code",null,"kotlinx.serialization")],-1),l("li",null,[l("code",null,"kotlinx.coroutines")],-1),l("li",null,[l("code",null,"kotlinx.datetime")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"navigation-compose")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[49]||(n[49]=[l("li",null,"Android, iOS 및 데스크톱의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[54]||(n[54]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/SEAbdulbasit/recipe-app"},"Recipe App")])],-1)),n[55]||(n[55]=l("td",null,"레시피 보기를 위한 데모 애플리케이션입니다. 애니메이션 사용을 보여줍니다.",-1)),l("td",null,[t(u,null,{default:i(()=>n[52]||(n[52]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"데이터 저장",-1)])),_:1})]),n[56]||(n[56]=l("td",null,[l("p",null,[l("code",null,"kotlinx-coroutines")])],-1)),l("td",null,[t(u,null,{default:i(()=>n[53]||(n[53]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[60]||(n[60]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/dbaroncelli/D-KMP-sample"},"D-KMP-sample")])],-1)),n[61]||(n[61]=l("td",null,"[Kotlin 멀티플랫폼 아키텍처를 사용한 선언형 UI](https://danielebaroncelli.medium.com/d-kmp-sample-now-leverages-ios-16-navigation-cebbb81ba2e7) 샘플 애플리케이션입니다. 사용 사례는 여러 국가의 백신 접종 통계를 검색하고 표시하는 것입니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[57]||(n[57]=[l("li",null,"네트워킹",-1),l("li",null,"데이터 저장",-1),l("li",null,"ViewModel",-1),l("li",null,"내비게이션",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[58]||(n[58]=[l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,"SQLDelight",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[59]||(n[59]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS의 SwiftUI",-1)])),_:1})])]),l("tr",null,[n[65]||(n[65]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/VictorKabata/Notflix"},"Notflix")])],-1)),n[66]||(n[66]=l("td",null,"[The Movie Database](https://www.themoviedb.org/)에서 데이터를 소비하여 현재 인기 있는, 개봉 예정인, 인기 있는 영화 및 TV 프로그램을 표시하는 애플리케이션입니다. The Movie Database에서 API 키를 생성해야 합니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[62]||(n[62]=[l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"캐싱",-1),l("li",null,"ViewModel",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[63]||(n[63]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"multiplatform-settings")],-1),l("li",null,[l("code",null,"napier")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[64]||(n[64]=[l("li",null,"Android의 Jetpack Compose",-1),l("li",null,"iOS의 SwiftUI",-1)])),_:1})])]),l("tr",null,[n[70]||(n[70]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/msasikanth/twine"},"Twine - RSS Reader")])],-1)),n[71]||(n[71]=l("td",null,"Twine은 Kotlin과 Compose 멀티플랫폼을 사용하여 구축된 멀티플랫폼 RSS 리더 앱입니다. 피드를 탐색할 수 있는 뛰어난 사용자 인터페이스와 경험을 제공하며, Material 3 콘텐츠 기반 동적 테마를 지원합니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[67]||(n[67]=[l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"데이터 저장",-1),l("li",null,"UI",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[68]||(n[68]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"napier")],-1),l("li",null,[l("code",null,"decompose")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[69]||(n[69]=[l("li",null,"Android 및 iOS의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[75]||(n[75]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/razaghimahdi/Shopping-By-KMP"},"Shopping By KMP")])],-1)),n[76]||(n[76]=l("td",null,"Kotlin으로 여러 플랫폼에서 UI를 공유하기 위한 선언형 프레임워크인 Jetpack Compose 멀티플랫폼을 사용하여 구축된 크로스 플랫폼 애플리케이션입니다. 이 애플리케이션은 사용자가 Android, iOS, 웹, 데스크톱, Android Automotive 및 Android TV에서 쇼핑 카탈로그의 제품을 찾아보고, 검색하고, 구매할 수 있도록 합니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[72]||(n[72]=[l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"데이터 저장",-1),l("li",null,"UI",-1),l("li",null,"ViewModel",-1),l("li",null,"애니메이션",-1),l("li",null,"내비게이션",-1),l("li",null,"UI 상태",-1),l("li",null,"Use Case",-1),l("li",null,"유닛 테스트",-1),l("li",null,"UI 테스트",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[73]||(n[73]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"kotlinx-datetime")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"datastore")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"google-map")],-1),l("li",null,[l("code",null,"navigation-compose")],-1),l("li",null,[l("code",null,"coil")],-1),l("li",null,[l("code",null,"kotest")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[74]||(n[74]=[l("li",null,"Android, iOS, 웹, 데스크톱, 자동차 및 Android TV의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[80]||(n[80]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/SEAbdulbasit/MusicApp-KMP"},"Music App KMP")])],-1)),n[81]||(n[81]=l("td",null,"MediaPlayer와 같은 네이티브 API와 다양한 플랫폼에서 상호 작용하는 방법을 보여주는 애플리케이션입니다. 데이터를 가져오기 위해 Spotify API를 사용합니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[77]||(n[77]=[l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"UI",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[78]||(n[78]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"decompose")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[79]||(n[79]=[l("li",null,"Android, iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1)])),_:1})])]),l("tr",null,[n[85]||(n[85]=l("td",null,[l("strong",null,[l("a",{href:"https://github.com/fethij/Rijksmuseum"},"Rijksmuseum")])],-1)),n[86]||(n[86]=l("td",null,"Rijksmuseum은 암스테르담의 유명한 국립 미술관(Rijksmuseum)의 예술 컬렉션을 몰입감 있게 탐색할 수 있는 멀티모듈 Kotlin 및 Compose 멀티플랫폼 앱입니다. Rijksmuseum API를 활용하여 이미지 및 설명을 포함한 다양한 예술 작품에 대한 상세 정보를 가져오고 표시합니다. ",-1)),l("td",null,[t(u,null,{default:i(()=>n[82]||(n[82]=[l("li",null,"UI",-1),l("li",null,"모델",-1),l("li",null,"네트워킹",-1),l("li",null,"내비게이션",-1),l("li",null,"ViewModel",-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[83]||(n[83]=[l("li",null,[l("code",null,"kotlinx-coroutines")],-1),l("li",null,[l("code",null,"kotlinx-serialization")],-1),l("li",null,[l("code",null,"ktor-client")],-1),l("li",null,[l("code",null,"koin")],-1),l("li",null,[l("code",null,"navigation-compose")],-1),l("li",null,[l("code",null,"Coil")],-1),l("li",null,[l("code",null,"Jetpack ViewModel")],-1)])),_:1})]),l("td",null,[t(u,null,{default:i(()=>n[84]||(n[84]=[l("li",null,"Android, iOS, 데스크톱 및 웹의 Compose 멀티플랫폼",-1)])),_:1})])])])])}const A=r(a,[["render",f]]);export{w as __pageData,A as default};
