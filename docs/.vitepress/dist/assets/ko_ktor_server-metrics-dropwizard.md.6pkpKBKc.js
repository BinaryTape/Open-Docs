import{_ as c}from"./chunks/jmx.UkL_fb5H.js";import{_ as m,C as n,c as u,o as y,G as a,j as s,ag as C,w as e,a as t}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/ktor/server-metrics-dropwizard.md","filePath":"ko/ktor/server-metrics-dropwizard.md","lastUpdated":1755457140000}'),B={name:"ko/ktor/server-metrics-dropwizard.md"};function v(b,i,f,_,w,M){const h=n("TopicTitle"),o=n("show-structure"),d=n("primary-label"),k=n("Links"),F=n("tldr"),E=n("link-summary"),l=n("code-block"),r=n("TabItem"),p=n("Tabs"),g=n("list");return y(),u("div",null,[a(h,{labelRef:"server-plugin",title:"Dropwizard 메트릭"}),a(o,{for:"chapter",depth:"2"}),a(d,{ref:"server-plugin"},null,512),a(F,null,{default:e(()=>[i[3]||(i[3]=s("p",null,[s("b",null,"필수 종속성"),t(": "),s("code",null,"io.ktor:ktor-server-metrics")],-1)),i[4]||(i[4]=s("p",null,[s("b",null,"코드 예시"),t(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/dropwizard-metrics"}," dropwizard-metrics ")],-1)),s("p",null,[s("b",null,[a(k,{href:"/ktor/server-native",summary:"모듈을 사용하면 경로를 그룹화하여 애플리케이션을 구조화할 수 있습니다."},{default:e(()=>i[0]||(i[0]=[t("네이티브 서버")])),_:1}),i[1]||(i[1]=t(" 지원"))]),i[2]||(i[2]=t(": ✖️ "))])]),_:1}),a(E,null,{default:e(()=>i[5]||(i[5]=[t("DropwizardMetrics 플러그인은 Metrics 라이브러리를 구성하여 서버 및 수신 요청에 대한 유용한 정보를 얻을 수 있도록 합니다.")])),_:1}),i[21]||(i[21]=s("p",null,[s("a",{href:"https://api.ktor.io/ktor-server/ktor-server-plugins/ktor-server-metrics/io.ktor.server.metrics.dropwizard/-dropwizard-metrics.html",target:"_blank",rel:"noreferrer"},"DropwizardMetrics"),t(" 플러그인은 "),s("a",{href:"http://metrics.dropwizard.io/",target:"_blank",rel:"noreferrer"},"Metrics"),t(" 라이브러리를 구성하여 서버 및 수신 요청에 대한 유용한 정보를 얻을 수 있도록 합니다.")],-1)),i[22]||(i[22]=s("h2",{id:"add_dependencies",tabindex:"-1"},[t("종속성 추가 "),s("a",{class:"header-anchor",href:"#add_dependencies","aria-label":'Permalink to "종속성 추가 {id="add_dependencies"}"'},"​")],-1)),i[23]||(i[23]=s("p",null,[s("code",null,"DropwizardMetrics"),t("을(를) 활성화하려면 빌드 스크립트에 다음 아티팩트를 포함해야 합니다:")],-1)),s("ul",null,[s("li",null,[i[6]||(i[6]=s("p",null,[s("code",null,"ktor-server-metrics"),t(" 종속성 추가:")],-1)),a(p,{group:"languages"},{default:e(()=>[a(r,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:e(()=>[a(l,{lang:"Kotlin",code:'              implementation("io.ktor:ktor-server-metrics:$ktor_version")'})]),_:1}),a(r,{title:"Gradle (Groovy)","group-key":"groovy"},{default:e(()=>[a(l,{lang:"Groovy",code:'              implementation "io.ktor:ktor-server-metrics:$ktor_version"'})]),_:1}),a(r,{title:"Maven","group-key":"maven"},{default:e(()=>[a(l,{lang:"XML",code:`              <dependency>
                  <groupId>io.ktor</groupId>
                  <artifactId>ktor-server-metrics-jvm</artifactId>
                  <version>\${ktor_version}</version>
              </dependency>`})]),_:1})]),_:1})]),s("li",null,[i[7]||(i[7]=s("p",null,"선택적으로, 특정 리포터에 필요한 종속성을 추가할 수 있습니다. 아래 예시는 JMX를 통해 메트릭을 보고하는 데 필요한 아티팩트를 추가하는 방법을 보여줍니다:",-1)),a(p,{group:"languages"},{default:e(()=>[a(r,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:e(()=>[a(l,{lang:"Kotlin",code:'              implementation("io.dropwizard.metrics:metrics-jmx:$dropwizard_version")'})]),_:1}),a(r,{title:"Gradle (Groovy)","group-key":"groovy"},{default:e(()=>[a(l,{lang:"Groovy",code:'              implementation "io.dropwizard.metrics:metrics-jmx:$dropwizard_version"'})]),_:1}),a(r,{title:"Maven","group-key":"maven"},{default:e(()=>[a(l,{lang:"XML",code:`              <dependency>
                  <groupId>io.dropwizard.metrics</groupId>
                  <artifactId>metrics-jmx</artifactId>
                  <version>\${dropwizard_version}</version>
              </dependency>`})]),_:1})]),_:1}),i[8]||(i[8]=s("p",null,[s("code",null,"$dropwizard_version"),t("을(를) "),s("code",null,"metrics-jmx"),t(" 아티팩트의 필요한 버전으로 바꿀 수 있습니다. 예를 들어, "),s("code",null,"4.2.15"),t("입니다.")],-1))])]),i[24]||(i[24]=s("h2",{id:"install_plugin",tabindex:"-1"},[t("DropwizardMetrics 설치 "),s("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "DropwizardMetrics 설치 {id="install_plugin"}"'},"​")],-1)),s("p",null,[i[10]||(i[10]=t(" 애플리케이션에 ")),i[11]||(i[11]=s("code",null,"DropwizardMetrics",-1)),i[12]||(i[12]=t(" 플러그인을 ")),i[13]||(i[13]=s("a",{href:"#install"},"설치",-1)),i[14]||(i[14]=t("하려면, 지정된 ")),a(k,{href:"/ktor/server-modules",summary:"모듈을 사용하면 경로를 그룹화하여 애플리케이션을 구조화할 수 있습니다."},{default:e(()=>i[9]||(i[9]=[t("모듈")])),_:1}),i[15]||(i[15]=t("의 ")),i[16]||(i[16]=s("code",null,"install",-1)),i[17]||(i[17]=t(" 함수에 전달하면 됩니다. 아래 코드 스니펫은 ")),i[18]||(i[18]=s("code",null,"DropwizardMetrics",-1)),i[19]||(i[19]=t("을(를) 설치하는 방법을 보여줍니다... "))]),a(g,null,{default:e(()=>i[20]||(i[20]=[s("li",null,[t(" ... "),s("code",null,"embeddedServer"),t(" 함수 호출 내에서. ")],-1),s("li",null,[t(" ... "),s("code",null,"Application"),t(" 클래스의 확장 함수인 명시적으로 정의된 "),s("code",null,"module"),t(" 내에서. ")],-1)])),_:1}),a(p,null,{default:e(()=>[a(r,{title:"embeddedServer"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.metrics.dropwizard.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(DropwizardMetrics)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),a(r,{title:"module"},{default:e(()=>[a(l,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.metrics.dropwizard.*
            // ...
            fun Application.module() {
                install(DropwizardMetrics)
                // ...
            }`})]),_:1})]),_:1}),i[25]||(i[25]=C(`<h2 id="configure_plugin" tabindex="-1">DropwizardMetrics 구성 <a class="header-anchor" href="#configure_plugin" aria-label="Permalink to &quot;DropwizardMetrics 구성 {id=&quot;configure_plugin&quot;}&quot;">​</a></h2><p><code>DropwizardMetrics</code>은(는) <code>registry</code> 속성을 사용하여 지원되는 모든 <a href="http://metrics.dropwizard.io/" target="_blank" rel="noreferrer">Metric 리포터</a>를 사용할 수 있도록 합니다. SLF4J 및 JMX 리포터를 구성하는 방법을 살펴보겠습니다.</p><h3 id="slf4j" tabindex="-1">SLF4J 리포터 <a class="header-anchor" href="#slf4j" aria-label="Permalink to &quot;SLF4J 리포터 {id=&quot;slf4j&quot;}&quot;">​</a></h3><p>SLF4J 리포터는 SLF4J에서 지원하는 모든 출력으로 주기적으로 보고서를 내보낼 수 있도록 합니다. 예를 들어, 10초마다 메트릭을 출력하려면 다음을 수행합니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DropwizardMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Slf4jReporter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(registry)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">outputTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this@module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.log)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertRatesTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TimeUnit.SECONDS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertDurationsTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TimeUnit.MILLISECONDS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>전체 예시는 여기에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/dropwizard-metrics" target="_blank" rel="noreferrer">dropwizard-metrics</a>.</p><p>애플리케이션을 실행하고 <a href="http://0.0.0.0:8080" target="_blank" rel="noreferrer">http://0.0.0.0:8080</a>을 열면 출력은 다음과 같습니다:</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[DefaultDispatcher-worker-1] INFO  Application - Responding at http://0.0.0.0:8080</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=COUNTER,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=ktor.calls.active,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=METER,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=ktor.calls./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">method:GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.200,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=6,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m1_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m5_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m15_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean_rate=0.98655785084844,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate_unit=events/second</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=METER,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=ktor.calls./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">method:GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.meter,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=6,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m1_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m5_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m15_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean_rate=0.9841134429134598,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate_unit=events/second</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=METER,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=ktor.calls.exceptions,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=0,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m1_rate=0.0,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m5_rate=0.0,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m15_rate=0.0,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean_rate=0.0,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate_unit=events/second</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=METER,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=ktor.calls.status.200,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=6,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m1_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m5_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m15_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean_rate=0.9866015088545449,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate_unit=events/second</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=TIMER,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=ktor.calls./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">method:GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.timer,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=6,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> min=0.359683,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max=14.213046,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean=2.691307542732234,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stddev=5.099546889849414,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p50=0.400967,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p75=0.618972,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p95=14.213046,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p98=14.213046,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p99=14.213046,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p999=14.213046,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m1_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m5_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m15_rate=1.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean_rate=0.9830677128229028,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate_unit=events/second,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> duration_unit=milliseconds</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type=TIMER,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=ktor.calls.duration,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=6,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> min=0.732149,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max=33.735719,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean=6.238046092985701,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stddev=12.169258340009847,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p50=0.778864,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p75=1.050454,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p95=33.735719,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p98=33.735719,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p99=33.735719,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p999=33.735719,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m1_rate=0.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m5_rate=0.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> m15_rate=0.2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mean_rate=0.6040311229887146,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate_unit=events/second,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> duration_unit=milliseconds</span></span></code></pre></div><h3 id="jmx" tabindex="-1">JMX 리포터 <a class="header-anchor" href="#jmx" aria-label="Permalink to &quot;JMX 리포터 {id=&quot;jmx&quot;}&quot;">​</a></h3><p>JMX 리포터는 모든 메트릭을 JMX에 노출하여 <code>jconsole</code>을(를) 사용하여 해당 메트릭을 볼 수 있도록 합니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DropwizardMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    JmxReporter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(registry)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertRatesTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TimeUnit.SECONDS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertDurationsTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TimeUnit.MILLISECONDS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>전체 예시는 여기에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/dropwizard-metrics" target="_blank" rel="noreferrer">dropwizard-metrics</a>.</p><p>애플리케이션을 실행하고 <a href="https://docs.oracle.com/en/java/javase/17/management/using-jconsole.html" target="_blank" rel="noreferrer">JConsole</a>을(를) 사용하여 해당 프로세스에 연결하면 메트릭은 다음과 같이 표시됩니다:</p><p><img src="`+c+`" alt="Ktor Metrics: JMX" width="758"></p><h2 id="exposed-metrics" tabindex="-1">노출된 메트릭 <a class="header-anchor" href="#exposed-metrics" aria-label="Permalink to &quot;노출된 메트릭 {id=&quot;exposed-metrics&quot;}&quot;">​</a></h2><p><code>DropwizardMetrics</code>은(는) 다음 메트릭을 노출합니다:</p><ul><li>Ktor-특정 메트릭과 <a href="#jvm-metrics">JVM 메트릭</a>을 포함하는 <a href="#global-metrics">전역 메트릭</a>.</li><li><a href="#endpoint-metrics">엔드포인트별 메트릭</a>.</li></ul><h3 id="global-metrics" tabindex="-1">전역 메트릭 <a class="header-anchor" href="#global-metrics" aria-label="Permalink to &quot;전역 메트릭 {id=&quot;global-metrics&quot;}&quot;">​</a></h3><p>전역 메트릭은 다음 Ktor-특정 메트릭을 포함합니다:</p><ul><li><code>ktor.calls.active</code>:<code>Count</code> - 완료되지 않은 활성 요청 수.</li><li><code>ktor.calls.duration</code> - 호출 기간에 대한 정보.</li><li><code>ktor.calls.exceptions</code> - 예외 수에 대한 정보.</li><li><code>ktor.calls.status.NNN</code> - 특정 HTTP 상태 코드 <code>NNN</code>이(가) 발생한 횟수에 대한 정보.</li></ul><p>메트릭 이름은 <code>ktor.calls</code> 접두사로 시작합니다. <code>baseName</code> 속성을 사용하여 이를 사용자 지정할 수 있습니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DropwizardMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    baseName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;my.prefix&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="endpoint-metrics" tabindex="-1">엔드포인트별 메트릭 <a class="header-anchor" href="#endpoint-metrics" aria-label="Permalink to &quot;엔드포인트별 메트릭 {id=&quot;endpoint-metrics&quot;}&quot;">​</a></h3><ul><li><code>&quot;/uri(method:VERB).NNN&quot;</code> - 이 경로 및 동사에 대해 특정 HTTP 상태 코드 <code>NNN</code>이(가) 발생한 횟수에 대한 정보.</li><li><code>&quot;/uri(method:VERB).meter&quot;</code> - 이 경로 및 동사에 대한 호출 수에 대한 정보.</li><li><code>&quot;/uri(method:VERB).timer&quot;</code> - 이 엔드포인트의 기간에 대한 정보.</li></ul><h3 id="jvm-metrics" tabindex="-1">JVM 메트릭 <a class="header-anchor" href="#jvm-metrics" aria-label="Permalink to &quot;JVM 메트릭 {id=&quot;jvm-metrics&quot;}&quot;">​</a></h3><p>HTTP 메트릭 외에도 Ktor는 JVM 모니터링을 위한 일련의 메트릭을 노출합니다. <code>registerJvmMetricSets</code> 속성을 사용하여 이러한 메트릭을 비활성화할 수 있습니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DropwizardMetrics) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    registerJvmMetricSets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>전체 예시는 여기에서 찾을 수 있습니다: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/dropwizard-metrics" target="_blank" rel="noreferrer">dropwizard-metrics</a>.</p>`,28))])}const x=m(B,[["render",v]]);export{q as __pageData,x as default};
