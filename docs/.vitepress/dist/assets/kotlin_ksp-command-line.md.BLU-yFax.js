import{_ as i,c as a,o as n,ag as p}from"./chunks/framework.Bksy39di.js";const g=JSON.parse('{"title":"从命令行运行 KSP","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/ksp-command-line.md","filePath":"kotlin/ksp-command-line.md","lastUpdated":1754307826000}'),l={name:"kotlin/ksp-command-line.md"};function t(h,s,k,e,d,r){return n(),a("div",null,s[0]||(s[0]=[p(`<h1 id="从命令行运行-ksp" tabindex="-1">从命令行运行 KSP <a class="header-anchor" href="#从命令行运行-ksp" aria-label="Permalink to &quot;从命令行运行 KSP&quot;">​</a></h1><p>KSP 是一个 Kotlin 编译器插件，需要与 Kotlin 编译器一起运行。请下载并解压它们。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Kotlin compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/JetBrains/kotlin/releases/download/v2.2.0/kotlin-compiler-2.2.0.zip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kotlin-compiler-2.2.0.zip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># KSP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/google/ksp/releases/download/2.2.0-2.0.2/artifacts.zip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artifacts.zip</span></span></code></pre></div><p>要使用 <code>kotlinc</code> 运行 KSP，请向 <code>kotlinc</code> 传递 <code>-Xplugin</code> 选项。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-Xplugin=/path/to/symbol-processing-cmdline-2.2.0-2.0.2.jar</span></span></code></pre></div><p>这不同于 <code>symbol-processing-2.2.0-2.0.2.jar</code>，后者旨在与 <code>kotlin-compiler-embeddable</code> 在使用 Gradle 运行时一起使用。 命令行 <code>kotlinc</code> 需要 <code>symbol-processing-cmdline-2.2.0-2.0.2.jar</code>。</p><p>你还需要 API jar。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-Xplugin=/path/to/symbol-processing-api-2.2.0-2.0.2.jar</span></span></code></pre></div><p>请参阅完整的示例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KSP_PLUGIN_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.google.devtools.ksp.symbol-processing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KSP_PLUGIN_OPT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$KSP_PLUGIN_ID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KSP_PLUGIN_JAR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./com/google/devtools/ksp/symbol-processing-cmdline/2.2.0-2.0.2/symbol-processing-cmdline-2.2.0-2.0.2.jar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KSP_API_JAR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./com/google/devtools/ksp/symbol-processing-api/2.2.0-2.0.2/symbol-processing-api-2.2.0-2.0.2.jar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KOTLINC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./kotlinc/bin/kotlinc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/your-processor.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$KOTLINC </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        -Xplugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$KSP_PLUGIN_JAR </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -Xplugin=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$KSP_API_JAR</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -Xallow-no-source-files</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:apclasspath=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$AP </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:projectBaseDir=.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:classOutputDir=./out</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:javaOutputDir=./out</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:kotlinOutputDir=./out</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:resourceOutputDir=./out</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:kspOutputDir=./out</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:cachesDir=./out</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:incremental=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:apoption=key1=value1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        -P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $KSP_PLUGIN_OPT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:apoption=key2=value2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        $*</span></span></code></pre></div>`,10)]))}const F=i(l,[["render",t]]);export{g as __pageData,F as default};
