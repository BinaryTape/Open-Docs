import{_ as p}from"./chunks/kmp-logic-and-ui.C5b8DY7I.js";import{_ as s}from"./chunks/discover-kmp.BprQjN3-.js";import{_ as m}from"./chunks/explore-compose.CnswIadv.js";import{_ as f}from"./chunks/kmp-use-cases-1.D7ku5ORt.js";import{_ as d,C as i,c as h,o as b,j as t,G as e,ag as n,a as o,w as r}from"./chunks/framework.Bksy39di.js";const C=JSON.parse('{"title":"Kotlin MultiplatformとFlutter: クロスプラットフォーム開発ソリューション","description":"","frontmatter":{},"headers":[],"relativePath":"ja/kmp/kotlin-multiplatform-flutter.md","filePath":"ja/kmp/kotlin-multiplatform-flutter.md","lastUpdated":1755516278000}'),k={name:"ja/kmp/kotlin-multiplatform-flutter.md"},g={style:{}};function w(v,l,M,K,F,P){const u=i("web-summary"),a=i("Links");return b(),h("div",null,[l[25]||(l[25]=t("h1",{id:"kotlin-multiplatformとflutter-クロスプラットフォーム開発ソリューション",tabindex:"-1"},[o("Kotlin MultiplatformとFlutter: クロスプラットフォーム開発ソリューション "),t("a",{class:"header-anchor",href:"#kotlin-multiplatformとflutter-クロスプラットフォーム開発ソリューション","aria-label":'Permalink to "Kotlin MultiplatformとFlutter: クロスプラットフォーム開発ソリューション"'},"​")],-1)),e(u,null,{default:r(()=>l[0]||(l[0]=[o("この記事では、Kotlin MultiplatformとFlutterを探求し、それらの機能と、クロスプラットフォームプロジェクトに最適な選択を行う方法を理解するのに役立ちます。")])),_:1}),l[26]||(l[26]=n(' <p>急速に進化するテクノロジーの世界において、開発者は高品質なアプリケーションを構築するための効率的なフレームワークやツールを常に探しています。しかし、利用可能な選択肢の中から選ぶ際、いわゆる「最良の選択肢」を見つけることに重点を置きすぎないことが重要です。このアプローチは、必ずしも最も適切な選択肢につながるとは限りません。</p><p>各プロジェクトは独自のものであり、特定の要件を持っています。この記事は、Kotlin MultiplatformやFlutterのようなテクノロジーがあなたのプロジェクトに最も適しているかをより深く理解し、情報に基づいた意思決定を行えるよう、選択肢を検討する手助けをすることを目的としています。</p><h2 id="クロスプラットフォーム開発-最新のアプリケーション構築への統合アプローチ" tabindex="-1">クロスプラットフォーム開発: 最新のアプリケーション構築への統合アプローチ <a class="header-anchor" href="#クロスプラットフォーム開発-最新のアプリケーション構築への統合アプローチ" aria-label="Permalink to &quot;クロスプラットフォーム開発: 最新のアプリケーション構築への統合アプローチ&quot;">​</a></h2><p>クロスプラットフォーム開発は、単一のコードベースで複数のプラットフォームで動作するアプリケーションを構築する方法を提供し、各システムで同じ機能を再記述する必要をなくします。しばしば<a href="./cross-platform-mobile-development">モバイル開発</a>（AndroidとiOSの両方をターゲットとする）と関連付けられますが、このアプローチはモバイルをはるかに超えて、ウェブ、デスクトップ、さらにはサーバーサイド環境もカバーします。</p><p>中心となる考え方は、コードの再利用を最大化しつつ、必要に応じてプラットフォーム固有の機能を実装できるようにすることです。これにより、開発プロセスが効率化され、メンテナンス作業が削減されます。チームは開発サイクルを加速し、コストを削減し、プラットフォーム間の一貫性を確保できるため、クロスプラットフォーム開発は今日のますます多様化するアプリケーション環境において賢明な選択となります。</p><h2 id="kotlin-multiplatformとflutter-プラットフォームをまたいだ開発の効率化" tabindex="-1">Kotlin MultiplatformとFlutter: プラットフォームをまたいだ開発の効率化 <a class="header-anchor" href="#kotlin-multiplatformとflutter-プラットフォームをまたいだ開発の効率化" aria-label="Permalink to &quot;Kotlin MultiplatformとFlutter: プラットフォームをまたいだ開発の効率化&quot;">​</a></h2><p>FlutterとKotlin Multiplatformは、異なるプラットフォーム間でのアプリケーション開発を簡素化する人気のクロスプラットフォームテクノロジーです。</p><h3 id="flutter" tabindex="-1">Flutter <a class="header-anchor" href="#flutter" aria-label="Permalink to &quot;Flutter&quot;">​</a></h3><p><a href="https://flutter.dev/" target="_blank" rel="noreferrer">Flutter</a>は、単一のコードベースからネイティブコンパイルされたマルチプラットフォームアプリケーションを構築するためのオープンソースフレームワークです。Android、iOS、ウェブ、デスクトップ（Windows、macOS、Linux）、および組み込みシステム間で、すべて単一の共有アプリケーションコードベースから、リッチなアプリ体験を作成できます。FlutterアプリはDartプログラミング言語を使用して記述されます。FlutterはGoogleによってサポートされ、使用されています。</p><p>Skyという名前で2014年に初めて導入され、<a href="https://developers.googleblog.com/en/flutter-10-googles-portable-ui-toolkit/" target="_blank" rel="noreferrer">Flutter 1.0</a>は2018年12月にFlutter Liveで正式に発表されました。</p><p>Flutterの開発者コミュニティは大規模かつ非常に活発で、継続的な改善とサポートを提供しています。Flutterでは、FlutterおよびDartエコシステム内の開発者によって貢献された共有パッケージを使用できます。</p><h3 id="kotlin-multiplatform" tabindex="-1">Kotlin Multiplatform <a class="header-anchor" href="#kotlin-multiplatform" aria-label="Permalink to &quot;Kotlin Multiplatform&quot;">​</a></h3><p><a href="https://www.jetbrains.com/kotlin-multiplatform/" target="_blank" rel="noreferrer">Kotlin Multiplatform</a> (KMP)は、JetBrainsによって構築されたオープンソーステクノロジーで、開発者はAndroid、iOS、ウェブ、デスクトップ（Windows、macOS、Linux）、およびサーバーサイド向けのアプリケーションを作成でき、ネイティブプログラミングの利点を保持しつつ、これらのプラットフォーム間でKotlinコードを効率的に再利用できます。</p><p>Kotlin Multiplatformでは、さまざまな選択肢があります。アプリのエントリポイントを除くすべてのコードを共有したり、ネットワークやデータベースモジュールのような単一のロジックの一部を共有したり、ビジネスロジックを共有しつつUIをネイティブのままにしたりできます。</p><p><img src="'+p+'" alt="Kotlin Multiplatform is a technology for reusing up to 100% of your code" width="700"></p><p>Kotlin Multiplatformは2017年にKotlin 1.2の一部として初めて導入されました。2023年11月、Kotlin Multiplatformは<a href="https://blog.jetbrains.com/kotlin/2023/11/kotlin-multiplatform-stable/" target="_blank" rel="noreferrer">安定版</a>になりました。Google I/O 2024では、GoogleがAndroidおよびiOS間でビジネスロジックを共有するための<a href="https://android-developers.googleblog.com/2024/05/android-support-for-kotlin-multiplatform-to-share-business-logic-across-mobile-web-server-desktop.html" target="_blank" rel="noreferrer">Kotlin Multiplatformのサポート</a>を発表しました。</p><p><a href="https://www.jetbrains.com/kotlin-multiplatform/" target="_blank" rel="noreferrer"><img src="'+s+'" alt="Discover Kotlin Multiplatform" width="500"></a></p><h4 id="compose-multiplatform" tabindex="-1">Compose Multiplatform <a class="header-anchor" href="#compose-multiplatform" aria-label="Permalink to &quot;Compose Multiplatform&quot;">​</a></h4><p>JetBrains製の最新の宣言型フレームワークである<a href="https://www.jetbrains.com/compose-multiplatform/" target="_blank" rel="noreferrer">Compose Multiplatform</a>を使用すると、複数のプラットフォーム間で共有UIコードを記述できます。これはKotlin MultiplatformとGoogleのJetpack Composeに基づいて構築されています。</p><p>Compose Multiplatformは現在、<a href="https://blog.jetbrains.com/kotlin/2025/05/compose-multiplatform-1-8-0-released-compose-multiplatform-for-ios-is-stable-and-production-ready/" target="_blank" rel="noreferrer">iOS</a>、Android、デスクトップで安定しており、ウェブではアルファ版です。</p><p><a href="https://www.jetbrains.com/compose-multiplatform/" target="_blank" rel="noreferrer"><img src="'+m+'" alt="Explore Compose Multiplatform" width="500"></a></p><p>私たちの専用記事では、<a href="./compose-multiplatform-and-jetpack-compose">Compose MultiplatformとJetpack Compose</a>の関係を、主な違いを強調しながら概説しています。</p><h3 id="kotlin-multiplatformとflutter-概要" tabindex="-1">Kotlin MultiplatformとFlutter: 概要 <a class="header-anchor" href="#kotlin-multiplatformとflutter-概要" aria-label="Permalink to &quot;Kotlin MultiplatformとFlutter: 概要&quot;">​</a></h3>',24)),t("table",g,[l[16]||(l[16]=t("tr",null,[t("td"),t("td",null,[t("b",null,"Kotlin Multiplatform")]),t("td",null,[t("b",null,"Flutter")])],-1)),l[17]||(l[17]=t("tr",null,[t("td",null,[t("b",null,"開発元")]),t("td",null,"JetBrains"),t("td",null,"Google")],-1)),l[18]||(l[18]=t("tr",null,[t("td",null,[t("b",null,"言語")]),t("td",null,"Kotlin"),t("td",null,"Dart")],-1)),l[19]||(l[19]=t("tr",null,[t("td",null,[t("b",null,"柔軟性とコードの再利用")]),t("td",null,"ビジネスロジックやUIを含む、コードベースの任意の割合（1%から100%）を共有できます。"),t("td",null,"すべてのプラットフォームで100%のコード共有により、アプリケーションのすべてのピクセルを制御し、カスタマイズされた適応性の高いデザインを作成できます。")],-1)),l[20]||(l[20]=t("tr",null,[t("td",null,[t("b",null,"パッケージ、依存関係、エコシステム")]),t("td",null,[o("パッケージは"),t("a",{href:"https://central.sonatype.com/"},"Maven Central"),o("およびその他のリポジトリから入手できます。 "),t("p",null,[t("a",{href:"http://klibs.io"},"klibs.io"),o("（アルファ版）は、KMPライブラリの検索を簡素化するために設計されています。")]),t("p",null,[o("この"),t("a",{href:"https://github.com/terrakok/kmp-awesome"},"リスト"),o("には、最も人気のあるKMPライブラリとツールの一部が含まれています。")])]),t("td",null,[o("パッケージは"),t("a",{href:"https://pub.dev/"},"Pub.dev"),o("から入手できます。")])],-1)),l[21]||(l[21]=t("tr",null,[t("td",null,[t("b",null,"ビルドツール")]),t("td",null,"Gradle（AppleデバイスをターゲットとするアプリケーションではXcodeも使用）。"),t("td",null,"Flutterコマンドラインツール（内部でGradleとXcodeを使用）。")],-1)),l[22]||(l[22]=t("tr",null,[t("td",null,[t("b",null,"コード共有")]),t("td",null,"Android、iOS、ウェブ、デスクトップ、サーバーサイド。"),t("td",null,"Android、iOS、ウェブ、デスクトップ、組み込みデバイス。")],-1)),l[23]||(l[23]=t("tr",null,[t("td",null,[t("b",null,"コンパイル")]),t("td",null,"デスクトップとAndroid向けにはJVMバイトコードに、ウェブ向けにはJavaScriptまたはWasmに、ネイティブプラットフォーム向けにはプラットフォーム固有のバイナリにコンパイルされます。"),t("td",null,[o("デバッグビルドではDartコードが仮想マシンで実行されます。 "),t("p",null,"リリースビルドでは、ネイティブプラットフォーム向けにプラットフォーム固有のバイナリを、ウェブ向けにJavaScript/Wasmを出力します。")])],-1)),t("tr",null,[l[4]||(l[4]=t("td",null,[t("b",null,"ネイティブAPIとの通信")],-1)),t("td",null,[l[2]||(l[2]=o("ネイティブAPIは、")),e(a,{href:"/kmp/multiplatform-expect-actual",summary:"undefined"},{default:r(()=>l[1]||(l[1]=[o("expect/actual宣言")])),_:1}),l[3]||(l[3]=o("を使用してKotlinコードから直接アクセスできます。"))]),l[5]||(l[5]=t("td",null,[o("ホストプラットフォームとの通信は、"),t("a",{href:"https://docs.flutter.dev/platform-integration/platform-channels"},"プラットフォームチャネル"),o("を使用して可能です。")],-1))]),l[24]||(l[24]=t("tr",null,[t("td",null,[t("b",null,"UIレンダリング")]),t("td",null,[o("GoogleのJetpack Composeをベースにした"),t("a",{href:"https://www.jetbrains.com/compose-multiplatform/"},"Compose Multiplatform"),o("を使用してプラットフォーム間でUIを共有できます。これはOpenGL、ANGLE（OpenGL ES 2または3の呼び出しをネイティブAPIに変換）、Vulkan、およびMetalと互換性のあるSkiaエンジンを使用します。")]),t("td",null,[o("Flutterウィジェットは、カスタムの"),t("a",{href:"https://docs.flutter.dev/perf/impeller"},"Impellerエンジン"),o("を使用して画面にレンダリングされます。これはプラットフォームとデバイスに応じて、Metal、Vulkan、またはOpenGLを使用してGPUと直接通信します。")])],-1)),t("tr",null,[l[9]||(l[9]=t("td",null,[t("b",null,"UI開発のイテレーション")],-1)),t("td",null,[l[8]||(l[8]=o("UIプレビューは共通コードからでも利用できます。 ")),t("p",null,[e(a,{href:"/kmp/compose-hot-reload",summary:"undefined"},{default:r(()=>l[6]||(l[6]=[o("Compose Hot Reload")])),_:1}),l[7]||(l[7]=o("を使用すると、アプリを再起動したり状態を失ったりすることなく、UIの変更を即座に確認できます。"))])]),l[10]||(l[10]=t("td",null,"VS CodeおよびAndroid Studio用のIDEプラグインが利用できます。",-1))]),t("tr",null,[l[14]||(l[14]=t("td",null,[t("b",null,"採用企業")],-1)),t("td",null,[l[12]||(l[12]=n('<a href="https://www.forbes.com/sites/forbes-engineering/2023/11/13/forbes-mobile-app-shifts-to-kotlin-multiplatform/">Forbes</a>、<a href="https://www.youtube.com/watch?v=z-o9MqN86eE">Todoist</a>、<a href="https://medium.com/mcdonalds-technical-blog/mobile-multiplatform-development-at-mcdonalds-3b72c8d44ebc">McDonald’s</a>、<a href="https://www.youtube.com/watch?v=5sOXv-X43vc">Google Workspace</a>、<a href="https://www.youtube.com/watch?v=hZPL8QqiLi8">Philips</a>、<a href="https://raymondctc.medium.com/adopting-kotlin-multiplatform-mobile-kmm-on-9gag-app-dfe526d9ce04">9gag</a>、<a href="https://kotlinlang.org/lp/multiplatform/case-studies/baidu">Baidu</a>、<a href="https://kotlinlang.org/lp/multiplatform/case-studies/autodesk/">Autodesk</a>、<a href="https://touchlab.co/">TouchLab</a>、<a href="https://www.youtube.com/watch?v=YsQ-2lQYQ8M">Instabee</a>など、さらに多くの企業が私たちの',20)),e(a,{href:"/kmp/case-studies",summary:"undefined"},{default:r(()=>l[11]||(l[11]=[o("KMP事例集")])),_:1}),l[13]||(l[13]=o("に記載されています。"))]),l[15]||(l[15]=t("td",null,[t("a",{href:"https://flutter.dev/showcase/xiaomi"},"Xiaomi"),o("、"),t("a",{href:"https://flutter.dev/showcase/wolt"},"Wolt"),o("、"),t("a",{href:"https://flutter.dev/showcase/universal-studios"},"Universal Studios"),o("、"),t("a",{href:"https://flutter.dev/showcase/alibaba-group"},"Alibaba Group"),o("、"),t("a",{href:"https://flutter.dev/showcase/bytedance"},"ByteDance"),o("、"),t("a",{href:"https://www.geico.com/techblog/flutter-as-the-multi-channel-ux-framework/"},"Geico"),o("、"),t("a",{href:"https://flutter.dev/showcase/ebay"},"eBay Motors"),o("、"),t("a",{href:"https://flutter.dev/showcase/google-pay"},"Google Pay"),o("、"),t("a",{href:"https://flutter.dev/showcase/so-vegan"},"So Vegan"),o("など、さらに多くの企業が"),t("a",{href:"https://flutter.dev/showcase"},"Flutter Showcase"),o("に記載されています。")],-1))])]),l[27]||(l[27]=t("p",null,[t("a",{href:"https://www.jetbrains.com/help/kotlin-multiplatform-dev/case-studies.html",target:"_blank",rel:"noreferrer"},[t("img",{src:f,alt:"Explore real-life use cases from global companies that leverage Kotlin Multiplatform for cross-platform development.",width:"500"})])],-1)),l[28]||(l[28]=t("p",null,[o("また、Googleのブログ記事"),t("a",{href:"https://developers.googleblog.com/en/making-development-across-platforms-easier-for-developers/",target:"_blank",rel:"noreferrer"},"「Making Development Across Platforms Easier for Developers」"),o("も参照できます。これは、プロジェクトに適切な技術スタックを選択するためのガイダンスを提供しています。")],-1)),l[29]||(l[29]=t("p",null,[o("Kotlin MultiplatformとFlutterのさらなる比較については、Philipp Lacknerによる"),t("a",{href:"https://www.youtube.com/watch?v=dzog64ENKG0",target:"_blank",rel:"noreferrer"},"「KMP vs. Flutter」動画"),o("もご覧ください。この動画では、コード共有、UIレンダリング、パフォーマンス、および両テクノロジーの将来性に関して、興味深い考察が共有されています。")],-1)),l[30]||(l[30]=t("p",null,"あなたの特定のビジネスニーズ、目的、タスクを慎重に評価することで、要件に最も合致するクロスプラットフォームソリューションを特定できます。",-1))])}const G=d(k,[["render",w]]);export{C as __pageData,G as default};
