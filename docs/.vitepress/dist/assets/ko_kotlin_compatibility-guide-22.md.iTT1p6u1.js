import{_ as e,c as t,o as r,ag as a}from"./chunks/framework.Bksy39di.js";const u=JSON.parse('{"title":"Kotlin 2.2 호환성 가이드","description":"","frontmatter":{},"headers":[],"relativePath":"ko/kotlin/compatibility-guide-22.md","filePath":"ko/kotlin/compatibility-guide-22.md","lastUpdated":1754307826000}'),n={name:"ko/kotlin/compatibility-guide-22.md"};function l(i,o,s,p,c,d){return r(),t("div",null,o[0]||(o[0]=[a('<h1 id="kotlin-2-2-호환성-가이드" tabindex="-1">Kotlin 2.2 호환성 가이드 <a class="header-anchor" href="#kotlin-2-2-호환성-가이드" aria-label="Permalink to &quot;Kotlin 2.2 호환성 가이드&quot;">​</a></h1><p><em><a href="/ko/kotlin/kotlin-evolution-principles">언어의 현대성 유지</a></em> 및 _<a href="/ko/kotlin/kotlin-evolution-principles">편리한 업데이트</a>_는 Kotlin 언어 설계의 근본 원칙 중 일부입니다. 전자는 언어 발전을 저해하는 구조는 제거되어야 한다고 말하며, 후자는 코드 마이그레이션을 최대한 원활하게 만들기 위해 이러한 제거가 사전에 잘 공지되어야 한다고 말합니다.</p><p>대부분의 언어 변경 사항은 업데이트 변경 로그 또는 컴파일러 경고와 같은 다른 채널을 통해 이미 발표되었지만, 이 문서는 모든 변경 사항을 요약하여 Kotlin 2.1에서 Kotlin 2.2로 마이그레이션하기 위한 완전한 참조를 제공합니다.</p><h2 id="기본-용어" tabindex="-1">기본 용어 <a class="header-anchor" href="#기본-용어" aria-label="Permalink to &quot;기본 용어&quot;">​</a></h2><p>이 문서에서는 여러 종류의 호환성을 소개합니다:</p><ul><li><em>source</em> (소스): 소스 비호환 변경은 (오류나 경고 없이) 잘 컴파일되던 코드가 더 이상 컴파일되지 않게 합니다.</li><li><em>binary</em> (바이너리): 두 바이너리 아티팩트는 서로 교체해도 로딩 또는 링크 오류가 발생하지 않는 경우 바이너리 호환 가능하다고 합니다.</li><li><em>behavioral</em> (동작): 변경 적용 전후에 동일한 프로그램이 다른 동작을 보이는 경우 변경은 동작 비호환이라고 합니다.</li></ul><p>이러한 정의는 순수 Kotlin에 대해서만 주어진다는 점을 기억하십시오. 다른 언어 관점(예: Java)에서의 Kotlin 코드 호환성은 이 문서의 범위를 벗어납니다.</p><h2 id="언어" tabindex="-1">언어 <a class="header-anchor" href="#언어" aria-label="Permalink to &quot;언어&quot;">​</a></h2><h3 id="어노테이션이-달린-람다에-대해-기본적으로-invokedynamic-활성화" tabindex="-1">어노테이션이 달린 람다에 대해 기본적으로 invokedynamic 활성화 <a class="header-anchor" href="#어노테이션이-달린-람다에-대해-기본적으로-invokedynamic-활성화" aria-label="Permalink to &quot;어노테이션이 달린 람다에 대해 기본적으로 invokedynamic 활성화&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-278" target="_blank" rel="noreferrer">KTLC-278</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 동작</p><p><strong>간단 요약</strong>: 어노테이션이 달린 람다는 이제 기본적으로 <code>LambdaMetafactory</code>를 통해 <code>invokedynamic</code>를 사용하여 Java 람다와 동작을 일치시킵니다. 이는 생성된 람다 클래스에서 어노테이션을 검색하는 데 의존했던 리플렉션 기반 코드에 영향을 미칩니다. 이전 동작으로 되돌리려면 <code>-Xindy-allow-annotated-lambdas=false</code> 컴파일러 옵션을 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: 어노테이션이 달린 람다에 대해 <code>invokedynamic</code>를 기본적으로 활성화</li></ul></blockquote><h3 id="k2에서-확장된-타입에-가변성이-있는-타입-별칭에-대한-생성자-호출-및-상속-금지" tabindex="-1">K2에서 확장된 타입에 가변성이 있는 타입 별칭에 대한 생성자 호출 및 상속 금지 <a class="header-anchor" href="#k2에서-확장된-타입에-가변성이-있는-타입-별칭에-대한-생성자-호출-및-상속-금지" aria-label="Permalink to &quot;K2에서 확장된 타입에 가변성이 있는 타입 별칭에 대한 생성자 호출 및 상속 금지&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-4" target="_blank" rel="noreferrer">KTLC-4</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>out</code>과 같은 가변성 변경자를 사용하는 타입으로 확장되는 타입 별칭을 사용하는 생성자 호출 및 상속은 더 이상 K2 컴파일러에서 지원되지 않습니다. 이는 원본 타입을 사용하는 것이 허용되지 않았지만 타입 별칭을 통한 동일한 사용은 허용되었던 불일치를 해결합니다. 마이그레이션하려면 필요에 따라 원본 타입을 명시적으로 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.0.0: 가변성 변경자가 있는 타입으로 확장되는 타입 별칭에 대한 생성자 호출 또는 슈퍼타입 사용에 대해 경고 보고</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h3 id="kotlin-getter로부터-합성-프로퍼티-금지" tabindex="-1">Kotlin getter로부터 합성 프로퍼티 금지 <a class="header-anchor" href="#kotlin-getter로부터-합성-프로퍼티-금지" aria-label="Permalink to &quot;Kotlin getter로부터 합성 프로퍼티 금지&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-272" target="_blank" rel="noreferrer">KTLC-272</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: Kotlin에 정의된 getter에 대해 합성 프로퍼티가 더 이상 허용되지 않습니다. 이는 Java 클래스가 Kotlin 클래스를 확장하는 경우와 <code>java.util.LinkedHashSet</code>과 같은 매핑된 타입으로 작업할 때 영향을 미칩니다. 마이그레이션하려면 프로퍼티 접근을 해당 getter 함수에 대한 직접 호출로 대체하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.0.0: Kotlin getter로부터 생성된 합성 프로퍼티 접근에 대해 경고 보고</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h3 id="jvm에서-인터페이스-함수에-대한-기본-메서드-생성-변경" tabindex="-1">JVM에서 인터페이스 함수에 대한 기본 메서드 생성 변경 <a class="header-anchor" href="#jvm에서-인터페이스-함수에-대한-기본-메서드-생성-변경" aria-label="Permalink to &quot;JVM에서 인터페이스 함수에 대한 기본 메서드 생성 변경&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-269" target="_blank" rel="noreferrer">KTLC-269</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 바이너리</p><p><strong>간단 요약</strong>: 인터페이스에 선언된 함수는 이제 다르게 구성되지 않는 한 JVM 기본 메서드로 컴파일됩니다. 이는 관련 없는 슈퍼타입이 충돌하는 구현을 정의할 때 Java 코드에서 컴파일 오류를 일으킬 수 있습니다. 이 동작은 이제 더 이상 사용되지 않는 <code>-Xjvm-default</code> 옵션을 대체하는 안정적인 <code>-jvm-default</code> 컴파일러 옵션으로 제어됩니다. 기본 구현이 <code>DefaultImpls</code> 클래스 및 서브클래스에서만 생성되던 이전 동작을 복원하려면 <code>-jvm-default=disable</code>을 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: <code>-jvm-default</code> 컴파일러 옵션이 기본적으로 <code>enable</code>로 설정됨</li></ul></blockquote><h3 id="어노테이션-프로퍼티에-대한-필드-대상-어노테이션-금지" tabindex="-1">어노테이션 프로퍼티에 대한 필드 대상 어노테이션 금지 <a class="header-anchor" href="#어노테이션-프로퍼티에-대한-필드-대상-어노테이션-금지" aria-label="Permalink to &quot;어노테이션 프로퍼티에 대한 필드 대상 어노테이션 금지&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-7" target="_blank" rel="noreferrer">KTLC-7</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 필드 대상 어노테이션은 어노테이션 프로퍼티에서 더 이상 허용되지 않습니다. 이러한 어노테이션은 관찰 가능한 효과가 없었지만, 이 변경은 이에 의존했던 커스텀 IR 플러그인에 영향을 미칠 수 있습니다. 마이그레이션하려면 프로퍼티에서 필드 대상 어노테이션을 제거하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.1.0: 어노테이션 프로퍼티의 <code>@JvmField</code> 어노테이션이 경고와 함께 지원 중단됨</li><li>2.1.20: 어노테이션 프로퍼티의 모든 필드 대상 어노테이션에 대해 경고 보고</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h3 id="타입-별칭에-reified-타입-파라미터-금지" tabindex="-1">타입 별칭에 reified 타입 파라미터 금지 <a class="header-anchor" href="#타입-별칭에-reified-타입-파라미터-금지" aria-label="Permalink to &quot;타입 별칭에 reified 타입 파라미터 금지&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-5" target="_blank" rel="noreferrer">KTLC-5</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>reified</code> 변경자는 타입 별칭의 타입 파라미터에서 더 이상 허용되지 않습니다. reified 타입 파라미터는 인라인 함수에서만 유효하므로, 타입 별칭에서 사용해도 효과가 없었습니다. 마이그레이션하려면 <code>typealias</code> 선언에서 <code>reified</code> 변경자를 제거하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.1.0: 타입 별칭의 reified 타입 파라미터에 대해 경고 보고</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h3 id="number-및-comparable에-대한-인라인-값-클래스의-타입-검사-수정" tabindex="-1"><code>Number</code> 및 <code>Comparable</code>에 대한 인라인 값 클래스의 타입 검사 수정 <a class="header-anchor" href="#number-및-comparable에-대한-인라인-값-클래스의-타입-검사-수정" aria-label="Permalink to &quot;`Number` 및 `Comparable`에 대한 인라인 값 클래스의 타입 검사 수정&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-21" target="_blank" rel="noreferrer">KTLC-21</a></p><p><strong>컴포넌트</strong>: Kotlin/JVM</p><p><strong>비호환 변경 유형</strong>: 동작</p><p><strong>간단 요약</strong>: 인라인 값 클래스는 <code>is</code> 및 <code>as</code> 검사에서 <code>java.lang.Number</code> 또는 <code>java.lang.Comparable</code>의 구현체로 더 이상 처리되지 않습니다. 이러한 검사는 박싱된 인라인 클래스에 적용될 때 이전에 잘못된 결과를 반환했습니다. 이제 최적화는 원시 타입과 해당 래퍼에만 적용됩니다.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: 새로운 동작 활성화</li></ul></blockquote><h3 id="간접-종속성에서-접근-불가능한-제네릭-타입-금지" tabindex="-1">간접 종속성에서 접근 불가능한 제네릭 타입 금지 <a class="header-anchor" href="#간접-종속성에서-접근-불가능한-제네릭-타입-금지" aria-label="Permalink to &quot;간접 종속성에서 접근 불가능한 제네릭 타입 금지&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.com/issue/KTLC-3" target="_blank" rel="noreferrer">KTLC-3</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: K2 컴파일러는 이제 컴파일러에 보이지 않는 간접 종속성의 타입을 사용할 때 오류를 보고합니다. 이는 람다 파라미터 또는 제네릭 타입 인자와 같이 참조된 타입이 누락된 종속성으로 인해 사용할 수 없는 경우에 영향을 미칩니다.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.0.0: 람다의 접근 불가능한 제네릭 타입 및 접근 불가능한 제네릭 타입 인자의 일부 사용에 대해 오류 보고; 람다의 접근 불가능한 비제네릭 타입 및 표현식과 슈퍼타입의 접근 불가능한 타입 인자에 대해 경고 보고</li><li>2.1.0: 람다의 접근 불가능한 비제네릭 타입에 대한 경고를 오류로 격상</li><li>2.2.0: 표현식 타입의 접근 불가능한 타입 인자에 대한 경고를 오류로 격상</li></ul></blockquote><h3 id="타입-파라미터-바운드에-대한-가시성-검사-강제" tabindex="-1">타입 파라미터 바운드에 대한 가시성 검사 강제 <a class="header-anchor" href="#타입-파라미터-바운드에-대한-가시성-검사-강제" aria-label="Permalink to &quot;타입 파라미터 바운드에 대한 가시성 검사 강제&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.com/issue/KTLC-274" target="_blank" rel="noreferrer">KTLC-274</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 함수와 프로퍼티는 선언 자체보다 더 제한적인 가시성을 가진 타입 파라미터 바운드를 더 이상 사용할 수 없습니다. 이는 이전에 오류 없이 컴파일되었지만 일부 경우 런타임 실패 또는 IR 유효성 검사 오류로 이어졌던 접근 불가능한 타입을 간접적으로 노출하는 것을 방지합니다.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.1.0: 타입 파라미터가 선언의 가시성 범위에서 보이지 않는 바운드를 가질 때 경고 보고</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h3 id="비공개-인라인-함수에서-비공개-타입-노출-시-오류-보고" tabindex="-1">비공개 인라인 함수에서 비공개 타입 노출 시 오류 보고 <a class="header-anchor" href="#비공개-인라인-함수에서-비공개-타입-노출-시-오류-보고" aria-label="Permalink to &quot;비공개 인라인 함수에서 비공개 타입 노출 시 오류 보고&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-70916" target="_blank" rel="noreferrer">KT-70916</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 비공개 인라인 함수에서 비공개 타입, 함수 또는 프로퍼티에 접근하는 것이 더 이상 허용되지 않습니다. 마이그레이션하려면 비공개 엔티티 참조를 피하거나, 함수를 비공개로 만들거나, <code>inline</code> 변경자를 제거하십시오. <code>inline</code>을 제거하면 바이너리 호환성이 깨집니다.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: 비공개 인라인 함수에서 비공개 타입 또는 멤버에 접근할 때 오류 보고</li></ul></blockquote><h3 id="파라미터의-기본값으로-사용되는-람다에서-비지역-반환-금지" tabindex="-1">파라미터의 기본값으로 사용되는 람다에서 비지역 반환 금지 <a class="header-anchor" href="#파라미터의-기본값으로-사용되는-람다에서-비지역-반환-금지" aria-label="Permalink to &quot;파라미터의 기본값으로 사용되는 람다에서 비지역 반환 금지&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KTLC-286" target="_blank" rel="noreferrer">KTLC-286</a></p><p><strong>컴포넌트</strong>: 코어 언어</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 파라미터의 기본값으로 사용되는 람다에서 비지역 반환문이 더 이상 허용되지 않습니다. 이 패턴은 이전에 컴파일되었지만 런타임 충돌로 이어졌습니다. 마이그레이션하려면 비지역 반환을 피하도록 람다를 다시 작성하거나 로직을 기본값 외부로 옮기십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: 파라미터의 기본값으로 사용되는 람다의 비지역 반환에 대해 오류 보고</li></ul></blockquote><h2 id="표준-라이브러리" tabindex="-1">표준 라이브러리 <a class="header-anchor" href="#표준-라이브러리" aria-label="Permalink to &quot;표준 라이브러리&quot;">​</a></h2><h3 id="kotlin-native-throws-지원-중단" tabindex="-1"><code>kotlin.native.Throws</code> 지원 중단 <a class="header-anchor" href="#kotlin-native-throws-지원-중단" aria-label="Permalink to &quot;`kotlin.native.Throws` 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-72137" target="_blank" rel="noreferrer">KT-72137</a></p><p><strong>컴포넌트</strong>: Kotlin/Native</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>kotlin.native.Throws</code>는 더 이상 사용되지 않습니다; 대신 일반 <a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin/-throws/" target="_blank" rel="noreferrer"><code>kotlin.Throws</code></a> 어노테이션을 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>1.9.0: <code>kotlin.native.Throws</code> 사용 시 경고 보고</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h3 id="abstractdoubletimesource-지원-중단" tabindex="-1"><code>AbstractDoubleTimeSource</code> 지원 중단 <a class="header-anchor" href="#abstractdoubletimesource-지원-중단" aria-label="Permalink to &quot;`AbstractDoubleTimeSource` 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-72137" target="_blank" rel="noreferrer">KT-72137</a></p><p><strong>컴포넌트</strong>: kotlin-stdlib</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>AbstractDoubleTimeSource</code>는 더 이상 사용되지 않습니다; 대신 <a href="https://kotlinlang.org/api/core/kotlin-stdlib/kotlin.time/-abstract-long-time-source/" target="_blank" rel="noreferrer"><code>AbstractLongTimeSource</code></a>를 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>1.8.20: <code>AbstractDoubleTimeSource</code> 사용 시 경고 보고</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h2 id="도구" tabindex="-1">도구 <a class="header-anchor" href="#도구" aria-label="Permalink to &quot;도구&quot;">​</a></h2><h3 id="소스를-대체하도록-kotlincompiletool의-setsource-함수-수정" tabindex="-1">소스를 대체하도록 <code>KotlinCompileTool</code>의 <code>setSource()</code> 함수 수정 <a class="header-anchor" href="#소스를-대체하도록-kotlincompiletool의-setsource-함수-수정" aria-label="Permalink to &quot;소스를 대체하도록 `KotlinCompileTool`의 `setSource()` 함수 수정&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-59632" target="_blank" rel="noreferrer">KT-59632</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 동작</p><p><strong>간단 요약</strong>: <a href="https://kotlinlang.org/api/kotlin-gradle-plugin/kotlin-gradle-plugin-api/org.jetbrains.kotlin.gradle.tasks/-kotlin-compile-tool/#" target="_blank" rel="noreferrer"><code>KotlinCompileTool</code></a> 인터페이스의 <a href="https://kotlinlang.org/api/kotlin-gradle-plugin/kotlin-gradle-plugin-api/org.jetbrains.kotlin.gradle.tasks/-kotlin-compile-tool/set-source.html#" target="_blank" rel="noreferrer"><code>setSource()</code></a> 함수는 이제 소스를 추가하는 대신 구성된 소스를 대체합니다. 기존 소스를 대체하지 않고 소스를 추가하려면 <a href="https://kotlinlang.org/api/kotlin-gradle-plugin/kotlin-gradle-plugin-api/org.jetbrains.kotlin.gradle.tasks/-kotlin-compile-tool/source.html#" target="_blank" rel="noreferrer"><code>source()</code></a> 함수를 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: 새로운 동작 활성화</li></ul></blockquote><h3 id="kotlincompilationoutput-resourcesdirprovider-프로퍼티-지원-중단" tabindex="-1"><code>KotlinCompilationOutput#resourcesDirProvider</code> 프로퍼티 지원 중단 <a class="header-anchor" href="#kotlincompilationoutput-resourcesdirprovider-프로퍼티-지원-중단" aria-label="Permalink to &quot;`KotlinCompilationOutput#resourcesDirProvider` 프로퍼티 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-70620" target="_blank" rel="noreferrer">KT-70620</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>KotlinCompilationOutput#resourcesDirProvider</code> 프로퍼티는 더 이상 사용되지 않습니다. 추가 리소스 디렉터리를 추가하려면 Gradle 빌드 스크립트에서 <a href="https://kotlinlang.org/api/kotlin-gradle-plugin/kotlin-gradle-plugin-api/org.jetbrains.kotlin.gradle.plugin/-kotlin-source-set/resources.html" target="_blank" rel="noreferrer"><code>KotlinSourceSet.resources</code></a>를 대신 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.1.0: <code>KotlinCompilationOutput#resourcesDirProvider</code>가 경고와 함께 지원 중단됨</li><li>2.2.0: 경고를 오류로 격상</li></ul></blockquote><h3 id="basekapt-annotationprocessoroptionproviders-프로퍼티-지원-중단" tabindex="-1"><code>BaseKapt.annotationProcessorOptionProviders</code> 프로퍼티 지원 중단 <a class="header-anchor" href="#basekapt-annotationprocessoroptionproviders-프로퍼티-지원-중단" aria-label="Permalink to &quot;`BaseKapt.annotationProcessorOptionProviders` 프로퍼티 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-58009" target="_blank" rel="noreferrer">KT-58009</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <a href="https://kotlinlang.org/api/kotlin-gradle-plugin/kotlin-gradle-plugin-api/org.jetbrains.kotlin.gradle.tasks/-base-kapt/annotation-processor-option-providers.html#" target="_blank" rel="noreferrer"><code>BaseKapt.annotationProcessorOptionProviders</code></a> 프로퍼티는 <code>MutableList&lt;Any&gt;</code> 대신 <code>ListProperty&lt;CommandLineArgumentProvider&gt;</code>를 허용하는 <code>BaseKapt.annotationProcessorOptionsProviders</code>를 선호하여 더 이상 사용되지 않습니다. 이는 예상되는 요소 타입을 명확하게 정의하고 중첩된 리스트와 같은 잘못된 요소 추가로 인한 런타임 실패를 방지합니다. 현재 코드가 리스트를 단일 요소로 추가하는 경우, <code>add()</code> 함수를 <code>addAll()</code> 함수로 대체하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: API에서 새로운 타입을 강제 적용</li></ul></blockquote><h3 id="kotlin-android-extensions-플러그인-지원-중단" tabindex="-1"><code>kotlin-android-extensions</code> 플러그인 지원 중단 <a class="header-anchor" href="#kotlin-android-extensions-플러그인-지원-중단" aria-label="Permalink to &quot;`kotlin-android-extensions` 플러그인 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-72341/" target="_blank" rel="noreferrer">KT-72341</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>kotlin-android-extensions</code> 플러그인은 더 이상 사용되지 않습니다. 대신 <code>Parcelable</code> 구현 생성기에는 별도의 플러그인인 <a href="https://plugins.gradle.org/plugin/org.jetbrains.kotlin.plugin.parcelize" target="_blank" rel="noreferrer"><code>kotlin-parcelize</code></a>를, 합성 뷰에는 Android Jetpack의 <a href="https://developer.android.com/topic/libraries/view-binding" target="_blank" rel="noreferrer">뷰 바인딩</a>을 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>1.4.20: 플러그인 지원 중단</li><li>2.1.20: 구성 오류가 발생하며 플러그인 코드는 실행되지 않음</li><li>2.2.0: 플러그인 코드 제거</li></ul></blockquote><h3 id="kotlinoptions-dsl-지원-중단" tabindex="-1"><code>kotlinOptions</code> DSL 지원 중단 <a class="header-anchor" href="#kotlinoptions-dsl-지원-중단" aria-label="Permalink to &quot;`kotlinOptions` DSL 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-54110" target="_blank" rel="noreferrer">KT-54110</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>kotlinOptions</code> DSL 및 관련 <code>KotlinCompile&lt;KotlinOptions&gt;</code> 태스크 인터페이스를 통한 컴파일러 옵션 구성 기능이 새로운 <code>compilerOptions</code> DSL을 선호하여 더 이상 사용되지 않습니다. 이 지원 중단의 일환으로, <code>kotlinOptions</code> 인터페이스의 모든 프로퍼티도 이제 개별적으로 더 이상 사용되지 않는 것으로 표시됩니다. 마이그레이션하려면 <code>compilerOptions</code> DSL을 사용하여 컴파일러 옵션을 구성하십시오. 마이그레이션 지침은 <a href="/ko/kotlin/gradle-compiler-options#migrate-from-kotlinoptions-to-compileroptions"><code>kotlinOptions {}</code>에서 <code>compilerOptions {}</code>로 마이그레이션</a>을 참조하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.0.0: <code>kotlinOptions</code> DSL에 대해 경고 보고</li><li>2.2.0: 경고를 오류로 격상하고 <code>kotlinOptions</code>의 모든 프로퍼티 지원 중단</li></ul></blockquote><h3 id="kotlin-incremental-useclasspathsnapshot-프로퍼티-제거" tabindex="-1"><code>kotlin.incremental.useClasspathSnapshot</code> 프로퍼티 제거 <a class="header-anchor" href="#kotlin-incremental-useclasspathsnapshot-프로퍼티-제거" aria-label="Permalink to &quot;`kotlin.incremental.useClasspathSnapshot` 프로퍼티 제거&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-62963" target="_blank" rel="noreferrer">KT-62963</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>kotlin.incremental.useClasspathSnapshot</code> Gradle 프로퍼티가 제거됩니다. 이 프로퍼티는 Kotlin 1.8.20부터 기본적으로 활성화된 클래스패스 기반 접근 방식으로 대체된 더 이상 사용되지 않는 JVM 기록 기반 점진적 컴파일 모드를 제어했습니다.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.0.20: <code>kotlin.incremental.useClasspathSnapshot</code> 프로퍼티를 경고와 함께 지원 중단</li><li>2.2.0: 프로퍼티 제거</li></ul></blockquote><h3 id="kotlin-스크립팅-지원-중단" tabindex="-1">Kotlin 스크립팅 지원 중단 <a class="header-anchor" href="#kotlin-스크립팅-지원-중단" aria-label="Permalink to &quot;Kotlin 스크립팅 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-71685" target="_blank" rel="noreferrer">KT-71685</a>, <a href="https://youtrack.jetbrains.com/issue/KT-75632/" target="_blank" rel="noreferrer">KT-75632</a>, <a href="https://youtrack.jetbrains.com/issue/KT-76196/" target="_blank" rel="noreferrer">KT-76196</a>.</p><p><strong>컴포넌트</strong>: 스크립팅</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: Kotlin 2.2.0은 다음 지원을 중단합니다:</p><ul><li>REPL: <code>kotlinc</code>를 통해 REPL을 계속 사용하려면 <code>-Xrepl</code> 컴파일러 옵션을 사용하여 옵트인하십시오.</li><li>JSR-223: <a href="https://jcp.org/en/jsr/detail?id=223" target="_blank" rel="noreferrer">JSR</a>이 <strong>철회됨</strong> 상태이기 때문입니다. JSR-223 구현은 언어 버전 1.9에서 계속 작동하지만, 향후 K2 컴파일러로 마이그레이션할 계획은 없습니다.</li><li><code>KotlinScriptMojo</code> Maven 플러그인. 계속 사용하면 컴파일러 경고가 표시됩니다.</li></ul><p>자세한 내용은 <a href="https://blog.jetbrains.com/kotlin/2024/11/state-of-kotlin-scripting-2024/" target="_blank" rel="noreferrer">블로그 게시물</a>을 참조하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.1.0: <code>kotlinc</code>에서 REPL 사용을 경고와 함께 지원 중단</li><li>2.2.0: <code>kotlinc</code>를 통해 REPL을 사용하려면 <code>-Xrepl</code> 컴파일러 옵션을 사용하여 옵트인하십시오; JSR-223 지원 중단, 언어 버전 1.9로 전환하여 지원을 복원할 수 있습니다; <code>KotlinScriptMojo</code> Maven 플러그인 지원 중단</li></ul></blockquote><h3 id="모호성-해소-분류자-프로퍼티-지원-중단" tabindex="-1">모호성 해소 분류자 프로퍼티 지원 중단 <a class="header-anchor" href="#모호성-해소-분류자-프로퍼티-지원-중단" aria-label="Permalink to &quot;모호성 해소 분류자 프로퍼티 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-58231" target="_blank" rel="noreferrer">KT-58231</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: Kotlin Gradle 플러그인이 소스 세트 이름과 IDE 임포트를 명확히 하는 방법을 제어하는 데 사용되던 옵션이 더 이상 사용되지 않습니다. 따라서 <code>KotlinTarget</code> 인터페이스에서 다음 프로퍼티는 더 이상 사용되지 않습니다:</p><ul><li><code>useDisambiguationClassifierAsSourceSetNamePrefix</code></li><li><code>overrideDisambiguationClassifierOnIdeImport</code></li></ul><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.0.0: Gradle 프로퍼티 사용 시 경고 보고</li><li>2.1.0: 이 경고를 오류로 격상</li><li>2.2.0: Gradle 프로퍼티 제거</li></ul></blockquote><h3 id="공통화-commonization-파라미터-지원-중단" tabindex="-1">공통화(commonization) 파라미터 지원 중단 <a class="header-anchor" href="#공통화-commonization-파라미터-지원-중단" aria-label="Permalink to &quot;공통화(commonization) 파라미터 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-75161" target="_blank" rel="noreferrer">KT-75161</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 실험적인 공통화 모드에 대한 파라미터는 Kotlin Gradle 플러그인에서 더 이상 사용되지 않습니다. 이러한 파라미터는 유효하지 않은 컴파일 아티팩트를 생성하며, 이 아티팩트가 캐시될 수 있습니다. 영향을 받는 아티팩트를 삭제하려면 다음을 수행하십시오:</p><ol><li><p><code>gradle.properties</code> 파일에서 다음 옵션을 제거하십시오:</p><div class="language-none vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">none</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kotlin.mpp.enableOptimisticNumberCommonization</span></span>\n<span class="line"><span>kotlin.mpp.enablePlatformIntegerCommonization</span></span></code></pre></div></li><li><p><code>~/.konan/*/klib/commonized</code> 디렉터리에서 공통화 캐시를 지우거나 다음 명령을 실행하십시오:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cleanNativeDistributionCommonization</span></span></code></pre></div></li></ol><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: 공통화 파라미터를 오류와 함께 지원 중단</li><li>2.2.20: 공통화 파라미터 제거</li></ul></blockquote><h3 id="레거시-메타데이터-컴파일-지원-중단" tabindex="-1">레거시 메타데이터 컴파일 지원 중단 <a class="header-anchor" href="#레거시-메타데이터-컴파일-지원-중단" aria-label="Permalink to &quot;레거시 메타데이터 컴파일 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-61817" target="_blank" rel="noreferrer">KT-61817</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 계층적 구조를 설정하고 공통 소스 세트와 중간 소스 세트 사이에 중간 소스 세트를 생성하는 데 사용되던 옵션이 더 이상 사용되지 않습니다. 다음 컴파일러 옵션이 제거됩니다:</p><ul><li><code>isCompatibilityMetadataVariantEnabled</code></li><li><code>withGranularMetadata</code></li><li><code>isKotlinGranularMetadataEnabled</code></li></ul><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: Kotlin Gradle 플러그인에서 컴파일러 옵션 제거</li></ul></blockquote><h3 id="kotlincompilation-source-api-지원-중단" tabindex="-1"><code>KotlinCompilation.source</code> API 지원 중단 <a class="header-anchor" href="#kotlincompilation-source-api-지원-중단" aria-label="Permalink to &quot;`KotlinCompilation.source` API 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-64991" target="_blank" rel="noreferrer">KT-64991</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: Kotlin 소스 세트를 Kotlin 컴파일에 직접 추가할 수 있었던 <code>KotlinCompilation.source</code> API에 대한 접근이 더 이상 사용되지 않습니다.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>1.9.0: <code>KotlinCompilation.source</code> 사용 시 경고 보고</li><li>1.9.20: 이 경고를 오류로 격상</li><li>2.2.0: Kotlin Gradle 플러그인에서 <code>KotlinCompilation.source</code> 제거; 사용 시 빌드스크립트 컴파일 중 &quot;확인되지 않은 참조(unresolved reference)&quot; 오류 발생</li></ul></blockquote><h3 id="타겟-프리셋-api-지원-중단" tabindex="-1">타겟 프리셋 API 지원 중단 <a class="header-anchor" href="#타겟-프리셋-api-지원-중단" aria-label="Permalink to &quot;타겟 프리셋 API 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-71698" target="_blank" rel="noreferrer">KT-71698</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: Kotlin Multiplatform 타겟에 대한 타겟 프리셋은 더 이상 사용되지 않습니다; <code>jvm()</code> 또는 <code>iosSimulatorArm64()</code>와 같은 타겟 DSL 함수가 이제 동일한 사용 사례를 처리합니다. 모든 프리셋 관련 API는 더 이상 사용되지 않습니다:</p><ul><li><code>org.jetbrains.kotlin.gradle.dsl.KotlinMultiplatformExtension</code>의 <code>presets</code> 프로퍼티</li><li><code>org.jetbrains.kotlin.gradle.plugin.KotlinTargetPreset</code> 인터페이스 및 모든 상속자</li><li><code>fromPreset</code> 오버로드</li></ul><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>1.9.20: 프리셋 관련 API 사용 시 경고 보고</li><li>2.0.0: 이 경고를 오류로 격상</li><li>2.2.0: Kotlin Gradle 플러그인의 공개 API에서 프리셋 관련 API 제거; 여전히 이를 사용하는 소스는 &quot;확인되지 않은 참조&quot; 오류로 실패하며, 바이너리(예: Gradle 플러그인)는 최신 버전의 Kotlin Gradle 플러그인에 대해 다시 컴파일되지 않는 한 링크 오류로 실패할 수 있습니다.</li></ul></blockquote><h3 id="apple-타겟-단축키-지원-중단" tabindex="-1">Apple 타겟 단축키 지원 중단 <a class="header-anchor" href="#apple-타겟-단축키-지원-중단" aria-label="Permalink to &quot;Apple 타겟 단축키 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-70615" target="_blank" rel="noreferrer">KT-70615</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: Kotlin Multiplatform DSL에서 <code>ios()</code>, <code>watchos()</code>, <code>tvos()</code> 타겟 단축키는 더 이상 사용되지 않습니다. 이 단축키는 Apple 타겟에 대한 소스 세트 계층을 부분적으로 생성하도록 설계되었습니다. Kotlin Multiplatform Gradle 플러그인은 이제 내장 계층 템플릿을 제공합니다. 단축키 대신 타겟 목록을 지정하면 플러그인이 자동으로 중간 소스 세트를 설정합니다.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>1.9.20: 타겟 단축키 사용 시 경고 보고; 기본 계층 템플릿이 대신 기본적으로 활성화됨</li><li>2.1.0: 타겟 단축키 사용 시 오류 보고</li><li>2.2.0: Kotlin Multiplatform Gradle 플러그인에서 타겟 단축키 DSL 제거</li></ul></blockquote><h3 id="publishalllibraryvariants-함수-지원-중단" tabindex="-1"><code>publishAllLibraryVariants()</code> 함수 지원 중단 <a class="header-anchor" href="#publishalllibraryvariants-함수-지원-중단" aria-label="Permalink to &quot;`publishAllLibraryVariants()` 함수 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-60623" target="_blank" rel="noreferrer">KT-60623</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>publishAllLibraryVariants()</code> 함수는 더 이상 사용되지 않습니다. 이 함수는 Android 타겟에 대한 모든 빌드 변형을 게시하도록 설계되었습니다. 현재 이 접근 방식은 권장되지 않습니다. 특히 여러 플레이버와 빌드 타입이 사용될 때 변형 해결에 문제를 일으킬 수 있기 때문입니다. 대신 빌드 변형을 지정하는 <code>publishLibraryVariants()</code> 함수를 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: <code>publishAllLibraryVariants()</code> 지원 중단</li></ul></blockquote><h3 id="android-타겟-지원-중단" tabindex="-1"><code>android</code> 타겟 지원 중단 <a class="header-anchor" href="#android-타겟-지원-중단" aria-label="Permalink to &quot;`android` 타겟 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-71608" target="_blank" rel="noreferrer">KT-71608</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 현재 Kotlin DSL에서 <code>android</code> 타겟 이름은 더 이상 사용되지 않습니다. 대신 <code>androidTarget</code>를 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>1.9.0: Kotlin Multiplatform 프로젝트에서 <code>android</code> 이름 사용 시 지원 중단 경고 도입</li><li>2.1.0: 이 경고를 오류로 격상</li><li>2.2.0: Kotlin Multiplatform Gradle 플러그인에서 <code>android</code> 타겟 DSL 제거</li></ul></blockquote><h3 id="cinteropprocess의-konanversion-지원-중단" tabindex="-1"><code>CInteropProcess</code>의 <code>konanVersion</code> 지원 중단 <a class="header-anchor" href="#cinteropprocess의-konanversion-지원-중단" aria-label="Permalink to &quot;`CInteropProcess`의 `konanVersion` 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-71069" target="_blank" rel="noreferrer">KT-71069</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>CInteropProcess</code> 태스크의 <code>konanVersion</code> 프로퍼티는 더 이상 사용되지 않습니다. 대신 <code>CInteropProcess.kotlinNativeVersion</code>을 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.1.0: <code>konanVersion</code> 프로퍼티 사용 시 경고 보고</li><li>2.2.0: 이 경고를 오류로 격상</li><li>2.3.0: Kotlin Gradle 플러그인에서 <code>konanVersion</code> 프로퍼티 제거</li></ul></blockquote><h3 id="cinteropprocess의-destinationdir-지원-중단" tabindex="-1"><code>CInteropProcess</code>의 <code>destinationDir</code> 지원 중단 <a class="header-anchor" href="#cinteropprocess의-destinationdir-지원-중단" aria-label="Permalink to &quot;`CInteropProcess`의 `destinationDir` 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-71068" target="_blank" rel="noreferrer">KT-71068</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: <code>CInteropProcess</code> 태스크의 <code>destinationDir</code> 프로퍼티는 더 이상 사용되지 않습니다. 대신 <code>CInteropProcess.destinationDirectory.set()</code> 함수를 사용하십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.1.0: <code>destinationDir</code> 프로퍼티 사용 시 경고 보고</li><li>2.2.0: 이 경고를 오류로 격상</li><li>2.3.0: Kotlin Gradle 플러그인에서 <code>destinationDir</code> 프로퍼티 제거</li></ul></blockquote><h3 id="kotlinartifacts-api-지원-중단" tabindex="-1"><code>kotlinArtifacts</code> API 지원 중단 <a class="header-anchor" href="#kotlinartifacts-api-지원-중단" aria-label="Permalink to &quot;`kotlinArtifacts` API 지원 중단&quot;">​</a></h3><blockquote><p><strong>이슈</strong>: <a href="https://youtrack.jetbrains.com/issue/KT-74953" target="_blank" rel="noreferrer">KT-74953</a></p><p><strong>컴포넌트</strong>: Gradle</p><p><strong>비호환 변경 유형</strong>: 소스</p><p><strong>간단 요약</strong>: 실험적인 <code>kotlinArtifacts</code> API는 더 이상 사용되지 않습니다. Kotlin Gradle 플러그인에서 사용 가능한 현재 DSL을 사용하여 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-build-native-binaries.html" target="_blank" rel="noreferrer">최종 네이티브 바이너리를 빌드</a>하십시오. 마이그레이션에 충분하지 않다면, <a href="https://youtrack.jetbrains.com/issue/KT-74953" target="_blank" rel="noreferrer">이 YouTrack 이슈</a>에 코멘트를 남겨주십시오.</p><p><strong>단계별 지원 중단 주기</strong>:</p><ul><li>2.2.0: <code>kotlinArtifacts</code> API 사용 시 경고 보고</li><li>2.3.0: 이 경고를 오류로 격상</li></ul></blockquote>',72)]))}const h=e(n,[["render",l]]);export{u as __pageData,h as default};
