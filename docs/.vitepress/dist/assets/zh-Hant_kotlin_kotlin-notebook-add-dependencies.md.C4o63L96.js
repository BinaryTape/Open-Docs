import{_ as n}from"./chunks/icon-1-done.ZX9lW-aj.js";import{_ as l}from"./chunks/icon-2-done.DCMUaFG5.js";import{_ as e}from"./chunks/icon-3.BwKvTetO.js";import{_ as p,a as o,b as k}from"./chunks/kandy-library.BjUNQ4SJ.js";import{_ as h,C as r,c as d,o as E,j as s,G as c,ag as g,a,w as y}from"./chunks/framework.Bksy39di.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-Hant/kotlin/kotlin-notebook-add-dependencies.md","filePath":"zh-Hant/kotlin/kotlin-notebook-add-dependencies.md","lastUpdated":1754307826000}'),b={name:"zh-Hant/kotlin/kotlin-notebook-add-dependencies.md"};function m(u,i,F,f,D,C){const t=r("tldr");return E(),d("div",null,[i[1]||(i[1]=s("h1",{id:"將依賴項新增至您的-kotlin-notebook",tabindex:"-1"},[a("將依賴項新增至您的 Kotlin Notebook "),s("a",{class:"header-anchor",href:"#將依賴項新增至您的-kotlin-notebook","aria-label":'Permalink to "將依賴項新增至您的 Kotlin Notebook"'},"​")],-1)),c(t,null,{default:y(()=>i[0]||(i[0]=[s("p",null,[a("這是《"),s("strong",null,"Kotlin Notebook 入門指南"),a("》教學的第三部分。在繼續之前，請確保您已完成先前的步驟。")],-1),s("p",null,[s("img",{src:n,width:"20",alt:"First step"}),a(),s("a",{href:"/zh-Hant/kotlin/kotlin-notebook-set-up-env"},"設定環境"),s("br"),s("img",{src:l,width:"20",alt:"Second step"}),a(),s("a",{href:"/zh-Hant/kotlin/kotlin-notebook-create"},"建立 Kotlin Notebook"),s("br"),s("img",{src:e,width:"20",alt:"Third step"}),a(),s("strong",null,"將依賴項新增至 Kotlin Notebook"),s("br")],-1)])),_:1}),i[2]||(i[2]=g(`<p>您已經建立您的第一個 <a href="/zh-Hant/kotlin/kotlin-notebook-overview">Kotlin Notebook</a>！現在讓我們學習如何將依賴項新增至程式庫，這對於解鎖進階功能是必要的。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>Kotlin 標準程式庫可以直接使用，因此您無需匯入它。</p></div><p>您可以透過在任何程式碼單元中，使用 Gradle 風格的語法指定程式庫的座標，從 Maven 儲存庫載入任何程式庫。 然而，Kotlin Notebook 提供了一種簡化的方法，以 <a href="https://www.jetbrains.com/help/idea/kotlin-notebook.html#import-libraries" target="_blank" rel="noreferrer"><code>%use</code> 語句</a> 的形式載入常用程式庫：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 將 libraryName 替換為您想新增的程式庫依賴項</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use libraryName</span></span></code></pre></div><p>您也可以使用 Kotlin Notebook 中的自動完成功能，快速存取可用的程式庫：</p><p><img src="`+p+`" alt="Kotlin Notebook 中的自動完成功能" width="700"></p><h2 id="將-kotlin-dataframe-和-kandy-程式庫新增至您的-kotlin-notebook" tabindex="-1">將 Kotlin DataFrame 和 Kandy 程式庫新增至您的 Kotlin Notebook <a class="header-anchor" href="#將-kotlin-dataframe-和-kandy-程式庫新增至您的-kotlin-notebook" aria-label="Permalink to &quot;將 Kotlin DataFrame 和 Kandy 程式庫新增至您的 Kotlin Notebook&quot;">​</a></h2><p>讓我們將兩個常用的 Kotlin 程式庫依賴項新增至您的 Kotlin Notebook：</p><ul><li><a href="https://kotlin.github.io/dataframe/gettingstarted.html" target="_blank" rel="noreferrer">Kotlin DataFrame 程式庫</a> 讓您能夠在 Kotlin 專案中操控資料。 您可以使用它從 <a href="/zh-Hant/kotlin/data-analysis-work-with-api">API</a>、<a href="/zh-Hant/kotlin/data-analysis-connect-to-db">SQL 資料庫</a> 和<a href="/zh-Hant/kotlin/data-analysis-work-with-data-sources">各種檔案格式</a> (例如 CSV 或 JSON) 擷取資料。</li><li><a href="https://kotlin.github.io/kandy/welcome.html" target="_blank" rel="noreferrer">Kandy 程式庫</a> 提供強大且靈活的 DSL，用於<a href="/zh-Hant/kotlin/data-analysis-visualization">建立圖表</a>。</li></ul><p>若要新增這些程式庫：</p><ol><li><p>點擊 <strong>Add Code Cell</strong> 以建立新的程式碼單元。</p></li><li><p>在程式碼單元中輸入以下程式碼：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 確保使用最新可用的程式庫版本</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">useLatestDescriptors</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 匯入 Kotlin DataFrame 程式庫</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use dataframe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 匯入 Kotlin Kandy 程式庫</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use kandy</span></span></code></pre></div></li><li><p>執行程式碼單元。</p><p>當 <code>%use</code> 語句執行時，它會下載程式庫依賴項，並將預設匯入新增至您的 Notebook。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>請務必在執行任何其他依賴該程式庫的程式碼單元之前，先執行包含 <code>%use libraryName</code> 行的程式碼單元。</p></div></li><li><p>若要使用 Kotlin DataFrame 程式庫從 CSV 檔案匯入資料，請在新的程式碼單元中使用 <code>.read()</code> 函數：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 透過從 &quot;netflix_titles.csv&quot; 檔案匯入資料來建立 DataFrame。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rawDf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrame.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;netflix_titles.csv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 顯示原始 DataFrame 資料</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rawDf</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>您可以從 <a href="https://github.com/Kotlin/dataframe/blob/master/examples/notebooks/netflix/netflix_titles.csv" target="_blank" rel="noreferrer">Kotlin DataFrame 範例 GitHub 儲存庫</a> 下載此範例 CSV。 將其新增至您的專案目錄。</p></div><p><img src="`+o+`" alt="使用 DataFrame 顯示資料" width="700"></p></li><li><p>在新的程式碼單元中，使用 <code>.plot</code> 方法以視覺化方式呈現您的 DataFrame 中電視節目和電影的分布：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rawDf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 計算名為 &quot;type&quot; 的欄位中每個唯一值的出現次數</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">valueCounts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sort </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { type }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 以長條圖視覺化資料並指定顏色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        bars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            fillColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                scale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> categorical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#00BCD4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Color.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#009688&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 設定圖表的版面配置並設定標題</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Count of TV Shows and Movies&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">550</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div></li></ol><p>結果圖表：</p><p><img src="`+k+'" alt="使用 Kandy 程式庫進行視覺化" width="700"></p><p>恭喜您在 Kotlin Notebook 中新增並利用這些程式庫！ 這只是初步了解您可以使用 Kotlin Notebook 及其<a href="/zh-Hant/kotlin/data-analysis-libraries">支援的程式庫</a> 達成什麼。</p><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><ul><li>學習如何<a href="/zh-Hant/kotlin/kotlin-notebook-share">分享您的 Kotlin Notebook</a></li><li>查看有關<a href="https://www.jetbrains.com/help/idea/kotlin-notebook.html#add-dependencies" target="_blank" rel="noreferrer">將依賴項新增至您的 Kotlin Notebook</a> 的更多詳細資訊</li><li>如需使用 Kotlin DataFrame 程式庫的更詳盡指南，請參閱<a href="/zh-Hant/kotlin/data-analysis-work-with-data-sources">從檔案擷取資料</a></li><li>如需有關可供 Kotlin 中的資料科學和分析使用的工具和資源的詳盡概述，請參閱<a href="/zh-Hant/kotlin/data-analysis-libraries">用於資料分析的 Kotlin 和 Java 程式庫</a></li></ul>',16))])}const B=h(b,[["render",m]]);export{w as __pageData,B as default};
