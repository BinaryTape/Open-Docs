import{_ as u,C as r,c as y,o as v,G as e,ag as k,j as i,w as a,a as t}from"./chunks/framework.Bksy39di.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/server-metrics-micrometer.md","filePath":"ja/ktor/server-metrics-micrometer.md","lastUpdated":1755457140000}'),F={name:"ja/ktor/server-metrics-micrometer.md"};function f(b,s,_,C,M,B){const h=r("TopicTitle"),d=r("show-structure"),c=r("primary-label"),o=r("Links"),E=r("tldr"),m=r("link-summary"),n=r("code-block"),l=r("TabItem"),p=r("Tabs"),g=r("list");return v(),y("div",null,[e(h,{labelRef:"server-plugin",title:"Micrometer メトリクス"}),e(d,{for:"chapter",depth:"2"}),e(c,{ref:"server-plugin"},null,512),e(E,null,{default:a(()=>[s[3]||(s[3]=i("p",null,[i("b",null,"必須依存関係"),t(": "),i("code",null,"io.ktor:ktor-server-metrics-micrometer")],-1)),s[4]||(s[4]=i("p",null,[i("b",null,"コード例"),t(": "),i("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/micrometer-metrics"}," micrometer-metrics ")],-1)),i("p",null,[i("b",null,[e(o,{href:"/ktor/server-native",summary:"KtorはKotlin/Nativeをサポートしており、追加のランタイムや仮想マシンなしでサーバーを実行できます。"},{default:a(()=>s[0]||(s[0]=[t("ネイティブサーバー")])),_:1}),s[1]||(s[1]=t("のサポート"))]),s[2]||(s[2]=t(": ✖️ "))])]),_:1}),e(m,null,{default:a(()=>s[5]||(s[5]=[t("MicrometerMetricsプラグインは、KtorサーバーアプリケーションでMicrometerメトリクスを有効にし、Prometheus、JMX、Elasticなどの必要な監視システムを選択できるようにします。")])),_:1}),s[21]||(s[21]=k("",3)),i("ul",null,[i("li",null,[s[6]||(s[6]=i("p",null,[i("code",null,"ktor-server-metrics-micrometer"),t("の依存関係を追加します。")],-1)),e(p,{group:"languages"},{default:a(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(n,{lang:"Kotlin",code:'              implementation("io.ktor:ktor-server-metrics-micrometer:$ktor_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(n,{lang:"Groovy",code:'              implementation "io.ktor:ktor-server-metrics-micrometer:$ktor_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:a(()=>[e(n,{lang:"XML",code:`              <dependency>
                  <groupId>io.ktor</groupId>
                  <artifactId>ktor-server-metrics-micrometer-jvm</artifactId>
                  <version>\${ktor_version}</version>
              </dependency>`})]),_:1})]),_:1})]),i("li",null,[s[7]||(s[7]=i("p",null,"監視システムに必要な依存関係を追加します。以下の例は、Prometheus用のアーティファクトを追加する方法を示しています。",-1)),e(p,{group:"languages"},{default:a(()=>[e(l,{title:"Gradle (Kotlin)","group-key":"kotlin"},{default:a(()=>[e(n,{lang:"Kotlin",code:'              implementation("io.micrometer:micrometer-registry-prometheus:$prometheus_version")'})]),_:1}),e(l,{title:"Gradle (Groovy)","group-key":"groovy"},{default:a(()=>[e(n,{lang:"Groovy",code:'              implementation "io.micrometer:micrometer-registry-prometheus:$prometheus_version"'})]),_:1}),e(l,{title:"Maven","group-key":"maven"},{default:a(()=>[e(n,{lang:"XML",code:`              <dependency>
                  <groupId>io.micrometer</groupId>
                  <artifactId>micrometer-registry-prometheus</artifactId>
                  <version>\${prometheus_version}</version>
              </dependency>`})]),_:1})]),_:1}),s[8]||(s[8]=i("p",null,[i("code",null,"$prometheus_version"),t("は、"),i("code",null,"micrometer-registry-prometheus"),t("アーティファクトの必要なバージョンに置き換えることができます。例: "),i("code",null,"1.10.3"),t("。")],-1))])]),s[22]||(s[22]=i("h2",{id:"install_plugin",tabindex:"-1"},[t("MicrometerMetrics をインストールする "),i("a",{class:"header-anchor",href:"#install_plugin","aria-label":'Permalink to "MicrometerMetrics をインストールする {id="install_plugin"}"'},"​")],-1)),i("p",null,[s[10]||(s[10]=t(" アプリケーションに")),s[11]||(s[11]=i("code",null,"MicrometerMetrics",-1)),s[12]||(s[12]=t("プラグインを")),s[13]||(s[13]=i("a",{href:"#install"},"インストール",-1)),s[14]||(s[14]=t("するには、 指定された")),e(o,{href:"/ktor/server-modules",summary:"モジュールを使用すると、ルートをグループ化してアプリケーションを構造化できます。"},{default:a(()=>s[9]||(s[9]=[t("モジュール")])),_:1}),s[15]||(s[15]=t("内の")),s[16]||(s[16]=i("code",null,"install",-1)),s[17]||(s[17]=t("関数に渡します。 以下のコードスニペットは、")),s[18]||(s[18]=i("code",null,"MicrometerMetrics",-1)),s[19]||(s[19]=t("をインストールする方法を示しています... "))]),e(g,null,{default:a(()=>s[20]||(s[20]=[i("li",null,[t(" ... "),i("code",null,"embeddedServer"),t("関数呼び出し内で。 ")],-1),i("li",null,[t(" ... 明示的に定義された"),i("code",null,"module"),t("（"),i("code",null,"Application"),t("クラスの拡張関数）内で。 ")],-1)])),_:1}),e(p,null,{default:a(()=>[e(l,{title:"embeddedServer"},{default:a(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.engine.*
            import io.ktor.server.netty.*
            import io.ktor.server.application.*
            import io.ktor.server.metrics.micrometer.*

            fun main() {
                embeddedServer(Netty, port = 8080) {
                    install(MicrometerMetrics)
                    // ...
                }.start(wait = true)
            }`})]),_:1}),e(l,{title:"module"},{default:a(()=>[e(n,{lang:"kotlin",code:`            import io.ktor.server.application.*
            import io.ktor.server.metrics.micrometer.*
            // ...
            fun Application.module() {
                install(MicrometerMetrics)
                // ...
            }`})]),_:1})]),_:1}),s[23]||(s[23]=k("",24))])}const P=u(F,[["render",f]]);export{T as __pageData,P as default};
