import{_ as h,a as r,b as o,c as d}from"./chunks/test-failed.BxM9HXpM.js";import{_ as E}from"./chunks/create-test.CrrH3ADr.js";import{_ as g,C as p,c,o as y,ag as k,j as s,a as i,G as t,w as l}from"./chunks/framework.Bksy39di.js";const D=JSON.parse('{"title":"在 JVM 中使用 JUnit 测试代码 – 教程","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/jvm-test-using-junit.md","filePath":"kotlin/jvm-test-using-junit.md","lastUpdated":1754307826000}'),u={name:"kotlin/jvm-test-using-junit.md"};function F(m,a,C,b,v,f){const n=p("tab"),e=p("tabs");return y(),c("div",null,[a[8]||(a[8]=k('<h1 id="在-jvm-中使用-junit-测试代码-–-教程" tabindex="-1">在 JVM 中使用 JUnit 测试代码 – 教程 <a class="header-anchor" href="#在-jvm-中使用-junit-测试代码-–-教程" aria-label="Permalink to &quot;在 JVM 中使用 JUnit 测试代码 – 教程&quot;">​</a></h1><p>本教程将向你展示如何在 Kotlin/JVM 项目中编写一个简单的单元测试，并使用 Gradle 构建工具运行它。</p><p>在此项目中，你将使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/index.html" target="_blank" rel="noreferrer"><code>kotlin.test</code></a> 库，并使用 JUnit 运行测试。 如果你正在开发多平台应用，请参阅 <a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-run-tests.html" target="_blank" rel="noreferrer">Kotlin 多平台教程</a>。</p><p>首先，下载并安装最新版 <a href="https://www.jetbrains.com/idea/download/index.html" target="_blank" rel="noreferrer">IntelliJ IDEA</a> 以开始。</p><h2 id="添加依赖项" tabindex="-1">添加依赖项 <a class="header-anchor" href="#添加依赖项" aria-label="Permalink to &quot;添加依赖项&quot;">​</a></h2>',5)),s("ol",null,[a[7]||(a[7]=s("li",null,[s("p",null,[i("在 IntelliJ IDEA 中打开一个 Kotlin 项目。如果你没有项目，"),s("a",{href:"https://www.jetbrains.com/help/idea/create-your-first-kotlin-app.html#create-project",target:"_blank",rel:"noreferrer"},"创建一个"),i("。")])],-1)),s("li",null,[a[2]||(a[2]=s("p",null,[i("打开 "),s("code",null,"build.gradle(.kts)"),i(" 文件，并检测 "),s("code",null,"testImplementation"),i(" 依赖项是否存在。此依赖项允许你使用 "),s("code",null,"kotlin.test"),i(" 和 "),s("code",null,"JUnit"),i("：")],-1)),t(e,{group:"build-script"},{default:l(()=>[t(n,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[0]||(a[0]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"dependencies"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Other dependencies.")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    testImplementation"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"kotlin"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"test"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(n,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[1]||(a[1]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"dependencies {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Other dependencies.")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    testImplementation "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'org.jetbrains.kotlin:kotlin-test'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1})]),s("li",null,[a[5]||(a[5]=s("p",null,[i("将 "),s("code",null,"test"),i(" 任务添加到 "),s("code",null,"build.gradle(.kts)"),i(" 文件：")],-1)),t(e,{group:"build-script"},{default:l(()=>[t(n,{title:"Kotlin","group-key":"kotlin"},{default:l(()=>a[3]||(a[3]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"tasks."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"test"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    useJUnitPlatform"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1}),t(n,{title:"Groovy","group-key":"groovy"},{default:l(()=>a[4]||(a[4]=[s("div",{class:"language-groovy vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"groovy"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"test {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    useJUnitPlatform()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1})]),_:1}),a[6]||(a[6]=s("div",{class:"note custom-block"},[s("p",{class:"custom-block-title"},"NOTE"),s("p",null,[i("如果你在构建脚本中使用 "),s("code",null,"useJUnitPlatform()"),i(" 函数，"),s("code",null,"kotlin-test"),i(" 库会自动将 JUnit 5 作为依赖项包含进来。此设置允许在仅 JVM 项目和 Kotlin 多平台 (KMP) 项目的 JVM 测试中访问所有 JUnit 5 API 以及 "),s("code",null,"kotlin-test"),i(" API。")])],-1))])]),a[9]||(a[9]=k(`<p>以下是 <code>build.gradle.kts</code> 的完整代码：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) version </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.2.10&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;org.example&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0-SNAPSHOT&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mavenCentral</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    testImplementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kotlin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    useJUnitPlatform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="添加代码进行测试" tabindex="-1">添加代码进行测试 <a class="header-anchor" href="#添加代码进行测试" aria-label="Permalink to &quot;添加代码进行测试&quot;">​</a></h2><ol><li><p>打开 <code>src/main/kotlin</code> 中的 <code>Main.kt</code> 文件。</p><p><code>src</code> 目录包含 Kotlin 源文件和资源。<code>Main.kt</code> 文件包含打印 <code>Hello, World!</code> 的示例代码。</p></li><li><p>创建 <code>Sample</code> 类，其中包含用于将两个整型相加的 <code>sum()</code> 函数：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h2 id="创建测试" tabindex="-1">创建测试 <a class="header-anchor" href="#创建测试" aria-label="Permalink to &quot;创建测试&quot;">​</a></h2><ol><li><p>在 IntelliJ IDEA 中，为 <code>Sample</code> 类选择 <strong>Code</strong> | <strong>Generate</strong> | <strong>Test...</strong>：</p><p><img src="`+h+'" alt="Generate a test"></p></li><li><p>指定测试类的名称。例如，<code>SampleTest</code>：</p><p><img src="'+E+`" alt="Create a test"></p><p>IntelliJ IDEA 会在 <code>test</code> 目录中创建 <code>SampleTest.kt</code> 文件。此目录包含 Kotlin 测试源文件和资源。</p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>你也可以在 <code>src/test/kotlin</code> 中手动创建用于测试的 <code>*.kt</code> 文件。</p></div></li><li><p>在 <code>SampleTest.kt</code> 中为 <code>sum()</code> 函数添加测试代码：</p><ul><li>使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/kotlin.test/-test/index.html" target="_blank" rel="noreferrer"><code>@Test</code> 注解</a> 定义测试 <code>testSum()</code> 函数。</li><li>使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/kotlin.test/assert-equals.html" target="_blank" rel="noreferrer"><code>assertEquals()</code></a> 函数检测 <code>sum()</code> 函数是否返回预期值。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.example.Sample</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> org.junit.jupiter.api.Assertions.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kotlin.test.Test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SampleTest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> testSample: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Sample</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> testSum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        assertEquals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(expected, testSample.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h2 id="运行测试" tabindex="-1">运行测试 <a class="header-anchor" href="#运行测试" aria-label="Permalink to &quot;运行测试&quot;">​</a></h2><ol><li><p>使用边栏图标运行测试：</p><p><img src="`+r+'" alt="Run the test"></p><div class="note custom-block"><p class="custom-block-title">NOTE</p><p>你也可以通过命令行界面使用 <code>./gradlew check</code> 命令运行所有项目测试。</p></div></li><li><p>在 <strong>Run</strong> 工具窗口中检测结果：</p><p><img src="'+o+`" alt="Check the test result. The test passed successfully"></p><p>测试函数已成功执行。</p></li><li><p>将 <code>expected</code> 变量值更改为 43，以确保测试正常工作：</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> testSum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expected </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 43</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    assertEquals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(expected, classForTesting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>再次运行测试并检测结果：</p><p><img src="`+d+'" alt="Check the test result. The test has failed"></p><p>测试执行失败。</p></li></ol><h2 id="接下来" tabindex="-1">接下来 <a class="header-anchor" href="#接下来" aria-label="Permalink to &quot;接下来&quot;">​</a></h2><p>完成首次测试后，你可以：</p><ul><li>使用其他 <a href="https://kotlinlang.org/api/latest/kotlin.test/kotlin.test/" target="_blank" rel="noreferrer"><code>kotlin.test</code></a> 函数编写更多测试。例如，使用 <a href="https://kotlinlang.org/api/latest/kotlin.test/kotlin.test/assert-not-equals.html" target="_blank" rel="noreferrer"><code>assertNotEquals()</code></a> 函数。</li><li>使用 <a href="/kotlin/power-assert">Kotlin Power-assert 编译器插件</a> 改进测试输出。该插件通过上下文信息丰富了测试输出。</li><li>使用 Kotlin 和 Spring Boot <a href="/kotlin/jvm-get-started-spring-boot">创建你的第一个服务器端应用程序</a>。</li></ul>',11))])}const T=g(u,[["render",F]]);export{D as __pageData,T as default};
