import{_ as e,C as n,c as l,o,j as s,G as p,ag as r,a,w as h}from"./chunks/framework.Bksy39di.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/client-digest-auth.md","filePath":"ja/ktor/client-digest-auth.md","lastUpdated":1755457140000}'),c={name:"ja/ktor/client-digest-auth.md"};function d(k,t,u,g,E,b){const i=n("tldr");return o(),l("div",null,[t[1]||(t[1]=s("h1",{id:"ktorクライアントでのダイジェスト認証",tabindex:"-1"},[a("Ktorクライアントでのダイジェスト認証 "),s("a",{class:"header-anchor",href:"#ktorクライアントでのダイジェスト認証","aria-label":'Permalink to "Ktorクライアントでのダイジェスト認証"'},"​")],-1)),p(i,null,{default:h(()=>t[0]||(t[0]=[s("p",null,[s("b",null,"必要な依存関係"),a(": "),s("code",null,"io.ktor:ktor-client-auth")],-1),s("p",null,[s("b",null,"コード例"),a(": "),s("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-digest"}," client-auth-digest ")],-1)])),_:1}),t[2]||(t[2]=r(`<p>ダイジェスト認証スキームでは、ユーザー名とパスワードをネットワーク経由で送信する前に、ハッシュ関数が適用されます。</p><blockquote><p>サーバー側では、Ktorはダイジェスト認証を処理するための<a href="./server-digest-auth">Authentication</a>プラグインを提供します。</p></blockquote><h2 id="flow" tabindex="-1">ダイジェスト認証のフロー <a class="header-anchor" href="#flow" aria-label="Permalink to &quot;ダイジェスト認証のフロー {id=&quot;flow&quot;}&quot;">​</a></h2><p>ダイジェスト認証のフローは次のようになります。</p><ol><li><p>クライアントは、サーバーアプリケーション内の特定のリソースに対して、<code>Authorization</code>ヘッダーなしでリクエストを行います。</p></li><li><p>サーバーはクライアントに<code>401</code> (未承認) レスポンスステータスで応答し、<code>WWW-Authenticate</code>レスポンスヘッダーを使用して、ダイジェスト認証スキームがルートを保護するために使用されているという情報を提供します。一般的な<code>WWW-Authenticate</code>ヘッダーは次のようになります。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>WWW-Authenticate: Digest</span></span>
<span class="line"><span>        realm=&quot;Access to the &#39;/&#39; path&quot;,</span></span>
<span class="line"><span>        nonce=&quot;e4549c0548886bc2&quot;,</span></span>
<span class="line"><span>        algorithm=&quot;MD5&quot;</span></span></code></pre></div></li><li><p>通常、クライアントはユーザーが資格情報を入力できるログインダイアログを表示します。その後、クライアントは次の<code>Authorization</code>ヘッダーを付けてリクエストを行います。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Authorization: Digest username=&quot;jetbrains&quot;,</span></span>
<span class="line"><span>        realm=&quot;Access to the &#39;/&#39; path&quot;,</span></span>
<span class="line"><span>        nonce=&quot;e4549c0548886bc2&quot;,</span></span>
<span class="line"><span>        uri=&quot;/&quot;,</span></span>
<span class="line"><span>        algorithm=MD5,</span></span>
<span class="line"><span>        response=&quot;6299988bb4f05c0d8ad44295873858cf&quot;</span></span></code></pre></div><p><code>response</code>値は次の方法で生成されます。</p><p>a. <code>HA1 = MD5(username:realm:password)</code></p><p>b. <code>HA2 = MD5(method:digestURI)</code></p><p>c. <code>response = MD5(HA1:nonce:HA2)</code></p></li><li><p>サーバーはクライアントによって送信された資格情報を検証し、要求されたコンテンツで応答します。</p></li></ol><h2 id="configure" tabindex="-1">ダイジェスト認証の設定 <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;ダイジェスト認証の設定 {id=&quot;configure&quot;}&quot;">​</a></h2><p>ユーザーの資格情報を<code>Authorization</code>ヘッダーに<code>Digest</code>スキームを使用して送信するには、<code>digest</code>認証プロバイダーを次のように設定する必要があります。</p><ol><li><code>install</code>ブロック内で<a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/digest.html" target="_blank" rel="noreferrer">digest</a>関数を呼び出します。</li><li>必要な資格情報を<a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-digest-auth-credentials/index.html" target="_blank" rel="noreferrer">DigestAuthCredentials</a>を使用して提供し、このオブジェクトを<a href="https://api.ktor.io/ktor-client/ktor-client-plugins/ktor-client-auth/io.ktor.client.plugins.auth.providers/-digest-auth-config/credentials.html" target="_blank" rel="noreferrer">credentials</a>関数に渡します。</li><li>オプションとして、<code>realm</code>プロパティを使用してrealmを設定します。</li></ol><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CIO) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Auth) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                DigestAuthCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;jetbrains&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foobar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            realm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Access to the &#39;/&#39; path&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>完全な例はこちらで確認できます: <a href="https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/client-auth-digest" target="_blank" rel="noreferrer">client-auth-digest</a>。</p></blockquote>`,10))])}const f=e(c,[["render",d]]);export{q as __pageData,f as default};
