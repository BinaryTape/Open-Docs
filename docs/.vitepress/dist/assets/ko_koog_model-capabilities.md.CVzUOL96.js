import{_ as d,c as i,o as a,ag as s}from"./chunks/framework.Bksy39di.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ko/koog/model-capabilities.md","filePath":"ko/koog/model-capabilities.md","lastUpdated":1755146406000}'),l={name:"ko/koog/model-capabilities.md"};function e(n,t,h,p,r,o){return a(),i("div",null,t[0]||(t[0]=[s(`<p>Koog는 다양한 LLM(대규모 언어 모델) 제공자의 LLM과 제공자에 구애받지 않는 방식으로 작업하기 위한 일련의 추상화 및 구현체를 제공합니다. 해당 세트에는 다음 클래스가 포함됩니다.</p><ul><li><p><strong>LLMCapability</strong>: LLM이 지원할 수 있는 다양한 기능을 정의하는 클래스 계층 구조로, 다음을 포함합니다.</p><ul><li>응답 무작위성 제어를 위한 온도(Temperature) 조절</li><li>외부 시스템 상호작용을 위한 도구 통합</li><li>시각적 데이터 처리를 위한 시각(Vision) 처리</li><li>벡터 표현 생성을 위한 임베딩(Embedding) 생성</li><li>텍스트 생성 작업을 위한 완성(Completion)</li><li>구조화된 데이터(Simple 및 Full 변형을 포함하는 JSON)를 위한 스키마(Schema) 지원</li><li>탐색적 응답을 위한 추론(Speculation)</li></ul></li><li><p><strong>LLModel</strong>: 특정 LLM과 해당 제공자, 고유 식별자 및 지원되는 기능을 나타내는 데이터 클래스입니다.</p></li></ul><p>이는 다양한 LLM 제공자와 통합된 방식으로 상호작용하기 위한 기반을 제공하여, 애플리케이션이 제공자별 세부 정보를 추상화하면서 다양한 모델과 작업할 수 있도록 합니다.</p><h2 id="llm-기능" tabindex="-1">LLM 기능 <a class="header-anchor" href="#llm-기능" aria-label="Permalink to &quot;LLM 기능&quot;">​</a></h2><p>LLM 기능은 대규모 언어 모델이 지원할 수 있는 특정 기능 또는 동작을 나타냅니다. Koog 프레임워크에서 기능은 특정 모델이 무엇을 할 수 있고 어떻게 구성될 수 있는지 정의하는 데 사용됩니다. 각 기능은 <code>LLMCapability</code> 클래스의 서브클래스 또는 데이터 객체로 표현됩니다.</p><p>애플리케이션에서 LLM을 사용하도록 구성할 때, <code>LLModel</code> 인스턴스를 생성할 때 <code>capabilities</code> 목록에 기능을 추가하여 지원하는 기능을 지정합니다. 이를 통해 프레임워크는 모델과 올바르게 상호작용하고 해당 기능을 적절하게 사용할 수 있습니다.</p><h3 id="핵심-기능" tabindex="-1">핵심 기능 <a class="header-anchor" href="#핵심-기능" aria-label="Permalink to &quot;핵심 기능&quot;">​</a></h3><p>아래 목록에는 Koog 프레임워크의 모델에서 사용할 수 있는 핵심적인 LLM별 기능이 포함됩니다.</p><ul><li><p><strong>추론(Speculation)</strong> (<code>LLMCapability.Speculation</code>): 모델이 다양한 가능성 수준으로 추론적이거나 탐색적인 응답을 생성하도록 합니다. 더 넓은 범위의 잠재적 결과가 필요한 창의적이거나 가설적인 시나리오에 유용합니다.</p></li><li><p><strong>온도(Temperature)</strong> (<code>LLMCapability.Temperature</code>): 모델 응답의 무작위성 또는 창의성 수준을 조절할 수 있도록 합니다. 높은 온도 값은 더 다양한 출력을 생성하는 반면, 낮은 값은 더 집중적이고 결정론적인 응답으로 이어집니다.</p></li><li><p><strong>도구(Tools)</strong> (<code>LLMCapability.Tools</code>): 외부 도구 사용 또는 통합 지원을 나타냅니다. 이 기능은 모델이 특정 도구를 실행하거나 외부 시스템과 상호작용하도록 합니다.</p></li><li><p><strong>도구 선택(Tool choice)</strong> (<code>LLMCapability.ToolChoice</code>): LLM과 함께 도구 호출이 어떻게 작동하는지 구성합니다. 모델에 따라 다음을 수행하도록 구성할 수 있습니다.</p><ul><li>텍스트 생성과 도구 호출 중 자동으로 선택</li><li>텍스트는 생성하지 않고 도구 호출만 생성</li><li>도구 호출은 생성하지 않고 텍스트만 생성</li><li>정의된 도구 중에서 특정 도구 호출 강제</li></ul></li><li><p><strong>다중 선택(Multiple choices)</strong> (<code>LLMCapability.MultipleChoices</code>): 모델이 단일 프롬프트에 대해 여러 개의 독립적인 응답 선택지를 생성하도록 합니다.</p></li></ul><h3 id="미디어-처리-기능" tabindex="-1">미디어 처리 기능 <a class="header-anchor" href="#미디어-처리-기능" aria-label="Permalink to &quot;미디어 처리 기능&quot;">​</a></h3><p>다음 목록은 이미지 또는 오디오와 같은 미디어 콘텐츠를 처리하기 위한 기능 집합을 나타냅니다.</p><ul><li><p><strong>시각(Vision)</strong> (<code>LLMCapability.Vision</code>): 시각 데이터를 처리, 분석하고 통찰력을 추론하는 시각 기반 기능을 위한 클래스입니다. 다음 유형의 시각 데이터를 지원합니다.</p><ul><li><strong>이미지(Image)</strong> (<code>LLMCapability.Vision.Image</code>): 이미지 분석, 인식 및 해석과 같은 이미지 관련 시각 작업을 처리합니다.</li><li><strong>비디오(Video)</strong> (<code>LLMCapability.Vision.Video</code>): 비디오 콘텐츠 분석 및 이해를 포함하여 비디오 데이터를 처리합니다.</li></ul></li><li><p><strong>오디오(Audio)</strong> (<code>LLMCapability.Audio</code>): 전사(Transcription), 오디오 생성 또는 오디오 기반 상호작용과 같은 오디오 관련 기능을 제공합니다.</p></li><li><p><strong>문서(Document)</strong> (<code>LLMCapability.Document</code>): 문서 기반 입력 및 출력의 처리 및 조작을 가능하게 합니다.</p></li></ul><h3 id="텍스트-처리-기능" tabindex="-1">텍스트 처리 기능 <a class="header-anchor" href="#텍스트-처리-기능" aria-label="Permalink to &quot;텍스트 처리 기능&quot;">​</a></h3><p>다음 기능 목록은 텍스트 생성 및 처리 기능을 나타냅니다.</p><ul><li><p><strong>임베딩(Embedding)</strong> (<code>LLMCapability.Embed</code>): 모델이 입력 텍스트에서 벡터 임베딩을 생성하도록 하여 유사성 비교, 클러스터링 및 기타 벡터 기반 분석을 가능하게 합니다.</p></li><li><p><strong>완성(Completion)</strong> (<code>LLMCapability.Completion</code>): 주어진 입력 컨텍스트를 기반으로 텍스트 또는 콘텐츠 생성을 포함하며, 문장 완성, 제안 생성 또는 입력 데이터와 일치하는 콘텐츠 생성과 같은 작업을 수행합니다.</p></li><li><p><strong>프롬프트 캐싱(Prompt caching)</strong> (<code>LLMCapability.PromptCaching</code>): 프롬프트 캐싱 기능을 지원하여 반복되거나 유사한 쿼리에 대한 성능을 잠재적으로 향상시킵니다.</p></li><li><p><strong>중재(Moderation)</strong> (<code>LLMCapability.Moderation</code>): 모델이 잠재적으로 유해한 콘텐츠에 대해 텍스트를 분석하고 괴롭힘, 혐오 발언, 자해, 성적 콘텐츠, 폭력 등 다양한 범주로 분류하도록 합니다.</p></li></ul><h3 id="스키마-기능" tabindex="-1">스키마 기능 <a class="header-anchor" href="#스키마-기능" aria-label="Permalink to &quot;스키마 기능&quot;">​</a></h3><p>아래 목록은 구조화된 데이터 처리와 관련된 기능을 나타냅니다.</p><ul><li><strong>스키마(Schema)</strong> (<code>LLMCapability.Schema</code>): 특정 형식을 사용하여 데이터 상호작용 및 인코딩과 관련된 구조화된 스키마 기능을 위한 클래스입니다. 다음 형식 지원을 포함합니다. <ul><li><strong>JSON</strong> (<code>LLMCapability.Schema.JSON</code>): 다양한 수준의 JSON 스키마 지원: <ul><li><strong>기본(Basic)</strong> (<code>LLMCapability.Schema.JSON.Basic</code>): 경량 또는 기본 JSON 처리 기능을 제공합니다.</li><li><strong>표준(Standard)</strong> (<code>LLMCapability.Schema.JSON.Standard</code>): 복잡한 데이터 구조를 위한 포괄적인 JSON 스키마 지원을 제공합니다.</li></ul></li></ul></li></ul><h2 id="모델-llmodel-구성-생성" tabindex="-1">모델 (LLModel) 구성 생성 <a class="header-anchor" href="#모델-llmodel-구성-생성" aria-label="Permalink to &quot;모델 (LLModel) 구성 생성&quot;">​</a></h2><p>보편적이고 제공자에 구애받지 않는 방식으로 모델을 정의하려면, 다음 파라미터와 함께 <code>LLModel</code> 클래스의 인스턴스로 모델 구성을 생성합니다.</p><table tabindex="0"><thead><tr><th>이름</th><th>데이터 타입</th><th>필수</th><th>기본값</th><th>설명</th></tr></thead><tbody><tr><td><code>provider</code></td><td>LLMProvider</td><td>예</td><td></td><td>LLM의 제공자입니다. Google 또는 OpenAI와 같습니다. 이는 모델을 생성하거나 호스팅하는 회사 또는 조직을 식별합니다.</td></tr><tr><td><code>id</code></td><td>String</td><td>예</td><td></td><td>LLM 인스턴스의 고유 식별자입니다. 일반적으로 특정 모델 버전 또는 이름을 나타냅니다. 예를 들어, <code>gpt-4-turbo</code>, <code>claude-3-opus</code>, <code>llama-3-2</code>입니다.</td></tr><tr><td><code>capabilities</code></td><td>List&lt;LLMCapability&gt;</td><td>예</td><td></td><td>LLM이 지원하는 기능 목록입니다. 온도 조절, 도구 사용 또는 스키마 기반 작업과 같습니다. 이 기능들은 모델이 무엇을 할 수 있고 어떻게 구성될 수 있는지 정의합니다.</td></tr><tr><td><code>contextLength</code></td><td>Long</td><td>예</td><td></td><td>LLM의 컨텍스트 길이입니다. 이는 LLM이 처리할 수 있는 최대 토큰 수입니다.</td></tr><tr><td><code>maxOutputTokens</code></td><td>Long</td><td>아니요</td><td><code>null</code></td><td>LLM에 대해 제공자가 생성할 수 있는 최대 토큰 수입니다.</td></tr></tbody></table><h3 id="예시" tabindex="-1">예시 <a class="header-anchor" href="#예시" aria-label="Permalink to &quot;예시&quot;">​</a></h3><p>이 섹션에서는 다양한 기능을 가진 <code>LLModel</code> 인스턴스를 생성하는 자세한 예시를 제공합니다.</p><p>아래 코드는 핵심 기능을 포함하는 기본 LLM 구성을 나타냅니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.OpenAI,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt-4-turbo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Tools,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Schema.JSON.Standard</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 128_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>아래 모델 구성은 시각 기능을 갖춘 멀티모달 LLM입니다.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> visionModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.OpenAI,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt-4-vision&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Vision.Image,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.MultipleChoices</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1_047_576</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxOutputTokens </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32_768</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>오디오 처리 기능을 갖춘 LLM:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> audioModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LLModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMProvider.Anthropic,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;claude-3-opus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Audio,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.Temperature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LLMCapability.PromptCaching</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextLength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>LLModel</code> 인스턴스로 모델을 생성하고 모든 관련 파라미터를 지정해야 하는 것 외에도, Koog는 지원되는 기능을 포함하는 미리 정의된 모델 및 구성 모음을 포함합니다. 미리 정의된 Ollama 모델을 사용하려면 다음과 같이 지정하십시오.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metaModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OllamaModels.Meta.LLAMA_3_2</span></span></code></pre></div><p>모델이 특정 기능을 지원하는지 확인하려면 <code>capabilities</code> 목록에서 기능의 존재 여부를 확인하기 위해 <code>contains</code> 메서드를 사용하십시오.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 모델이 특정 기능을 지원하는지 확인</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> supportsTools </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LLMCapability.Tools) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> supportsVideo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> visionModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LLMCapability.Vision.Video) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 스키마 기능 확인</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsonCapability </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> basicModel.capabilities.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterIsInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LLMCapability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firstOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hasFullJsonSupport </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jsonCapability </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LLMCapability.Schema.JSON.Standard </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h3 id="모델별-llm-기능" tabindex="-1">모델별 LLM 기능 <a class="header-anchor" href="#모델별-llm-기능" aria-label="Permalink to &quot;모델별 LLM 기능&quot;">​</a></h3><p>이 참조는 다양한 제공자에 걸쳐 각 모델이 어떤 LLM 기능을 지원하는지 보여줍니다.</p><p>아래 표에서:</p><ul><li><code>✓</code>는 모델이 해당 기능을 지원함을 나타냅니다.</li><li><code>-</code>는 모델이 해당 기능을 지원하지 않음을 나타냅니다.</li><li>JSON 스키마의 경우, <code>Full</code> 또는 <code>Simple</code>은 모델이 지원하는 JSON 스키마 기능의 변형을 나타냅니다.</li></ul><h4 id="google-모델" tabindex="-1">Google 모델 <a class="header-anchor" href="#google-모델" aria-label="Permalink to &quot;Google 모델&quot;">​</a></h4><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>완성</th><th>다중 선택</th><th>도구</th><th>도구 선택</th><th>시각(이미지)</th><th>시각(비디오)</th><th>오디오</th></tr></thead><tbody><tr><td>Gemini2_5Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_5Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0Flash001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0FlashLite</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini2_0FlashLite001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5ProLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Pro002</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5FlashLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash002</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8B001</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini1_5Flash8BLatest</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="openai-모델" tabindex="-1">OpenAI 모델 <a class="header-anchor" href="#openai-모델" aria-label="Permalink to &quot;OpenAI 모델&quot;">​</a></h4><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>완성</th><th>다중 선택</th><th>도구</th><th>도구 선택</th><th>시각(이미지)</th><th>시각(비디오)</th><th>오디오</th><th>추론</th><th>중재</th></tr></thead><tbody><tr><td>Reasoning.GPT4oMini</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O3Mini</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O1Mini</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O3</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Reasoning.O1</td><td>-</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Chat.GPT4o</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Chat.GPT4_1</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td></tr><tr><td>Audio.GPT4oMiniAudio</td><td>✓</td><td>-</td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td></tr><tr><td>Audio.GPT4oAudio</td><td>✓</td><td>-</td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td></tr><tr><td>Moderation.Omni</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr><tr><td>Moderation.Text</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr></tbody></table><h4 id="anthropic-모델" tabindex="-1">Anthropic 모델 <a class="header-anchor" href="#anthropic-모델" aria-label="Permalink to &quot;Anthropic 모델&quot;">​</a></h4><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>완성</th><th>도구</th><th>도구 선택</th><th>시각(이미지)</th></tr></thead><tbody><tr><td>Opus_4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_3_7</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Haiku_3_5</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Sonnet_3_5</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Haiku_3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Opus_3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="ollama-모델" tabindex="-1">Ollama 모델 <a class="header-anchor" href="#ollama-모델" aria-label="Permalink to &quot;Ollama 모델&quot;">​</a></h4><h5 id="meta-모델" tabindex="-1">Meta 모델 <a class="header-anchor" href="#meta-모델" aria-label="Permalink to &quot;Meta 모델&quot;">​</a></h5><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>도구</th><th>중재</th></tr></thead><tbody><tr><td>LLAMA_3_2_3B</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_3_2</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_4</td><td>✓</td><td>Simple</td><td>✓</td><td>-</td></tr><tr><td>LLAMA_GUARD_3</td><td>-</td><td>-</td><td>-</td><td>✓</td></tr></tbody></table><h5 id="alibaba-모델" tabindex="-1">Alibaba 모델 <a class="header-anchor" href="#alibaba-모델" aria-label="Permalink to &quot;Alibaba 모델&quot;">​</a></h5><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>도구</th></tr></thead><tbody><tr><td>QWEN_2_5_05B</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWEN_3_06B</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWQ</td><td>✓</td><td>Simple</td><td>✓</td></tr><tr><td>QWEN_CODER_2_5_32B</td><td>✓</td><td>Simple</td><td>✓</td></tr></tbody></table><h5 id="groq-모델" tabindex="-1">Groq 모델 <a class="header-anchor" href="#groq-모델" aria-label="Permalink to &quot;Groq 모델&quot;">​</a></h5><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>도구</th></tr></thead><tbody><tr><td>LLAMA_3_GROK_TOOL_USE_8B</td><td>✓</td><td>Full</td><td>✓</td></tr><tr><td>LLAMA_3_GROK_TOOL_USE_70B</td><td>✓</td><td>Full</td><td>✓</td></tr></tbody></table><h5 id="granite-모델" tabindex="-1">Granite 모델 <a class="header-anchor" href="#granite-모델" aria-label="Permalink to &quot;Granite 모델&quot;">​</a></h5><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>도구</th><th>시각(이미지)</th></tr></thead><tbody><tr><td>GRANITE_3_2_VISION</td><td>✓</td><td>Simple</td><td>✓</td><td>✓</td></tr></tbody></table><h4 id="openrouter-모델" tabindex="-1">OpenRouter 모델 <a class="header-anchor" href="#openrouter-모델" aria-label="Permalink to &quot;OpenRouter 모델&quot;">​</a></h4><table tabindex="0"><thead><tr><th>모델</th><th>온도</th><th>JSON 스키마</th><th>완성</th><th>추론</th><th>도구</th><th>도구 선택</th><th>시각(이미지)</th></tr></thead><tbody><tr><td>Phi4Reasoning</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Claude3Opus</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3Sonnet</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3Haiku</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT4</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>GPT4o</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT4Turbo</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>GPT35Turbo</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Gemini15Pro</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Gemini15Flash</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Llama3</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Llama3Instruct</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Mistral7B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Mixtral8x7B</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td>Claude3VisionSonnet</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3VisionOpus</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>Claude3VisionHaiku</td><td>✓</td><td>Full</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table>`,54)]))}const E=d(l,[["render",e]]);export{c as __pageData,E as default};
