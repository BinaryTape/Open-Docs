import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bksy39di.js";const d=JSON.parse('{"title":"코인","description":"","frontmatter":{"title":"코인"},"headers":[],"relativePath":"ko/koin/setup/koin.md","filePath":"ko/koin/setup/koin.md","lastUpdated":1750001831000}'),l={name:"ko/koin/setup/koin.md"};function p(e,s,k,h,o,E){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="코인" tabindex="-1">코인 <a class="header-anchor" href="#코인" aria-label="Permalink to &quot;코인&quot;">​</a></h1><p>프로젝트에서 코인을 설정하는 데 필요한 모든 것</p><h2 id="현재-버전" tabindex="-1">현재 버전 <a class="header-anchor" href="#현재-버전" aria-label="Permalink to &quot;현재 버전&quot;">​</a></h2><p>모든 코인 패키지는 <a href="https://central.sonatype.com/search?q=io.insert-koin+koin-core&amp;sort=name" target="_blank" rel="noreferrer">Maven Central</a>에서 찾을 수 있습니다.</p><p>현재 사용 가능한 코인 버전은 다음과 같습니다:</p><ul><li>Koin 안정 버전 <a href="https://mvnrepository.com/artifact/io.insert-koin/koin-bom" target="_blank" rel="noreferrer"><img src="https://img.shields.io/maven-central/v/io.insert-koin/koin-core/4.0.3" alt="Maven Central"></a></li><li>Koin 불안정 버전 <a href="https://mvnrepository.com/artifact/io.insert-koin/koin-bom" target="_blank" rel="noreferrer"><img src="https://img.shields.io/maven-central/v/io.insert-koin/koin-core/4.1.0" alt="Maven Central"></a></li></ul><h2 id="gradle-설정" tabindex="-1">Gradle 설정 <a class="header-anchor" href="#gradle-설정" aria-label="Permalink to &quot;Gradle 설정&quot;">​</a></h2><h3 id="kotlin" tabindex="-1">Kotlin <a class="header-anchor" href="#kotlin" aria-label="Permalink to &quot;Kotlin&quot;">​</a></h3><p>3.5.0 버전부터 BOM(Bill of Materials) 버전을 사용하여 모든 코인 라이브러리 버전을 관리할 수 있습니다. 앱에서 BOM을 사용하면, 코인 라이브러리 의존성에 버전을 별도로 추가할 필요가 없습니다. BOM 버전을 업데이트하면 사용하는 모든 라이브러리가 자동으로 새 버전으로 업데이트됩니다.</p><p><code>koin-bom</code> BOM과 <code>koin-core</code> 의존성을 애플리케이션에 추가하세요:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.dependencies.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-bom:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-core&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>버전 카탈로그를 사용하는 경우:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">versions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin-bom = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x.x.x&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">libraries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin-bom = { module = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-bom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, version.ref = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;koin-bom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">koin-core = { module = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-core&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">...</span></span></code></pre></div><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(project.dependencies.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">platform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(libs.koin.bom))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(libs.koin.core)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>또는 코인에 대한 정확한 의존성 버전을 지정하는 기존 방식을 사용하세요:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    implementation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-core:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이제 코인을 시작할 준비가 되었습니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    startKoin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>테스트 기능이 필요한 경우:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Koin Test features</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    testImplementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-test:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Koin for JUnit 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    testImplementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-test-junit4:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Koin for JUnit 5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    testImplementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-test-junit5:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>이제 코인 튜토리얼을 통해 코인 사용법을 계속 학습할 수 있습니다: <a href="/ko/koin/quickstart/kotlin">Kotlin 앱 튜토리얼</a></p></div><h3 id="android" tabindex="-1"><strong>Android</strong> <a class="header-anchor" href="#android" aria-label="Permalink to &quot;**Android**&quot;">​</a></h3><p>Android 애플리케이션에 <code>koin-android</code> 의존성을 추가하세요:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-android:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_android_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이제 <code>Application</code> 클래스에서 코인을 시작할 준비가 되었습니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MainApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onCreate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onCreate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        startKoin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(appModule)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>추가 기능이 필요한 경우, 다음 필요한 패키지를 추가하세요:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Java Compatibility</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-android-compat:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_android_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Jetpack WorkManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-androidx-workmanager:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_android_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Navigation Graph</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-androidx-navigation:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_android_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // App Startup</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-androidx-startup:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_android_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>이제 코인 튜토리얼을 통해 코인 사용법을 계속 학습할 수 있습니다: <a href="/ko/koin/quickstart/android-viewmodel">Android 앱 튜토리얼</a></p></div><h3 id="jetpack-compose-또는-compose-multiplatform" tabindex="-1"><strong>Jetpack Compose 또는 Compose Multiplatform</strong> <a class="header-anchor" href="#jetpack-compose-또는-compose-multiplatform" aria-label="Permalink to &quot;**Jetpack Compose 또는 Compose Multiplatform**&quot;">​</a></h3><p>멀티플랫폼 애플리케이션에 <code>koin-compose</code> 의존성을 추가하여 코인 및 Compose API를 사용하세요:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-compose:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-compose-viewmodel:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-compose-viewmodel-navigation:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>순수 Android Jetpack Compose를 사용하는 경우 다음을 사용할 수 있습니다:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-androidx-compose:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-androidx-compose-navigation:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="kotlin-multiplatform" tabindex="-1"><strong>Kotlin Multiplatform</strong> <a class="header-anchor" href="#kotlin-multiplatform" aria-label="Permalink to &quot;**Kotlin Multiplatform**&quot;">​</a></h3><p>멀티플랫폼 애플리케이션에 <code>koin-core</code> 의존성을 추가하여 공유 Kotlin 부분을 사용하세요:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-core:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>이제 코인 튜토리얼을 통해 코인 사용법을 계속 학습할 수 있습니다: <a href="/ko/koin/quickstart/kmp">Kotlin Multiplatform 앱 튜토리얼</a></p></div><h3 id="ktor" tabindex="-1"><strong>Ktor</strong> <a class="header-anchor" href="#ktor" aria-label="Permalink to &quot;**Ktor**&quot;">​</a></h3><p>Ktor 애플리케이션에 <code>koin-ktor</code> 의존성을 추가하세요:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Koin for Ktor </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-ktor:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_ktor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // SLF4J Logger</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-logger-slf4j:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_ktor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이제 Ktor 애플리케이션에 코인 기능을 설치할 준비가 되었습니다:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Koin) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        slf4jLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(appModule)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>이제 코인 튜토리얼을 통해 코인 사용법을 계속 학습할 수 있습니다: <a href="/ko/koin/quickstart/ktor">Ktor 앱 튜토리얼</a></p></div><h3 id="코인-bom" tabindex="-1"><strong>코인 BOM</strong> <a class="header-anchor" href="#코인-bom" aria-label="Permalink to &quot;**코인 BOM**&quot;">​</a></h3><p>코인 BOM(Bill of Materials)은 BOM 버전만 지정하여 모든 코인 라이브러리 버전을 관리할 수 있게 해줍니다. BOM 자체는 다양한 코인 라이브러리의 안정적인 버전에 대한 링크를 포함하고 있어, 이들이 함께 잘 작동하도록 합니다. 앱에서 BOM을 사용할 때는 코인 라이브러리 의존성에 버전을 별도로 추가할 필요가 없습니다. BOM 버전을 업데이트하면 사용하는 모든 라이브러리가 자동으로 새 버전으로 업데이트됩니다.</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Declare koin-bom version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation platform(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-bom:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$koin_bom</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Declare the koin dependencies that you need</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-android&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-core-coroutines&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-androidx-workmanager&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // If you need specify some version it&#39;s just point to desired version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-androidx-navigation:1.2.3-alpha03&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Works with test libraries too!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    testImplementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-test-junit4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    testImplementation(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;io.insert-koin:koin-android-test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,47)]))}const g=i(l,[["render",p]]);export{d as __pageData,g as default};
