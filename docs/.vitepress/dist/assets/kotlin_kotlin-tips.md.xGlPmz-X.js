import{_ as a,C as r,c as s,o as d,ag as o,G as n,j as l,a as i}from"./chunks/framework.Bksy39di.js";const f=JSON.parse('{"title":"Kotlin 技巧","description":"","frontmatter":{},"headers":[],"relativePath":"kotlin/kotlin-tips.md","filePath":"kotlin/kotlin-tips.md","lastUpdated":1754307826000}'),h={name:"kotlin/kotlin-tips.md"};function p(u,t,b,m,w,k){const e=r("YouTubeVideo");return d(),s("div",null,[t[0]||(t[0]=o('<h1 id="kotlin-技巧" tabindex="-1">Kotlin 技巧 <a class="header-anchor" href="#kotlin-技巧" aria-label="Permalink to &quot;Kotlin 技巧&quot;">​</a></h1><p>Kotlin Tips 是一个系列短视频，Kotlin 团队的成员在其中展示了如何以更高效、更具 Kotlin 惯用法的方式使用 Kotlin，从而在编写代码时获得更多乐趣。</p><p><a href="https://www.youtube.com/channel/UCP7uiEZIqci43m22KDl0sNw" target="_blank" rel="noreferrer">订阅我们的 YouTube 频道</a>，以便不错过新的 Kotlin Tips 视频。</p><h2 id="null-null-在-kotlin-中" tabindex="-1">null + null 在 Kotlin 中 <a class="header-anchor" href="#null-null-在-kotlin-中" aria-label="Permalink to &quot;null + null 在 Kotlin 中&quot;">​</a></h2><p>在 Kotlin 中，当你执行 <code>null + null</code> 时会发生什么？它会返回什么？Sebastian Aigner 在我们最新的快速提示中解决了这个奥秘。他还在顺便展示了为什么不必害怕可空类型：</p>',5)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/wwplVknTza4",title:"Kotlin Tips: null + null in Kotlin"}),t[1]||(t[1]=l("h2",{id:"集合项去重",tabindex:"-1"},[i("集合项去重 "),l("a",{class:"header-anchor",href:"#集合项去重","aria-label":'Permalink to "集合项去重"'},"​")],-1)),t[2]||(t[2]=l("p",null,"你的 Kotlin 集合包含重复项吗？需要一个只包含唯一项的集合吗？让 Sebastian Aigner 在这个 Kotlin 技巧中向你展示如何从你的 list 中移除重复项，或将它们转换为 set：",-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/ECOf0PeSANw",title:"Kotlin Tips: Deduplicating Collection Items"}),t[3]||(t[3]=o('<h2 id="挂起函数与内联的奥秘" tabindex="-1">挂起函数与内联的奥秘 <a class="header-anchor" href="#挂起函数与内联的奥秘" aria-label="Permalink to &quot;挂起函数与内联的奥秘&quot;">​</a></h2><p>像 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/repeat.html" target="_blank" rel="noreferrer"><code>repeat()</code></a>、<a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/map.html" target="_blank" rel="noreferrer"><code>map()</code></a> 和 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/filter.html" target="_blank" rel="noreferrer"><code>filter()</code></a> 这样的函数，为什么能在它们的 lambda 表达式中接受挂起函数，即使它们的签名不具备协程感知能力？在这期 Kotlin 技巧中，Sebastian Aigner 解开了这个谜团：这与 inline 修饰符有关：</p>',2)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/R2395u7SdcI",title:"Kotlin Tips: The Suspend and Inline Mystery"}),t[4]||(t[4]=l("h2",{id:"使用完全限定名称解除声明遮蔽",tabindex:"-1"},[i("使用完全限定名称解除声明遮蔽 "),l("a",{class:"header-anchor",href:"#使用完全限定名称解除声明遮蔽","aria-label":'Permalink to "使用完全限定名称解除声明遮蔽"'},"​")],-1)),t[5]||(t[5]=l("p",null,"遮蔽（Shadowing）是指在同一作用域内存在两个同名的声明。那么，你该如何选择呢？在这期 Kotlin 技巧中，Sebastian Aigner 向你展示了一个简单的 Kotlin 技巧，借助完全限定名称的强大功能来调用你需要的函数：",-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/mJRzF9WtCpU",title:"Kotlin Tips: Unshadowing Declarations"}),t[6]||(t[6]=l("h2",{id:"使用-elvis-操作符返回和抛出",tabindex:"-1"},[i("使用 Elvis 操作符返回和抛出 "),l("a",{class:"header-anchor",href:"#使用-elvis-操作符返回和抛出","aria-label":'Permalink to "使用 Elvis 操作符返回和抛出"'},"​")],-1)),t[7]||(t[7]=l("p",null,[l("a",{href:"/kotlin/null-safety#elvis-operator"},"Elvis"),i(" 操作符再次登场！Sebastian Aigner 解释了为什么这个操作符以这位著名歌手命名，以及如何在 Kotlin 中使用 "),l("code",null,"?:"),i(" 来返回或抛出。幕后魔法是什么？是 "),l("a",{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-nothing.html",target:"_blank",rel:"noreferrer"},"Nothing 类型"),i("。")],-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/L8aFK7QrbA8",title:"Kotlin Tips: Return and Throw with the Elvis Operator"}),t[8]||(t[8]=l("h2",{id:"解构声明",tabindex:"-1"},[i("解构声明 "),l("a",{class:"header-anchor",href:"#解构声明","aria-label":'Permalink to "解构声明"'},"​")],-1)),t[9]||(t[9]=l("p",null,[i("借助 "),l("a",{href:"/kotlin/destructuring-declarations"},"解构声明"),i(" 在 Kotlin 中，你可以一次性从单个对象创建多个变量。在这个视频中，Sebastian Aigner 向你展示了可以解构的一些事物——包括 pair、list、map 等。那么你自己的对象呢？Kotlin 的 component 函数也为它们提供了答案：")],-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/zu1PUAvk_Lw",title:"Kotlin Tips: Destructuring Declarations"}),t[10]||(t[10]=l("h2",{id:"带可空值的操作符函数",tabindex:"-1"},[i("带可空值的操作符函数 "),l("a",{class:"header-anchor",href:"#带可空值的操作符函数","aria-label":'Permalink to "带可空值的操作符函数"'},"​")],-1)),t[11]||(t[11]=l("p",null,"在 Kotlin 中，你可以为自己的类覆盖（override）诸如加法和减法之类的操作符，并提供你自己的逻辑。但如果你想允许其左侧和右侧都为 null 值呢？在这个视频中，Sebastian Aigner 回答了这个问题：",-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/x2bZJv8i0vw",title:"Kotlin Tips: Operator Functions With Nullable Values"}),t[12]||(t[12]=l("h2",{id:"代码计时",tabindex:"-1"},[i("代码计时 "),l("a",{class:"header-anchor",href:"#代码计时","aria-label":'Permalink to "代码计时"'},"​")],-1)),t[13]||(t[13]=l("p",null,[i("观看 Sebastian Aigner 快速概览 "),l("a",{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.time/measure-timed-value.html",target:"_blank",rel:"noreferrer"},[l("code",null,"measureTimedValue()")]),i(" 函数，并了解如何为你的代码计时：")],-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/j_LEcry7Pms",title:"Kotlin Tips: Timing Code"}),t[14]||(t[14]=l("h2",{id:"优化循环",tabindex:"-1"},[i("优化循环 "),l("a",{class:"header-anchor",href:"#优化循环","aria-label":'Permalink to "优化循环"'},"​")],-1)),t[15]||(t[15]=l("p",null,[i("在这个视频中，Sebastian Aigner 将演示如何优化"),l("a",{href:"/kotlin/control-flow#for-loops"},"循环"),i("，以使你的代码更具可读性、可理解性和简洁性：")],-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/i-kyPp1qFBA",title:"Kotlin Tips: Improving Loops"}),t[16]||(t[16]=l("h2",{id:"字符串",tabindex:"-1"},[i("字符串 "),l("a",{class:"header-anchor",href:"#字符串","aria-label":'Permalink to "字符串"'},"​")],-1)),t[17]||(t[17]=l("p",null,[i("在这期中，Kate Petrova 展示了三个帮助你在 Kotlin 中使用"),l("a",{href:"/kotlin/strings"},"字符串"),i("的技巧：")],-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/IL3RLKvWJF4",title:"Kotlin Tips: Strings"}),t[18]||(t[18]=l("h2",{id:"elvis-操作符的更多用法",tabindex:"-1"},[i("Elvis 操作符的更多用法 "),l("a",{class:"header-anchor",href:"#elvis-操作符的更多用法","aria-label":'Permalink to "Elvis 操作符的更多用法"'},"​")],-1)),t[19]||(t[19]=l("p",null,[i("在这个视频中，Sebastian Aigner 将展示如何为 "),l("a",{href:"/kotlin/null-safety#elvis-operator"},"Elvis 操作符"),i("添加更多逻辑，例如在操作符的右侧进行日志记录：")],-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/L9wqYQ-fXaM",title:"Kotlin Tips: The Elvis Operator"}),t[20]||(t[20]=l("h2",{id:"kotlin-集合",tabindex:"-1"},[i("Kotlin 集合 "),l("a",{class:"header-anchor",href:"#kotlin-集合","aria-label":'Permalink to "Kotlin 集合"'},"​")],-1)),t[21]||(t[21]=l("p",null,[i("在这期中，Kate Petrova 展示了三个帮助你使用 "),l("a",{href:"/kotlin/collections-overview"},"Kotlin 集合"),i("的技巧：")],-1)),n(e,{width:"560",height:"315",src:"https://www.youtube.com/v/ApXbm1T_eI4",title:"Kotlin Tips: Kotlin Collections"}),t[22]||(t[22]=l("h2",{id:"接下来",tabindex:"-1"},[i("接下来？ "),l("a",{class:"header-anchor",href:"#接下来","aria-label":'Permalink to "接下来？"'},"​")],-1)),t[23]||(t[23]=l("ul",null,[l("li",null,[i("在我们的 "),l("a",{href:"https://youtube.com/playlist?list=PLlFc5cFwUnmyDrc-mwwAL9cYFkSHoHHz7",target:"_blank",rel:"noreferrer"},"YouTube 播放列表"),i("中查看完整的 Kotlin Tips 列表")]),l("li",null,[i("学习如何为"),l("a",{href:"/kotlin/idioms"},"常见情况编写惯用的 Kotlin 代码")])],-1))])}const v=a(h,[["render",p]]);export{f as __pageData,v as default};
