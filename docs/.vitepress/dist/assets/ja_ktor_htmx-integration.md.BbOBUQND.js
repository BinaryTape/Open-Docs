import{_ as o,C as l,c as g,o as u,G as t,ag as h,j as e,w as a,a as i}from"./chunks/framework.Bksy39di.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ja/ktor/htmx-integration.md","filePath":"ja/ktor/htmx-integration.md","lastUpdated":1755457140000}'),y={name:"ja/ktor/htmx-integration.md"};function F(H,s,x,m,f,T){const k=l("TopicTitle"),r=l("show-structure"),d=l("primary-label"),E=l("tldr"),n=l("def"),p=l("deflist");return u(),g("div",null,[t(k,{labelRef:"experimental",title:"HTMX連携"}),t(r,{for:"chapter",depth:"2"}),t(d,{ref:"experimental"},null,512),t(E,null,{default:a(()=>s[0]||(s[0]=[e("p",null,[e("b",null,"必要な依存関係"),i(": "),e("code",null,"io.ktor:ktor-htmx"),i(", "),e("code",null,"io.ktor:ktor-htmx-html"),i(", "),e("code",null,"io.ktor:ktor-server-htmx")],-1),e("p",null,[e("b",null,"コード例"),i(": "),e("a",{href:"https://github.com/ktorio/ktor-documentation/tree/3.2.3/codeSnippets/snippets/htmx-integration"}," htmx-integration ")],-1)])),_:1}),s[29]||(s[29]=h('<p><a href="https://htmx.org/" target="_blank" rel="noreferrer">HTMX</a>は、HTML属性を使用して動的なクライアントサイドの動作を可能にする軽量なJavaScriptライブラリです。JavaScriptを記述することなく、AJAX、CSSトランジション、WebSocket、Server-Sent Eventsなどの機能をサポートします。</p><p>Ktorは、サーバーとクライアントの両方のコンテキストでの連携を簡素化する一連の共有モジュールを通じて、HTMXに対する実験的なファーストクラスのサポートを提供します。これらのモジュールは、HTMXヘッダーの操作、Kotlin DSLを使用したHTML属性の定義、およびサーバー上でのHTMX固有のルーティングロジックの処理のためのツールを提供します。</p><h2 id="モジュール概要" tabindex="-1">モジュール概要 <a class="header-anchor" href="#モジュール概要" aria-label="Permalink to &quot;モジュール概要&quot;">​</a></h2><p>KtorのHTMXサポートは、以下の3つの実験的モジュールで利用可能です。</p><table tabindex="0"><thead><tr><th>モジュール</th><th>説明</th></tr></thead><tbody><tr><td><code>ktor-htmx</code></td><td>コア定義とヘッダー定数</td></tr><tr><td><code>ktor-htmx-html</code></td><td>Kotlin HTML DSLとの連携</td></tr><tr><td><code>ktor-server-htmx</code></td><td>HTMX固有のリクエストに対するルーティングサポート</td></tr></tbody></table><p>すべてのAPIは<code>@ExperimentalKtorApi</code>でマークされており、<code>@OptIn(ExperimentalKtorApi::class)</code>を介したオプトインが必要です。</p><h2 id="htmxヘッダー" tabindex="-1">HTMXヘッダー <a class="header-anchor" href="#htmxヘッダー" aria-label="Permalink to &quot;HTMXヘッダー&quot;">​</a></h2><p>コアモジュール<code>ktor-htmx</code>の事前定義された定数を使用して、HTMXヘッダーに型安全な方法でアクセスまたは設定できます。これらの定数により、トリガー、履歴の復元、コンテンツのスワッピングといったHTMXの動作を検出する際に、マジック文字列の使用を避けることができます。</p><h3 id="リクエストヘッダー" tabindex="-1">リクエストヘッダー <a class="header-anchor" href="#リクエストヘッダー" aria-label="Permalink to &quot;リクエストヘッダー&quot;">​</a></h3><p>アプリケーションでHTMXリクエストヘッダーを読み取ったり照合したりするには、<code>HxRequestHeaders</code>オブジェクトを使用します。</p>',10)),t(p,{type:"wide"},{default:a(()=>[t(n,{title:"HxRequestHeaders.Request"},{default:a(()=>s[1]||(s[1]=[i("HTMXリクエストの場合は常に"),e("code",null,"true",-1)])),_:1}),t(n,{title:"HxRequestHeaders.Target"},{default:a(()=>s[2]||(s[2]=[i("ターゲット要素のID")])),_:1}),t(n,{title:"HxRequestHeaders.Trigger"},{default:a(()=>s[3]||(s[3]=[i("トリガーされた要素のID")])),_:1}),t(n,{title:"HxRequestHeaders.TriggerName"},{default:a(()=>s[4]||(s[4]=[i("トリガーされた要素の名前")])),_:1}),t(n,{title:"HxRequestHeaders.Boosted"},{default:a(()=>s[5]||(s[5]=[i("hx-boost経由のリクエストを示す")])),_:1}),t(n,{title:"HxRequestHeaders.CurrentUrl"},{default:a(()=>s[6]||(s[6]=[i("現在のブラウザURL")])),_:1}),t(n,{title:"HxRequestHeaders.HistoryRestoreRequest"},{default:a(()=>s[7]||(s[7]=[i("履歴の復元用")])),_:1}),t(n,{title:"HxRequestHeaders.Prompt"},{default:a(()=>s[8]||(s[8]=[i("hx-promptへのユーザー応答")])),_:1})]),_:1}),s[30]||(s[30]=e("h3",{id:"レスポンスヘッダー",tabindex:"-1"},[i("レスポンスヘッダー "),e("a",{class:"header-anchor",href:"#レスポンスヘッダー","aria-label":'Permalink to "レスポンスヘッダー"'},"​")],-1)),s[31]||(s[31]=e("p",null,[i("HTMXレスポンスヘッダーの定数にアクセスするには、"),e("code",null,"HxResponseHeaders"),i("オブジェクトを使用できます。")],-1)),t(p,{type:"wide"},{default:a(()=>[t(n,{title:"HxResponseHeaders.Location"},{default:a(()=>s[9]||(s[9]=[i("ページリロードなしのクライアントサイドリダイレクト")])),_:1}),t(n,{title:"HxResponseHeaders.PushUrl"},{default:a(()=>s[10]||(s[10]=[i("URLを履歴スタックにプッシュ")])),_:1}),t(n,{title:"HxResponseHeaders.Redirect"},{default:a(()=>s[11]||(s[11]=[i("クライアントサイドリダイレクト")])),_:1}),t(n,{title:"HxResponseHeaders.Refresh"},{default:a(()=>s[12]||(s[12]=[i("強制的なページ全体のリフレッシュ")])),_:1}),t(n,{title:"HxResponseHeaders.ReplaceUrl"},{default:a(()=>s[13]||(s[13]=[i("現在のURLを置き換え")])),_:1}),t(n,{title:"HxResponseHeaders.Reswap"},{default:a(()=>s[14]||(s[14]=[i("レスポンスのスワップ方法を制御")])),_:1}),t(n,{title:"HxResponseHeaders.Retarget"},{default:a(()=>s[15]||(s[15]=[i("コンテンツ更新のターゲットを更新")])),_:1}),t(n,{title:"HxResponseHeaders.Reselect"},{default:a(()=>s[16]||(s[16]=[i("スワップするレスポンスの一部を選択")])),_:1}),t(n,{title:"HxResponseHeaders.Trigger"},{default:a(()=>s[17]||(s[17]=[i("クライアントサイドイベントをトリガー")])),_:1}),t(n,{title:"HxResponseHeaders.TriggerAfterSettle"},{default:a(()=>s[18]||(s[18]=[i("落ち着いた後にイベントをトリガー")])),_:1}),t(n,{title:"HxResponseHeaders.TriggerAfterSwap"},{default:a(()=>s[19]||(s[19]=[i("スワップ後にイベントをトリガー")])),_:1})]),_:1}),s[32]||(s[32]=e("h2",{id:"スワップモード",tabindex:"-1"},[i("スワップモード "),e("a",{class:"header-anchor",href:"#スワップモード","aria-label":'Permalink to "スワップモード"'},"​")],-1)),s[33]||(s[33]=e("p",null,[i("コアモジュール"),e("code",null,"ktor-htmx"),i("の"),e("code",null,"HxSwap"),i("オブジェクトを使用して、異なるHTMXスワップモードの定数にアクセスできます。")],-1)),t(p,{type:"medium"},{default:a(()=>[t(n,{title:"HxSwap.innerHtml"},{default:a(()=>s[20]||(s[20]=[i("内部HTMLを置き換え（デフォルト）")])),_:1}),t(n,{title:"HxSwap.outerHtml "},{default:a(()=>s[21]||(s[21]=[i("要素全体を置き換え")])),_:1}),t(n,{title:"HxSwap.textContent"},{default:a(()=>s[22]||(s[22]=[i("テキストコンテンツのみを置き換え")])),_:1}),t(n,{title:"HxSwap.beforeBegin"},{default:a(()=>s[23]||(s[23]=[i("ターゲット要素の前に挿入")])),_:1}),t(n,{title:"HxSwap.afterBegin"},{default:a(()=>s[24]||(s[24]=[i("最初の子として挿入")])),_:1}),t(n,{title:"HxSwap.beforeEnd"},{default:a(()=>s[25]||(s[25]=[i("最後の子として挿入")])),_:1}),t(n,{title:"HxSwap.afterEnd"},{default:a(()=>s[26]||(s[26]=[i("ターゲット要素の後に挿入")])),_:1}),t(n,{title:"HxSwap.delete"},{default:a(()=>s[27]||(s[27]=[i("ターゲット要素を削除")])),_:1}),t(n,{title:"HxSwap.none"},{default:a(()=>s[28]||(s[28]=[i("コンテンツの追加なし")])),_:1})]),_:1}),s[34]||(s[34]=h(`<h2 id="html-dsl拡張機能" tabindex="-1">HTML DSL拡張機能 <a class="header-anchor" href="#html-dsl拡張機能" aria-label="Permalink to &quot;HTML DSL拡張機能&quot;">​</a></h2><p><code>ktor-htmx-html</code>モジュールは、KotlinのHTML DSLに拡張機能を追加し、HTMX属性をHTML要素に直接追加できるようにします。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@OptIn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExperimentalKtorApi::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            attributes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                get</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/data&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                target </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;#result&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                swap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HxSwap.outerHtml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                trigger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;click&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Load Data&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>上記の例は、HTMX属性を持つHTMLを生成します。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hx-get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/data&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hx-target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#result-div&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hx-swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;outerHTML&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hx-trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Load Data&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="サーバーサイドルーティング" tabindex="-1">サーバーサイドルーティング <a class="header-anchor" href="#サーバーサイドルーティング" aria-label="Permalink to &quot;サーバーサイドルーティング&quot;">​</a></h2><p><code>ktor-server-htmx</code>モジュールは、<code>hx</code> DSLブロックを介してHTMX対応ルーティングを提供します。</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@OptIn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExperimentalKtorApi::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">routing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Regular route (both HTMX and non-HTMX requests)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Regular response&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Only matches HTMX requests (HX-Request header is present)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        hx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HTMX response&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Matches HTMX requests with specific target</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        hx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#result-div&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Response for #result-div&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Matches HTMX requests with specific trigger</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#load-button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    call.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Response for #load-button clicks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>これらの機能により、アプリケーションはクライアントから送信されるHTMXヘッダーに応じて異なる応答をすることができます。</p>`,9))])}const C=o(y,[["render",F]]);export{b as __pageData,C as default};
