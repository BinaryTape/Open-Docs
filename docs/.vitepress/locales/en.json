{
  "sqldelight.sqldelight": "SQLDelight",
  "sqldelight.overview": "Overview",
  "sqldelight.upgrading-to-2-0": "Upgrading to 2.0",
  "sqldelight.changelog": "Changelog",
  "sqldelight.contributing": "Contributing",
  "sqldelight.code-of-conduct": "Code of Conduct",
  "sqldelight.sqlite-android": "SQLite (Android)",
  "sqldelight.getting-started": "Getting Started",
  "sqldelight.sql": "SQL",
  "sqldelight.foreign-keys": "Foreign Keys",
  "sqldelight.type-projections": "Type Projections",
  "sqldelight.arguments": "Arguments",
  "sqldelight.types": "Types",
  "sqldelight.transactions": "Transactions",
  "sqldelight.grouping-statements": "Grouping Statements",
  "sqldelight.extensions": "Extensions",
  "sqldelight.rxjava": "RxJava",
  "sqldelight.coroutines": "Coroutines",
  "sqldelight.androidx-paging": "AndroidX Paging",
  "sqldelight.migrations": "Migrations",
  "sqldelight.testing": "Testing",
  "sqldelight.intellij-plugin": "IntelliJ Plugin",
  "sqldelight.gradle": "Gradle",
  "sqldelight._2-x-api": "2.x API",
  "sqldelight.coroutines-extensions": "coroutines-extensions",
  "sqldelight.rxjava2-extensions": "rxjava2-extensions",
  "sqldelight.rxjava3-extensions": "rxjava3-extensions",
  "sqldelight.androidx-paging3": "androidx-paging3",
  "sqldelight.android-driver": "android-driver",
  "sqldelight.runtime": "runtime",
  "sqldelight.resources": "Resources",
  "sqldelight.sqlite-multiplatform": "SQLite (Multiplatform)",
  "sqldelight.mysql-jvm": "MySQL (JVM)",
  "sqldelight.jdbc-driver": "jdbc-driver",
  "sqldelight.postgresql-jvm": "PostgreSQL (JVM)",
  "sqldelight.hsql-jvm": "HSQL (JVM)",
  "sqldelight.sqlite-native": "SQLite (Native)",
  "sqldelight.native-driver": "native-driver",
  "sqldelight.sqlite-jvm": "SQLite (JVM)",
  "sqldelight.sqlite-driver": "sqlite-driver",
  "sqldelight.sqlite-js": "SQLite (JS)",
  "sqldelight.multiplatform": "Multiplatform",
  "sqldelight.web-workers": "Web Workers",
  "sqldelight.sql-js-worker": "SQL.js Worker",
  "sqldelight.custom-workers": "Custom Workers",
  "sqldelight.sqljs-driver": "sqljs-driver",
  "kotlin.home": "Home",
  "kotlin.getting-started": "Get started",
  "kotlin.kotlin-tour-welcome": "Take Kotlin tour",
  "kotlin.kotlin-overview": "Kotlin overview",
  "kotlin.what-s-new-in-kotlin": "What's new in Kotlin",
  "kotlin.whatsnew22": "Kotlin 2.2.0",
  "kotlin.whatsnew-eap": "Kotlin 2.2.20-Beta2",
  "kotlin.earlier-versions": "Earlier versions",
  "kotlin.whatsnew2120": "Kotlin 2.1.20",
  "kotlin.whatsnew21": "Kotlin 2.1.0",
  "kotlin.whatsnew2020": "Kotlin 2.0.20",
  "kotlin.whatsnew20": "Kotlin 2.0.0",
  "kotlin.whatsnew1920": "Kotlin 1.9.20",
  "kotlin.whatsnew19": "Kotlin 1.9.0",
  "kotlin.whatsnew1820": "Kotlin 1.8.20",
  "kotlin.whatsnew18": "Kotlin 1.8.0",
  "kotlin.whatsnew1720": "Kotlin 1.7.20",
  "kotlin.whatsnew17": "Kotlin 1.7.0",
  "kotlin.whatsnew1620": "Kotlin 1.6.20",
  "kotlin.whatsnew16": "Kotlin 1.6.0",
  "kotlin.whatsnew1530": "Kotlin 1.5.30",
  "kotlin.whatsnew1520": "Kotlin 1.5.20",
  "kotlin.whatsnew15": "Kotlin 1.5.0",
  "kotlin.whatsnew1430": "Kotlin 1.4.30",
  "kotlin.whatsnew1420": "Kotlin 1.4.20",
  "kotlin.whatsnew14": "Kotlin 1.4.0",
  "kotlin.whatsnew13": "Kotlin 1.3",
  "kotlin.whatsnew12": "Kotlin 1.2",
  "kotlin.whatsnew11": "Kotlin 1.1",
  "kotlin.kotlin-evolution-and-roadmap": "Kotlin evolution and roadmap",
  "kotlin.kotlin-language-features-and-proposals": "Language features and proposals",
  "kotlin.kotlin-evolution-principles": "Language evolution principles",
  "kotlin.basics": "Basics",
  "kotlin.kotlin-by-example": "Kotlin by example",
  "kotlin.concepts": "Concepts",
  "kotlin.types": "Types",
  "kotlin.basic-types": "Overview",
  "kotlin.control-flow": "Control flow",
  "kotlin.classes-and-objects": "Classes and objects",
  "kotlin.functions": "Functions",
  "kotlin.lambdas": "Lambdas",
  "kotlin.builders": "Builders",
  "kotlin.data-analysis": "Data analysis",
  "kotlin.get-started-with-kotlin-notebook": "Get started with Kotlin Notebook",
  "kotlin.get-started-with-kotlin-notebooks": "Introduction to Kotlin Notebook",
  "kotlin.kotlin-notebook-set-up-env": "1. Set up an environment",
  "kotlin.kotlin-notebook-create": "2. Create your first Kotlin Notebook",
  "kotlin.kotlin-notebook-add-dependencies": "3. Add dependencies to your Kotlin Notebook",
  "kotlin.kotlin-notebook-share": "Share your Kotlin Notebook",
  "kotlin.data-analysis-notebooks-output-formats": "Output formats in Kotlin notebooks",
  "kotlin.working-with-data-sources": "Working with data sources",
  "kotlin.data-analysis-visualization": "Data visualization in Kotlin Notebook",
  "kotlin.data-analysis-libraries": "Libraries for data analysis",
  "kotlin.platforms": "Platforms",
  "kotlin.jvm": "JVM",
  "kotlin.spring": "Spring",
  "kotlin.create-a-restful-web-service-with-a-database-using-spring-boot": "Create a RESTful web service with a database using Spring Boot",
  "kotlin.jvm-create-project-with-spring-boot": "Create a Spring Boot project",
  "kotlin.jvm-spring-boot-using-crudrepository": "Use Spring Data CrudRepository",
  "kotlin.spring-framework-documentation-for-kotlin": "Spring Framework Documentation for Kotlin",
  "kotlin.build-a-web-application-with-spring-boot-and-kotlin-–-tutorial": "Build a web application with Spring Boot and Kotlin – tutorial",
  "kotlin.create-a-chat-application-with-kotlin-coroutines-and-rsocket-–-tutorial": "Create a chat application with Kotlin Coroutines and RSocket – tutorial",
  "kotlin.java-to-kotlin-migration-guides": "Java to Kotlin migration guides",
  "kotlin.java-to-kotlin-idioms-strings": "Strings",
  "kotlin.java-to-kotlin-collections-guide": "Collections",
  "kotlin.java-to-kotlin-nullability-guide": "Nullability",
  "kotlin.native": "Native",
  "kotlin.native-c-interop-stability": "C and Objective-C library import",
  "kotlin.c-interop": "C interop",
  "kotlin.objective-c-interop": "Objective-C interop",
  "kotlin.memory-manager": "Memory manager",
  "kotlin.native-arc-integration": "Integration with ARC",
  "kotlin.native-migration-guide": "Migration guide",
  "kotlin.reference-and-tips": "Reference and tips",
  "kotlin.native-target-support": "Target support",
  "kotlin.native-improving-compilation-time": "Improving compilation time",
  "kotlin.native-llvm-passes": "Customizing LLVM passes",
  "kotlin.native-binary-licenses": "License files",
  "kotlin.webassembly-wasm": "WebAssembly (Wasm)",
  "kotlin.javascript": "JavaScript",
  "kotlin.js-ir-compiler": "IR compiler",
  "kotlin.kotlin-for-the-js-platform": "Kotlin for the JS platform",
  "kotlin.scripting": "Scripting",
  "kotlin.develop-with-kotlin-multiplatform": "Develop with Kotlin Multiplatform",
  "kotlin.standard-library": "Standard library",
  "kotlin.collections": "Collections",
  "kotlin.collections-overview": "Overview",
  "kotlin.collection-operations": "Operations overview",
  "kotlin.collection-transformations": "Transformations",
  "kotlin.collection-filtering": "Filter",
  "kotlin.collection-grouping": "Group elements",
  "kotlin.collection-write": "Write operations",
  "kotlin.official-libraries": "Official libraries",
  "kotlin.coroutines-kotlinx-coroutines": "Coroutines (kotlinx.coroutines)",
  "kotlin.serialization": "Serialization (kotlinx.serialization)",
  "kotlin.metadata-jvm": "Kotlin Metadata JVM (kotlin-metadata-jvm)",
  "kotlin.lincheck-kotlinx-lincheck": "Lincheck (kotlinx.lincheck)",
  "kotlin.ktor": "Ktor",
  "kotlin.api-reference": "API reference",
  "kotlin.api-references": "Overview",
  "kotlin.standard-library-stdlib": "Standard library (stdlib)",
  "kotlin.test-library-kotlin-test": "Test library (kotlin.test)",
  "kotlin.serialization-kotlinx-serialization": "Serialization (kotlinx.serialization)",
  "kotlin.kotlin-i-o-library-kotlinx-io": "Kotlin I/O library (kotlinx-io)",
  "kotlin.date-and-time-kotlinx-datetime": "Date and time (kotlinx-datetime)",
  "kotlin.jvm-metadata-kotlin-metadata-jvm": "JVM Metadata (kotlin-metadata-jvm)",
  "kotlin.kotlin-gradle-plugins-kotlin-gradle-plugin": "Kotlin Gradle plugins (kotlin-gradle-plugin)",
  "kotlin.language-reference": "Language reference",
  "kotlin.grammar": "Grammar",
  "kotlin.language-specification": "Language specification",
  "kotlin.tools": "Tools",
  "kotlin.build-tools": "Build tools",
  "kotlin.gradle": "Overview",
  "kotlin.get-started-with-jvm-gradle-project": "Get started with Gradle – tutorial",
  "kotlin.gradle-compiler-options": "Compiler options in KGP",
  "kotlin.gradle-compilation-and-caches": "Compilation and caches in KGP",
  "kotlin.gradle-binary-compatibility-validation": "Binary compatibility validation in KGP",
  "kotlin.dokka": "Dokka",
  "kotlin.kotlin-ide": "IDE for Kotlin development",
  "kotlin.code-style-migration-guide": "Migrate to Kotlin code style with IntelliJ IDEA",
  "kotlin.lets-plot": "Lets-Plot for Kotlin",
  "kotlin.kotlin-and-ci": "TeamCity",
  "kotlin.kotlin-doc": "KDoc",
  "kotlin.kotlin-osgi": "OSGi",
  "kotlin.compiler-and-plugins": "Compiler and plugins",
  "kotlin.kotlin-compiler": "Kotlin compiler",
  "kotlin.command-line": "Command-line compiler",
  "kotlin.compiler-reference": "Compiler options",
  "kotlin.kotlin-compiler-plugins": "Kotlin compiler plugins",
  "kotlin.all-open-plugin": "All-open",
  "kotlin.no-arg-plugin": "No-arg",
  "kotlin.sam-with-receiver-plugin": "SAM with receiver",
  "kotlin.kapt": "kapt",
  "kotlin.lombok": "Lombok",
  "kotlin.power-assert": "Power-assert",
  "kotlin.compose-compiler": "Compose compiler",
  "kotlin.compose-compiler-migration-guide": "Compiler migration guide",
  "kotlin.compose-compiler-options": "Compiler options",
  "kotlin.kotlin-symbol-processing-api": "Kotlin Symbol Processing API",
  "kotlin.ksp-overview": "KSP overview",
  "kotlin.ksp-quickstart": "Quickstart",
  "kotlin.ksp-examples": "Examples",
  "kotlin.ksp-reference": "Reference for Java annotation processor authors",
  "kotlin.ksp-faq": "FAQ",
  "kotlin.learning-materials": "Learning materials",
  "kotlin.learning-materials-overview": "Overview",
  "kotlin.kotlin-core-track": "Kotlin Core track",
  "kotlin.advent-of-code": "Advent of Code puzzles",
  "kotlin.learn-in-ide-jetbrains-academy": "Learn in IDE (JetBrains Academy)",
  "kotlin.edu-tools-learner": "Learn Kotlin",
  "kotlin.edu-tools-educator": "Teach Kotlin",
  "kotlin.library-authors-guidelines": "Library authors' guidelines",
  "kotlin.early-access-preview-eap": "Early access preview (EAP)",
  "kotlin.eap": "Participate",
  "kotlin.other-resources": "Other resources",
  "kotlin.kotlin-compatibility-guides": "Kotlin compatibility guides",
  "kotlin.kotlin-foundation": "Kotlin Foundation",
  "kotlin.language-committee-guidelines": "Language Committee guidelines",
  "kotlin.submitting-incompatible-changes": "Submitting incompatible changes",
  "kotlin.brand-usage": "Brand usage",
  "kotlin.kotlin-foundation-faq": "Kotlin Foundation FAQ",
  "kotlin.google-summer-of-code": "Google Summer of Code",
  "kotlin.gsoc-overview": "Overview",
  "kotlin.gsoc-2025": "GSoC 2025",
  "kotlin.gsoc-2024": "GSoC 2024",
  "kotlin.gsoc-2023": "GSoC 2023",
  "kotlin.community": "Community",
  "kotlin.press-kit": "Press kit",
  "dokka.run-dokka": "Run Dokka",
  "dokka.output-formats": "Output formats",
  "lincheck.testing-strategies": "Testing strategies",
  "api-guidelines.api-guidelines-introduction": "Introduction",
  "api-guidelines.minimizing-mental-complexity": "Minimizing mental complexity",
  "api-guidelines.api-guidelines-minimizing-mental-complexity": "Overview",
  "api-guidelines.api-guidelines-backward-compatibility": "Backward compatibility",
  "api-guidelines.api-guidelines-informative-documentation": "Informative documentation",
  "api-guidelines.api-guidelines-build-for-multiplatform": "Building for multiplatform",
  "kmp.get-started": "Get started",
  "kmp.kotlin-multiplatform-overview": "Kotlin Multiplatform overview",
  "kmp.why-kotlin-multiplatform": "Why Kotlin Multiplatform",
  "kmp.supported-platforms": "Supported platforms",
  "kmp.multiplatform-samples": "Samples",
  "kmp.kotlin-multiplatform-roadmap": "KMP roadmap",
  "kmp.compose-multiplatform-ui-framework": "Compose Multiplatform UI framework",
  "kmp.what-s-new-in-compose-multiplatform": "What's new in Compose Multiplatform",
  "kmp.compose-platform-specifics": "Platform differences",
  "kmp.implementing-layouts": "Implementing layouts",
  "kmp.multiplatform-resources": "Multiplatform resources",
  "kmp.compose-multiplatform-resources-setup": "Setup and configuration",
  "kmp.compose-multiplatform-resources-usage": "Access and usage",
  "kmp.compose-resource-environment": "Local resource environment",
  "kmp.navigation": "Navigation",
  "kmp.localization": "Localization",
  "kmp.compose-regional-format": "Regional format settings",
  "kmp.compose-rtl": "RTL languages",
  "kmp.ios-specific-features": "iOS-specific features",
  "kmp.compose-swiftui-integration": "Integration with SwiftUI",
  "kmp.compose-uikit-integration": "Integration with UIKit",
  "kmp.compose-ios-touch": "Handling touch with native UI elements",
  "kmp.compose-ios-accessibility": "Accessibility support",
  "kmp.compose-android-only-components": "Android-specific components",
  "kmp.desktop-specific-components": "Desktop-specific components",
  "kmp.compose-desktop-components": "Overview",
  "kmp.compose-desktop-mouse-events": "Mouse events",
  "kmp.compose-desktop-accessibility": "Accessibility support",
  "kmp.compose-desktop-ui-testing": "Testing UI with JUnit",
  "kmp.compose-multiplatform-for-web": "Compose Multiplatform for web",
  "kmp.releases": "Releases",
  "kmp.choose-your-use-case": "Choose your use case",
  "kmp.create-an-app-with-shared-logic-and-ui": "Create an app with shared logic and UI",
  "kmp.compose-multiplatform-create-first-app": "1. Create your Compose Multiplatform app",
  "kmp.compose-multiplatform-explore-composables": "2. Explore composable code",
  "kmp.compose-multiplatform-modify-project": "3. Modify the project",
  "kmp.compose-multiplatform-new-project": "4. Create your own application",
  "kmp.create-an-app-with-shared-logic-and-native-ui": "Create an app with shared logic and native UI",
  "kmp.multiplatform-create-first-app": "1. Create your Kotlin Multiplatform app",
  "kmp.multiplatform-update-ui": "2. Update UI",
  "kmp.multiplatform-dependencies": "3. Add dependencies",
  "kmp.multiplatform-upgrade-app": "4. Share more logic",
  "kmp.multiplatform-wrap-up": "5. Wrap up your project",
  "kmp.multiplatform-integrate-in-existing-app": "Make your app multiplatform",
  "kmp.multiplatform-ktor-sqldelight": "Share data access layer",
  "kmp.create-kotlin-multiplatform-library": "Create Kotlin Multiplatform library",
  "kmp.explore-project-structure": "Explore project structure",
  "kmp.multiplatform-discover-project": "Basic project structure",
  "kmp.multiplatform-advanced-project-structure": "Advanced project structure",
  "kmp.multiplatform-project-configuration": "Project configuration options",
  "kmp.share-code": "Share code",
  "kmp.multiplatform-connect-to-apis": "Platform-specific APIs",
  "kmp.add-dependencies": "Add dependencies",
  "kmp.multiplatform-add-dependencies": "On multiplatform libraries",
  "kmp.multiplatform-android-dependencies": "For Android target platforms",
  "kmp.multiplatform-ios-dependencies": "For iOS target platforms",
  "kmp.set-up-ios-integration": "Set up iOS integration",
  "kmp.multiplatform-ios-integration-overview": "Choose integration method",
  "kmp.multiplatform-spm-export": "Remote SPM export",
  "kmp.cocoapods-integration": "CocoaPods integration",
  "kmp.multiplatform-spm-local-integration": "Local integration with SPM",
  "kmp.compile-artifacts": "Compile artifacts",
  "kmp.multiplatform-run-tests": "Test your multiplatform app",
  "kmp.publish-your-multiplatform-project": "Publish your multiplatform project",
  "kmp.multiplatform-publish-lib-setup": "Set up library publication",
  "kmp.multiplatform-privacy-manifest": "App Store privacy manifest",
  "kmp.tools": "Tools",
  "kmp.multiplatform-dsl-reference": "Multiplatform Gradle DSL",
  "kmp.amper": "Amper configuration tool",
  "kmp.compatibility": "Compatibility",
  "kmp.multiplatform-compatibility-guide": "Compatibility guide",
  "kmp.multiplatform-journal": "Multiplatform journal",
  "kmp.cross-platform-mobile-development": "Cross-platform mobile development",
  "kmp.native-and-cross-platform": "Native and cross-platform mobile development",
  "kmp.cross-platform-frameworks": "Six popular cross-platform app development frameworks",
  "kmp.use-cases-examples": "How teams use Kotlin Multiplatform in production",
  "kmp.multiplatform-reasons-to-try": "Reasons to adopt Kotlin Multiplatform",
  "kmp.kotlin-multiplatform-flutter": "Kotlin Multiplatform and Flutter",
  "kmp.programming-languages-cross-platform": "Programming languages for cross-platform development",
  "kmp.choosing-web-target": "Choosing your web target"
}
