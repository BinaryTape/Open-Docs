{
    "homepage.hero.subtitle": "开发者友好的文档中心，一站式解决您的技术文档需求",
    "homepage.card.koin.description": "轻量级的依赖注入框架，为Kotlin应用设计",
    "homepage.card.kotlin.description": "现代、简洁且安全的编程语言",
    "homepage.card.kotlin.tag.language": "语言",
    "homepage.card.kotlin.tag.crossplatform": "跨平台",
    "homepage.badge.comingSoon": "敬请期待",
    "homepage.card.ktor.description": "为Kotlin打造的异步Web框架",
    "homepage.card.ktor.tag.web": "Web",
    "homepage.card.ktor.tag.async": "异步",
    "homepage.card.sqldelight.description": "从SQL语句生成类型安全的Kotlin代码",
    "homepage.card.sqldelight.tag.sql": "SQL",
    "homepage.card.sqldelight.tag.database": "数据库",
    "homepage.banner.title": "开始探索文档",
    "homepage.banner.description": "选择上方任一技术栈，开始探索详尽的文档和示例",
    "homepage.ad.description": "通过创新咨询和解决方案连接全球与亚洲技术社区，利用我们在移动基础设施和新兴 AI 领域的专业知识，促进全球范围内的开源协作。",
    "homepage.ad.contact": "联系：hi@binarytape.com",
    "homepage.ad.sponsor": "Open AIDoc 由 BinaryTape 赞助支持",

    "koin.setup": "配置",
    "koin.tutorial": "教程",
    "koin.core.test": "核心 & 测试",
    "koin.android": "Android",
    "koin.compose": "Compose",
    "koin.annotation": "注解",
    "koin.multiplatform": "多平台",
    "koin.ktor": "Ktor",
    "kotlin.gettings-started": "开始使用 Kotlin",
    "kotlin.tour": "Kotlin 教程",
    "kotlin.overview": "Kotlin 概述",
    "kotlin.whatsnew": "Kotlin 新特性",
    "kotlin.early-access": "早期版本",
    "kotlin.evolution-roadmap": "Kotlin 演进与路线图",
    "kotlin.basics": "基础知识",
    "kotlin.core-concepts": "核心概念",
    "kotlin.core-concepts-types": "類型",
    "kotlin.core-concepts-basic-types": "基本類型",
    "kotlin.core-concepts-control-flow": "Kotlin 演进与路线图",
    "kotlin.core-concepts-classes-objects": "类和对象",
    "kotlin.core-concepts-functions": "类和对象",
    "kotlin.core-concepts-builders": "构建器",
    "kotlin.multiplatform": "多平台开发",
    "kotlin.multiplatform.shared-code": "多平台开发",
    "kotlin.multiplatform.add-dependencies": "添加依赖",
    "kotlin.multiplatform.ios-integration": "设置 iOS 集成",
    "kotlin.multiplatform.compilations": "CocoaPods 集成",
    "kotlin.multiplatform.reference": "参考",
    "kotlin.data-analysis": "数据分析",
    "kotlin.data-analysis.notebooks": "数据分析",
    "kotlin.data-analysis.datasources": "使用数据源",
    "kotlin.platforms": "平台",
    "kotlin.platforms.java2kotlin": "Java 到 Kotlin 迁移指南",
    "kotlin.platforms.c-interop": "C 互操作",
    "kotlin.platforms.object-c-interop": "Objective-C 互操作",
    "kotlin.platforms.memory-management": "内存管理器",
    "kotlin.platforms.references-tips": "参考与技巧",
    "kotlin.multiplatform.cocoapod-integration": "設置 iOS 集成",
    "kotlin.platforms.kotlin-js": "适用于 JS 平台的 Kotlin",
    "kotlin.stdlib.standard-library": "标准库",
    "kotlin.stdlib.standard-library-collections": "集合",
    "kotlin.stdlib.official-library": "官方库",
    "kotlin.api.reference": "API 参考",
    "kotlin.language.reference": "语言参考",
    "kotlin.tools": "工具",
    "kotlin.tools.build-tools": "构建工具",
    "kotlin.compiler-plugins": "编译器和插件",
    "kotlin.compiler-plugins.kotlin-compiler": "Kotlin 编译器",
    "kotlin.compiler-plugins.kotlin-compiler-plugins": "Kotlin 编译插件",
    "kotlin.compiler-plugins.compose-compiler": "Compose 编译器",
    "kotlin.materials": "学习资料",
    "kotlin.materials.ide": "在 IDE 中学习 (JetBrains Academy)",
    "kotlin.eap": "早期访问预览 (EAP)",
    "kotlin.others": "其他资源",
    "kotlin.others.compatibility-guide": "Kotlin 兼容性指南",
    "kotlin.others.foundation": "Kotlin 基金会",
    "kotlin.others.community": "社区",
    "kotlin.others.news-kit": "新闻资料包",
    "kotlin.dokka": "Dokka",
    "kotlin.foundation": "Kotlin 基金会",
    "kotlin.foundation-committee": "语言委员会指南",
    "kotlin.foundation-changes": "提交不兼容变更",
    "kotlin.foundation-brand": "品牌使用",
    "kotlin.foundation-faq": "Kotlin 基金会常见问题",
    "kotlin.server-dev": "Kotlin 用于服务端开发",
    "kotlin.android-platform": "Kotlin 用于Android开发",
    "kotlin.wasm": "Kotlin/Wasm",
    "kotlin.native": "Kotlin Native",
    "kotlin.js-platform": "Kotlin 用于JavaScript开发",
    "kotlin.data-analysis-overview": "Kotlin 用于数据分析",
    "kotlin.competitive-programming": "Kotlin 用于竞赛编程",
    "kotlin.kotlin-version-2120": "Kotlin 2.1.20",
    "kotlin.kotlin-version-210": "Kotlin 2.1.0",
    "kotlin.kotlin-version-22rc": "Kotlin 2.2.0-RC",
    "kotlin.kotlin-version-2020": "Kotlin 2.0.20 的新特性",
    "kotlin.kotlin-version-200": "Kotlin 2.0.0 的新特性",
    "kotlin.kotlin-version-1920": "Kotlin 1.9.20 的新特性",
    "kotlin.kotlin-version-190": "Kotlin 1.9.0 的新特性",
    "kotlin.kotlin-version-1820": "Kotlin 1.8.20 的新特性",
    "kotlin.kotlin-version-180": "Kotlin 1.8.0 的新特性",
    "kotlin.kotlin-version-1720": "Kotlin 1.7.20 的新特性",
    "kotlin.kotlin-version-170": "Kotlin 1.7.0 的新特性",
    "kotlin.kotlin-version-1620": "Kotlin 1.6.20 的新特性",
    "kotlin.kotlin-version-160": "Kotlin 1.6.0 的新特性",
    "kotlin.kotlin-version-1530": "Kotlin 1.5.30 的新特性",
    "kotlin.kotlin-version-1520": "Kotlin 1.5.20 的新特性",
    "kotlin.kotlin-version-150": "Kotlin 1.5.0 的新特性",
    "kotlin.kotlin-version-1430": "Kotlin 1.4.30 的新特性",
    "kotlin.kotlin-version-1420": "Kotlin 1.4.20 新特性",
    "kotlin.kotlin-version-140": "Kotlin 1.4.0 的新特性",
    "kotlin.kotlin-version-130": "Kotlin 1.3 的新特性",
    "kotlin.kotlin-version-120": "Kotlin 1.2 的新特性",
    "kotlin.kotlin-version-110": "Kotlin 1.1 的新特性",
    "kotlin.roadmap": "Kotlin 路线图",
    "kotlin.language-features": "Kotlin 语言特性和提案",
    "kotlin.evolution-principles": "Kotlin 演进原则",
    "kotlin.components-stability": "Kotlin 组件的稳定性",
    "kotlin.releases": "Kotlin 发布版本",
    "kotlin.basic-syntax": "基本语法",
    "kotlin.idioms": "常见用法",
    "kotlin.byexample": "通过示例学习 Kotlin",
    "kotlin.coding-conventions": "编码规范",
    "kotlin.basic-types": "基本类型",
    "kotlin.numbers": "数字",
    "kotlin.unsigned-integer-types": "无符号整型",
    "kotlin.booleans": "布尔值",
    "kotlin.characters": "字符",
    "kotlin.strings": "字符串",
    "kotlin.arrays": "数组",
    "kotlin.typecasts": "类型检查与转换",
    "kotlin.control-flow": "条件语句和循环",
    "kotlin.returns": "返回值和跳转",
    "kotlin.exceptions": "异常",
    "kotlin.packages": "包和导入",
    "kotlin.classes": "类 (Classes)",
    "kotlin.inheritance": "继承",
    "kotlin.properties": "属性",
    "kotlin.interfaces": "接口",
    "kotlin.fun-interfaces": "函数式 (SAM) 接口",
    "kotlin.visibility-modifiers": "可见性修饰符",
    "kotlin.extensions": "扩展",
    "kotlin.data-classes": "数据类",
    "kotlin.sealed-classes": "密封类和密封接口",
    "kotlin.generics": "泛型：in、out、where",
    "kotlin.nested-classes": "嵌套类和内部类",
    "kotlin.enum-classes": "枚举类",
    "kotlin.inline-classes": "内联值类 (Inline value classes)",
    "kotlin.object-declarations": "对象声明和表达式",
    "kotlin.delegation": "委托",
    "kotlin.delegated-properties": "委托属性",
    "kotlin.type-aliases": "类型别名",
    "kotlin.functions": "函数",
    "kotlin.lambdas": "高阶函数与 Lambda 表达式",
    "kotlin.inline-functions": "内联函数",
    "kotlin.operator-overloading": "运算符重载",
    "kotlin.type-safe-builders": "类型安全的构建器",
    "kotlin.using-builders": "结合构建器类型推断使用构建器",
    "kotlin.null-safety": "Null 安全",
    "kotlin.equality": "相等性",
    "kotlin.this-expressions": "This 表达式",
    "kotlin.async-programming": "异步编程技术",
    "kotlin.coroutines-overview": "协程",
    "kotlin.annotations": "注解 (Annotations)",
    "kotlin.destructuring-declarations": "解构声明",
    "kotlin.reflection": "反射",
    "kotlin.notebooks-overview": "Kotlin Notebook 入门",
    "kotlin.notebook-setup": "设置环境",
    "kotlin.notebook-create": "创建你的第一个 Kotlin Notebook",
    "kotlin.notebook-dependencies": "向你的 Kotlin Notebook 添加依赖",
    "kotlin.notebook-share": "分享你的 Kotlin Notebook",
    "kotlin.notebook-output-formats": "Kotlin Notebook 支持的输出格式",
    "kotlin.data-sources": "从文件中检索数据",
    "kotlin.web-api-sources": "从 Web 源和 API 检索数据",
    "kotlin.db-connection": "连接数据库并从中检索数据",
    "kotlin.data-visualization": "在 Kotlin Notebook 中使用 Kandy 进行数据可视化",
    "kotlin.data-libraries": "用于数据分析的 Kotlin 和 Java 库",
    "kotlin.jvm-get-started": "Kotlin/JVM 入门",
    "kotlin.java-comparison": "与 Java 的比较",
    "kotlin.java-interop": "在 Kotlin 中调用 Java",
    "kotlin.java-to-kotlin-interop": "在 Java 调用 Kotlin",
    "kotlin.spring-boot": "使用 Spring Boot 创建 RESTful web 服务和数据库",
    "kotlin.spring-boot-start": "Spring Boot 和 Kotlin 入门",
    "kotlin.spring-boot-create": "使用 Kotlin 创建 Spring Boot 项目",
    "kotlin.spring-boot-data-class": "向 Spring Boot 项目添加数据类",
    "kotlin.spring-boot-db": "为 Spring Boot 项目添加数据库支持",
    "kotlin.spring-boot-crud": "使用 Spring Data CrudRepository 进行数据库访问",
    "kotlin.spring-framework": "Spring Framework 的 Kotlin 文档",
    "kotlin.spring-boot-kotlin": "使用 Spring Boot 和 Kotlin 构建 Web 应用 - 教程",
    "kotlin.spring-webflux-kotlin": "使用 Kotlin 协程和 RSocket 创建聊天应用 - 教程",
    "kotlin.junit-test": "在 JVM 中使用 JUnit 测试代码 – 教程",
    "kotlin.mixing-java-kotlin": "在一个项目中混合使用 Java 和 Kotlin – 教程",
    "kotlin.java-records": "在 Kotlin 中使用 Java records (记录类)",
    "kotlin.idioms-strings": "Java 和 Kotlin 中的字符串",
    "kotlin.collections-guide": "Java 和 Kotlin 中的集合",
    "kotlin.nullability-guide": "Java 和 Kotlin 中的可空性",
    "kotlin.standard-input": "标准输入",
    "kotlin.native-get-started": "Kotlin/Native 入门",
    "kotlin.definition-file": "定义文件",
    "kotlin.c-interop": "与 C 的互操作性",
    "kotlin.c-primitive-mapping": "C 原始数据类型映射 – 教程",
    "kotlin.c-struct-mapping": "C 语言结构体和联合体类型的映射 - 教程",
    "kotlin.c-function-pointers": "C 语言中的映射函数指针 – 教程",
    "kotlin.c-strings-mapping": "C 语言中的字符串映射 – 教程",
    "kotlin.dynamic-libraries": "Kotlin/Native 作为动态库 - 教程",
    "kotlin.native-app-with-c": "使用 C 互操作和 libcurl 创建应用程序 – 教程",
    "kotlin.objc-interop": "与 Swift/Objective-C 的互操作性",
    "kotlin.apple-framework": "Kotlin/Native 作为 Apple framework – 教程",
    "kotlin.native-libraries": "Kotlin/Native 库",
    "kotlin.platform-libs": "平台库",
    "kotlin.memory-manager": "Kotlin/Native 内存管理",
    "kotlin.arc-integration": "与 Swift/Objective-C ARC 集成",
    "kotlin.migration-guide": "迁移到新的内存管理器",
    "kotlin.native-debugging": "调试 Kotlin/Native",
    "kotlin.ios-symbolication": "iOS崩溃报告符号化",
    "kotlin.native-target-support": "Kotlin/Native 目标平台支持",
    "kotlin.compilation-time": "提升编译时间的技巧",
    "kotlin.binary-licenses": "Kotlin/Native 二进制文件的许可文件",
    "kotlin.native-faq": "Kotlin/Native 常见问题解答",
    "kotlin.wasm-get-started": "Kotlin/Wasm 和 Compose Multiplatform 入门",
    "kotlin.wasm-wasi": "Kotlin/Wasm 和 WASI 入门",
    "kotlin.wasm-debugging": "调试 Kotlin/Wasm 代码",
    "kotlin.wasm-js-interop": "与 JavaScript 的互操作性",
    "kotlin.wasm-troubleshooting": "问题排查",
    "kotlin.js-project-setup": "搭建 Kotlin/JS 项目",
    "kotlin.running-kotlin-js": "运行 Kotlin/JS",
    "kotlin.dev-server": "开发服务器和持续编译",
    "kotlin.js-debugging": "调试 Kotlin/JS 代码",
    "kotlin.js-tests": "在 Kotlin/JS 中运行测试",
    "kotlin.js-dce": "Kotlin/JS 无效代码消除",
    "kotlin.js-ir-compiler": "Kotlin/JS IR 编译器",
    "kotlin.js-ir-migration": "将 Kotlin/JS 项目迁移到 IR 编译器",
    "kotlin.browser-api-dom": "浏览器和 DOM API",
    "kotlin.js-interop": "从 Kotlin 中使用 JavaScript 代码",
    "kotlin.dynamic-type": "动态类型",
    "kotlin.npm-packages": "使用 npm 中的依赖项",
    "kotlin.js-to-kotlin-interop": "从 JavaScript 中使用 Kotlin 代码",
    "kotlin.js-modules": "JavaScript 模块",
    "kotlin.js-reflection": "Kotlin/JS 反射",
    "kotlin.html-dsl": "类型安全的 HTML DSL",
    "kotlin.custom-script": "Kotlin 自定义脚本入门教程",
    "kotlin.collections-overview": "集合概览",
    "kotlin.constructing-collections": "构建集合",
    "kotlin.iterators": "迭代器",
    "kotlin.ranges": "区间 (Ranges) 和数列 (progressions)",
    "kotlin.sequences": "序列",
    "kotlin.collection-operations": "集合操作概览",
    "kotlin.collection-transformations": "集合转换操作",
    "kotlin.collection-filtering": "过滤集合",
    "kotlin.collection-plus-minus": "加号和减号运算符",
    "kotlin.collection-grouping": "分组",
    "kotlin.collection-parts": "检索集合部分",
    "kotlin.collection-elements": "检索单个元素",
    "kotlin.collection-ordering": "排序",
    "kotlin.collection-aggregate": "聚合操作",
    "kotlin.collection-write": "写入操作",
    "kotlin.list-operations": "List 特定操作",
    "kotlin.set-operations": "Set 特定操作",
    "kotlin.map-operations": "Map 特定操作",
    "kotlin.read-input": "读取标准输入",
    "kotlin.opt-in-requirements": "Opt-in 要求",
    "kotlin.scope-functions": "作用域函数",
    "kotlin.time-measurement": "时间测量",
    "kotlin.coroutines": "协程 (kotlinx.coroutines)",
    "kotlin.coroutines-guide": "协程指南",
    "kotlin.coroutines-basics": "协程基础",
    "kotlin.coroutines-channels": "协程和通道",
    "kotlin.cancellation-timeouts": "取消和超时",
    "kotlin.composing-functions": "组合挂起函数",
    "kotlin.coroutine-context": "协程上下文和调度器",
    "kotlin.flow": "流",
    "kotlin.channels": "通道",
    "kotlin.exception-handling": "异常处理",
    "kotlin.shared-mutable-state": "共享可变状态和并发",
    "kotlin.select-expression": "select 表达式",
    "kotlin.debug-coroutines": "使用 IDEA 调试协程",
    "kotlin.debug-flow": "使用 IDEA 调试流",
    "kotlin.serialization": "序列化 (kotlinx.serialization)",
    "kotlin.metadata-jvm": "Kotlin Metadata JVM (kotlin-metadata-jvm)",
    "kotlin.lincheck": "Lincheck (kotlinx.lincheck)",
    "kotlin.lincheck-guide": "Lincheck 指南",
    "kotlin.lincheck-intro": "使用 Lincheck 编写您的第一个测试",
    "kotlin.testing-strategies": "测试策略",
    "kotlin.operation-arguments": "操作参数",
    "kotlin.constraints": "数据结构约束",
    "kotlin.progress-guarantees": "进度保证",
    "kotlin.sequential-specification": "顺序规范",
    "kotlin.keyword-reference": "关键字和运算符",
    "kotlin.gradle": "Gradle 概述",
    "kotlin.gradle-jvm-start": "Gradle 和 Kotlin/JVM 入门",
    "kotlin.gradle-configure": "配置 Gradle 项目",
    "kotlin.gradle-best-practices": "Gradle 最佳实践",
    "kotlin.gradle-compiler-options": "Kotlin Gradle 插件中的编译器选项",
    "kotlin.gradle-compilation": "Kotlin Gradle 插件中的编译和缓存",
    "kotlin.gradle-plugin-variants": "支持 Gradle 插件变体",
    "kotlin.maven": "Maven",
    "kotlin.ant": "Ant",
    "kotlin.dokka-introduction": "Dokka 简介",
    "kotlin.dokka-get-started": "开始使用 Dokka",
    "kotlin.dokka-run": "运行 Dokka",
    "kotlin.dokka-output-formats": "输出格式",
    "kotlin.dokka-gradle": "Gradle",
    "kotlin.dokka-migration": "迁移到 Dokka Gradle 插件 v2",
    "kotlin.dokka-maven": "Maven",
    "kotlin.dokka-cli": "命令行",
    "kotlin.dokka-html": "HTML",
    "kotlin.dokka-markdown": "Markdown",
    "kotlin.dokka-javadoc": "Javadoc",
    "kotlin.dokka-plugins": "Dokka 插件",
    "kotlin.dokka-docs": "模块文档",
    "kotlin.ide": "Kotlin 开发的 IDE",
    "kotlin.code-style-migration": "迁移到 Kotlin 代码风格",
    "kotlin.kotlin-notebook": "Kotlin Notebook",
    "kotlin.lets-plot": "使用 Kotlin 的 Lets-Plot 进行数据可视化",
    "kotlin.run-code-snippets": "运行代码片段",
    "kotlin.ci": "Kotlin 和 TeamCity 的持续集成",
    "kotlin.kotlin-doc": "Kotlin 代码文档：KDoc",
    "kotlin.kotlin-osgi": "Kotlin 和 OSGi",
    "kotlin.k2-migration": "K2 编译器迁移指南",
    "kotlin.command-line": "Kotlin 命令行编译器",
    "kotlin.compiler-reference": "Kotlin 编译器选项",
    "kotlin.all-open-plugin": "All-open",
    "kotlin.no-arg-plugin": "No-arg",
    "kotlin.sam-with-receiver-plugin": "SAM with receiver",
    "kotlin.kapt": "kapt",
    "kotlin.lombok": "Lombok",
    "kotlin.power-assert": "Power-assert",
    "kotlin.compose-compiler-migration": "Compose 编译器迁移指南",
    "kotlin.compose-compiler-options": "Compose 编译器选项 DSL",
    "kotlin.ksp-overview": "Kotlin Symbol Processing API",
    "kotlin.ksp-quickstart": "KSP 快速入门",
    "kotlin.ksp-why": "为什么选择 KSP",
    "kotlin.ksp-examples": "KSP 示例",
    "kotlin.ksp-details": "KSP 如何对 Kotlin 代码建模",
    "kotlin.ksp-reference": "Java 注解处理器到 KSP 参考",
    "kotlin.ksp-incremental": "增量处理",
    "kotlin.ksp-multi-round": "多轮处理",
    "kotlin.ksp-multiplatform": "在 Kotlin Multiplatform 使用 KSP",
    "kotlin.ksp-command-line": "通过命令行运行 KSP",
    "kotlin.ksp-faq": "KSP 常见问题",
    "kotlin.learning-materials": "学习材料概述",
    "kotlin.koans": "Kotlin 习题",
    "kotlin.hands-on": "Kotlin 实践",
    "kotlin.tips": "Kotlin 小贴士",
    "kotlin.books": "Kotlin 书籍",
    "kotlin.advent-of-code": "Advent of Code 谜题",
    "kotlin.edu-tools-learner": "通过 JetBrains Academy 插件学习 Kotlin",
    "kotlin.edu-tools-educator": "使用 JetBrains Academy 插件教授 Kotlin",
    "kotlin.eap-participate": "参与 Kotlin 抢先体验预览",
    "kotlin.eap-configure": "为 EAP 配置你的构建",
    "kotlin.faq": "常见问题解答",
    "kotlin.compatibility-21": "Kotlin 2.1 兼容性指南",
    "kotlin.compatibility-20": "Kotlin 2.0 兼容性指南",
    "kotlin.compatibility-19": "Kotlin 1.9 兼容性指南",
    "kotlin.compatibility-18": "Kotlin 1.8 兼容性指南",
    "kotlin.compatibility-1720": "Kotlin 1.7.20 兼容性指南",
    "kotlin.compatibility-17": "Kotlin 1.7 兼容性指南",
    "kotlin.compatibility-16": "Kotlin 1.6 兼容性指南",
    "kotlin.compatibility-15": "Kotlin 1.5 兼容性指南",
    "kotlin.compatibility-14": "Kotlin 1.4 兼容性指南",
    "kotlin.compatibility-13": "Kotlin 1.3 兼容性指南",
    "kotlin.compatibility-modes": "兼容模式",
    "kotlin.gsoc": "Google Summer of Code",
    "kotlin.gsoc-overview": "Kotlin 与 GSoC",
    "kotlin.gsoc-2025": "GSoC 2025",
    "kotlin.gsoc-2024": "GSoC 2024",
    "kotlin.gsoc-2023": "GSoC 2023",
    "kotlin.security": "安全性",
    "kotlin.kotlin-pdf": "Kotlin 文档的 PDF 版本",
    "kotlin.core-track": "Kotlin Core track",
    "kotlin.contribute": "贡献",
    "kotlin.kug-guidelines": "KUG 指南",
    "kotlin.kotlin-night": "Kotlin Night 指南",
    "kotlin.slack": "Kotlin Slack 的行为准则和指南",
    "kotlin.brand": "Kotlin 品牌资源",
    "kotlin.api.stdlib": "标准库 (stdlib)",
    "kotlin.api.test": "测试库 (kotlin.test)",
    "kotlin.api.coroutines": "协程 (kotlinx.coroutines)",
    "kotlin.api.serialization": "序列化 (kotlinx.serialization)",
    "kotlin.api.io": "Kotlin I/O 库 (kotlinx-io)",
    "kotlin.api.datetime": "日期和时间 (kotlinx-datetime)",
    "kotlin.api.metadata": "JVM 元数据 (kotlin-metadata-jvm)",
    "kotlin.api.ktor": "Ktor",
    "kotlin.api.gradle-plugin": "Kotlin Gradle 插件 (kotlin-gradle-plugin)",
    "kotlin.language.grammar": "语法",
    "kotlin.language.spec": "语言规范",

    "sqldelight.overview": "概述",
    "sqldelight.upgrading-2.0": "升级到 2.0",
    "sqldelight.changelog": "更新日志",
    "sqldelight.contributing": "贡献",
    "sqldelight.code-of-conduct": "行为准则",
    "sqldelight.getting-started": "入门指南",
    "sqldelight.foreign-keys": "外键",
    "sqldelight.custom-projections": "类型投影",
    "sqldelight.query-arguments": "参数",
    "sqldelight.types": "类型",
    "sqldelight.transactions": "事务",
    "sqldelight.grouping-statements": "语句分组",
    "sqldelight.extensions": "扩展",
    "sqldelight.coroutines": "协程",
    "sqldelight.migrations": "迁移",
    "sqldelight.testing": "测试",
    "sqldelight.intellij-plugin": "IntelliJ 插件",
    "sqldelight.resources": "资源",
    "sqldelight.sqlite-multiplatform": "SQLite (多平台)",
    "sqldelight.multiplatform": "多平台",
    "sqldelight.custom-workers": "自定义 Workers"
}
